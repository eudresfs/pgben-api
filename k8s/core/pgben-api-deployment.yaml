apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgben-api
  labels:
    app: pgben-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pgben-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pgben-api
    spec:
      containers:
      - name: pgben-api
        image: ${PGBEN_REGISTRY}/pgben-api:${PGBEN_VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_HOST
          value: "postgres"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: pgben-database-secrets
              key: database
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: pgben-database-secrets
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgben-database-secrets
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: pgben-jwt-secrets
              key: jwt-secret
        - name: MINIO_ENDPOINT
          value: "minio"
        - name: MINIO_PORT
          value: "9000"
        - name: MINIO_BUCKET_NAME
          value: "pgben-documents"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: pgben-minio-secrets
              key: access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pgben-minio-secrets
              key: secret-key
        - name: MINIO_USE_SSL
          value: "false"
        envFrom:
        - configMapRef:
            name: pgben-api-config
        - configMapRef:
            name: email-config
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /v1/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /v1/health/ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
