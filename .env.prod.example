# ================================================
# CONFIGURAÇÕES DE AMBIENTE - PRODUÇÃO (EXEMPLO)
# ================================================
# ATENÇÃO: Este arquivo é um EXEMPLO para produção.
# Copie para .env.prod e configure com valores REAIS e SEGUROS.
# NUNCA commite chaves reais ou dados sensíveis.

# Nome do projeto Docker Compose (se usado diretamente com docker-compose -p)
# COMPOSE_PROJECT_NAME=pgben-prod

# ========================================
# CONFIGURAÇÕES DA APLICAÇÃO (PGBEN-SERVER)
# ========================================
APP_PORT=3000
API_PREFIX=/api/v1
NODE_ENV=production
APP_NAME=SEMTAS-PGBEN-PROD
FRONTEND_URL=https://pgeben-server.kemosoft.com.br # Atualizar com o domínio correto do frontend
DOMAIN_URL=pgeben-server.kemosoft.com.br # Domínio principal da aplicação

# ========================================
# CONFIGURAÇÕES DO BANCO DE DADOS (POSTGRESQL)
# ========================================
DB_HOST=postgres       # Nome do serviço no Docker Compose
DB_PORT=5432
DB_USER=pgben_user     # Alterar para um usuário seguro
DB_PASS=your_very_strong_and_secret_password # ALTERAR IMEDIATAMENTE
DB_NAME=pgben_prod     # Nome do banco de dados de produção
DB_POOL_SIZE=20        # Ajustar conforme necessidade
DB_SSL=true            # Recomendado para produção, requer configuração no PostgreSQL

# ========================================
# CONFIGURAÇÕES JWT - SEGURANÇA CRÍTICA
# ========================================
# IMPORTANTE: Gere suas próprias chaves RSA 2048 bits e guarde-as de forma segura.
# NÃO use as chaves de exemplo do repositório.
JWT_ALGORITHM=RS256
JWT_PRIVATE_KEY_PATH=/run/secrets/jwt_private_key # Caminho para a chave privada via Docker Secrets
JWT_PUBLIC_KEY_PATH=/app/keys/public.key      # Caminho para a chave pública (pode ser montada ou parte da imagem)
JWT_ACCESS_TOKEN_EXPIRES_IN=15m
JWT_REFRESH_TOKEN_EXPIRES_IN=7d

# ========================================
# CHAVES DE CRIPTOGRAFIA - SEGURANÇA CRÍTICA
# ========================================
# Gere chaves fortes e únicas (e.g., openssl rand -hex 32)
ENCRYPTION_KEY=your_strong_256_bit_encryption_key_hex # ALTERAR IMEDIATAMENTE (via Docker Secrets)
AUDIT_SIGNING_KEY=your_strong_256_bit_audit_signing_key_hex # ALTERAR IMEDIATAMENTE (via Docker Secrets)

# ========================================
# CONFIGURAÇÕES DE EMAIL SMTP (PRODUÇÃO)
# ========================================
SMTP_HOST=your_production_smtp_host
SMTP_PORT=587 # ou 465 para SSL
SMTP_USER=your_smtp_username
SMTP_PASS=your_smtp_password # Usar Docker Secrets ou variável de ambiente segura
SMTP_FROM=nao-responda@pgeben-server.kemosoft.com.br
SMTP_FROM_NAME=SEMTAS PGBEN
SMTP_SECURE=true # true para porta 465, false para 587 (STARTTLS)

# ========================================
# CONFIGURAÇÕES MINIO (ARMAZENAMENTO DE OBJETOS)
# ========================================
MINIO_ENDPOINT=minio    # Nome do serviço no Docker Compose
MINIO_PORT=9000
MINIO_ACCESS_KEY=your_minio_access_key # ALTERAR IMEDIATAMENTE (via Docker Secrets)
MINIO_SECRET_KEY=your_minio_secret_key # ALTERAR IMEDIATAMENTE (via Docker Secrets)
MINIO_BUCKET=pgben-documents-prod
MINIO_USE_SSL=false # Mudar para true se o MinIO estiver configurado com SSL (recomendado em produção externa)

# ========================================
# CONFIGURAÇÕES REDIS (CACHE E FILAS)
# ========================================
REDIS_HOST=redis        # Nome do serviço no Docker Compose
REDIS_PORT=6379
REDIS_PASSWORD=your_strong_redis_password # ALTERAR IMEDIATAMENTE (via Docker Secrets)
REDIS_DB=0
REDIS_TTL=7200 # 2 horas, ajustar conforme necessidade
DISABLE_REDIS=false # Manter false para produção

# ========================================
# CONFIGURAÇÕES DE RATE LIMITING (PRODUÇÃO)
# ========================================
THROTTLE_TTL=60
THROTTLE_LIMIT=200 # Ajustar conforme a carga esperada
THROTTLE_LOGIN_LIMIT=10
THROTTLE_REGISTER_LIMIT=5

# ========================================
# CONFIGURAÇÕES DE SEGURANÇA - COOKIES E SESSÃO
# ========================================
COOKIE_SECRET=your_very_strong_cookie_secret_key_min_32_chars # ALTERAR IMEDIATAMENTE (via Docker Secrets)
SESSION_SECRET=your_very_strong_session_secret_key_min_32_chars # ALTERAR IMEDIATAMENTE (via Docker Secrets)
ALLOWED_ORIGINS=https://pgeben-server.kemosoft.com.br,https://app.pgeben-server.kemosoft.com.br # Domínios do frontend e outros permitidos
ALLOWED_DOMAINS=pgeben-server.kemosoft.com.br # Domínio principal

# ========================================
# CONFIGURAÇÕES DE LOGGING (PRODUÇÃO)
# ========================================
LOG_LEVEL=info # 'info' ou 'warn' para produção
# LOG_FILE_PATH: Em containers, geralmente se faz log para stdout/stderr para ser coletado pelo Docker/Orquestrador
# LOG_MAX_FILES e LOG_MAX_SIZE são gerenciados pelo driver de logging do Docker no docker-compose

# ========================================
# CONFIGURAÇÕES DE SEGURANÇA ADICIONAIS
# ========================================
CSRF_SECRET=your_strong_csrf_secret_for_production # ALTERAR IMEDIATAMENTE (via Docker Secrets)
CORS_ORIGIN=https://pgeben-server.kemosoft.com.br # Atualizar com o domínio de produção
CORS_CREDENTIALS=true

# ========================================
# CONFIGURAÇÕES DE NOTIFICAÇÕES (SSE)
# ========================================
SSE_HEARTBEAT_INTERVAL=30000
SSE_CONNECTION_TIMEOUT=300000
SSE_MAX_CONNECTIONS_PER_USER=5
SSE_CLEANUP_INTERVAL=60000
SSE_ENABLE_COMPRESSION=true
SSE_CORS_ORIGINS=https://pgeben-server.kemosoft.com.br # Domínio de produção

# ========================================
# CONFIGURAÇÕES DO USUÁRIO ADMINISTRADOR PADRÃO
# ========================================
# Considere criar o admin via script/seeding em vez de variáveis de ambiente para produção
# Se mantiver, use senhas fortes e altere após o primeiro login.
DEFAULT_ADMIN_USER_EMAIL=admin@pgeben-server.kemosoft.com.br
DEFAULT_ADMIN_USER_NAME=Administrador PGBEN
DEFAULT_ADMIN_USER_PASSWORD=your_extremely_strong_admin_password # ALTERAR IMEDIATAMENTE (via Docker Secrets)

# ========================================
# CONFIGURAÇÕES DE MONITORAMENTO (GRAFANA)
# ========================================
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=your_strong_grafana_admin_password # ALTERAR IMEDIATAMENTE (via Docker Secrets)

# ========================================
# OUTRAS CONFIGURAÇÕES
# ========================================
# SWAGGER_ENABLED=false # Desabilitar Swagger em produção por padrão por segurança
API_DOCS_PATH=/api/docs # Manter se o Swagger for habilitado condicionalmente ou em ambiente de staging

# Para uso com Docker Secrets (exemplo de como seriam referenciadas no .env.prod real)
# DB_PASS_FILE=/run/secrets/db_password
# ENCRYPTION_KEY_FILE=/run/secrets/encryption_key
# MINIO_SECRET_KEY_FILE=/run/secrets/minio_secret_key
# REDIS_PASSWORD_FILE=/run/secrets/redis_password
# ETC...

# Certifique-se de que os caminhos para as chaves JWT (JWT_PRIVATE_KEY_PATH, JWT_PUBLIC_KEY_PATH)
# sejam acessíveis dentro do container. Para produção, Docker Secrets é o método preferido para
# JWT_PRIVATE_KEY e outras chaves sensíveis.
```