#!/bin/sh
set -e

# Fun√ß√£o para verificar conex√£o com timeout
check_connection() {
  local host=$1
  local port=$2
  local service=$3
  local max_attempts=${4:-60}  # 2 minutos por padr√£o (60 * 2s)
  local attempt=1

  echo "üîç Verificando conex√£o com ${service}..."
  while [ $attempt -le $max_attempts ]; do
    if nc -z -w 5 $host $port; then
      echo "‚úÖ ${service} est√° dispon√≠vel!"
      return 0
    fi
    echo "‚è≥ ${service} n√£o est√° dispon√≠vel ainda - tentativa ${attempt}/${max_attempts} - aguardando..."
    sleep 2
    attempt=$((attempt+1))
  done

  echo "‚ö†Ô∏è Aviso: N√£o foi poss√≠vel conectar ao ${service} ap√≥s ${max_attempts} tentativas."
  
  # Se for PostgreSQL, falha cr√≠tica
  if [ "$service" = "PostgreSQL" ]; then
    echo "‚ùå Falha cr√≠tica: PostgreSQL indispon√≠vel. Abortando inicializa√ß√£o."
    return 1
  fi
  
  # Para outros servi√ßos, apenas avisa mas continua
  echo "‚ö†Ô∏è Continuando inicializa√ß√£o sem ${service}..."
  return 0
}

# Verificar PostgreSQL (falha se indispon√≠vel)
check_connection ${DB_HOST:-177.39.21.28} ${DB_PORT:-45250} "PostgreSQL" 90 || exit 1

# Verificar Redis (continua mesmo se indispon√≠vel)
check_connection ${REDIS_HOST:-localhost} ${REDIS_PORT:-6379} "Redis" 30

# Verificar MinIO (continua mesmo se indispon√≠vel)
check_connection ${MINIO_ENDPOINT:-localhost} ${MINIO_PORT:-9000} "MinIO" 30

# Gerar chaves JWT se n√£o existirem
# if [ ! -f "keys/private.key" ] || [ ! -f "keys/public.key" ]; then
#  echo "üîë Gerando chaves JWT..."
#  mkdir -p keys
#  npm run jwt:generate || { echo "‚ùå Falha na gera√ß√£o das chaves JWT!"; exit 1; }
#  echo "‚úÖ Chaves JWT geradas com sucesso!"
# else
#  echo "‚úÖ Chaves JWT j√° existem!"
# fi

echo "üöÄ Iniciando a aplica√ß√£o PGBen-server..."
exec node dist/main
