global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

rule_files:
  - "rules/*.yml"

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'pgben-api'
    metrics_path: '/metrics' # O endpoint de métricas padrão do NestJS com Prometheus
    static_configs:
      - targets: ['pgben-server:3000'] # Nome do serviço e porta definidos no docker-compose.prod.yml
    # Se o APP_PORT for diferente de 3000 no .env.prod, ajuste a porta aqui também.
    # Exemplo com variável de ambiente (requer que o Prometheus processe variáveis, o que não é padrão):
    # - targets: ['pgben-server:${APP_PORT:-3000}'] 
    # Docker DNS resolverá 'pgben-server' para o IP do container correto na rede 'pgben-network'.
    
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']

  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
