name: Build and Deploy
on:
  push:
    branches: [ "main" ]
env:
  CPR_ADDR: cpr.kemosoft.com.br
  K8S_NAMESPACE: consigmais
  DEPLOYMENT_NAME: ${{ github.event.repository.name }}
  CONTAINER_PATH: cpr.kemosoft.com.br/${{ github.event.repository.name }}:${{ github.sha }}
jobs:
  build:
    runs-on: arc-runner-set
    container:
      image: gcr.io/kaniko-project/executor:v1.20.0-debug
    permissions:
      contents: read
    steps:
      - name: build and push image to cpr
        id: build
        run: |
          cat <<EOF > /kaniko/.docker/config.json
          {
            "auths": {
              "$CPR_ADDR": {
                "auth": "$(echo -n "$CPR_USERNAME:$CPR_PASSWORD" | base64 -w0)"
              }
            }
          }
          EOF
          /kaniko/executor --dockerfile="/Dockerfile" \
            --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}"  \
            --destination="${{ env.CONTAINER_PATH }}" \
            ${{ env.KANIKO_CACHE_ARGS }} \
            --push-retry 5 
        env:
          GIT_USERNAME: ${{ github.actor }}
          GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          CPR_USERNAME: ${{ secrets.CPR_USERNAME }}
          CPR_PASSWORD: ${{ secrets.CPR_PASSWORD }}
      
      - name: Notify Discord - Build
        if: always()
        run: |
          # Instala curl se não estiver disponível
          if ! command -v curl &> /dev/null; then
            apt-get update && apt-get install -y curl
          fi
          
          # Define a cor baseada no status
          if [ "${{ job.status }}" == "success" ]; then
            COLOR="3066993"  # Verde
          else
            COLOR="15158332"  # Vermelho
          fi
          
          # Cria a mensagem JSON
          PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "🔨 Build: ${{ github.event.repository.name }}",
              "description": "**Status:** ${{ job.status }}\n**Branch:** ${{ github.ref_name }}\n**Image:** ${{ env.CONTAINER_PATH }}\n**Commit:** ${{ github.event.head_commit.message }}",
              "color": $COLOR,
              "footer": {
                "text": "GitHub Actions"
              },
              "timestamp": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            }]
          }
          EOF
          )
          
          # Envia para o Discord
          curl -H "Content-Type: application/json" -d "$PAYLOAD" ${{ secrets.DISCORD_WEBHOOK }}
  
  deploy:
    needs:
      - build
    runs-on: k8s
    steps:
      - name: patch deployment
        id: deploy
        run: |
          kubectl -n $K8S_NAMESPACE set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$CONTAINER_PATH --record
          DEPLOY_STATUS=$?
          kubectl -n $K8S_NAMESPACE rollout status deployment/$DEPLOYMENT_NAME
          ROLLOUT_STATUS=$?
          
          # Armazena o status para uso posterior
          echo "::set-output name=deploy_exit_code::$DEPLOY_STATUS"
          echo "::set-output name=rollout_exit_code::$ROLLOUT_STATUS"
          
          # Falha se algum dos comandos falhar
          if [ $DEPLOY_STATUS -ne 0 ] || [ $ROLLOUT_STATUS -ne 0 ]; then
            exit 1
          fi
      
      - name: Notify Discord - Deploy
        if: always()
        run: |
          # Define a cor baseada no status
          if [ "${{ steps.deploy.outcome }}" == "success" ]; then
            STATUS="✅ Success"
            COLOR="3066993"  # Verde
          else
            STATUS="❌ Failed"
            COLOR="15158332"  # Vermelho
          fi
          
          # Cria a mensagem JSON
          PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "🚀 Deploy: ${{ github.event.repository.name }}",
              "description": "**Status:** $STATUS\n**Namespace:** ${{ env.K8S_NAMESPACE }}\n**Deployment:** ${{ env.DEPLOYMENT_NAME }}\n**Image:** ${{ env.CONTAINER_PATH }}\n**Commit:** ${{ github.event.head_commit.message }}\n**By:** ${{ github.actor }}",
              "color": $COLOR,
              "footer": {
                "text": "GitHub Actions"
              },
              "timestamp": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            }]
          }
          EOF
          )
          
          # Envia para o Discord
          curl -H "Content-Type: application/json" -d "$PAYLOAD" ${{ secrets.DISCORD_WEBHOOK }}
