{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\requisito-documento.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\requisito-documento.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { IsNotEmpty } from 'class-validator';\nimport { TipoBeneficio } from './tipo-beneficio.entity';\nimport { TipoDocumentoEnum } from '../enums';\n\n@Entity('requisito_documento')\n@Index(['tipo_beneficio_id', 'tipo_documento'], { unique: true })\nexport class RequisitoDocumento {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'Tipo de benefício é obrigatório' })\n  tipo_beneficio_id: string;\n\n  @ManyToOne(\n    () => TipoBeneficio,\n    (tipoBeneficio) => tipoBeneficio.requisito_documento,\n  )\n  @JoinColumn({ name: 'tipo_beneficio_id' })\n  tipo_beneficio: TipoBeneficio;\n\n  @Column({\n    type: 'enum',\n    enum: TipoDocumentoEnum,\n    enumName: 'tipo_documento_enum',\n  })\n  @IsNotEmpty({ message: 'Tipo de documento é obrigatório' })\n  tipo_documento: TipoDocumentoEnum;\n\n  @Column({ type: 'varchar', length: 255 })\n  @IsNotEmpty({ message: 'Nome do documento é obrigatório' })\n  nome: string;\n\n  @Column({ default: true })\n  obrigatorio: boolean;\n\n  @Column('text', { nullable: true })\n  descricao: string;\n\n  @Column('jsonb', { nullable: true })\n  validacoes: {\n    formato?: string[];\n    tamanho_maximo?: number;\n    validade_maxima?: number;\n  };\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters e Setters\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se o requisito foi criado recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se o requisito foi removido\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se o requisito está ativo\n   */\n  isAtivo(): boolean {\n    return !this.removed_at;\n  }\n\n  /**\n   * Verifica se é um documento obrigatório\n   */\n  isObrigatorio(): boolean {\n    return this.obrigatorio;\n  }\n\n  /**\n   * Verifica se é um documento opcional\n   */\n  isOpcional(): boolean {\n    return !this.obrigatorio;\n  }\n\n  /**\n   * Verifica se é documento de identificação\n   */\n  isDocumentoIdentificacao(): boolean {\n    return this.tipo_documento === TipoDocumentoEnum.RG ||\n           this.tipo_documento === TipoDocumentoEnum.CPF;\n  }\n\n  /**\n   * Verifica se é documento de comprovação\n   */\n  isDocumentoComprovacao(): boolean {\n    return this.tipo_documento === TipoDocumentoEnum.COMPROVANTE_RESIDENCIA ||\n           this.tipo_documento === TipoDocumentoEnum.COMPROVANTE_RENDA;\n  }\n\n  /**\n   * Verifica se é certidão\n   */\n  isCertidao(): boolean {\n    return this.tipo_documento === TipoDocumentoEnum.CERTIDAO_NASCIMENTO;\n  }\n\n  /**\n   * Verifica se é documento médico\n   */\n  isDocumentoMedico(): boolean {\n    return this.tipo_documento === TipoDocumentoEnum.DECLARACAO_MEDICA;\n  }\n\n  /**\n   * Verifica se é documento de moradia\n   */\n  isDocumentoMoradia(): boolean {\n    return this.tipo_documento === TipoDocumentoEnum.CONTRATO_ALUGUEL ||\n           this.tipo_documento === TipoDocumentoEnum.COMPROVANTE_RESIDENCIA;\n  }\n\n  /**\n   * Obtém a descrição do tipo de documento\n   */\n  getDescricaoTipoDocumento(): string {\n    const descricoes = {\n      // Documentos de identificação\n      [TipoDocumentoEnum.CPF]: 'Cadastro de Pessoa Física (CPF)',\n      [TipoDocumentoEnum.RG]: 'Registro Geral (RG)',\n      [TipoDocumentoEnum.CNH]: 'Carteira Nacional de Habilitação (CNH)',\n      [TipoDocumentoEnum.PASSAPORTE]: 'Passaporte',\n      \n      // Certidões\n      [TipoDocumentoEnum.CERTIDAO_NASCIMENTO]: 'Certidão de Nascimento',\n      [TipoDocumentoEnum.CERTIDAO_CASAMENTO]: 'Certidão de Casamento',\n      [TipoDocumentoEnum.CERTIDAO_OBITO]: 'Certidão de Óbito',\n      \n      // Comprovantes básicos\n      [TipoDocumentoEnum.COMPROVANTE_RESIDENCIA]: 'Comprovante de Residência',\n      [TipoDocumentoEnum.COMPROVANTE_RENDA]: 'Comprovante de Renda',\n      [TipoDocumentoEnum.COMPROVANTE_ESCOLARIDADE]: 'Comprovante de Escolaridade',\n      \n      // Documentos médicos e de saúde\n      [TipoDocumentoEnum.DECLARACAO_MEDICA]: 'Declaração Médica',\n      [TipoDocumentoEnum.CARTAO_VACINA]: 'Cartão de Vacinação',\n      [TipoDocumentoEnum.CARTAO_SUS]: 'Cartão do SUS',\n      [TipoDocumentoEnum.LAUDO_MEDICO]: 'Laudo Médico',\n      [TipoDocumentoEnum.ATESTADO_MEDICO]: 'Atestado Médico',\n      [TipoDocumentoEnum.EXAME_PRE_NATAL]: 'Exame Pré-Natal',\n      \n      // Documentos habitacionais\n      [TipoDocumentoEnum.CONTRATO_ALUGUEL]: 'Contrato de Aluguel',\n      [TipoDocumentoEnum.ESCRITURA_IMOVEL]: 'Escritura do Imóvel',\n      [TipoDocumentoEnum.IPTU]: 'IPTU',\n      [TipoDocumentoEnum.CONTA_AGUA]: 'Conta de Água',\n      [TipoDocumentoEnum.CONTA_LUZ]: 'Conta de Luz',\n      [TipoDocumentoEnum.CONTA_TELEFONE]: 'Conta de Telefone',\n      \n      // Documentos trabalhistas e previdenciários\n      [TipoDocumentoEnum.CARTEIRA_TRABALHO]: 'Carteira de Trabalho',\n      [TipoDocumentoEnum.COMPROVANTE_DESEMPREGO]: 'Comprovante de Desemprego',\n      [TipoDocumentoEnum.EXTRATO_FGTS]: 'Extrato do FGTS',\n      [TipoDocumentoEnum.COMPROVANTE_APOSENTADORIA]: 'Comprovante de Aposentadoria',\n      [TipoDocumentoEnum.COMPROVANTE_PENSAO]: 'Comprovante de Pensão',\n      [TipoDocumentoEnum.COMPROVANTE_BENEFICIO_INSS]: 'Comprovante de Benefício INSS',\n      \n      // Documentos bancários\n      [TipoDocumentoEnum.EXTRATO_BANCARIO]: 'Extrato Bancário',\n      [TipoDocumentoEnum.COMPROVANTE_PIX]: 'Comprovante PIX',\n      [TipoDocumentoEnum.DADOS_BANCARIOS]: 'Dados Bancários',\n      \n      // Documentos familiares e sociais\n      [TipoDocumentoEnum.DECLARACAO_COMPOSICAO_FAMILIAR]: 'Declaração de Composição Familiar',\n      [TipoDocumentoEnum.DECLARACAO_UNIAO_ESTAVEL]: 'Declaração de União Estável',\n      [TipoDocumentoEnum.GUARDA_MENOR]: 'Termo de Guarda de Menor',\n      [TipoDocumentoEnum.TUTELA]: 'Termo de Tutela',\n      \n      // Documentos específicos para benefícios\n      [TipoDocumentoEnum.BOLETIM_OCORRENCIA]: 'Boletim de Ocorrência',\n      [TipoDocumentoEnum.MEDIDA_PROTETIVA]: 'Medida Protetiva',\n      [TipoDocumentoEnum.TERMO_ACOLHIMENTO]: 'Termo de Acolhimento',\n      [TipoDocumentoEnum.RELATORIO_SOCIAL]: 'Relatório Social',\n      [TipoDocumentoEnum.PARECER_TECNICO]: 'Parecer Técnico',\n      \n      // Documentos de programas sociais\n      [TipoDocumentoEnum.CARTAO_CADUNICO]: 'Cartão CadÚnico',\n      [TipoDocumentoEnum.FOLHA_RESUMO_CADUNICO]: 'Folha Resumo CadÚnico',\n      [TipoDocumentoEnum.COMPROVANTE_BOLSA_FAMILIA]: 'Comprovante Bolsa Família',\n      [TipoDocumentoEnum.COMPROVANTE_BPC]: 'Comprovante BPC',\n      \n      // Documentos educacionais\n      [TipoDocumentoEnum.DECLARACAO_ESCOLAR]: 'Declaração Escolar',\n      [TipoDocumentoEnum.HISTORICO_ESCOLAR]: 'Histórico Escolar',\n      [TipoDocumentoEnum.MATRICULA_ESCOLAR]: 'Comprovante de Matrícula Escolar',\n      \n      // Documentos específicos para mortalidade\n      [TipoDocumentoEnum.DECLARACAO_OBITO]: 'Declaração de Óbito',\n      [TipoDocumentoEnum.AUTORIZACAO_SEPULTAMENTO]: 'Autorização de Sepultamento',\n      [TipoDocumentoEnum.COMPROVANTE_PARENTESCO]: 'Comprovante de Parentesco',\n      \n      // Documentos específicos para natalidade\n      [TipoDocumentoEnum.CARTAO_PRE_NATAL]: 'Cartão Pré-Natal',\n      [TipoDocumentoEnum.DECLARACAO_NASCIDO_VIVO]: 'Declaração de Nascido Vivo',\n      [TipoDocumentoEnum.COMPROVANTE_GESTACAO]: 'Comprovante de Gestação',\n      \n      // Documentos específicos para passagens\n      [TipoDocumentoEnum.COMPROVANTE_VIAGEM]: 'Comprovante de Viagem',\n      [TipoDocumentoEnum.AUTORIZACAO_VIAGEM]: 'Autorização de Viagem',\n      [TipoDocumentoEnum.BILHETE_PASSAGEM]: 'Bilhete de Passagem',\n      \n      // Documentos diversos\n      [TipoDocumentoEnum.PROCURACAO]: 'Procuração',\n      [TipoDocumentoEnum.DECLARACAO_HIPOSSUFICIENCIA]: 'Declaração de Hipossuficiência',\n      [TipoDocumentoEnum.TERMO_RESPONSABILIDADE]: 'Termo de Responsabilidade',\n      [TipoDocumentoEnum.FOTO_3X4]: 'Foto 3x4',\n      [TipoDocumentoEnum.OUTRO]: 'Outro Documento',\n    };\n    return descricoes[this.tipo_documento] || 'Documento não identificado';\n  }\n\n  /**\n   * Verifica se tem validações definidas\n   */\n  temValidacoes(): boolean {\n    return !!this.validacoes && Object.keys(this.validacoes).length > 0;\n  }\n\n  /**\n   * Verifica se tem validação de formato\n   */\n  temValidacaoFormato(): boolean {\n    return this.temValidacoes() && \n           !!this.validacoes.formato && \n           this.validacoes.formato.length > 0;\n  }\n\n  /**\n   * Verifica se tem validação de tamanho\n   */\n  temValidacaoTamanho(): boolean {\n    return this.temValidacoes() && \n           this.validacoes.tamanho_maximo !== undefined &&\n           this.validacoes.tamanho_maximo !== null;\n  }\n\n  /**\n   * Verifica se tem validação de validade\n   */\n  temValidacaoValidade(): boolean {\n    return this.temValidacoes() && \n           this.validacoes.validade_maxima !== undefined &&\n           this.validacoes.validade_maxima !== null;\n  }\n\n  /**\n   * Obtém os formatos aceitos\n   */\n  getFormatosAceitos(): string[] {\n    if (!this.temValidacaoFormato()) return [];\n    return this.validacoes.formato || [];\n  }\n\n  /**\n   * Obtém o tamanho máximo em MB\n   */\n  getTamanhoMaximo(): number | null {\n    if (!this.temValidacaoTamanho()) return null;\n    return this.validacoes.tamanho_maximo ?? null;\n  }\n\n  /**\n   * Obtém a validade máxima em dias\n   */\n  getValidadeMaxima(): number | null {\n    if (!this.temValidacaoValidade()) return null;\n    return this.validacoes.validade_maxima ?? null;\n  }\n\n  /**\n   * Obtém o tamanho máximo formatado\n   */\n  getTamanhoMaximoFormatado(): string {\n    const tamanho = this.getTamanhoMaximo();\n    if (!tamanho) return 'Sem limite de tamanho';\n    \n    if (tamanho < 1) {\n      return `${(tamanho * 1024).toFixed(0)} KB`;\n    } else {\n      return `${tamanho} MB`;\n    }\n  }\n\n  /**\n   * Obtém a validade máxima formatada\n   */\n  getValidadeMaximaFormatada(): string {\n    const validade = this.getValidadeMaxima();\n    if (!validade) return 'Sem limite de validade';\n    \n    if (validade < 30) {\n      return `${validade} dia(s)`;\n    } else if (validade < 365) {\n      const meses = Math.floor(validade / 30);\n      return `${meses} mês(es)`;\n    } else {\n      const anos = Math.floor(validade / 365);\n      return `${anos} ano(s)`;\n    }\n  }\n\n  /**\n   * Verifica se um formato é aceito\n   */\n  formatoEhAceito(formato: string): boolean {\n    if (!this.temValidacaoFormato()) return true;\n    return this.getFormatosAceitos().includes(formato.toLowerCase());\n  }\n\n  /**\n   * Verifica se um tamanho é válido (em bytes)\n   */\n  tamanhoEhValido(tamanhoBytes: number): boolean {\n    const tamanhoMaximo = this.getTamanhoMaximo();\n    if (!tamanhoMaximo) return true;\n    \n    const tamanhoMaximoBytes = tamanhoMaximo * 1024 * 1024; // Converte MB para bytes\n    return tamanhoBytes <= tamanhoMaximoBytes;\n  }\n\n  /**\n   * Verifica se uma data de emissão é válida\n   */\n  dataEmissaoEhValida(dataEmissao: Date): boolean {\n    const validadeMaxima = this.getValidadeMaxima();\n    if (!validadeMaxima) return true;\n    \n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - dataEmissao.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    return diffDays <= validadeMaxima;\n  }\n\n  /**\n   * Verifica se pertence a um tipo de benefício\n   */\n  pertenceAoTipoBeneficio(tipoBeneficioId: string): boolean {\n    return this.tipo_beneficio_id === tipoBeneficioId;\n  }\n\n  /**\n   * Obtém um resumo do requisito\n   */\n  getSummary(): string {\n    const descricao = this.getDescricaoTipoDocumento();\n    const obrigatoriedade = this.isObrigatorio() ? 'Obrigatório' : 'Opcional';\n    return `${descricao} - ${obrigatoriedade}`;\n  }\n\n  /**\n   * Gera uma chave única para o requisito\n   */\n  getUniqueKey(): string {\n    return `requisito_${this.tipo_beneficio_id}_${this.tipo_documento}`;\n  }\n\n  /**\n   * Verifica se o requisito é consistente\n   */\n  isConsistente(): boolean {\n    // Verifica se tem tipo de benefício\n    if (!this.tipo_beneficio_id) return false;\n    \n    // Verifica se tem tipo de documento válido\n    if (!Object.values(TipoDocumentoEnum).includes(this.tipo_documento)) return false;\n    \n    // Verifica validações se existirem\n    if (this.temValidacoes()) {\n      if (this.temValidacaoTamanho() && this.validacoes.tamanho_maximo !== undefined && this.validacoes.tamanho_maximo <= 0) {\n        return false;\n      }\n      \n      if (this.temValidacaoValidade() && this.validacoes.validade_maxima !== undefined && this.validacoes.validade_maxima <= 0) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removido\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n    \n    // Pode implementar lógica adicional aqui\n    // Por exemplo, verificar se tem documentos associados\n    \n    return true;\n  }\n\n  /**\n   * Clona o requisito (sem ID)\n   */\n  clone(): Partial<RequisitoDocumento> {\n    return {\n      tipo_beneficio_id: this.tipo_beneficio_id,\n      tipo_documento: this.tipo_documento,\n      obrigatorio: this.obrigatorio,\n      descricao: this.descricao,\n      validacoes: this.validacoes ? \n        JSON.parse(JSON.stringify(this.validacoes)) : null,\n    };\n  }\n\n  /**\n   * Verifica se é um requisito crítico\n   */\n  isCritico(): boolean {\n    // Documentos de identificação são sempre críticos\n    if (this.isDocumentoIdentificacao()) return true;\n    \n    // Documentos obrigatórios são críticos\n    if (this.isObrigatorio()) return true;\n    \n    return false;\n  }\n\n  /**\n   * Obtém a categoria do documento\n   */\n  getCategoria(): 'IDENTIFICACAO' | 'COMPROVACAO' | 'CERTIDAO' | 'MEDICO' | 'MORADIA' | 'OUTRO' {\n    if (this.isDocumentoIdentificacao()) return 'IDENTIFICACAO';\n    if (this.isDocumentoComprovacao()) return 'COMPROVACAO';\n    if (this.isCertidao()) return 'CERTIDAO';\n    if (this.isDocumentoMedico()) return 'MEDICO';\n    if (this.isDocumentoMoradia()) return 'MORADIA';\n    return 'OUTRO';\n  }\n\n  /**\n   * Obtém a prioridade do documento (1 = mais prioritário)\n   */\n  getPrioridade(): number {\n    if (this.isDocumentoIdentificacao()) return 1;\n    if (this.isObrigatorio()) return 2;\n    return 3;\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<RequisitoDocumento> {\n    return {\n      id: this.id,\n      tipo_documento: this.tipo_documento,\n      obrigatorio: this.obrigatorio,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Obtém sugestões de melhoria para o requisito\n   */\n  getSugestoesMelhoria(): string[] {\n    const sugestoes: string[] = [];\n    \n    if (!this.descricao || this.descricao.trim().length === 0) {\n      sugestoes.push('Adicionar descrição detalhada do documento');\n    }\n    \n    if (!this.temValidacoes()) {\n      sugestoes.push('Definir validações para o documento');\n    }\n    \n    if (this.isDocumentoIdentificacao() && !this.isObrigatorio()) {\n      sugestoes.push('Documentos de identificação devem ser obrigatórios');\n    }\n    \n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar e corrigir inconsistências nos dados');\n    }\n    \n    return sugestoes;\n  }\n\n  /**\n   * Verifica se precisa de atualização (dados muito antigos)\n   */\n  precisaAtualizacao(): boolean {\n    // Dados com mais de 6 meses podem precisar de revisão\n    const seisMesesAtras = new Date();\n    seisMesesAtras.setMonth(seisMesesAtras.getMonth() - 6);\n    return this.updated_at < seisMesesAtras;\n  }\n\n  /**\n   * Obtém estatísticas do requisito\n   */\n  getEstatisticas(): {\n    categoria: string;\n    prioridade: number;\n    obrigatorio: boolean;\n    temValidacoes: boolean;\n    formatosAceitos: number;\n    tamanhoMaximo: string;\n    validadeMaxima: string;\n  } {\n    return {\n      categoria: this.getCategoria(),\n      prioridade: this.getPrioridade(),\n      obrigatorio: this.isObrigatorio(),\n      temValidacoes: this.temValidacoes(),\n      formatosAceitos: this.getFormatosAceitos().length,\n      tamanhoMaximo: this.getTamanhoMaximoFormatado(),\n      validadeMaxima: this.getValidadeMaximaFormatada(),\n    };\n  }\n}\n"],"version":3}