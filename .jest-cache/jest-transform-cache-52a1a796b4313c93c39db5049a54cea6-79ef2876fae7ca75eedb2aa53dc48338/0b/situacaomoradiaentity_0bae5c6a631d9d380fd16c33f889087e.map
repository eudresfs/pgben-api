{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\situacao-moradia.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\situacao-moradia.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  OneToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { IsNotEmpty, IsOptional, IsNumber, Min, IsEnum } from 'class-validator';\nimport { Cidadao } from './cidadao.entity';\n\nexport enum TipoMoradiaEnum {\n  PROPRIA = 'propria',\n  ALUGADA = 'alugada',\n  CEDIDA = 'cedida',\n  OCUPACAO = 'ocupacao',\n  SITUACAO_RUA = 'situacao_rua',\n  ABRIGO = 'abrigo',\n  OUTRO = 'outro',\n}\n\n@Entity('situacao_moradia')\n@Index(['cidadao_id'], { unique: true })\nexport class SituacaoMoradia {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  cidadao_id: string;\n\n  @OneToOne(() => Cidadao, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'cidadao_id' })\n  cidadao: Cidadao;\n\n  @Column({\n    type: 'enum',\n    enum: TipoMoradiaEnum,\n    enumName: 'tipo_moradia_enum',\n    nullable: true,\n  })\n  @IsOptional()\n  @IsEnum(TipoMoradiaEnum, { message: 'Tipo de moradia inválido' })\n  tipo_moradia: TipoMoradiaEnum;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  numero_comodos: number;\n\n  @Column('decimal', { precision: 10, scale: 2, nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Valor do aluguel deve ser um número' })\n  @Min(0, { message: 'Valor do aluguel não pode ser negativo' })\n  valor_aluguel: number;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Tempo de moradia deve ser um número' })\n  tempo_moradia: number;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  possui_banheiro: boolean;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  possui_energia_eletrica: boolean;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  possui_agua_encanada: boolean;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  possui_coleta_lixo: boolean;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  observacoes: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters e Setters\n  get cidadaoId(): string {\n    return this.cidadao_id;\n  }\n\n  set cidadaoId(value: string) {\n    this.cidadao_id = value;\n  }\n\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se a situação foi criada recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se a situação foi removida\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se a situação está ativa\n   */\n  isAtivo(): boolean {\n    return !this.removed_at;\n  }\n\n  /**\n   * Verifica se é moradia própria\n   */\n  isMoradiaPropria(): boolean {\n    return this.tipo_moradia === TipoMoradiaEnum.PROPRIA;\n  }\n\n  /**\n   * Verifica se é moradia alugada\n   */\n  isMoradiaAlugada(): boolean {\n    return this.tipo_moradia === TipoMoradiaEnum.ALUGADA;\n  }\n\n  /**\n   * Verifica se é moradia cedida\n   */\n  isMoradiaCedida(): boolean {\n    return this.tipo_moradia === TipoMoradiaEnum.CEDIDA;\n  }\n\n  /**\n   * Verifica se é ocupação\n   */\n  isOcupacao(): boolean {\n    return this.tipo_moradia === TipoMoradiaEnum.OCUPACAO;\n  }\n\n  /**\n   * Verifica se está em situação de rua\n   */\n  isSituacaoRua(): boolean {\n    return this.tipo_moradia === TipoMoradiaEnum.SITUACAO_RUA;\n  }\n\n  /**\n   * Verifica se está em abrigo\n   */\n  isAbrigo(): boolean {\n    return this.tipo_moradia === TipoMoradiaEnum.ABRIGO;\n  }\n\n  /**\n   * Verifica se tem moradia estável (própria ou alugada)\n   */\n  temMoradiaEstavel(): boolean {\n    return this.isMoradiaPropria() || this.isMoradiaAlugada();\n  }\n\n  /**\n   * Verifica se tem moradia precária (ocupação, situação de rua, abrigo)\n   */\n  temMoradiaPrecaria(): boolean {\n    return this.isOcupacao() || this.isSituacaoRua() || this.isAbrigo();\n  }\n\n  /**\n   * Verifica se tem valor de aluguel definido\n   */\n  temValorAluguel(): boolean {\n    return (\n      this.valor_aluguel !== null &&\n      this.valor_aluguel !== undefined &&\n      this.valor_aluguel > 0\n    );\n  }\n\n  /**\n   * Obtém o valor do aluguel formatado\n   */\n  getValorAluguelFormatado(): string {\n    if (!this.temValorAluguel()) return 'Não informado';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(this.valor_aluguel);\n  }\n\n  /**\n   * Verifica se tem número de cômodos definido\n   */\n  temNumeroComodos(): boolean {\n    return (\n      this.numero_comodos !== null &&\n      this.numero_comodos !== undefined &&\n      this.numero_comodos > 0\n    );\n  }\n\n  /**\n   * Verifica se a moradia é adequada (tem infraestrutura básica)\n   */\n  isMoradiaAdequada(): boolean {\n    return (\n      this.possui_banheiro &&\n      this.possui_energia_eletrica &&\n      this.possui_agua_encanada &&\n      this.possui_coleta_lixo\n    );\n  }\n\n  /**\n   * Conta quantos itens de infraestrutura possui\n   */\n  getItensInfraestrutura(): number {\n    let count = 0;\n    if (this.possui_banheiro) count++;\n    if (this.possui_energia_eletrica) count++;\n    if (this.possui_agua_encanada) count++;\n    if (this.possui_coleta_lixo) count++;\n    return count;\n  }\n\n  /**\n   * Obtém a pontuação de adequação da moradia (0-100)\n   */\n  getPontuacaoAdequacao(): number {\n    let pontos = 0;\n\n    // Tipo de moradia (40 pontos)\n    if (this.isMoradiaPropria()) pontos += 40;\n    else if (this.isMoradiaAlugada()) pontos += 35;\n    else if (this.isMoradiaCedida()) pontos += 25;\n    else if (this.isOcupacao()) pontos += 15;\n    else if (this.isAbrigo()) pontos += 10;\n    else if (this.isSituacaoRua()) pontos += 0;\n\n    // Infraestrutura (60 pontos - 15 cada)\n    pontos += this.getItensInfraestrutura() * 15;\n\n    return Math.min(pontos, 100);\n  }\n\n  /**\n   * Verifica se tem tempo de moradia definido\n   */\n  temTempoMoradia(): boolean {\n    return (\n      this.tempo_moradia !== null &&\n      this.tempo_moradia !== undefined &&\n      this.tempo_moradia > 0\n    );\n  }\n\n  /**\n   * Verifica se mora há muito tempo no local (mais de 5 anos)\n   */\n  moraMuitoTempo(): boolean {\n    return this.temTempoMoradia() && this.tempo_moradia >= 60; // 60 meses = 5 anos\n  }\n\n  /**\n   * Verifica se mora há pouco tempo no local (menos de 1 ano)\n   */\n  moraPoucoTempo(): boolean {\n    return this.temTempoMoradia() && this.tempo_moradia < 12; // menos de 12 meses\n  }\n\n  /**\n   * Obtém a descrição do tipo de moradia\n   */\n  getDescricaoTipoMoradia(): string {\n    const descricoes = {\n      [TipoMoradiaEnum.PROPRIA]: 'Própria',\n      [TipoMoradiaEnum.ALUGADA]: 'Alugada',\n      [TipoMoradiaEnum.CEDIDA]: 'Cedida',\n      [TipoMoradiaEnum.OCUPACAO]: 'Ocupação',\n      [TipoMoradiaEnum.SITUACAO_RUA]: 'Situação de Rua',\n      [TipoMoradiaEnum.ABRIGO]: 'Abrigo',\n      [TipoMoradiaEnum.OUTRO]: 'Outro',\n    };\n    return descricoes[this.tipo_moradia] || 'Não informado';\n  }\n\n  /**\n   * Obtém a descrição do tempo de moradia\n   */\n  getDescricaoTempoMoradia(): string {\n    if (!this.temTempoMoradia()) return 'Não informado';\n\n    if (this.tempo_moradia < 12) {\n      return `${this.tempo_moradia} mês(es)`;\n    } else {\n      const anos = Math.floor(this.tempo_moradia / 12);\n      const meses = this.tempo_moradia % 12;\n      if (meses === 0) {\n        return `${anos} ano(s)`;\n      } else {\n        return `${anos} ano(s) e ${meses} mês(es)`;\n      }\n    }\n  }\n\n  /**\n   * Obtém lista de itens de infraestrutura disponíveis\n   */\n  getItensInfraestruturaDisponiveis(): string[] {\n    const itens: string[] = [];\n    if (this.possui_banheiro) itens.push('Banheiro');\n    if (this.possui_energia_eletrica) itens.push('Energia Elétrica');\n    if (this.possui_agua_encanada) itens.push('Água Encanada');\n    if (this.possui_coleta_lixo) itens.push('Coleta de Lixo');\n    return itens;\n  }\n\n  /**\n   * Obtém lista de itens de infraestrutura faltantes\n   */\n  getItensInfraestruturaFaltantes(): string[] {\n    const itens: string[] = [];\n    if (!this.possui_banheiro) itens.push('Banheiro');\n    if (!this.possui_energia_eletrica) itens.push('Energia Elétrica');\n    if (!this.possui_agua_encanada) itens.push('Água Encanada');\n    if (!this.possui_coleta_lixo) itens.push('Coleta de Lixo');\n    return itens;\n  }\n\n  /**\n   * Verifica se pertence a um cidadão específico\n   */\n  pertenceAoCidadao(cidadaoId: string): boolean {\n    return this.cidadao_id === cidadaoId;\n  }\n\n  /**\n   * Obtém um resumo da situação de moradia\n   */\n  getSummary(): string {\n    const tipo = this.getDescricaoTipoMoradia();\n    const adequacao = this.getPontuacaoAdequacao();\n    const tempo = this.temTempoMoradia()\n      ? ` - ${this.getDescricaoTempoMoradia()}`\n      : '';\n    return `${tipo} (${adequacao}% adequada)${tempo}`;\n  }\n\n  /**\n   * Gera uma chave única para a situação\n   */\n  getUniqueKey(): string {\n    return `situacao_moradia_${this.cidadao_id}`;\n  }\n\n  /**\n   * Verifica se a situação é consistente\n   */\n  isConsistente(): boolean {\n    // Verifica se tem cidadão\n    if (!this.cidadao_id) return false;\n\n    // Se é alugada, deve ter valor do aluguel\n    if (this.isMoradiaAlugada() && !this.temValorAluguel()) {\n      return false;\n    }\n\n    // Se tem valor de aluguel, deve ser moradia alugada\n    if (this.temValorAluguel() && !this.isMoradiaAlugada()) {\n      return false;\n    }\n\n    // Situação de rua não deveria ter infraestrutura\n    if (this.isSituacaoRua() && this.getItensInfraestrutura() > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removida\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n\n    return true;\n  }\n\n  /**\n   * Clona a situação de moradia (sem ID)\n   */\n  clone(): Partial<SituacaoMoradia> {\n    return {\n      cidadao_id: this.cidadao_id,\n      tipo_moradia: this.tipo_moradia,\n      numero_comodos: this.numero_comodos,\n      valor_aluguel: this.valor_aluguel,\n      tempo_moradia: this.tempo_moradia,\n      possui_banheiro: this.possui_banheiro,\n      possui_energia_eletrica: this.possui_energia_eletrica,\n      possui_agua_encanada: this.possui_agua_encanada,\n      possui_coleta_lixo: this.possui_coleta_lixo,\n      observacoes: this.observacoes,\n    };\n  }\n\n  /**\n   * Verifica se é elegível para auxílio moradia\n   */\n  isElegivelAuxilioMoradia(): boolean {\n    // Situações que podem ser elegíveis para auxílio\n    return (\n      this.isMoradiaAlugada() ||\n      this.temMoradiaPrecaria() ||\n      !this.isMoradiaAdequada()\n    );\n  }\n\n  /**\n   * Verifica se é prioritário para programas habitacionais\n   */\n  isPrioritarioHabitacao(): boolean {\n    return (\n      this.isSituacaoRua() ||\n      this.isAbrigo() ||\n      this.isOcupacao() ||\n      this.getPontuacaoAdequacao() < 50\n    );\n  }\n\n  /**\n   * Obtém o nível de vulnerabilidade habitacional\n   */\n  getNivelVulnerabilidade(): 'BAIXO' | 'MEDIO' | 'ALTO' | 'CRITICO' {\n    if (this.isSituacaoRua()) return 'CRITICO';\n    if (this.isAbrigo() || this.isOcupacao()) return 'ALTO';\n    if (!this.isMoradiaAdequada() || this.getPontuacaoAdequacao() < 50)\n      return 'MEDIO';\n    return 'BAIXO';\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<SituacaoMoradia> {\n    return {\n      id: this.id,\n      tipo_moradia: this.tipo_moradia,\n      numero_comodos: this.numero_comodos,\n      tempo_moradia: this.tempo_moradia,\n      possui_banheiro: this.possui_banheiro,\n      possui_energia_eletrica: this.possui_energia_eletrica,\n      possui_agua_encanada: this.possui_agua_encanada,\n      possui_coleta_lixo: this.possui_coleta_lixo,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Obtém sugestões de melhoria para a situação de moradia\n   */\n  getSugestoesMelhoria(): string[] {\n    const sugestoes: string[] = [];\n\n    if (this.temMoradiaPrecaria()) {\n      sugestoes.push('Buscar programas habitacionais ou auxílio moradia');\n    }\n\n    if (!this.isMoradiaAdequada()) {\n      const faltantes = this.getItensInfraestruturaFaltantes();\n      sugestoes.push(`Melhorar infraestrutura: ${faltantes.join(', ')}`);\n    }\n\n    if (this.isMoradiaAlugada() && !this.temValorAluguel()) {\n      sugestoes.push('Informar valor do aluguel para análise de benefícios');\n    }\n\n    if (!this.temTempoMoradia()) {\n      sugestoes.push('Informar tempo de moradia no local atual');\n    }\n\n    if (!this.temNumeroComodos()) {\n      sugestoes.push('Informar número de cômodos da moradia');\n    }\n\n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar e corrigir inconsistências nos dados');\n    }\n\n    return sugestoes;\n  }\n\n  /**\n   * Verifica se precisa de atualização (dados muito antigos)\n   */\n  precisaAtualizacao(): boolean {\n    // Dados com mais de 6 meses podem precisar de atualização\n    const seiseMesesAtras = new Date();\n    seiseMesesAtras.setMonth(seiseMesesAtras.getMonth() - 6);\n    return this.updated_at < seiseMesesAtras;\n  }\n\n  /**\n   * Obtém estatísticas da situação de moradia\n   */\n  getEstatisticas(): {\n    pontuacaoAdequacao: number;\n    nivelVulnerabilidade: string;\n    itensInfraestrutura: number;\n    tempoMoradia: string;\n    elegibilidadeAuxilio: boolean;\n  } {\n    return {\n      pontuacaoAdequacao: this.getPontuacaoAdequacao(),\n      nivelVulnerabilidade: this.getNivelVulnerabilidade(),\n      itensInfraestrutura: this.getItensInfraestrutura(),\n      tempoMoradia: this.getDescricaoTempoMoradia(),\n      elegibilidadeAuxilio: this.isElegivelAuxilioMoradia(),\n    };\n  }\n}\n"],"version":3}