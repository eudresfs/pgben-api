{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\integrador.module.ts","mappings":";;;;;;;;;AAAA,2CAAwC;AACxC,6CAAgD;AAChD,qCAAwC;AACxC,2CAA6D;AAE7D,6CAIwB;AAExB,sEAAkE;AAClE,kFAA6E;AAC7E,gFAA2E;AAE3E,+EAA2E;AAC3E,iFAA4E;AAE5E,0EAAqE;AAErE;;;GAGG;AA6CI,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;CAAG,CAAA;AAAnB,4CAAgB;2BAAhB,gBAAgB;IA5C5B,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,UAAU,CAAC;gBACvB,qBAAU;gBACV,0BAAe;gBACf,wBAAa;aACd,CAAC;YACF,eAAS,CAAC,aAAa,CAAC;gBACtB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,MAAM,EAAE,CAAC,sBAAa,CAAC;gBACvB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE;oBAC3C,MAAM,gBAAgB,GAAG,aAAa,CAAC,GAAG,CAAS,wBAAwB,CAAC,CAAC;oBAC7E,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAElF,OAAO;wBACL,UAAU;wBACV,SAAS,EAAE,MAAM,CAAC,IAAI,CACpB,aAAa,CAAC,GAAG,CAAS,uBAAuB,EAAE,EAAE,CAAC,EACtD,QAAQ,CACT,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAClB,WAAW,EAAE;4BACX,SAAS,EAAE,OAAO;yBACnB;qBACF,CAAC;gBACJ,CAAC;aACF,CAAC;SACH;QACD,WAAW,EAAE;YACX,4CAAoB;YACpB,6CAAoB;SACrB;QACD,SAAS,EAAE;YACT,sCAAiB;YACjB,iDAAsB;YACtB,+CAAqB;YACrB,2CAAmB;SACpB;QACD,OAAO,EAAE;YACP,sCAAiB;YACjB,iDAAsB;YACtB,+CAAqB;YACrB,2CAAmB;SACpB;KACF,CAAC;GACW,gBAAgB,CAAG","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\integrador.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\nimport { \n  Integrador, \n  IntegradorToken, \n  TokenRevogado \n} from '../../entities';\n\nimport { IntegradorService } from './services/integrador.service';\nimport { IntegradorTokenService } from './services/integrador-token.service';\nimport { IntegradorAuthService } from './services/integrador-auth.service';\n\nimport { IntegradorController } from './controllers/integrador.controller';\nimport { ApiExemploController } from './controllers/api-exemplo.controller';\n\nimport { IntegradorAuthGuard } from './guards/integrador-auth.guard';\n\n/**\n * Módulo principal para gerenciamento de integradores.\n * Configura todas as entidades, serviços e controllers necessários.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Integrador, \n      IntegradorToken, \n      TokenRevogado\n    ]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        const privateKeyBase64 = configService.get<string>('JWT_PRIVATE_KEY_BASE64');\n        const privateKey = Buffer.from(privateKeyBase64 || '', 'base64').toString('utf8');\n        \n        return {\n          privateKey,\n          publicKey: Buffer.from(\n            configService.get<string>('JWT_PUBLIC_KEY_BASE64', ''),\n            'base64'\n          ).toString('utf8'),\n          signOptions: {\n            algorithm: 'RS256'\n          },\n        };\n      },\n    })\n  ],\n  controllers: [\n    IntegradorController,\n    ApiExemploController\n  ],\n  providers: [\n    IntegradorService,\n    IntegradorTokenService,\n    IntegradorAuthService,\n    IntegradorAuthGuard\n  ],\n  exports: [\n    IntegradorService,\n    IntegradorTokenService,\n    IntegradorAuthService,\n    IntegradorAuthGuard\n  ],\n})\nexport class IntegradorModule {}\n"],"version":3}