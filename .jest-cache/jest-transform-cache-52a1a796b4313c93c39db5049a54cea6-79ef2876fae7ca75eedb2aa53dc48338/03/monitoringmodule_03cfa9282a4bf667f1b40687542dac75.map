{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\monitoring\\monitoring.module.ts","mappings":";;;;;;;;;AAAA,2CAAoD;AACpD,+CAAkD;AAClD,yCAA2C;AAC3C,2CAA8C;AAC9C,2DAAuD;AACvD,6DAAyD;AACzD,uDAAmD;AACnD,+DAA2D;AAC3D,yEAAoE;AACpE,+EAA0E;AAC1E,iFAA4E;AAC5E,2EAAsE;AACtE,2EAAsE;AAEtE;;;;;GAKG;AACH,2DAA2D;AAqBpD,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;CAAG,CAAA;AAAnB,4CAAgB;2BAAhB,gBAAgB;IApB5B,IAAA,eAAM,EAAC;QACN,OAAO,EAAE,CAAC,yBAAc,EAAE,kBAAU,EAAE,qBAAY,CAAC;QACnD,WAAW,EAAE,CAAC,oCAAgB,EAAE,sCAAiB,EAAE,uDAAyB,CAAC;QAC7E,SAAS,EAAE;YACT,gCAAc;YACd,wCAAkB;YAClB,iDAAsB;YACtB,yDAA0B;YAC1B,mDAAuB;YACvB,yCAAkB;SACnB;QACD,OAAO,EAAE;YACP,gCAAc;YACd,wCAAkB;YAClB,iDAAsB;YACtB,yDAA0B;YAC1B,mDAAuB;YACvB,yCAAkB;SACnB;KACF,CAAC;GACW,gBAAgB,CAAG","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\monitoring\\monitoring.module.ts"],"sourcesContent":["import { Module, forwardRef } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { ConfigModule } from '@nestjs/config';\nimport { HealthController } from './health.controller';\nimport { MetricsController } from './metrics.controller';\nimport { MetricsService } from './metrics.service';\nimport { MetricsInterceptor } from './metrics.interceptor';\nimport { EnhancedMetricsService } from './enhanced-metrics.service';\nimport { EnhancedMetricsController } from './enhanced-metrics.controller';\nimport { EnhancedMetricsInterceptor } from './enhanced-metrics.interceptor';\nimport { CacheMetricsInterceptor } from './cache-metrics.interceptor';\nimport { HealthCheckService } from '../services/health-check.service';\n\n/**\n * Módulo Global de Monitoramento\n *\n * Configura o sistema de monitoramento para toda a aplicação\n * incluindo health checks e métricas\n */\n// Módulo NÃO global para evitar problemas com interceptors\n@Module({\n  imports: [TerminusModule, HttpModule, ConfigModule],\n  controllers: [HealthController, MetricsController, EnhancedMetricsController],\n  providers: [\n    MetricsService,\n    MetricsInterceptor,\n    EnhancedMetricsService,\n    EnhancedMetricsInterceptor,\n    CacheMetricsInterceptor,\n    HealthCheckService,\n  ],\n  exports: [\n    MetricsService,\n    MetricsInterceptor,\n    EnhancedMetricsService,\n    EnhancedMetricsInterceptor,\n    CacheMetricsInterceptor,\n    HealthCheckService,\n  ],\n})\nexport class MonitoringModule {}\n"],"version":3}