{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\utils\\enum-normalizer.util.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\utils\\enum-normalizer.util.ts"],"sourcesContent":["/**\n * Utilitário para normalização de valores de enums\n *\n * Este utilitário garante que valores de enums sejam normalizados para lowercase\n * antes de serem salvos no banco de dados, mantendo consistência com os valores\n * definidos nas migrations.\n *\n * @author Equipe PGBen\n */\n\n// Lista de campos que devem ser normalizados para uppercase\nconst ENUM_FIELDS = [\n  // Status e tipos básicos\n  'status_solicitacao',\n  'tipo_beneficio',\n  'status_unidade',\n  'tipo_unidade',\n  'tipo_moradia',\n  'tipo_papel',\n  'tipo_documento',\n  'metodo_pagamento',\n  'status_pagamento',\n  'canal_notificacao',\n  'tipo_configuracao',\n  'status_usuario',\n  'prioridade',\n  'status_notificacao',\n  'periodicidade',\n  'status',\n  'tipo',\n  'metodoPagamento',\n\n  // Dados pessoais\n  'sexo',\n  'escolaridade',\n  'parentesco',\n  'situacao_trabalho',\n  'tipo_trabalho',\n\n  // Pendências e confirmações\n  'status_pendencia',\n  'metodo_confirmacao',\n\n  // Métricas e alertas\n  'tipo_metrica',\n  'categoria_metrica',\n  'nivel_alerta',\n\n  // Integração\n  'integracao_tipo',\n  'tipo_evento_integracao',\n\n  // Benefícios específicos\n  'tipo_urna_funeraria',\n  'periodicidade_entrega',\n  'motivo_aluguel_social',\n  'tipo_entrega_cesta_basica',\n  'periodicidade_cesta_basica',\n\n  // Avaliação\n  'tipo_avaliacao',\n  'resultado_avaliacao',\n\n  // Solicitações\n  'origem_solicitacao',\n  'tipo_solicitacao',\n\n  // Relatórios\n  'formato_relatorio',\n  'tipo_relatorio',\n  'status_geracao',\n  'estrategia_amostragem',\n\n  // Agendamento\n  'tipo_agendamento',\n  'tipo_escopo',\n\n  // Documentos\n  'status_verificacao_documento',\n  'resultado_verificacao_malware',\n  'tipo_documento_enviado',\n\n  // Configurações\n  'visibilidade_configuracao',\n\n  // Requisitos\n  'fase_requisito',\n  'tipo_campo',\n\n  // Operações\n  'tipo_operacao',\n  'status_ativo',\n\n  // Informações bancárias\n  'tipo_conta',\n  'tipo_chave_pix',\n  'codigo_banco',\n\n  // Recursos e processos\n  'status_recurso',\n  'status_processo_judicial',\n  'tipo_determinacao_judicial',\n\n  // Ocorrências\n  'tipo_ocorrencia',\n  'status_ocorrencia',\n  'tipo_demanda',\n\n  // Auditoria\n  'audit_action',\n  'audit_severity',\n\n  // Notificações\n  'tipo_notificacao',\n  'status_notificacao_processamento',\n\n  // Métricas avançadas\n  'tipo_metrica_enum',\n  'categoria_metrica_enum',\n  'granularidade_temporal',\n  'nivel_confianca_anomalia',\n\n  // Configurações avançadas\n  'parametro_tipo',\n  'workflow_acao',\n  'template_tipo',\n\n  // Benefícios específicos\n  'tipo_aprovador',\n  'tipo_etapa',\n  'tipo_dado',\n\n  // Storage e documentos\n  'categoria_documento',\n  'tipo_storage_provider',\n\n  // Logs\n  'criticidade_log',\n  'formato_exportacao',\n\n  // Roles e permissões\n  'role',\n  'tipo_escopo_permission',\n];\n\n/**\n * Normaliza um valor de enum para lowercase\n * @param value Valor a ser normalizado\n * @returns Valor normalizado em lowercase ou o valor original se for null/undefined\n */\nexport function normalizeEnumValue(\n  value: string | null | undefined,\n): string | null | undefined {\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  return value.toLowerCase();\n}\n\n/**\n * Normaliza todos os campos de enum em um objeto de dados\n * @param data Objeto contendo os dados a serem normalizados\n * @returns Objeto com campos de enum normalizados\n */\nexport function normalizeEnumFields<T extends Record<string, any>>(data: T): T {\n  if (!data || typeof data !== 'object') {\n    return data;\n  }\n\n  const normalizedData = { ...data };\n\n  // Normalizar campos conhecidos de enum\n  ENUM_FIELDS.forEach((field) => {\n    if (field in normalizedData) {\n      (normalizedData as any)[field] = normalizeEnumValue(\n        normalizedData[field],\n      );\n    }\n  });\n\n  return normalizedData;\n}\n\n/**\n * Normaliza campos de enum em um array de objetos\n * @param dataArray Array de objetos a serem normalizados\n * @returns Array com objetos normalizados\n */\nexport function normalizeEnumFieldsArray<T extends Record<string, any>>(\n  dataArray: T[],\n): T[] {\n  if (!Array.isArray(dataArray)) {\n    return dataArray;\n  }\n\n  return dataArray.map((item) => normalizeEnumFields(item));\n}\n\n/**\n * Verifica se um campo é um campo de enum conhecido\n * @param fieldName Nome do campo\n * @returns true se o campo é um enum conhecido\n */\nexport function isEnumField(fieldName: string): boolean {\n  return ENUM_FIELDS.includes(fieldName);\n}\n\n/**\n * Adiciona novos campos de enum à lista de campos conhecidos\n * @param newFields Array de novos campos de enum\n */\nexport function addEnumFields(newFields: string[]): void {\n  newFields.forEach((field) => {\n    if (!ENUM_FIELDS.includes(field)) {\n      ENUM_FIELDS.push(field);\n    }\n  });\n}\n\n/**\n * Obtém a lista completa de campos de enum conhecidos\n * @returns Array com todos os campos de enum\n */\nexport function getEnumFields(): string[] {\n  return [...ENUM_FIELDS];\n}\n"],"version":3}