45871b660797ce16e3f00532e41f445a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegradorModule = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const jwt_1 = require("@nestjs/jwt");
const config_1 = require("@nestjs/config");
const entities_1 = require("../../entities");
const integrador_service_1 = require("./services/integrador.service");
const integrador_token_service_1 = require("./services/integrador-token.service");
const integrador_auth_service_1 = require("./services/integrador-auth.service");
const integrador_controller_1 = require("./controllers/integrador.controller");
const api_exemplo_controller_1 = require("./controllers/api-exemplo.controller");
const integrador_auth_guard_1 = require("./guards/integrador-auth.guard");
/**
 * Módulo principal para gerenciamento de integradores.
 * Configura todas as entidades, serviços e controllers necessários.
 */
let IntegradorModule = class IntegradorModule {
};
exports.IntegradorModule = IntegradorModule;
exports.IntegradorModule = IntegradorModule = __decorate([
    (0, common_1.Module)({
        imports: [
            typeorm_1.TypeOrmModule.forFeature([entities_1.Integrador, entities_1.IntegradorToken, entities_1.TokenRevogado]),
            jwt_1.JwtModule.registerAsync({
                imports: [config_1.ConfigModule],
                inject: [config_1.ConfigService],
                useFactory: (configService) => {
                    const privateKeyBase64 = configService.get('JWT_PRIVATE_KEY_BASE64');
                    const privateKey = Buffer.from(privateKeyBase64 || '', 'base64').toString('utf8');
                    return {
                        privateKey,
                        publicKey: Buffer.from(configService.get('JWT_PUBLIC_KEY_BASE64', ''), 'base64').toString('utf8'),
                        signOptions: {
                            algorithm: 'RS256',
                        },
                    };
                },
            }),
        ],
        controllers: [integrador_controller_1.IntegradorController, api_exemplo_controller_1.ApiExemploController],
        providers: [
            integrador_service_1.IntegradorService,
            integrador_token_service_1.IntegradorTokenService,
            integrador_auth_service_1.IntegradorAuthService,
            integrador_auth_guard_1.IntegradorAuthGuard,
        ],
        exports: [
            integrador_service_1.IntegradorService,
            integrador_token_service_1.IntegradorTokenService,
            integrador_auth_service_1.IntegradorAuthService,
            integrador_auth_guard_1.IntegradorAuthGuard,
        ],
    })
], IntegradorModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGludGVncmFkb3JcXGludGVncmFkb3IubW9kdWxlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDJDQUF3QztBQUN4Qyw2Q0FBZ0Q7QUFDaEQscUNBQXdDO0FBQ3hDLDJDQUE2RDtBQUU3RCw2Q0FBNEU7QUFFNUUsc0VBQWtFO0FBQ2xFLGtGQUE2RTtBQUM3RSxnRkFBMkU7QUFFM0UsK0VBQTJFO0FBQzNFLGlGQUE0RTtBQUU1RSwwRUFBcUU7QUFFckU7OztHQUdHO0FBMkNJLElBQU0sZ0JBQWdCLEdBQXRCLE1BQU0sZ0JBQWdCO0NBQUcsQ0FBQTtBQUFuQiw0Q0FBZ0I7MkJBQWhCLGdCQUFnQjtJQTFDNUIsSUFBQSxlQUFNLEVBQUM7UUFDTixPQUFPLEVBQUU7WUFDUCx1QkFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLHFCQUFVLEVBQUUsMEJBQWUsRUFBRSx3QkFBYSxDQUFDLENBQUM7WUFDdEUsZUFBUyxDQUFDLGFBQWEsQ0FBQztnQkFDdEIsT0FBTyxFQUFFLENBQUMscUJBQVksQ0FBQztnQkFDdkIsTUFBTSxFQUFFLENBQUMsc0JBQWEsQ0FBQztnQkFDdkIsVUFBVSxFQUFFLENBQUMsYUFBNEIsRUFBRSxFQUFFO29CQUMzQyxNQUFNLGdCQUFnQixHQUFHLGFBQWEsQ0FBQyxHQUFHLENBQ3hDLHdCQUF3QixDQUN6QixDQUFDO29CQUNGLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQzVCLGdCQUFnQixJQUFJLEVBQUUsRUFDdEIsUUFBUSxDQUNULENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUVuQixPQUFPO3dCQUNMLFVBQVU7d0JBQ1YsU0FBUyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQ3BCLGFBQWEsQ0FBQyxHQUFHLENBQVMsdUJBQXVCLEVBQUUsRUFBRSxDQUFDLEVBQ3RELFFBQVEsQ0FDVCxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7d0JBQ2xCLFdBQVcsRUFBRTs0QkFDWCxTQUFTLEVBQUUsT0FBTzt5QkFDbkI7cUJBQ0YsQ0FBQztnQkFDSixDQUFDO2FBQ0YsQ0FBQztTQUNIO1FBQ0QsV0FBVyxFQUFFLENBQUMsNENBQW9CLEVBQUUsNkNBQW9CLENBQUM7UUFDekQsU0FBUyxFQUFFO1lBQ1Qsc0NBQWlCO1lBQ2pCLGlEQUFzQjtZQUN0QiwrQ0FBcUI7WUFDckIsMkNBQW1CO1NBQ3BCO1FBQ0QsT0FBTyxFQUFFO1lBQ1Asc0NBQWlCO1lBQ2pCLGlEQUFzQjtZQUN0QiwrQ0FBcUI7WUFDckIsMkNBQW1CO1NBQ3BCO0tBQ0YsQ0FBQztHQUNXLGdCQUFnQixDQUFHIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFxpbnRlZ3JhZG9yXFxpbnRlZ3JhZG9yLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBUeXBlT3JtTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcbmltcG9ydCB7IEp3dE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvand0JztcbmltcG9ydCB7IENvbmZpZ01vZHVsZSwgQ29uZmlnU2VydmljZSB9IGZyb20gJ0BuZXN0anMvY29uZmlnJztcblxuaW1wb3J0IHsgSW50ZWdyYWRvciwgSW50ZWdyYWRvclRva2VuLCBUb2tlblJldm9nYWRvIH0gZnJvbSAnLi4vLi4vZW50aXRpZXMnO1xuXG5pbXBvcnQgeyBJbnRlZ3JhZG9yU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvaW50ZWdyYWRvci5zZXJ2aWNlJztcbmltcG9ydCB7IEludGVncmFkb3JUb2tlblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ludGVncmFkb3ItdG9rZW4uc2VydmljZSc7XG5pbXBvcnQgeyBJbnRlZ3JhZG9yQXV0aFNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ludGVncmFkb3ItYXV0aC5zZXJ2aWNlJztcblxuaW1wb3J0IHsgSW50ZWdyYWRvckNvbnRyb2xsZXIgfSBmcm9tICcuL2NvbnRyb2xsZXJzL2ludGVncmFkb3IuY29udHJvbGxlcic7XG5pbXBvcnQgeyBBcGlFeGVtcGxvQ29udHJvbGxlciB9IGZyb20gJy4vY29udHJvbGxlcnMvYXBpLWV4ZW1wbG8uY29udHJvbGxlcic7XG5cbmltcG9ydCB7IEludGVncmFkb3JBdXRoR3VhcmQgfSBmcm9tICcuL2d1YXJkcy9pbnRlZ3JhZG9yLWF1dGguZ3VhcmQnO1xuXG4vKipcbiAqIE3Ds2R1bG8gcHJpbmNpcGFsIHBhcmEgZ2VyZW5jaWFtZW50byBkZSBpbnRlZ3JhZG9yZXMuXG4gKiBDb25maWd1cmEgdG9kYXMgYXMgZW50aWRhZGVzLCBzZXJ2acOnb3MgZSBjb250cm9sbGVycyBuZWNlc3PDoXJpb3MuXG4gKi9cbkBNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgVHlwZU9ybU1vZHVsZS5mb3JGZWF0dXJlKFtJbnRlZ3JhZG9yLCBJbnRlZ3JhZG9yVG9rZW4sIFRva2VuUmV2b2dhZG9dKSxcbiAgICBKd3RNb2R1bGUucmVnaXN0ZXJBc3luYyh7XG4gICAgICBpbXBvcnRzOiBbQ29uZmlnTW9kdWxlXSxcbiAgICAgIGluamVjdDogW0NvbmZpZ1NlcnZpY2VdLFxuICAgICAgdXNlRmFjdG9yeTogKGNvbmZpZ1NlcnZpY2U6IENvbmZpZ1NlcnZpY2UpID0+IHtcbiAgICAgICAgY29uc3QgcHJpdmF0ZUtleUJhc2U2NCA9IGNvbmZpZ1NlcnZpY2UuZ2V0PHN0cmluZz4oXG4gICAgICAgICAgJ0pXVF9QUklWQVRFX0tFWV9CQVNFNjQnLFxuICAgICAgICApO1xuICAgICAgICBjb25zdCBwcml2YXRlS2V5ID0gQnVmZmVyLmZyb20oXG4gICAgICAgICAgcHJpdmF0ZUtleUJhc2U2NCB8fCAnJyxcbiAgICAgICAgICAnYmFzZTY0JyxcbiAgICAgICAgKS50b1N0cmluZygndXRmOCcpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcHJpdmF0ZUtleSxcbiAgICAgICAgICBwdWJsaWNLZXk6IEJ1ZmZlci5mcm9tKFxuICAgICAgICAgICAgY29uZmlnU2VydmljZS5nZXQ8c3RyaW5nPignSldUX1BVQkxJQ19LRVlfQkFTRTY0JywgJycpLFxuICAgICAgICAgICAgJ2Jhc2U2NCcsXG4gICAgICAgICAgKS50b1N0cmluZygndXRmOCcpLFxuICAgICAgICAgIHNpZ25PcHRpb25zOiB7XG4gICAgICAgICAgICBhbGdvcml0aG06ICdSUzI1NicsXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgfSksXG4gIF0sXG4gIGNvbnRyb2xsZXJzOiBbSW50ZWdyYWRvckNvbnRyb2xsZXIsIEFwaUV4ZW1wbG9Db250cm9sbGVyXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgSW50ZWdyYWRvclNlcnZpY2UsXG4gICAgSW50ZWdyYWRvclRva2VuU2VydmljZSxcbiAgICBJbnRlZ3JhZG9yQXV0aFNlcnZpY2UsXG4gICAgSW50ZWdyYWRvckF1dGhHdWFyZCxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIEludGVncmFkb3JTZXJ2aWNlLFxuICAgIEludGVncmFkb3JUb2tlblNlcnZpY2UsXG4gICAgSW50ZWdyYWRvckF1dGhTZXJ2aWNlLFxuICAgIEludGVncmFkb3JBdXRoR3VhcmQsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEludGVncmFkb3JNb2R1bGUge31cbiJdLCJ2ZXJzaW9uIjozfQ==