{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-papel-cidadao.dto.ts","mappings":";;;;;;;;;;;;;AAAA,6CAAmE;AACnE,qDAQyB;AACzB,yDAAyC;AACzC,oEAAsE;AAEtE;;;;GAIG;AACH,MAAa,qBAAqB;IAQhC,UAAU,CAAY;IAQtB,UAAU,CAAS;IAcnB,SAAS,CAKP;IAWF,mCAAmC,CAAU;IAW7C,uCAAuC,CAAQ;IAK/C,2BAA2B,CAAU;CACtC;AA/DD,sDA+DC;AAvDC;IAPC,IAAA,wBAAM,EAAC,2BAAS,EAAE,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;IACxD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,qBAAW,EAAC;QACX,IAAI,EAAE,2BAAS;QACf,OAAO,EAAE,2BAAS,CAAC,YAAY;QAC/B,WAAW,EAAE,yCAAyC;KACvD,CAAC;kDACU,2BAAS,oBAAT,2BAAS;yDAAC;AAQtB;IANC,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC;IACjE,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,qBAAW,EAAC;QACX,OAAO,EAAE,sCAAsC;QAC/C,WAAW,EAAE,oCAAoC;KAClD,CAAC;;yDACiB;AAcnB;IAZC,IAAA,4BAAU,GAAE;IACZ,IAAA,6BAAmB,EAAC;QACnB,IAAI,EAAE,QAAQ;QACd,oBAAoB,EAAE,IAAI;QAC1B,OAAO,EAAE;YACP,eAAe,EAAE,KAAK;YACtB,uBAAuB,EAAE,OAAO;YAChC,2BAA2B,EAAE,YAAY;SAC1C;QACD,WAAW,EACT,iEAAiE;KACpE,CAAC;;wDAMA;AAWF;IATC,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,2BAAS,CAAC,mBAAmB,CAAC;IACjE,IAAA,0BAAQ,EAAC;QACR,OAAO,EACL,qEAAqE;KACxE,CAAC;IACD,IAAA,4BAAU,EAAC;QACV,OAAO,EACL,qEAAqE;KACxE,CAAC;;gFAC2C;AAW7C;IATC,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,2BAAS,CAAC,mBAAmB,CAAC;IACjE,IAAA,wBAAM,EAAC;QACN,OAAO,EAAE,4DAA4D;KACtE,CAAC;IACD,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC;IAChB,IAAA,4BAAU,EAAC;QACV,OAAO,EACL,4EAA4E;KAC/E,CAAC;kDACwC,IAAI,oBAAJ,IAAI;oFAAC;AAK/C;IAHC,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,2BAAS,CAAC,UAAU,CAAC;IACxD,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,wCAAwC,EAAE,CAAC;IAC/D,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,mDAAmD,EAAE,CAAC;;wEACxC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-papel-cidadao.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUUID,\n  ValidateIf,\n  IsDate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { TipoPapel, PaperType } from '../../../enums/tipo-papel.enum';\n\n/**\n * DTO para criação de papel de cidadão\n *\n * Contém os dados necessários para atribuir um papel específico a um cidadão\n */\nexport class CreatePapelCidadaoDto {\n  @IsEnum(TipoPapel, { message: 'Tipo de papel inválido' })\n  @IsNotEmpty({ message: 'Tipo de papel é obrigatório' })\n  @ApiProperty({\n    enum: TipoPapel,\n    example: TipoPapel.BENEFICIARIO,\n    description: 'Tipo de papel que o cidadão irá assumir',\n  })\n  tipo_papel: PaperType;\n\n  @IsUUID('4', { message: 'ID do cidadão deve ser um UUID válido' })\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: 'ID do cidadão que receberá o papel',\n  })\n  cidadao_id: string;\n\n  @IsOptional()\n  @ApiPropertyOptional({\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      grau_parentesco: 'Mãe',\n      documento_representacao: '12345',\n      data_validade_representacao: '2026-01-01',\n    },\n    description:\n      'Metadados específicos do papel (varia conforme o tipo de papel)',\n  })\n  metadados?: {\n    grau_parentesco?: string;\n    documento_representacao?: string;\n    data_validade_representacao?: Date;\n    [key: string]: any;\n  };\n\n  @ValidateIf((o) => o.tipo_papel === TipoPapel.REPRESENTANTE_LEGAL)\n  @IsString({\n    message:\n      'Documento de representação é obrigatório para representantes legais',\n  })\n  @IsNotEmpty({\n    message:\n      'Documento de representação é obrigatório para representantes legais',\n  })\n  'metadados.documento_representacao'?: string;\n\n  @ValidateIf((o) => o.tipo_papel === TipoPapel.REPRESENTANTE_LEGAL)\n  @IsDate({\n    message: 'Data de validade da representação deve ser uma data válida',\n  })\n  @Type(() => Date)\n  @IsNotEmpty({\n    message:\n      'Data de validade da representação é obrigatória para representantes legais',\n  })\n  'metadados.data_validade_representacao'?: Date;\n\n  @ValidateIf((o) => o.tipo_papel === TipoPapel.REQUERENTE)\n  @IsString({ message: 'Grau de parentesco deve ser uma string' })\n  @IsNotEmpty({ message: 'Grau de parentesco é obrigatório para requerentes' })\n  'metadados.grau_parentesco'?: string;\n}\n"],"version":3}