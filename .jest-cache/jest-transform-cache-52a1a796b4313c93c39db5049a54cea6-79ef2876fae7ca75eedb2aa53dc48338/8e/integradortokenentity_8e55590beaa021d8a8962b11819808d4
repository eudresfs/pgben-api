88a720a88804e545f9ebb51d844b8125
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegradorToken = void 0;
const typeorm_1 = require("typeorm");
const integrador_entity_1 = require("./integrador.entity");
/**
 * Entidade que representa um token de acesso para um integrador específico.
 * Armazena informações sobre o token, seus escopos de permissão e status.
 */
let IntegradorToken = class IntegradorToken {
    id;
    integrador;
    integradorId;
    nome;
    descricao;
    // Armazenamos apenas o hash do token para segurança, nunca o token em si
    tokenHash;
    escopos;
    // A coluna pode ser null para tokens sem expiração
    dataExpiracao;
    revogado;
    dataRevogacao;
    motivoRevogacao;
    ultimoUso;
    dataCriacao;
};
exports.IntegradorToken = IntegradorToken;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], IntegradorToken.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => integrador_entity_1.Integrador, integrador => integrador.tokens, { nullable: false }),
    (0, typeorm_1.JoinColumn)({ name: 'integrador_id' }),
    __metadata("design:type", typeof (_a = typeof integrador_entity_1.Integrador !== "undefined" && integrador_entity_1.Integrador) === "function" ? _a : Object)
], IntegradorToken.prototype, "integrador", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'integrador_id' }),
    __metadata("design:type", String)
], IntegradorToken.prototype, "integradorId", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 100 }),
    __metadata("design:type", String)
], IntegradorToken.prototype, "nome", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 500, nullable: true }),
    __metadata("design:type", String)
], IntegradorToken.prototype, "descricao", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 64 }),
    __metadata("design:type", String)
], IntegradorToken.prototype, "tokenHash", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'simple-array', nullable: true }),
    __metadata("design:type", Array)
], IntegradorToken.prototype, "escopos", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], IntegradorToken.prototype, "dataExpiracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    __metadata("design:type", Boolean)
], IntegradorToken.prototype, "revogado", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], IntegradorToken.prototype, "dataRevogacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], IntegradorToken.prototype, "motivoRevogacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], IntegradorToken.prototype, "ultimoUso", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], IntegradorToken.prototype, "dataCriacao", void 0);
exports.IntegradorToken = IntegradorToken = __decorate([
    (0, typeorm_1.Entity)('integrador_tokens')
], IntegradorToken);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxpbnRlZ3JhZG9yLXRva2VuLmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscUNBQTBHO0FBQzFHLDJEQUFpRDtBQUVqRDs7O0dBR0c7QUFFSSxJQUFNLGVBQWUsR0FBckIsTUFBTSxlQUFlO0lBRTFCLEVBQUUsQ0FBUztJQUlYLFVBQVUsQ0FBYTtJQUd2QixZQUFZLENBQVM7SUFHckIsSUFBSSxDQUFTO0lBR2IsU0FBUyxDQUFTO0lBRWxCLHlFQUF5RTtJQUV6RSxTQUFTLENBQVM7SUFHbEIsT0FBTyxDQUFXO0lBRWxCLG1EQUFtRDtJQUVuRCxhQUFhLENBQU87SUFHcEIsUUFBUSxDQUFVO0lBR2xCLGFBQWEsQ0FBTztJQUdwQixlQUFlLENBQVM7SUFHeEIsU0FBUyxDQUFPO0lBR2hCLFdBQVcsQ0FBTztDQUNuQixDQUFBO0FBMUNZLDBDQUFlO0FBRTFCO0lBREMsSUFBQSxnQ0FBc0IsRUFBQyxNQUFNLENBQUM7OzJDQUNwQjtBQUlYO0lBRkMsSUFBQSxtQkFBUyxFQUFDLEdBQUcsRUFBRSxDQUFDLDhCQUFVLEVBQUUsVUFBVSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ2pGLElBQUEsb0JBQVUsRUFBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQztrREFDMUIsOEJBQVUsb0JBQVYsOEJBQVU7bURBQUM7QUFHdkI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLENBQUM7O3FEQUNiO0FBR3JCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDOzs2Q0FDWDtBQUdiO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7O2tEQUN0QjtBQUlsQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQzs7a0RBQ0w7QUFHbEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7Z0RBQy9CO0FBSWxCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ2pDLElBQUksb0JBQUosSUFBSTtzREFBQztBQUdwQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQzs7aURBQ1Q7QUFHbEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDakMsSUFBSSxvQkFBSixJQUFJO3NEQUFDO0FBR3BCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzt3REFDSDtBQUd4QjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNyQyxJQUFJLG9CQUFKLElBQUk7a0RBQUM7QUFHaEI7SUFEQyxJQUFBLDBCQUFnQixFQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxDQUFDO2tEQUM3QixJQUFJLG9CQUFKLElBQUk7b0RBQUM7MEJBekNQLGVBQWU7SUFEM0IsSUFBQSxnQkFBTSxFQUFDLG1CQUFtQixDQUFDO0dBQ2YsZUFBZSxDQTBDM0IiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxpbnRlZ3JhZG9yLXRva2VuLmVudGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHksIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sIENvbHVtbiwgTWFueVRvT25lLCBKb2luQ29sdW1uLCBDcmVhdGVEYXRlQ29sdW1uIH0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBJbnRlZ3JhZG9yIH0gZnJvbSAnLi9pbnRlZ3JhZG9yLmVudGl0eSc7XG5cbi8qKlxuICogRW50aWRhZGUgcXVlIHJlcHJlc2VudGEgdW0gdG9rZW4gZGUgYWNlc3NvIHBhcmEgdW0gaW50ZWdyYWRvciBlc3BlY8OtZmljby5cbiAqIEFybWF6ZW5hIGluZm9ybWHDp8O1ZXMgc29icmUgbyB0b2tlbiwgc2V1cyBlc2NvcG9zIGRlIHBlcm1pc3PDo28gZSBzdGF0dXMuXG4gKi9cbkBFbnRpdHkoJ2ludGVncmFkb3JfdG9rZW5zJylcbmV4cG9ydCBjbGFzcyBJbnRlZ3JhZG9yVG9rZW4ge1xuICBAUHJpbWFyeUdlbmVyYXRlZENvbHVtbigndXVpZCcpXG4gIGlkOiBzdHJpbmc7XG5cbiAgQE1hbnlUb09uZSgoKSA9PiBJbnRlZ3JhZG9yLCBpbnRlZ3JhZG9yID0+IGludGVncmFkb3IudG9rZW5zLCB7IG51bGxhYmxlOiBmYWxzZSB9KVxuICBASm9pbkNvbHVtbih7IG5hbWU6ICdpbnRlZ3JhZG9yX2lkJyB9KVxuICBpbnRlZ3JhZG9yOiBJbnRlZ3JhZG9yO1xuXG4gIEBDb2x1bW4oeyBuYW1lOiAnaW50ZWdyYWRvcl9pZCcgfSlcbiAgaW50ZWdyYWRvcklkOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7IGxlbmd0aDogMTAwIH0pXG4gIG5vbWU6IHN0cmluZztcblxuICBAQ29sdW1uKHsgbGVuZ3RoOiA1MDAsIG51bGxhYmxlOiB0cnVlIH0pXG4gIGRlc2NyaWNhbzogc3RyaW5nO1xuXG4gIC8vIEFybWF6ZW5hbW9zIGFwZW5hcyBvIGhhc2ggZG8gdG9rZW4gcGFyYSBzZWd1cmFuw6dhLCBudW5jYSBvIHRva2VuIGVtIHNpXG4gIEBDb2x1bW4oeyBsZW5ndGg6IDY0IH0pXG4gIHRva2VuSGFzaDogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAnc2ltcGxlLWFycmF5JywgbnVsbGFibGU6IHRydWUgfSlcbiAgZXNjb3Bvczogc3RyaW5nW107XG5cbiAgLy8gQSBjb2x1bmEgcG9kZSBzZXIgbnVsbCBwYXJhIHRva2VucyBzZW0gZXhwaXJhw6fDo29cbiAgQENvbHVtbih7IHR5cGU6ICd0aW1lc3RhbXB0eicsIG51bGxhYmxlOiB0cnVlIH0pXG4gIGRhdGFFeHBpcmFjYW86IERhdGU7XG5cbiAgQENvbHVtbih7IGRlZmF1bHQ6IGZhbHNlIH0pXG4gIHJldm9nYWRvOiBib29sZWFuO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAndGltZXN0YW1wdHonLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkYXRhUmV2b2dhY2FvOiBEYXRlO1xuXG4gIEBDb2x1bW4oeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBtb3Rpdm9SZXZvZ2FjYW86IHN0cmluZztcblxuICBAQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcHR6JywgbnVsbGFibGU6IHRydWUgfSlcbiAgdWx0aW1vVXNvOiBEYXRlO1xuXG4gIEBDcmVhdGVEYXRlQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcHR6JyB9KVxuICBkYXRhQ3JpYWNhbzogRGF0ZTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==