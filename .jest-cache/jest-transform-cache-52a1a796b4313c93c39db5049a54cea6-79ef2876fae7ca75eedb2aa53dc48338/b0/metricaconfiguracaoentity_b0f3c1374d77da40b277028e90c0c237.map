{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\metrica-configuracao.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\metrica-configuracao.entity.ts"],"sourcesContent":["import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { MetricaDefinicao } from './metrica-definicao.entity';\n\n/**\n * Tipos de agendamento de coleta de métricas\n */\nexport enum TipoAgendamento {\n  /** Intervalo fixo em segundos */\n  INTERVALO = 'intervalo',\n\n  /** Expressão cron para agendamento mais complexo */\n  CRON = 'cron',\n\n  /** Coleta baseada em eventos específicos */\n  EVENTO = 'evento',\n\n  /** Coleta manual via API */\n  MANUAL = 'manual',\n}\n\n/**\n * Estratégias de amostragem para coleta de dados\n */\nexport enum EstrategiaAmostragem {\n  /** Coleta todos os dados disponíveis */\n  COMPLETA = 'completa',\n\n  /** Amostragem aleatória */\n  ALEATORIA = 'aleatoria',\n\n  /** Amostragem sistemática (a cada N registros) */\n  SISTEMATICA = 'sistematica',\n\n  /** Amostragem estratificada por dimensão */\n  ESTRATIFICADA = 'estratificada',\n}\n\n/**\n * Configuração para coleta, armazenamento e exibição de uma métrica\n *\n * Esta entidade permite configurar como uma métrica será coletada,\n * processada, armazenada e exibida no sistema.\n */\n@Entity('metrica_configuracao')\n@Index(['metrica_id'])\nexport class MetricaConfiguracao {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Referência para a definição da métrica\n   */\n  @Column({ type: 'uuid' })\n  metrica_id: string;\n\n  /**\n   * Relacionamento com a definição da métrica\n   *\n   * Usando lazy loading para evitar dependências circulares\n   */\n  @ManyToOne(() => MetricaDefinicao, (definicao) => definicao.configuracoes, {\n    onDelete: 'CASCADE',\n    lazy: true,\n  })\n  @JoinColumn({ name: 'metrica_id' })\n  metrica: Promise<MetricaDefinicao>;\n\n  /**\n   * Habilita ou desabilita a coleta automática\n   */\n  @Column({ default: true })\n  coleta_automatica: boolean;\n\n  /**\n   * Tipo de agendamento para coleta automática\n   */\n  @Column({\n    type: 'enum',\n    enum: TipoAgendamento,\n    enumName: 'tipo_agendamento',\n    default: TipoAgendamento.INTERVALO,\n  })\n  tipo_agendamento: TipoAgendamento;\n\n  /**\n   * Valor do intervalo de coleta em segundos (para tipo INTERVALO)\n   */\n  @Column({ default: 86400 }) // Padrão: 1 dia\n  intervalo_segundos: number;\n\n  /**\n   * Expressão cron para agendamento complexo (para tipo CRON)\n   * Exemplo: '0 0 * * *' (diariamente à meia-noite)\n   */\n  @Column({ length: 100, nullable: true })\n  expressao_cron: string;\n\n  /**\n   * Nome do evento que dispara a coleta (para tipo EVENTO)\n   * Exemplo: 'beneficio_aprovado', 'usuario_cadastrado'\n   */\n  @Column({ length: 100, nullable: true })\n  nome_evento: string;\n\n  /**\n   * Número máximo de snapshots a serem mantidos\n   * (0 = sem limite, mantém todo o histórico)\n   */\n  @Column({ default: 0 })\n  max_snapshots: number;\n\n  /**\n   * Período máximo de retenção em dias\n   * (0 = sem limite, mantém todo o histórico)\n   */\n  @Column({ default: 365 })\n  periodo_retencao_dias: number;\n\n  /**\n   * Estratégia de amostragem para coleta de dados\n   */\n  @Column({\n    type: 'enum',\n    enum: EstrategiaAmostragem,\n    enumName: 'estrategia_amostragem',\n    default: EstrategiaAmostragem.COMPLETA,\n  })\n  estrategia_amostragem: EstrategiaAmostragem;\n\n  /**\n   * Tamanho da amostra (quando aplicável)\n   */\n  @Column({ default: 0 })\n  tamanho_amostra: number;\n\n  /**\n   * Habilita ou desabilita o cacheamento dos valores\n   */\n  @Column({ default: true })\n  cacheamento_habilitado: boolean;\n\n  /**\n   * Tempo de vida do cache em segundos\n   */\n  @Column({ default: 300 }) // Padrão: 5 minutos\n  cache_ttl: number;\n\n  /**\n   * Configurações de alertas baseados no valor da métrica\n   * Exemplo: [\n   *   { \"tipo\": \"valor_maximo\", \"valor\": 100, \"mensagem\": \"Valor excedeu o limite\", \"severidade\": \"alta\" },\n   *   { \"tipo\": \"valor_minimo\", \"valor\": 10, \"mensagem\": \"Valor abaixo do mínimo\", \"severidade\": \"media\" }\n   * ]\n   */\n  @Column({ type: 'jsonb', nullable: true })\n  alertas: any[];\n\n  /**\n   * Configurações de visualização\n   * Exemplo: { \"cor\": \"#FF5500\", \"icone\": \"chart-line\", \"destaque\": true }\n   */\n  @Column({ type: 'jsonb', nullable: true })\n  visualizacao: Record<string, any>;\n\n  /**\n   * Flag que indica se a métrica deve ser exibida em dashboards\n   */\n  @Column({ default: true })\n  exibir_dashboard: boolean;\n\n  /**\n   * Prioridade de exibição (ordem) no dashboard (menor = mais importante)\n   */\n  @Column({ default: 100 })\n  prioridade_dashboard: number;\n\n  /**\n   * Usuário que criou a configuração\n   */\n  @Column({ length: 100, nullable: true })\n  criado_por: string;\n\n  /**\n   * Usuário que atualizou a configuração pela última vez\n   */\n  @Column({ length: 100, nullable: true })\n  atualizado_por: string;\n\n  /**\n   * Data de criação do registro\n   */\n  @CreateDateColumn()\n  created_at: Date;\n\n  /**\n   * Data da última atualização do registro\n   */\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n"],"version":3}