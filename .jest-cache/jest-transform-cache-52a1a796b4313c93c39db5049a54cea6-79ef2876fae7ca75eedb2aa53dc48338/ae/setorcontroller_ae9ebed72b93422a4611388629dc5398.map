{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\unidade\\controllers\\setor.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\unidade\\controllers\\setor.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  ParseUUIDPipe,\n  UseGuards,\n  Logger,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { SetorService } from '../services/setor.service';\nimport { CreateSetorDto } from '../dto/create-setor.dto';\nimport { UpdateSetorDto } from '../dto/update-setor.dto';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../../../auth/guards/roles.guard';\nimport { Roles } from '../../../auth/decorators/role.decorator';\nimport { ROLES } from '../../../shared/constants/roles.constants';\nimport { RequiresPermission } from '@/auth/decorators/requires-permission.decorator';\nimport { ScopeType } from '@/entities/user-permission.entity';\n\n/**\n * Controlador de setores\n *\n * Responsável por gerenciar as rotas relacionadas a setores dentro das unidades\n */\n@ApiTags('Unidades')\n@Controller('setor')\n@UseGuards(JwtAuthGuard, RolesGuard)\n@ApiBearerAuth()\nexport class SetorController {\n  private readonly logger = new Logger(SetorController.name);\n\n  constructor(private readonly setorService: SetorService) {}\n\n  /**\n   * Cria um novo setor\n   */\n  @Post()\n  @RequiresPermission({\n    permissionName: 'setor.criar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Criar novo setor' })\n  @ApiResponse({ status: 201, description: 'Setor criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 404, description: 'Unidade não encontrada' })\n  async create(@Body() createSetorDto: CreateSetorDto) {\n    this.logger.log(\n      'Dados recebidos para criação de setor:',\n      JSON.stringify(createSetorDto, null, 2),\n    );\n    const result = await this.setorService.create(createSetorDto);\n    this.logger.log(\n      'Setor criado com sucesso:',\n      JSON.stringify(result, null, 2),\n    );\n    return result;\n  }\n\n  /**\n   * Atualiza um setor existente\n   */\n  @Put(':id')\n  @RequiresPermission({\n    permissionName: 'setor.atualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Atualizar setor existente' })\n  @ApiResponse({ status: 200, description: 'Setor atualizado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 404, description: 'Setor não encontrado' })\n  async update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateSetorDto: UpdateSetorDto,\n  ) {\n    return this.setorService.update(id, updateSetorDto);\n  }\n\n  /**\n   * Obtém detalhes de um setor específico\n   */\n  @Get(':id')\n  @RequiresPermission({\n    permissionName: 'setor.listar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Obter detalhes de um setor' })\n  @ApiResponse({ status: 200, description: 'Setor encontrado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Setor não encontrado' })\n  async findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.setorService.findById(id);\n  }\n}\n"],"version":3}