{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\pagamento\\decorators\\pagamento-access.decorator.ts","mappings":";;;AAAA,2CAA6C;AAC7C,6EAA4E;AAE5E;;;;;;;;;GASG;AACI,MAAM,gBAAgB,GAAG,CAAC,GAAG,MAAgB,EAAE,EAAE,CAAC,IAAA,oBAAW,EAAC,mCAAU,EAAE,MAAM,CAAC,CAAC;AAA5E,QAAA,gBAAgB,oBAA4D;AAEzF;;;;;;;;;GASG;AACI,MAAM,gBAAgB,GAAG,CAAC,YAAqB,IAAI,EAAE,EAAE,CAAC,IAAA,oBAAW,EAAC,qCAAY,EAAE,SAAS,CAAC,CAAC;AAAvF,QAAA,gBAAgB,oBAAuE;AAEpG;;;;;;;;GAQG;AACI,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC,IAAA,wBAAgB,EAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AAA7D,QAAA,WAAW,eAAkD;AAE1E;;;;;;;;GAQG;AACI,MAAM,eAAe,GAAG,GAAG,EAAE,CAAC,IAAA,wBAAgB,EAAC,UAAU,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;AAA7E,QAAA,eAAe,mBAA8D;AAE1F;;;;;;;;GAQG;AACI,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,IAAA,wBAAgB,EAAC,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;AAA3E,QAAA,cAAc,kBAA6D","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\pagamento\\decorators\\pagamento-access.decorator.ts"],"sourcesContent":["import { SetMetadata } from '@nestjs/common';\nimport { PERFIS_KEY, UNIDADES_KEY } from '../guards/pagamento-access.guard';\n\n/**\n * Decorador para definir perfis permitidos para acessar um endpoint\n * \n * @param perfis Lista de perfis permitidos\n * @returns Decorador para aplicar em controllers ou métodos\n * \n * @example\n * @PerfisPermitidos('admin', 'operador')\n * async findAll() { ... }\n */\nexport const PerfisPermitidos = (...perfis: string[]) => SetMetadata(PERFIS_KEY, perfis);\n\n/**\n * Decorador para definir se deve verificar a unidade do usuário\n * \n * @param verificar Se deve verificar a unidade\n * @returns Decorador para aplicar em controllers ou métodos\n * \n * @example\n * @VerificarUnidade(true)\n * async findOne(@Param('id') id: string) { ... }\n */\nexport const VerificarUnidade = (verificar: boolean = true) => SetMetadata(UNIDADES_KEY, verificar);\n\n/**\n * Decorador para definir acesso apenas para administradores\n * \n * @returns Decorador para aplicar em controllers ou métodos\n * \n * @example\n * @ApenasAdmin()\n * async remove(@Param('id') id: string) { ... }\n */\nexport const ApenasAdmin = () => PerfisPermitidos('admin', 'super_admin');\n\n/**\n * Decorador para definir acesso apenas para operadores e administradores\n * \n * @returns Decorador para aplicar em controllers ou métodos\n * \n * @example\n * @OperadorOuAdmin()\n * async update(@Param('id') id: string, @Body() updateDto: UpdateDto) { ... }\n */\nexport const OperadorOuAdmin = () => PerfisPermitidos('operador', 'admin', 'super_admin');\n\n/**\n * Decorador para definir acesso apenas para auditores e administradores\n * \n * @returns Decorador para aplicar em controllers ou métodos\n * \n * @example\n * @AuditorOuAdmin()\n * async getLogs() { ... }\n */\nexport const AuditorOuAdmin = () => PerfisPermitidos('auditor', 'admin', 'super_admin');\n"],"version":3}