{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\auditoria\\auditoria.module.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\auditoria\\auditoria.module.ts"],"sourcesContent":["import {\n  Global,\n  Module,\n  NestModule,\n  MiddlewareConsumer,\n  RequestMethod,\n  Logger,\n  forwardRef,\n} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BullModule } from '@nestjs/bull';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ScheduleAdapterModule } from '../../shared/schedule/schedule-adapter.module';\nimport { AuthModule } from '../../auth/auth.module';\n\n// Entidades\nimport { LogAuditoria } from '../../entities';\n\n// Serviços Core\nimport { AuditoriaService } from './services/auditoria.service';\nimport { AuditoriaQueueService } from './services/auditoria-queue.service';\nimport { AuditoriaQueueProcessor } from './services/auditoria-queue.processor';\n\n// Serviços Especializados\nimport { AuditoriaSignatureService } from './services/auditoria-signature.service';\nimport { AuditoriaExportacaoService } from './services/auditoria-exportacao.service';\nimport { AuditoriaMonitoramentoService } from './services/auditoria-monitoramento.service';\n\n// Controladores\nimport { AuditoriaController } from './controllers/auditoria.controller';\nimport { AuditoriaExportacaoController } from './controllers/auditoria-exportacao.controller';\nimport { AuditoriaMonitoramentoController } from './controllers/auditoria-monitoramento.controller';\n\n// Middleware\nimport { AuditoriaMiddleware } from './middlewares/auditoria.middleware';\n\n// Repositórios\nimport { LogAuditoriaRepository } from './repositories/log-auditoria.repository';\n\n/**\n * Módulo de Auditoria Unificado\n *\n * Responsável por registrar e gerenciar logs de auditoria do sistema,\n * garantindo a rastreabilidade das operações e compliance com LGPD.\n *\n * Funcionalidades:\n * - Registro automático de operações via middleware e interceptores\n * - Proteção contra tampering usando assinaturas JWT\n * - Compressão de dados para otimização de espaço\n * - Particionamento de tabelas para melhor performance\n * - Exportação de logs em diferentes formatos\n * - Monitoramento de performance e integridade\n * - Processamento assíncrono via filas\n *\n * Este módulo é global e deve ser importado apenas pelo módulo principal (AppModule).\n * Os serviços são exportados para serem usados em qualquer outro módulo sem necessidade de reimportação.\n */\n@Global()\n@Module({\n  imports: [\n    // Configuração do TypeORM para entidades do módulo\n    TypeOrmModule.forFeature([LogAuditoria]),\n\n    // Configuração assíncrona do BullModule\n    BullModule.registerQueueAsync({\n      name: 'auditoria',\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        redis: {\n          host: configService.get<string>('REDIS_HOST', 'localhost'),\n          port: configService.get<number>('REDIS_PORT', 6379),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    // Módulo de agendamento de tarefas\n    ScheduleAdapterModule,\n\n    // Módulo de autenticação (para JwtAuthGuard e JwtBlacklistService)\n    forwardRef(() => AuthModule),\n\n    // Configuração assíncrona do JwtModule\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get<string>('JWT_SECRET'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [\n    AuditoriaController,\n    AuditoriaExportacaoController,\n    AuditoriaMonitoramentoController,\n  ],\n  providers: [\n    // Serviços Core\n    AuditoriaService,\n    AuditoriaQueueService,\n    AuditoriaQueueProcessor,\n\n    // Repositórios\n    LogAuditoriaRepository,\n\n    // Serviços Especializados\n    AuditoriaSignatureService,\n    AuditoriaExportacaoService,\n    AuditoriaMonitoramentoService,\n  ],\n  exports: [\n    // Exporta os serviços principais para uso em outros módulos\n    AuditoriaService,\n    AuditoriaQueueService,\n    LogAuditoriaRepository,\n    AuditoriaSignatureService,\n  ],\n})\nexport class AuditoriaModule implements NestModule {\n  private readonly logger = new Logger(AuditoriaModule.name);\n  /**\n   * Configura o middleware de auditoria para todas as rotas da API\n   * Restaurado com tratamento de erros\n   */\n  configure(consumer: MiddlewareConsumer) {\n    try {\n      consumer\n        .apply(AuditoriaMiddleware)\n        .exclude(\n          { path: 'health', method: RequestMethod.ALL },\n          { path: 'metrics', method: RequestMethod.ALL },\n          { path: 'api-docs', method: RequestMethod.ALL },\n          { path: 'auditoria/monitoramento', method: RequestMethod.ALL }, // Evitar recursão\n        )\n        .forRoutes({ path: '*', method: RequestMethod.ALL });\n\n      this.logger.log('Middleware de auditoria configurado com sucesso');\n    } catch (error) {\n      this.logger.error(\n        `Erro ao configurar middleware de auditoria: ${error.message}`,\n      );\n      // Não propagar erro para não bloquear a inicialização da aplicação\n    }\n  }\n}\n"],"version":3}