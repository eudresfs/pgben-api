4d908f3c3e8edaa7cff4b0227d8a2fad
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Template = void 0;
const typeorm_1 = require("typeorm");
const enums_1 = require("../enums");
/**
 * Entidade que representa um template do sistema.
 * Os templates são utilizados para gerar conteúdo dinâmico para emails,
 * notificações e documentos com base em dados variáveis.
 */
let Template = class Template {
    id;
    /**
     * Código único que identifica o template.
     * Usado para referenciar o template em outros módulos.
     */
    codigo;
    /**
     * Nome descritivo do template.
     */
    nome;
    /**
     * Tipo do template, que determina seu contexto de uso.
     */
    tipo;
    /**
     * Assunto do template, utilizado principalmente para emails.
     */
    assunto;
    /**
     * Conteúdo do template em formato HTML ou texto com placeholders.
     * Os placeholders são substituídos durante a renderização.
     */
    conteudo;
    /**
     * Lista de variáveis disponíveis para substituição no template.
     * Armazenada como JSON.
     */
    variaveis;
    /**
     * Status ativo/inativo do template.
     */
    ativo;
    /**
     * Data de criação do template.
     */
    created_at;
    /**
     * Data da última atualização do template.
     */
    updated_at;
    /**
     * ID do usuário que realizou a última atualização.
     */
    updated_by;
};
exports.Template = Template;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Template.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100, unique: true }),
    (0, typeorm_1.Index)('idx_template_codigo'),
    __metadata("design:type", String)
], Template.prototype, "codigo", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 200 }),
    __metadata("design:type", String)
], Template.prototype, "nome", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: enums_1.TemplateTipoEnum,
    }),
    (0, typeorm_1.Index)('idx_template_tipo'),
    __metadata("design:type", typeof (_a = typeof enums_1.TemplateTipoEnum !== "undefined" && enums_1.TemplateTipoEnum) === "function" ? _a : Object)
], Template.prototype, "tipo", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 200, nullable: true }),
    __metadata("design:type", String)
], Template.prototype, "assunto", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text' }),
    __metadata("design:type", String)
], Template.prototype, "conteudo", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', default: '[]' }),
    __metadata("design:type", Array)
], Template.prototype, "variaveis", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'boolean', default: true }),
    __metadata("design:type", Boolean)
], Template.prototype, "ativo", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ type: 'timestamp' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Template.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({ type: 'timestamp' }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], Template.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], Template.prototype, "updated_by", void 0);
exports.Template = Template = __decorate([
    (0, typeorm_1.Entity)('configuracao_template')
], Template);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFx0ZW1wbGF0ZS5lbnRpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFDQU9pQjtBQUNqQixvQ0FBNEM7QUFFNUM7Ozs7R0FJRztBQUVJLElBQU0sUUFBUSxHQUFkLE1BQU0sUUFBUTtJQUVuQixFQUFFLENBQVM7SUFFWDs7O09BR0c7SUFHSCxNQUFNLENBQVM7SUFFZjs7T0FFRztJQUVILElBQUksQ0FBUztJQUViOztPQUVHO0lBTUgsSUFBSSxDQUFtQjtJQUV2Qjs7T0FFRztJQUVILE9BQU8sQ0FBVTtJQUVqQjs7O09BR0c7SUFFSCxRQUFRLENBQVM7SUFFakI7OztPQUdHO0lBRUgsU0FBUyxDQUFXO0lBRXBCOztPQUVHO0lBRUgsS0FBSyxDQUFVO0lBRWY7O09BRUc7SUFFSCxVQUFVLENBQU87SUFFakI7O09BRUc7SUFFSCxVQUFVLENBQU87SUFFakI7O09BRUc7SUFFSCxVQUFVLENBQVM7Q0FDcEIsQ0FBQTtBQXZFWSw0QkFBUTtBQUVuQjtJQURDLElBQUEsZ0NBQXNCLEVBQUMsTUFBTSxDQUFDOztvQ0FDcEI7QUFRWDtJQUZDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdEQsSUFBQSxlQUFLLEVBQUMscUJBQXFCLENBQUM7O3dDQUNkO0FBTWY7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7c0NBQzVCO0FBVWI7SUFMQyxJQUFBLGdCQUFNLEVBQUM7UUFDTixJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSx3QkFBZ0I7S0FDdkIsQ0FBQztJQUNELElBQUEsZUFBSyxFQUFDLG1CQUFtQixDQUFDO2tEQUNyQix3QkFBZ0Isb0JBQWhCLHdCQUFnQjtzQ0FBQztBQU12QjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7O3lDQUN4QztBQU9qQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQzs7MENBQ1I7QUFPakI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQzs7MkNBQ3JCO0FBTXBCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7O3VDQUM1QjtBQU1mO0lBREMsSUFBQSwwQkFBZ0IsRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsQ0FBQztrREFDNUIsSUFBSSxvQkFBSixJQUFJOzRDQUFDO0FBTWpCO0lBREMsSUFBQSwwQkFBZ0IsRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsQ0FBQztrREFDNUIsSUFBSSxvQkFBSixJQUFJOzRDQUFDO0FBTWpCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7OzRDQUN0QjttQkF0RVIsUUFBUTtJQURwQixJQUFBLGdCQUFNLEVBQUMsdUJBQXVCLENBQUM7R0FDbkIsUUFBUSxDQXVFcEIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFx0ZW1wbGF0ZS5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRW50aXR5LFxuICBDb2x1bW4sXG4gIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sXG4gIENyZWF0ZURhdGVDb2x1bW4sXG4gIFVwZGF0ZURhdGVDb2x1bW4sXG4gIEluZGV4LFxufSBmcm9tICd0eXBlb3JtJztcbmltcG9ydCB7IFRlbXBsYXRlVGlwb0VudW0gfSBmcm9tICcuLi9lbnVtcyc7XG5cbi8qKlxuICogRW50aWRhZGUgcXVlIHJlcHJlc2VudGEgdW0gdGVtcGxhdGUgZG8gc2lzdGVtYS5cbiAqIE9zIHRlbXBsYXRlcyBzw6NvIHV0aWxpemFkb3MgcGFyYSBnZXJhciBjb250ZcO6ZG8gZGluw6JtaWNvIHBhcmEgZW1haWxzLFxuICogbm90aWZpY2HDp8O1ZXMgZSBkb2N1bWVudG9zIGNvbSBiYXNlIGVtIGRhZG9zIHZhcmnDoXZlaXMuXG4gKi9cbkBFbnRpdHkoJ2NvbmZpZ3VyYWNhb190ZW1wbGF0ZScpXG5leHBvcnQgY2xhc3MgVGVtcGxhdGUge1xuICBAUHJpbWFyeUdlbmVyYXRlZENvbHVtbigndXVpZCcpXG4gIGlkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEPDs2RpZ28gw7puaWNvIHF1ZSBpZGVudGlmaWNhIG8gdGVtcGxhdGUuXG4gICAqIFVzYWRvIHBhcmEgcmVmZXJlbmNpYXIgbyB0ZW1wbGF0ZSBlbSBvdXRyb3MgbcOzZHVsb3MuXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3ZhcmNoYXInLCBsZW5ndGg6IDEwMCwgdW5pcXVlOiB0cnVlIH0pXG4gIEBJbmRleCgnaWR4X3RlbXBsYXRlX2NvZGlnbycpXG4gIGNvZGlnbzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBOb21lIGRlc2NyaXRpdm8gZG8gdGVtcGxhdGUuXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3ZhcmNoYXInLCBsZW5ndGg6IDIwMCB9KVxuICBub21lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRpcG8gZG8gdGVtcGxhdGUsIHF1ZSBkZXRlcm1pbmEgc2V1IGNvbnRleHRvIGRlIHVzby5cbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICdlbnVtJyxcbiAgICBlbnVtOiBUZW1wbGF0ZVRpcG9FbnVtLFxuICB9KVxuICBASW5kZXgoJ2lkeF90ZW1wbGF0ZV90aXBvJylcbiAgdGlwbzogVGVtcGxhdGVUaXBvRW51bTtcblxuICAvKipcbiAgICogQXNzdW50byBkbyB0ZW1wbGF0ZSwgdXRpbGl6YWRvIHByaW5jaXBhbG1lbnRlIHBhcmEgZW1haWxzLlxuICAgKi9cbiAgQENvbHVtbih7IHR5cGU6ICd2YXJjaGFyJywgbGVuZ3RoOiAyMDAsIG51bGxhYmxlOiB0cnVlIH0pXG4gIGFzc3VudG8/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENvbnRlw7pkbyBkbyB0ZW1wbGF0ZSBlbSBmb3JtYXRvIEhUTUwgb3UgdGV4dG8gY29tIHBsYWNlaG9sZGVycy5cbiAgICogT3MgcGxhY2Vob2xkZXJzIHPDo28gc3Vic3RpdHXDrWRvcyBkdXJhbnRlIGEgcmVuZGVyaXphw6fDo28uXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3RleHQnIH0pXG4gIGNvbnRldWRvOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExpc3RhIGRlIHZhcmnDoXZlaXMgZGlzcG9uw612ZWlzIHBhcmEgc3Vic3RpdHVpw6fDo28gbm8gdGVtcGxhdGUuXG4gICAqIEFybWF6ZW5hZGEgY29tbyBKU09OLlxuICAgKi9cbiAgQENvbHVtbih7IHR5cGU6ICdqc29uYicsIGRlZmF1bHQ6ICdbXScgfSlcbiAgdmFyaWF2ZWlzOiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogU3RhdHVzIGF0aXZvL2luYXRpdm8gZG8gdGVtcGxhdGUuXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ2Jvb2xlYW4nLCBkZWZhdWx0OiB0cnVlIH0pXG4gIGF0aXZvOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBEYXRhIGRlIGNyaWHDp8OjbyBkbyB0ZW1wbGF0ZS5cbiAgICovXG4gIEBDcmVhdGVEYXRlQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcCcgfSlcbiAgY3JlYXRlZF9hdDogRGF0ZTtcblxuICAvKipcbiAgICogRGF0YSBkYSDDumx0aW1hIGF0dWFsaXphw6fDo28gZG8gdGVtcGxhdGUuXG4gICAqL1xuICBAVXBkYXRlRGF0ZUNvbHVtbih7IHR5cGU6ICd0aW1lc3RhbXAnIH0pXG4gIHVwZGF0ZWRfYXQ6IERhdGU7XG5cbiAgLyoqXG4gICAqIElEIGRvIHVzdcOhcmlvIHF1ZSByZWFsaXpvdSBhIMO6bHRpbWEgYXR1YWxpemHDp8Ojby5cbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAndXVpZCcsIG51bGxhYmxlOiB0cnVlIH0pXG4gIHVwZGF0ZWRfYnk6IHN0cmluZztcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==