{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\create-campo-dinamico.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\create-campo-dinamico.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsEnum,\n  IsBoolean,\n  IsOptional,\n  IsNumber,\n  Min,\n  ValidateNested,\n  IsObject,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { TipoDado } from '../../../entities/campo-dinamico-beneficio.entity';\n\n/**\n * DTO para validações de campos dinâmicos\n */\nexport class ValidacoesCampoDinamicoDto {\n  @ApiPropertyOptional({\n    description:\n      'Valor mínimo para campos numéricos ou tamanho mínimo para strings e arrays',\n  })\n  @IsOptional()\n  @IsNumber({}, { message: 'Valor mínimo deve ser um número' })\n  minLength?: number;\n\n  @ApiPropertyOptional({\n    description:\n      'Valor máximo para campos numéricos ou tamanho máximo para strings e arrays',\n  })\n  @IsOptional()\n  @IsNumber({}, { message: 'Valor máximo deve ser um número' })\n  maxLength?: number;\n\n  @ApiPropertyOptional({\n    description:\n      'Valor mínimo para campos numéricos ou data mínima para campos de data',\n  })\n  @IsOptional()\n  min?: number | string;\n\n  @ApiPropertyOptional({\n    description:\n      'Valor máximo para campos numéricos ou data máxima para campos de data',\n  })\n  @IsOptional()\n  max?: number | string;\n\n  @ApiPropertyOptional({\n    description: 'Expressão regular para validação de strings',\n  })\n  @IsOptional()\n  @IsString({ message: 'Padrão deve ser uma string' })\n  pattern?: string;\n\n  @ApiPropertyOptional({\n    description: 'Lista de valores permitidos para o campo',\n  })\n  @IsOptional()\n  enum?: string[];\n\n  @ApiPropertyOptional({\n    description: 'Formato específico para validação (ex: email, cpf, cep)',\n  })\n  @IsOptional()\n  @IsString({ message: 'Formato deve ser uma string' })\n  format?: string;\n}\n\n/**\n * DTO para criação de campo dinâmico\n */\nexport class CreateCampoDinamicoDto {\n  @ApiProperty({\n    description: 'Label do campo (texto exibido para o usuário)',\n    example: 'CPF do Beneficiário',\n  })\n  @IsNotEmpty({ message: 'Label é obrigatório' })\n  @IsString({ message: 'Label deve ser um texto' })\n  label: string;\n\n  @ApiProperty({\n    description: 'Nome do campo (identificador usado no código)',\n    example: 'cpf_beneficiario',\n  })\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  @IsString({ message: 'Nome deve ser um texto' })\n  nome: string;\n\n  @ApiProperty({\n    description: 'Tipo de dado do campo',\n    enum: TipoDado,\n    example: TipoDado.STRING,\n  })\n  @IsNotEmpty({ message: 'Tipo é obrigatório' })\n  @IsEnum(TipoDado, { message: 'Tipo inválido' })\n  tipo: TipoDado;\n\n  @ApiProperty({\n    description: 'Indica se o campo é obrigatório',\n    default: false,\n  })\n  @IsBoolean({ message: 'Obrigatório deve ser um booleano' })\n  obrigatorio: boolean;\n\n  @ApiPropertyOptional({ description: 'Descrição detalhada do campo' })\n  @IsOptional()\n  @IsString({ message: 'Descrição deve ser um texto' })\n  descricao?: string;\n\n  @ApiPropertyOptional({ description: 'Validações específicas para o campo' })\n  @IsOptional()\n  @IsObject({ message: 'Validações deve ser um objeto' })\n  @ValidateNested()\n  @Type(() => ValidacoesCampoDinamicoDto)\n  validacoes?: ValidacoesCampoDinamicoDto;\n\n  @ApiPropertyOptional({\n    description: 'Ordem de exibição do campo',\n    default: 1,\n  })\n  @IsOptional()\n  @IsNumber({}, { message: 'Ordem deve ser um número' })\n  @Min(1, { message: 'Ordem deve ser maior que zero' })\n  ordem?: number;\n\n  @ApiPropertyOptional({\n    description: 'Indica se o campo está ativo',\n    default: true,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'Ativo deve ser um booleano' })\n  ativo?: boolean;\n}\n"],"version":3}