1ae22f5af4447536eb6483e20a18f1cb
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversaoPapelResponseDto = exports.ConversaoParaComposicaoFamiliarDto = exports.DadosComposicaoFamiliarDto = exports.ConversaoParaBeneficiarioDto = exports.DadosCidadaoDto = void 0;
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const cpf_validator_1 = require("../validators/cpf-validator");
const parentesco_enum_1 = require("../../../enums/parentesco.enum");
const escolaridade_enum_1 = require("../../../enums/escolaridade.enum");
const sexo_enum_1 = require("../../../enums/sexo.enum");
/**
 * DTO para dados básicos do cidadão
 */
class DadosCidadaoDto {
    nome;
    rg;
    nis;
    email;
    telefone;
    data_nascimento;
    sexo;
    endereco;
}
exports.DadosCidadaoDto = DadosCidadaoDto;
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "nome", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'RG deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "rg", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'NIS deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "nis", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Email deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "email", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Telefone deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "telefone", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Data de nascimento deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "data_nascimento", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Sexo deve ser uma string' }),
    __metadata("design:type", typeof (_a = typeof sexo_enum_1.Sexo !== "undefined" && sexo_enum_1.Sexo) === "function" ? _a : Object)
], DadosCidadaoDto.prototype, "sexo", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Endereço deve ser uma string' }),
    __metadata("design:type", String)
], DadosCidadaoDto.prototype, "endereco", void 0);
/**
 * DTO para conversão de membro de composição familiar para cidadão beneficiário
 */
class ConversaoParaBeneficiarioDto {
    cpf;
    justificativa;
    dados_cidadao;
}
exports.ConversaoParaBeneficiarioDto = ConversaoParaBeneficiarioDto;
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'CPF é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'CPF deve ser uma string' }),
    (0, class_validator_1.Length)(11, 14, { message: 'CPF deve ter entre 11 e 14 caracteres' }),
    (0, class_validator_1.Validate)(cpf_validator_1.CPFValidator, { message: 'CPF inválido' }),
    __metadata("design:type", String)
], ConversaoParaBeneficiarioDto.prototype, "cpf", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Justificativa é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Justificativa deve ser uma string' }),
    __metadata("design:type", String)
], ConversaoParaBeneficiarioDto.prototype, "justificativa", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Dados do cidadão são obrigatórios' }),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => DadosCidadaoDto),
    __metadata("design:type", DadosCidadaoDto)
], ConversaoParaBeneficiarioDto.prototype, "dados_cidadao", void 0);
/**
 * DTO para dados de composição familiar
 */
class DadosComposicaoFamiliarDto {
    nome;
    nis;
    idade;
    ocupacao;
    escolaridade;
    parentesco;
    renda;
    observacoes;
}
exports.DadosComposicaoFamiliarDto = DadosComposicaoFamiliarDto;
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    __metadata("design:type", String)
], DadosComposicaoFamiliarDto.prototype, "nome", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'NIS deve ser uma string' }),
    __metadata("design:type", String)
], DadosComposicaoFamiliarDto.prototype, "nis", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Idade é obrigatória' }),
    (0, class_validator_1.IsNumber)({}, { message: 'Idade deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Idade não pode ser negativa' }),
    __metadata("design:type", Number)
], DadosComposicaoFamiliarDto.prototype, "idade", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Ocupação é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Ocupação deve ser uma string' }),
    __metadata("design:type", String)
], DadosComposicaoFamiliarDto.prototype, "ocupacao", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Escolaridade é obrigatória' }),
    (0, class_validator_1.IsEnum)(escolaridade_enum_1.EscolaridadeEnum, { message: 'Escolaridade inválida' }),
    __metadata("design:type", typeof (_b = typeof escolaridade_enum_1.EscolaridadeEnum !== "undefined" && escolaridade_enum_1.EscolaridadeEnum) === "function" ? _b : Object)
], DadosComposicaoFamiliarDto.prototype, "escolaridade", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Parentesco é obrigatório' }),
    (0, class_validator_1.IsEnum)(parentesco_enum_1.ParentescoEnum, { message: 'Parentesco inválido' }),
    __metadata("design:type", typeof (_c = typeof parentesco_enum_1.ParentescoEnum !== "undefined" && parentesco_enum_1.ParentescoEnum) === "function" ? _c : Object)
], DadosComposicaoFamiliarDto.prototype, "parentesco", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Renda deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Renda não pode ser negativa' }),
    __metadata("design:type", Number)
], DadosComposicaoFamiliarDto.prototype, "renda", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Observações devem ser uma string' }),
    __metadata("design:type", String)
], DadosComposicaoFamiliarDto.prototype, "observacoes", void 0);
/**
 * DTO para conversão de papel para composição familiar
 */
class ConversaoParaComposicaoFamiliarDto {
    cpf;
    cidadao_alvo_id;
    dados_composicao;
    justificativa;
    tecnico_notificado_id;
}
exports.ConversaoParaComposicaoFamiliarDto = ConversaoParaComposicaoFamiliarDto;
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'CPF é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'CPF deve ser uma string' }),
    (0, class_validator_1.Length)(11, 14, { message: 'CPF deve ter entre 11 e 14 caracteres' }),
    (0, class_validator_1.Validate)(cpf_validator_1.CPFValidator, { message: 'CPF inválido' }),
    __metadata("design:type", String)
], ConversaoParaComposicaoFamiliarDto.prototype, "cpf", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'ID do cidadão alvo é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do cidadão alvo inválido' }),
    __metadata("design:type", String)
], ConversaoParaComposicaoFamiliarDto.prototype, "cidadao_alvo_id", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Dados da composição familiar são obrigatórios' }),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => DadosComposicaoFamiliarDto),
    __metadata("design:type", DadosComposicaoFamiliarDto)
], ConversaoParaComposicaoFamiliarDto.prototype, "dados_composicao", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Justificativa é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Justificativa deve ser uma string' }),
    __metadata("design:type", String)
], ConversaoParaComposicaoFamiliarDto.prototype, "justificativa", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do técnico notificado inválido' }),
    __metadata("design:type", String)
], ConversaoParaComposicaoFamiliarDto.prototype, "tecnico_notificado_id", void 0);
/**
 * DTO para resposta de conversão de papel
 */
class ConversaoPapelResponseDto {
    sucesso;
    mensagem;
    historicoId;
}
exports.ConversaoPapelResponseDto = ConversaoPapelResponseDto;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,