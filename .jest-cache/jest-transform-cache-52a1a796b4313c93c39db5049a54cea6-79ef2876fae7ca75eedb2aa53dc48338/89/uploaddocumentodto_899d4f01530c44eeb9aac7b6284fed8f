cdbb1ce5e290e56f835efe08a1d39a02
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadDocumentoDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const enums_1 = require("@/enums");
const mime_type_validator_1 = require("../validators/mime-type.validator");
const input_sanitizer_validator_1 = require("../validators/input-sanitizer.validator");
const class_transformer_1 = require("class-transformer");
/**
 * DTO para upload de documento
 *
 * Define os dados necessários para fazer upload de um documento
 * que pode estar vinculado a uma solicitação específica ou ser um documento geral do cidadão
 */
class UploadDocumentoDto {
    cidadao_id;
    solicitacao_id;
    tipo;
    arquivo; // Arquivo será validado no controller
    descricao;
    reutilizavel = false;
    usuario_id;
}
exports.UploadDocumentoDto = UploadDocumentoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do cidadão proprietário do documento',
        example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID do cidadão é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do cidadão inválido' }),
    __metadata("design:type", String)
], UploadDocumentoDto.prototype, "cidadao_id", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'ID da solicitação à qual o documento pertence (opcional para documentos reutilizáveis)',
        example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'ID da solicitação inválido' }),
    __metadata("design:type", String)
], UploadDocumentoDto.prototype, "solicitacao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo do documento',
        enum: enums_1.TipoDocumentoEnum,
        example: 'COMPROVANTE_RESIDENCIA',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo do documento é obrigatório' }),
    (0, class_validator_1.IsEnum)(enums_1.TipoDocumentoEnum, { message: 'Tipo de documento inválido' }),
    __metadata("design:type", typeof (_a = typeof enums_1.TipoDocumentoEnum !== "undefined" && enums_1.TipoDocumentoEnum) === "function" ? _a : Object)
], UploadDocumentoDto.prototype, "tipo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Arquivo do documento',
        type: 'string',
        format: 'binary',
    }),
    (0, class_validator_1.Validate)(mime_type_validator_1.MimeTypeValidator, {
        message: 'Arquivo inválido. Verifique o tipo, tamanho e integridade do arquivo.',
    }),
    __metadata("design:type", Object)
], UploadDocumentoDto.prototype, "arquivo", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Descrição do documento',
        example: 'Comprovante de residência atualizado',
        maxLength: 500,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser um texto' }),
    (0, class_validator_1.MaxLength)(500, {
        message: 'Descrição não pode exceder 500 caracteres',
    }),
    (0, class_validator_1.Validate)(input_sanitizer_validator_1.InputSanitizerValidator, {
        message: 'Descrição contém conteúdo não permitido por motivos de segurança',
    }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.trim();
        }
        return value;
    }),
    __metadata("design:type", String)
], UploadDocumentoDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se o documento pode ser reutilizado em outras solicitações',
        example: true,
        default: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Reutilizável deve ser um valor booleano' }),
    __metadata("design:type", Boolean)
], UploadDocumentoDto.prototype, "reutilizavel", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'ID do usuário que está fazendo upload (preenchido automaticamente)',
        example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do usuário inválido' }),
    __metadata("design:type", String)
], UploadDocumentoDto.prototype, "usuario_id", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGRvY3VtZW50b1xcZHRvXFx1cGxvYWQtZG9jdW1lbnRvLmR0by50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQW1FO0FBQ25FLHFEQVN5QjtBQUN6QixtQ0FBNEM7QUFDNUMsMkVBQXNFO0FBQ3RFLHVGQUFrRjtBQUNsRix5REFBOEM7QUFFOUM7Ozs7O0dBS0c7QUFDSCxNQUFhLGtCQUFrQjtJQU83QixVQUFVLENBQVM7SUFTbkIsY0FBYyxDQUFVO0lBU3hCLElBQUksQ0FBb0I7SUFXeEIsT0FBTyxDQUFNLENBQUMsc0NBQXNDO0lBcUJwRCxTQUFTLENBQVU7SUFVbkIsWUFBWSxHQUFhLEtBQUssQ0FBQztJQVMvQixVQUFVLENBQVU7Q0FDckI7QUE3RUQsZ0RBNkVDO0FBdEVDO0lBTkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLHlDQUF5QztRQUN0RCxPQUFPLEVBQUUsc0NBQXNDO0tBQ2hELENBQUM7SUFDRCxJQUFBLDRCQUFVLEVBQUMsRUFBRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsQ0FBQztJQUN0RCxJQUFBLHdCQUFNLEVBQUMsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLENBQUM7O3NEQUNoQztBQVNuQjtJQVBDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsV0FBVyxFQUNULHdGQUF3RjtRQUMxRixPQUFPLEVBQUUsc0NBQXNDO0tBQ2hELENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEVBQUMsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLENBQUM7OzBEQUMvQjtBQVN4QjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxtQkFBbUI7UUFDaEMsSUFBSSxFQUFFLHlCQUFpQjtRQUN2QixPQUFPLEVBQUUsd0JBQXdCO0tBQ2xDLENBQUM7SUFDRCxJQUFBLDRCQUFVLEVBQUMsRUFBRSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsQ0FBQztJQUMxRCxJQUFBLHdCQUFNLEVBQUMseUJBQWlCLEVBQUUsRUFBRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQztrREFDL0QseUJBQWlCLG9CQUFqQix5QkFBaUI7Z0RBQUM7QUFXeEI7SUFUQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsc0JBQXNCO1FBQ25DLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLFFBQVE7S0FDakIsQ0FBQztJQUNELElBQUEsMEJBQVEsRUFBQyx1Q0FBaUIsRUFBRTtRQUMzQixPQUFPLEVBQ0wsdUVBQXVFO0tBQzFFLENBQUM7O21EQUNXO0FBcUJiO0lBbkJDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsV0FBVyxFQUFFLHdCQUF3QjtRQUNyQyxPQUFPLEVBQUUsc0NBQXNDO1FBQy9DLFNBQVMsRUFBRSxHQUFHO0tBQ2YsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxDQUFDO0lBQ3BELElBQUEsMkJBQVMsRUFBQyxHQUFHLEVBQUU7UUFDZCxPQUFPLEVBQUUsMkNBQTJDO0tBQ3JELENBQUM7SUFDRCxJQUFBLDBCQUFRLEVBQUMsbURBQXVCLEVBQUU7UUFDakMsT0FBTyxFQUFFLGtFQUFrRTtLQUM1RSxDQUFDO0lBQ0QsSUFBQSw2QkFBUyxFQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1FBQ3ZCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFLENBQUM7WUFDOUIsT0FBTyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEIsQ0FBQztRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQyxDQUFDOztxREFDaUI7QUFVbkI7SUFSQyxJQUFBLDZCQUFtQixFQUFDO1FBQ25CLFdBQVcsRUFDVCxtRUFBbUU7UUFDckUsT0FBTyxFQUFFLElBQUk7UUFDYixPQUFPLEVBQUUsS0FBSztLQUNmLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDJCQUFTLEVBQUMsRUFBRSxPQUFPLEVBQUUseUNBQXlDLEVBQUUsQ0FBQzs7d0RBQ25DO0FBUy9CO0lBUEMsSUFBQSw2QkFBbUIsRUFBQztRQUNuQixXQUFXLEVBQ1Qsb0VBQW9FO1FBQ3RFLE9BQU8sRUFBRSxzQ0FBc0M7S0FDaEQsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsd0JBQU0sRUFBQyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQzs7c0RBQy9CIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFxkb2N1bWVudG9cXGR0b1xcdXBsb2FkLWRvY3VtZW50by5kdG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBpUHJvcGVydHksIEFwaVByb3BlcnR5T3B0aW9uYWwgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuaW1wb3J0IHtcbiAgSXNOb3RFbXB0eSxcbiAgSXNTdHJpbmcsXG4gIElzVVVJRCxcbiAgSXNPcHRpb25hbCxcbiAgSXNFbnVtLFxuICBJc0Jvb2xlYW4sXG4gIFZhbGlkYXRlLFxuICBNYXhMZW5ndGgsXG59IGZyb20gJ2NsYXNzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBUaXBvRG9jdW1lbnRvRW51bSB9IGZyb20gJ0AvZW51bXMnO1xuaW1wb3J0IHsgTWltZVR5cGVWYWxpZGF0b3IgfSBmcm9tICcuLi92YWxpZGF0b3JzL21pbWUtdHlwZS52YWxpZGF0b3InO1xuaW1wb3J0IHsgSW5wdXRTYW5pdGl6ZXJWYWxpZGF0b3IgfSBmcm9tICcuLi92YWxpZGF0b3JzL2lucHV0LXNhbml0aXplci52YWxpZGF0b3InO1xuaW1wb3J0IHsgVHJhbnNmb3JtIH0gZnJvbSAnY2xhc3MtdHJhbnNmb3JtZXInO1xuXG4vKipcbiAqIERUTyBwYXJhIHVwbG9hZCBkZSBkb2N1bWVudG9cbiAqXG4gKiBEZWZpbmUgb3MgZGFkb3MgbmVjZXNzw6FyaW9zIHBhcmEgZmF6ZXIgdXBsb2FkIGRlIHVtIGRvY3VtZW50b1xuICogcXVlIHBvZGUgZXN0YXIgdmluY3VsYWRvIGEgdW1hIHNvbGljaXRhw6fDo28gZXNwZWPDrWZpY2Egb3Ugc2VyIHVtIGRvY3VtZW50byBnZXJhbCBkbyBjaWRhZMOjb1xuICovXG5leHBvcnQgY2xhc3MgVXBsb2FkRG9jdW1lbnRvRHRvIHtcbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ0lEIGRvIGNpZGFkw6NvIHByb3ByaWV0w6FyaW8gZG8gZG9jdW1lbnRvJyxcbiAgICBleGFtcGxlOiAnM2ZhODVmNjQtNTcxNy00NTYyLWIzZmMtMmM5NjNmNjZhZmE2JyxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnSUQgZG8gY2lkYWTDo28gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBASXNVVUlEKCc0JywgeyBtZXNzYWdlOiAnSUQgZG8gY2lkYWTDo28gaW52w6FsaWRvJyB9KVxuICBjaWRhZGFvX2lkOiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ0lEIGRhIHNvbGljaXRhw6fDo28gw6AgcXVhbCBvIGRvY3VtZW50byBwZXJ0ZW5jZSAob3BjaW9uYWwgcGFyYSBkb2N1bWVudG9zIHJldXRpbGl6w6F2ZWlzKScsXG4gICAgZXhhbXBsZTogJzNmYTg1ZjY0LTU3MTctNDU2Mi1iM2ZjLTJjOTYzZjY2YWZhNicsXG4gIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzVVVJRCgnNCcsIHsgbWVzc2FnZTogJ0lEIGRhIHNvbGljaXRhw6fDo28gaW52w6FsaWRvJyB9KVxuICBzb2xpY2l0YWNhb19pZD86IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnVGlwbyBkbyBkb2N1bWVudG8nLFxuICAgIGVudW06IFRpcG9Eb2N1bWVudG9FbnVtLFxuICAgIGV4YW1wbGU6ICdDT01QUk9WQU5URV9SRVNJREVOQ0lBJyxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnVGlwbyBkbyBkb2N1bWVudG8gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBASXNFbnVtKFRpcG9Eb2N1bWVudG9FbnVtLCB7IG1lc3NhZ2U6ICdUaXBvIGRlIGRvY3VtZW50byBpbnbDoWxpZG8nIH0pXG4gIHRpcG86IFRpcG9Eb2N1bWVudG9FbnVtO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdBcnF1aXZvIGRvIGRvY3VtZW50bycsXG4gICAgdHlwZTogJ3N0cmluZycsXG4gICAgZm9ybWF0OiAnYmluYXJ5JyxcbiAgfSlcbiAgQFZhbGlkYXRlKE1pbWVUeXBlVmFsaWRhdG9yLCB7XG4gICAgbWVzc2FnZTpcbiAgICAgICdBcnF1aXZvIGludsOhbGlkby4gVmVyaWZpcXVlIG8gdGlwbywgdGFtYW5obyBlIGludGVncmlkYWRlIGRvIGFycXVpdm8uJyxcbiAgfSlcbiAgYXJxdWl2bzogYW55OyAvLyBBcnF1aXZvIHNlcsOhIHZhbGlkYWRvIG5vIGNvbnRyb2xsZXJcblxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7XG4gICAgZGVzY3JpcHRpb246ICdEZXNjcmnDp8OjbyBkbyBkb2N1bWVudG8nLFxuICAgIGV4YW1wbGU6ICdDb21wcm92YW50ZSBkZSByZXNpZMOqbmNpYSBhdHVhbGl6YWRvJyxcbiAgICBtYXhMZW5ndGg6IDUwMCxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnRGVzY3Jpw6fDo28gZGV2ZSBzZXIgdW0gdGV4dG8nIH0pXG4gIEBNYXhMZW5ndGgoNTAwLCB7XG4gICAgbWVzc2FnZTogJ0Rlc2NyacOnw6NvIG7Do28gcG9kZSBleGNlZGVyIDUwMCBjYXJhY3RlcmVzJyxcbiAgfSlcbiAgQFZhbGlkYXRlKElucHV0U2FuaXRpemVyVmFsaWRhdG9yLCB7XG4gICAgbWVzc2FnZTogJ0Rlc2NyacOnw6NvIGNvbnTDqW0gY29udGXDumRvIG7Do28gcGVybWl0aWRvIHBvciBtb3Rpdm9zIGRlIHNlZ3VyYW7Dp2EnLFxuICB9KVxuICBAVHJhbnNmb3JtKCh7IHZhbHVlIH0pID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIHZhbHVlLnRyaW0oKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9KVxuICBkZXNjcmljYW8/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ0luZGljYSBzZSBvIGRvY3VtZW50byBwb2RlIHNlciByZXV0aWxpemFkbyBlbSBvdXRyYXMgc29saWNpdGHDp8O1ZXMnLFxuICAgIGV4YW1wbGU6IHRydWUsXG4gICAgZGVmYXVsdDogZmFsc2UsXG4gIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzQm9vbGVhbih7IG1lc3NhZ2U6ICdSZXV0aWxpesOhdmVsIGRldmUgc2VyIHVtIHZhbG9yIGJvb2xlYW5vJyB9KVxuICByZXV0aWxpemF2ZWw/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ0lEIGRvIHVzdcOhcmlvIHF1ZSBlc3TDoSBmYXplbmRvIHVwbG9hZCAocHJlZW5jaGlkbyBhdXRvbWF0aWNhbWVudGUpJyxcbiAgICBleGFtcGxlOiAnM2ZhODVmNjQtNTcxNy00NTYyLWIzZmMtMmM5NjNmNjZhZmE2JyxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNVVUlEKCc0JywgeyBtZXNzYWdlOiAnSUQgZG8gdXN1w6FyaW8gaW52w6FsaWRvJyB9KVxuICB1c3VhcmlvX2lkPzogc3RyaW5nO1xufVxuIl0sInZlcnNpb24iOjN9