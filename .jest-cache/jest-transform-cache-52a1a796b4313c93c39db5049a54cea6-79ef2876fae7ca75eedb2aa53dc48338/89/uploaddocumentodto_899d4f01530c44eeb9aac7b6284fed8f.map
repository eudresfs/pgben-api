{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\documento\\dto\\upload-documento.dto.ts","mappings":";;;;;;;;;;;;;AAAA,6CAAmE;AACnE,qDASyB;AACzB,mCAA4C;AAC5C,2EAAsE;AACtE,uFAAkF;AAClF,yDAA8C;AAE9C;;;;;GAKG;AACH,MAAa,kBAAkB;IAO7B,UAAU,CAAS;IASnB,cAAc,CAAU;IASxB,IAAI,CAAoB;IAWxB,OAAO,CAAM,CAAC,sCAAsC;IAqBpD,SAAS,CAAU;IAUnB,YAAY,GAAa,KAAK,CAAC;IAS/B,UAAU,CAAU;CACrB;AA7ED,gDA6EC;AAtEC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,yCAAyC;QACtD,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;;sDAChC;AASnB;IAPC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EACT,wFAAwF;QAC1F,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;;0DAC/B;AASxB;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,mBAAmB;QAChC,IAAI,EAAE,yBAAiB;QACvB,OAAO,EAAE,wBAAwB;KAClC,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC;IAC1D,IAAA,wBAAM,EAAC,yBAAiB,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;kDAC/D,yBAAiB,oBAAjB,yBAAiB;gDAAC;AAWxB;IATC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,sBAAsB;QACnC,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,QAAQ;KACjB,CAAC;IACD,IAAA,0BAAQ,EAAC,uCAAiB,EAAE;QAC3B,OAAO,EACL,uEAAuE;KAC1E,CAAC;;mDACW;AAqBb;IAnBC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,wBAAwB;QACrC,OAAO,EAAE,sCAAsC;QAC/C,SAAS,EAAE,GAAG;KACf,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACpD,IAAA,2BAAS,EAAC,GAAG,EAAE;QACd,OAAO,EAAE,2CAA2C;KACrD,CAAC;IACD,IAAA,0BAAQ,EAAC,mDAAuB,EAAE;QACjC,OAAO,EAAE,kEAAkE;KAC5E,CAAC;IACD,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;qDACiB;AAUnB;IARC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EACT,mEAAmE;QACrE,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,KAAK;KACf,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC;;wDACnC;AAS/B;IAPC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EACT,oEAAoE;QACtE,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;;sDAC/B","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\documento\\dto\\upload-documento.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsUUID,\n  IsOptional,\n  IsEnum,\n  IsBoolean,\n  Validate,\n  MaxLength,\n} from 'class-validator';\nimport { TipoDocumentoEnum } from '@/enums';\nimport { MimeTypeValidator } from '../validators/mime-type.validator';\nimport { InputSanitizerValidator } from '../validators/input-sanitizer.validator';\nimport { Transform } from 'class-transformer';\n\n/**\n * DTO para upload de documento\n *\n * Define os dados necessários para fazer upload de um documento\n * que pode estar vinculado a uma solicitação específica ou ser um documento geral do cidadão\n */\nexport class UploadDocumentoDto {\n  @ApiProperty({\n    description: 'ID do cidadão proprietário do documento',\n    example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n  })\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  @IsUUID('4', { message: 'ID do cidadão inválido' })\n  cidadao_id: string;\n\n  @ApiPropertyOptional({\n    description:\n      'ID da solicitação à qual o documento pertence (opcional para documentos reutilizáveis)',\n    example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n  })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID da solicitação inválido' })\n  solicitacao_id?: string;\n\n  @ApiProperty({\n    description: 'Tipo do documento',\n    enum: TipoDocumentoEnum,\n    example: 'COMPROVANTE_RESIDENCIA',\n  })\n  @IsNotEmpty({ message: 'Tipo do documento é obrigatório' })\n  @IsEnum(TipoDocumentoEnum, { message: 'Tipo de documento inválido' })\n  tipo: TipoDocumentoEnum;\n\n  @ApiProperty({\n    description: 'Arquivo do documento',\n    type: 'string',\n    format: 'binary',\n  })\n  @Validate(MimeTypeValidator, {\n    message:\n      'Arquivo inválido. Verifique o tipo, tamanho e integridade do arquivo.',\n  })\n  arquivo: any; // Arquivo será validado no controller\n\n  @ApiPropertyOptional({\n    description: 'Descrição do documento',\n    example: 'Comprovante de residência atualizado',\n    maxLength: 500,\n  })\n  @IsOptional()\n  @IsString({ message: 'Descrição deve ser um texto' })\n  @MaxLength(500, {\n    message: 'Descrição não pode exceder 500 caracteres',\n  })\n  @Validate(InputSanitizerValidator, {\n    message: 'Descrição contém conteúdo não permitido por motivos de segurança',\n  })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.trim();\n    }\n    return value;\n  })\n  descricao?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'Indica se o documento pode ser reutilizado em outras solicitações',\n    example: true,\n    default: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'Reutilizável deve ser um valor booleano' })\n  reutilizavel?: boolean = false;\n\n  @ApiPropertyOptional({\n    description:\n      'ID do usuário que está fazendo upload (preenchido automaticamente)',\n    example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',\n  })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do usuário inválido' })\n  usuario_id?: string;\n}\n"],"version":3}