{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\unidade\\dto\\create-unidade.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\unidade\\dto\\create-unidade.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  IsOptional,\n  IsEnum,\n  IsNotEmpty,\n  MinLength,\n  MaxLength,\n  Matches,\n} from 'class-validator';\nimport { TipoUnidade } from '../../../entities/unidade.entity';\n\n/**\n * DTO para criação de unidade\n */\nexport class CreateUnidadeDto {\n  @IsString({ message: 'Nome deve ser uma string' })\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  @MinLength(3, { message: 'Nome deve ter no mínimo 3 caracteres' })\n  @MaxLength(100, { message: 'Nome deve ter no máximo 100 caracteres' })\n  @ApiProperty({\n    example: 'CRAS Cidade Alta',\n    description: 'Nome da unidade',\n  })\n  nome: string;\n\n  @IsString({ message: 'Código deve ser uma string' })\n  @IsNotEmpty({ message: 'Código é obrigatório' })\n  @Matches(/^[A-Z0-9]{3,10}$/, {\n    message:\n      'Código deve conter entre 3 e 10 caracteres alfanuméricos maiúsculos',\n  })\n  @ApiProperty({\n    example: 'CRAS001',\n    description: 'Código único da unidade',\n  })\n  codigo: string;\n\n  @IsString({ message: 'Sigla deve ser uma string' })\n  @IsOptional()\n  @Matches(/^[A-Z0-9-]{2,10}$/, {\n    message:\n      'Sigla deve conter entre 2 e 10 caracteres alfanuméricos maiúsculos ou hífen',\n  })\n  @ApiProperty({\n    example: 'CRAS-CA',\n    description: 'Sigla da unidade',\n    required: false,\n  })\n  sigla?: string;\n\n  @IsEnum(TipoUnidade, {\n    message: 'Tipo deve ser cras, creas, centro_pop, semtas ou outro',\n  })\n  @ApiProperty({\n    enum: TipoUnidade,\n    example: TipoUnidade.CRAS,\n    description: 'Tipo da unidade',\n  })\n  tipo: TipoUnidade;\n\n  @IsString({ message: 'Endereço deve ser uma string' })\n  @IsOptional()\n  @ApiProperty({\n    example: 'Rua das Flores, 123, Cidade Alta',\n    description: 'Endereço completo da unidade',\n    required: false,\n  })\n  endereco?: string;\n\n  @IsString({ message: 'Telefone deve ser uma string' })\n  @IsOptional()\n  @Matches(/^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/, {\n    message:\n      'Formato de telefone inválido. Use (XX) XXXX-XXXX ou (XX) XXXXX-XXXX',\n  })\n  @ApiProperty({\n    example: '(84) 3232-1234',\n    description: 'Telefone da unidade',\n    required: false,\n  })\n  telefone?: string;\n\n  @IsEmail({}, { message: 'Email inválido' })\n  @IsOptional()\n  @ApiProperty({\n    example: 'cras.cidadealta@semtas.natal.gov.br',\n    description: 'Email da unidade',\n    required: false,\n  })\n  email?: string;\n\n  @IsString({ message: 'Matrícula do responsável deve ser uma string' })\n  @IsOptional()\n  @ApiProperty({\n    example: '123456789',\n    description: 'Matrícula do responsável pela unidade',\n    required: false,\n  })\n  responsavel_matricula?: string;\n}\n"],"version":3}