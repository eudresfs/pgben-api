{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-composicao-familiar.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-composicao-familiar.dto.ts"],"sourcesContent":["import {\n  IsString,\n  IsOptional,\n  IsNotEmpty,\n  IsDate,\n  IsNumber,\n  IsEnum,\n  Length,\n  Min,\n  Validate,\n  IsUUID,\n} from 'class-validator';\nimport { Type, Transform } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { EscolaridadeEnum } from '../../../enums/escolaridade.enum';\nimport { ParentescoEnum } from '../../../enums/parentesco.enum';\nimport { CPFValidator } from '../validators/cpf-validator';\n\n/**\n * DTO para adicionar membro à composição familiar\n * O ID do cidadão é obtido do parâmetro da rota, não do body\n */\nexport class CreateComposicaoFamiliarDto {\n  @ApiProperty({\n    description: 'ID do cidadão responsável pela família',\n    example: '550e8400-e29b-41d4-a716-446655440000',\n    format: 'uuid',\n  })\n  @IsUUID(4, { message: 'ID do cidadão deve ser um UUID válido' })\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  cidadao_id: string;\n\n  @ApiProperty({\n    description: 'Nome completo do membro da família',\n    example: 'Maria Silva Santos',\n    minLength: 2,\n    maxLength: 255,\n  })\n  @IsString({ message: 'Nome deve ser uma string' })\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  @Length(2, 255, { message: 'Nome deve ter entre 2 e 255 caracteres' })\n  nome: string;\n\n  @IsNotEmpty({ message: 'CPF é obrigatório' })\n  @Length(11, 14, { message: 'CPF deve ter entre 11 e 14 caracteres' })\n  @Validate(CPFValidator, { message: 'CPF inválido' })\n  @ApiProperty({\n    example: '12345678900',\n    description: 'CPF do membro familiar',\n  })\n  cpf: string;\n\n  @IsNotEmpty({ message: 'NIS do parente é obrigatório' })\n  @ApiProperty({\n    example: '12345678901',\n    description: 'NIS do membro familiar',\n  })\n  nis: string;\n\n  @IsNotEmpty({ message: 'Idade do parente é obrigatório' })\n  @IsNumber({}, { message: 'Idade deve ser um número' })\n  @Min(0, { message: 'Idade não pode ser negativa' })\n  @ApiProperty({\n    example: 25,\n    description: 'Idade do membro familiar',\n  })\n  idade: number;\n\n  @IsString({ message: 'Ocupação deve ser uma string' })\n  @IsNotEmpty({ message: 'Ocupação é obrigatória' })\n  @ApiProperty({\n    example: 'Estudante',\n    description: 'Ocupação do membro familiar',\n  })\n  ocupacao: string;\n\n  @IsNotEmpty({ message: 'Escolaridade é obrigatória' })\n  @IsEnum(EscolaridadeEnum, {\n    message: 'Escolaridade deve ser um valor válido',\n  })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toUpperCase();\n    }\n    return value;\n  })\n  @ApiProperty({\n    example: EscolaridadeEnum.MEDIO_COMPLETO,\n    description: 'Nível de escolaridade do membro familiar',\n    enum: EscolaridadeEnum,\n  })\n  escolaridade: EscolaridadeEnum;\n\n  @IsNotEmpty({ message: 'Parentesco é obrigatório' })\n  @IsEnum(ParentescoEnum, { message: 'Parentesco deve ser um valor válido' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toUpperCase();\n    }\n    return value;\n  })\n  @ApiProperty({\n    example: ParentescoEnum.FILHO,\n    description: 'Grau de parentesco com o cidadão principal',\n    enum: ParentescoEnum,\n  })\n  parentesco: ParentescoEnum;\n\n  @IsOptional()\n  @IsNumber({}, { message: 'Renda deve ser um número' })\n  @Min(0, { message: 'Renda não pode ser negativa' })\n  @ApiProperty({\n    example: 2500.0,\n    description: 'Renda mensal do membro familiar',\n    required: false,\n  })\n  renda?: number;\n\n  @IsOptional()\n  @ApiProperty({\n    example: 'Observações adicionais sobre o membro familiar',\n    description: 'Observações gerais',\n    required: false,\n  })\n  observacoes?: string;\n\n  @IsOptional()\n  @IsDate({ message: 'Data de nascimento deve ser uma data válida' })\n  @Type(() => Date)\n  @ApiProperty({\n    example: '1998-05-15',\n    description: 'Data de nascimento do membro familiar',\n    required: false,\n  })\n  data_nascimento?: Date;\n}\n"],"version":3}