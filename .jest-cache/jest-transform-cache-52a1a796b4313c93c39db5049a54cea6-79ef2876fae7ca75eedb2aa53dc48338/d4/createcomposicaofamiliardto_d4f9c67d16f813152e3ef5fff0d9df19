dd925bf90aa96b433d3da20e4895597a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateComposicaoFamiliarDto = void 0;
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const swagger_1 = require("@nestjs/swagger");
const escolaridade_enum_1 = require("../../../enums/escolaridade.enum");
const parentesco_enum_1 = require("../../../enums/parentesco.enum");
const cpf_validator_1 = require("../validators/cpf-validator");
/**
 * DTO para adicionar membro à composição familiar
 * O ID do cidadão é obtido do parâmetro da rota, não do body
 */
class CreateComposicaoFamiliarDto {
    cidadao_id;
    nome;
    cpf;
    nis;
    idade;
    ocupacao;
    escolaridade;
    parentesco;
    renda;
    observacoes;
    data_nascimento;
}
exports.CreateComposicaoFamiliarDto = CreateComposicaoFamiliarDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do cidadão responsável pela família',
        example: '550e8400-e29b-41d4-a716-446655440000',
        format: 'uuid',
    }),
    (0, class_validator_1.IsUUID)(4, { message: 'ID do cidadão deve ser um UUID válido' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID do cidadão é obrigatório' }),
    __metadata("design:type", String)
], CreateComposicaoFamiliarDto.prototype, "cidadao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome completo do membro da família',
        example: 'Maria Silva Santos',
        minLength: 2,
        maxLength: 255,
    }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, class_validator_1.Length)(2, 255, { message: 'Nome deve ter entre 2 e 255 caracteres' }),
    __metadata("design:type", String)
], CreateComposicaoFamiliarDto.prototype, "nome", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'CPF é obrigatório' }),
    (0, class_validator_1.Length)(11, 14, { message: 'CPF deve ter entre 11 e 14 caracteres' }),
    (0, class_validator_1.Validate)(cpf_validator_1.CPFValidator, { message: 'CPF inválido' }),
    (0, swagger_1.ApiProperty)({
        example: '12345678900',
        description: 'CPF do membro familiar',
    }),
    __metadata("design:type", String)
], CreateComposicaoFamiliarDto.prototype, "cpf", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'NIS do parente é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: '12345678901',
        description: 'NIS do membro familiar',
    }),
    __metadata("design:type", String)
], CreateComposicaoFamiliarDto.prototype, "nis", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Idade do parente é obrigatório' }),
    (0, class_validator_1.IsNumber)({}, { message: 'Idade deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Idade não pode ser negativa' }),
    (0, swagger_1.ApiProperty)({
        example: 25,
        description: 'Idade do membro familiar',
    }),
    __metadata("design:type", Number)
], CreateComposicaoFamiliarDto.prototype, "idade", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Ocupação deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Ocupação é obrigatória' }),
    (0, swagger_1.ApiProperty)({
        example: 'Estudante',
        description: 'Ocupação do membro familiar',
    }),
    __metadata("design:type", String)
], CreateComposicaoFamiliarDto.prototype, "ocupacao", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Escolaridade é obrigatória' }),
    (0, class_validator_1.IsEnum)(escolaridade_enum_1.EscolaridadeEnum, {
        message: 'Escolaridade deve ser um valor válido',
    }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toUpperCase();
        }
        return value;
    }),
    (0, swagger_1.ApiProperty)({
        example: escolaridade_enum_1.EscolaridadeEnum.MEDIO_COMPLETO,
        description: 'Nível de escolaridade do membro familiar',
        enum: escolaridade_enum_1.EscolaridadeEnum,
    }),
    __metadata("design:type", typeof (_a = typeof escolaridade_enum_1.EscolaridadeEnum !== "undefined" && escolaridade_enum_1.EscolaridadeEnum) === "function" ? _a : Object)
], CreateComposicaoFamiliarDto.prototype, "escolaridade", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Parentesco é obrigatório' }),
    (0, class_validator_1.IsEnum)(parentesco_enum_1.ParentescoEnum, { message: 'Parentesco deve ser um valor válido' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toUpperCase();
        }
        return value;
    }),
    (0, swagger_1.ApiProperty)({
        example: parentesco_enum_1.ParentescoEnum.FILHO,
        description: 'Grau de parentesco com o cidadão principal',
        enum: parentesco_enum_1.ParentescoEnum,
    }),
    __metadata("design:type", typeof (_b = typeof parentesco_enum_1.ParentescoEnum !== "undefined" && parentesco_enum_1.ParentescoEnum) === "function" ? _b : Object)
], CreateComposicaoFamiliarDto.prototype, "parentesco", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Renda deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Renda não pode ser negativa' }),
    (0, swagger_1.ApiProperty)({
        example: 2500.0,
        description: 'Renda mensal do membro familiar',
        required: false,
    }),
    __metadata("design:type", Number)
], CreateComposicaoFamiliarDto.prototype, "renda", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: 'Observações adicionais sobre o membro familiar',
        description: 'Observações gerais',
        required: false,
    }),
    __metadata("design:type", String)
], CreateComposicaoFamiliarDto.prototype, "observacoes", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)({ message: 'Data de nascimento deve ser uma data válida' }),
    (0, class_transformer_1.Type)(() => Date),
    (0, swagger_1.ApiProperty)({
        example: '1998-05-15',
        description: 'Data de nascimento do membro familiar',
        required: false,
    }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], CreateComposicaoFamiliarDto.prototype, "data_nascimento", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,