{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\validators\\cep-validator.ts","mappings":";;;;;;;;;AAAA,qDAIyB;AAEzB;;;;;;GAMG;AAEI,IAAM,YAAY,GAAlB,MAAM,YAAY;IACvB,QAAQ,CAAC,IAAY,EAAE,IAAyB;QAC9C,IAAI,CAAC,IAAI,EAAE,CAAC;YAAA,OAAO,IAAI,CAAC;QAAA,CAAC,CAAC,wEAAwE;QAElG,2CAA2C;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAEzC,kCAAkC;QAClC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC;QACf,CAAC;QAED,qFAAqF;QACrF,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjC,OAAO,KAAK,CAAC;QACf,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,IAAyB;QACtC,OAAO,uDAAuD,CAAC;IACjE,CAAC;CACF,CAAA;AAvBY,oCAAY;uBAAZ,YAAY;IADxB,IAAA,qCAAmB,EAAC,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;GAC/C,YAAY,CAuBxB","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\validators\\cep-validator.ts"],"sourcesContent":["import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n/**\n * Validador personalizado para CEP brasileiro\n *\n * Aceita formatos:\n * - 00000-000 (com hífen)\n * - 00000000 (sem formatação)\n */\n@ValidatorConstraint({ name: 'cepValidator', async: false })\nexport class CEPValidator implements ValidatorConstraintInterface {\n  validate(text: string, args: ValidationArguments) {\n    if (!text) {return true;} // Permite valores vazios (use @IsNotEmpty se quiser tornar obrigatório)\n\n    // Remove todos os caracteres não numéricos\n    const cepLimpo = text.replace(/\\D/g, '');\n\n    // Verifica se o CEP tem 8 dígitos\n    if (cepLimpo.length !== 8) {\n      return false;\n    }\n\n    // Verifica se o CEP não é uma sequência de dígitos iguais (00000000, 11111111, etc.)\n    if (/^(\\d)\\1{7}$/.test(cepLimpo)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return 'CEP inválido. Formato esperado: 00000-000 ou 00000000';\n  }\n}\n"],"version":3}