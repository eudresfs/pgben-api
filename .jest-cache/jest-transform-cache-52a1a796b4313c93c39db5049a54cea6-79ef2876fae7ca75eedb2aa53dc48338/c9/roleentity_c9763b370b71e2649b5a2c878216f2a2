2f1bd50da5a4c51589abee1b24a26c06
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Role = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const usuario_entity_1 = require("./usuario.entity");
const status_enum_1 = require("../enums/status.enum");
/**
 * Entidade de Role (Papel)
 *
 * Representa um papel/função que um usuário pode ter no sistema,
 * substituindo o antigo enum Role. Esta entidade permite relacionamentos
 * com permissões e outros recursos do sistema.
 */
let Role = class Role {
    id;
    nome;
    descricao;
    status;
    usuarios;
    created_at;
    updated_at;
    /**
     * Verifica se a role está ativa
     * @returns true se a role estiver ativa
     */
    isAtiva() {
        return this.status === status_enum_1.Status.ATIVO;
    }
    /**
     * Ativa a role
     */
    ativar() {
        this.status = status_enum_1.Status.ATIVO;
    }
    /**
     * Desativa a role
     */
    desativar() {
        this.status = status_enum_1.Status.INATIVO;
    }
};
exports.Role = Role;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Role.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ unique: true, length: 100 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome da role é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    (0, class_validator_1.MinLength)(2, { message: 'Nome deve ter no mínimo 2 caracteres' }),
    (0, class_validator_1.MaxLength)(100, { message: 'Nome deve ter no máximo 100 caracteres' }),
    __metadata("design:type", String)
], Role.prototype, "nome", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true, length: 500 }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser uma string' }),
    (0, class_validator_1.MaxLength)(500, { message: 'Descrição deve ter no máximo 500 caracteres' }),
    __metadata("design:type", String)
], Role.prototype, "descricao", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: status_enum_1.Status,
        default: status_enum_1.Status.ATIVO,
        enumName: 'status_role',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Status deve ser um valor booleano' }),
    __metadata("design:type", typeof (_a = typeof status_enum_1.Status !== "undefined" && status_enum_1.Status) === "function" ? _a : Object)
], Role.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => usuario_entity_1.Usuario, (usuario) => usuario.role, {
        cascade: false,
        lazy: true,
    }),
    __metadata("design:type", Array)
], Role.prototype, "usuarios", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ name: 'created_at' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Role.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({ name: 'updated_at' }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], Role.prototype, "updated_at", void 0);
exports.Role = Role = __decorate([
    (0, typeorm_1.Entity)('role'),
    (0, typeorm_1.Index)(['nome'], { unique: true }),
    (0, typeorm_1.Index)(['status'])
], Role);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxyb2xlLmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscUNBUWlCO0FBQ2pCLHFEQU95QjtBQUN6QixxREFBMkM7QUFDM0Msc0RBQThDO0FBRTlDOzs7Ozs7R0FNRztBQUlJLElBQU0sSUFBSSxHQUFWLE1BQU0sSUFBSTtJQUVmLEVBQUUsQ0FBUztJQU9YLElBQUksQ0FBUztJQU1iLFNBQVMsQ0FBUztJQVVsQixNQUFNLENBQVM7SUFNZixRQUFRLENBQVk7SUFHcEIsVUFBVSxDQUFPO0lBR2pCLFVBQVUsQ0FBTztJQUVqQjs7O09BR0c7SUFDSCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLG9CQUFNLENBQUMsS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU07UUFDSixJQUFJLENBQUMsTUFBTSxHQUFHLG9CQUFNLENBQUMsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVM7UUFDUCxJQUFJLENBQUMsTUFBTSxHQUFHLG9CQUFNLENBQUMsT0FBTyxDQUFDO0lBQy9CLENBQUM7Q0FDRixDQUFBO0FBNURZLG9CQUFJO0FBRWY7SUFEQyxJQUFBLGdDQUFzQixFQUFDLE1BQU0sQ0FBQzs7Z0NBQ3BCO0FBT1g7SUFMQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUNyQyxJQUFBLDRCQUFVLEVBQUMsRUFBRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQztJQUNyRCxJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQztJQUNqRCxJQUFBLDJCQUFTLEVBQUMsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLHNDQUFzQyxFQUFFLENBQUM7SUFDakUsSUFBQSwyQkFBUyxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxDQUFDOztrQ0FDekQ7QUFNYjtJQUpDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO0lBQ3ZDLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxDQUFDO0lBQ3RELElBQUEsMkJBQVMsRUFBQyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsNkNBQTZDLEVBQUUsQ0FBQzs7dUNBQ3pEO0FBVWxCO0lBUkMsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsb0JBQU07UUFDWixPQUFPLEVBQUUsb0JBQU0sQ0FBQyxLQUFLO1FBQ3JCLFFBQVEsRUFBRSxhQUFhO0tBQ3hCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDJCQUFTLEVBQUMsRUFBRSxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsQ0FBQztrREFDcEQsb0JBQU0sb0JBQU4sb0JBQU07b0NBQUM7QUFNZjtJQUpDLElBQUEsbUJBQVMsRUFBQyxHQUFHLEVBQUUsQ0FBQyx3QkFBTyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1FBQ25ELE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLElBQUk7S0FDWCxDQUFDOztzQ0FDa0I7QUFHcEI7SUFEQyxJQUFBLDBCQUFnQixFQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDO2tEQUM3QixJQUFJLG9CQUFKLElBQUk7d0NBQUM7QUFHakI7SUFEQyxJQUFBLDBCQUFnQixFQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDO2tEQUM3QixJQUFJLG9CQUFKLElBQUk7d0NBQUM7ZUFyQ04sSUFBSTtJQUhoQixJQUFBLGdCQUFNLEVBQUMsTUFBTSxDQUFDO0lBQ2QsSUFBQSxlQUFLLEVBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUNqQyxJQUFBLGVBQUssRUFBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0dBQ0wsSUFBSSxDQTREaEIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxyb2xlLmVudGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBFbnRpdHksXG4gIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sXG4gIENvbHVtbixcbiAgQ3JlYXRlRGF0ZUNvbHVtbixcbiAgVXBkYXRlRGF0ZUNvbHVtbixcbiAgT25lVG9NYW55LFxuICBJbmRleCxcbn0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQge1xuICBJc05vdEVtcHR5LFxuICBJc1N0cmluZyxcbiAgTWF4TGVuZ3RoLFxuICBNaW5MZW5ndGgsXG4gIElzQm9vbGVhbixcbiAgSXNPcHRpb25hbCxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcbmltcG9ydCB7IFVzdWFyaW8gfSBmcm9tICcuL3VzdWFyaW8uZW50aXR5JztcbmltcG9ydCB7IFN0YXR1cyB9IGZyb20gJy4uL2VudW1zL3N0YXR1cy5lbnVtJztcblxuLyoqXG4gKiBFbnRpZGFkZSBkZSBSb2xlIChQYXBlbClcbiAqXG4gKiBSZXByZXNlbnRhIHVtIHBhcGVsL2Z1bsOnw6NvIHF1ZSB1bSB1c3XDoXJpbyBwb2RlIHRlciBubyBzaXN0ZW1hLFxuICogc3Vic3RpdHVpbmRvIG8gYW50aWdvIGVudW0gUm9sZS4gRXN0YSBlbnRpZGFkZSBwZXJtaXRlIHJlbGFjaW9uYW1lbnRvc1xuICogY29tIHBlcm1pc3PDtWVzIGUgb3V0cm9zIHJlY3Vyc29zIGRvIHNpc3RlbWEuXG4gKi9cbkBFbnRpdHkoJ3JvbGUnKVxuQEluZGV4KFsnbm9tZSddLCB7IHVuaXF1ZTogdHJ1ZSB9KVxuQEluZGV4KFsnc3RhdHVzJ10pXG5leHBvcnQgY2xhc3MgUm9sZSB7XG4gIEBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uKCd1dWlkJylcbiAgaWQ6IHN0cmluZztcblxuICBAQ29sdW1uKHsgdW5pcXVlOiB0cnVlLCBsZW5ndGg6IDEwMCB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdOb21lIGRhIHJvbGUgw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnTm9tZSBkZXZlIHNlciB1bWEgc3RyaW5nJyB9KVxuICBATWluTGVuZ3RoKDIsIHsgbWVzc2FnZTogJ05vbWUgZGV2ZSB0ZXIgbm8gbcOtbmltbyAyIGNhcmFjdGVyZXMnIH0pXG4gIEBNYXhMZW5ndGgoMTAwLCB7IG1lc3NhZ2U6ICdOb21lIGRldmUgdGVyIG5vIG3DoXhpbW8gMTAwIGNhcmFjdGVyZXMnIH0pXG4gIG5vbWU6IHN0cmluZztcblxuICBAQ29sdW1uKHsgbnVsbGFibGU6IHRydWUsIGxlbmd0aDogNTAwIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ0Rlc2NyacOnw6NvIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBNYXhMZW5ndGgoNTAwLCB7IG1lc3NhZ2U6ICdEZXNjcmnDp8OjbyBkZXZlIHRlciBubyBtw6F4aW1vIDUwMCBjYXJhY3RlcmVzJyB9KVxuICBkZXNjcmljYW86IHN0cmluZztcblxuICBAQ29sdW1uKHtcbiAgICB0eXBlOiAnZW51bScsXG4gICAgZW51bTogU3RhdHVzLFxuICAgIGRlZmF1bHQ6IFN0YXR1cy5BVElWTyxcbiAgICBlbnVtTmFtZTogJ3N0YXR1c19yb2xlJyxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNCb29sZWFuKHsgbWVzc2FnZTogJ1N0YXR1cyBkZXZlIHNlciB1bSB2YWxvciBib29sZWFubycgfSlcbiAgc3RhdHVzOiBTdGF0dXM7XG5cbiAgQE9uZVRvTWFueSgoKSA9PiBVc3VhcmlvLCAodXN1YXJpbykgPT4gdXN1YXJpby5yb2xlLCB7XG4gICAgY2FzY2FkZTogZmFsc2UsXG4gICAgbGF6eTogdHJ1ZSxcbiAgfSlcbiAgdXN1YXJpb3M6IFVzdWFyaW9bXTtcblxuICBAQ3JlYXRlRGF0ZUNvbHVtbih7IG5hbWU6ICdjcmVhdGVkX2F0JyB9KVxuICBjcmVhdGVkX2F0OiBEYXRlO1xuXG4gIEBVcGRhdGVEYXRlQ29sdW1uKHsgbmFtZTogJ3VwZGF0ZWRfYXQnIH0pXG4gIHVwZGF0ZWRfYXQ6IERhdGU7XG5cbiAgLyoqXG4gICAqIFZlcmlmaWNhIHNlIGEgcm9sZSBlc3TDoSBhdGl2YVxuICAgKiBAcmV0dXJucyB0cnVlIHNlIGEgcm9sZSBlc3RpdmVyIGF0aXZhXG4gICAqL1xuICBpc0F0aXZhKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gU3RhdHVzLkFUSVZPO1xuICB9XG5cbiAgLyoqXG4gICAqIEF0aXZhIGEgcm9sZVxuICAgKi9cbiAgYXRpdmFyKCk6IHZvaWQge1xuICAgIHRoaXMuc3RhdHVzID0gU3RhdHVzLkFUSVZPO1xuICB9XG5cbiAgLyoqXG4gICAqIERlc2F0aXZhIGEgcm9sZVxuICAgKi9cbiAgZGVzYXRpdmFyKCk6IHZvaWQge1xuICAgIHRoaXMuc3RhdHVzID0gU3RhdHVzLklOQVRJVk87XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==