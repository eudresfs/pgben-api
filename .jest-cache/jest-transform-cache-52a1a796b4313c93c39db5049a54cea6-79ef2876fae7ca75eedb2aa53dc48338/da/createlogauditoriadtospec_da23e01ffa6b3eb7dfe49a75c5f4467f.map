{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\test\\modules\\auditoria\\dto\\create-log-auditoria.dto.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\test\\modules\\auditoria\\dto\\create-log-auditoria.dto.spec.ts"],"sourcesContent":["import { validate } from 'class-validator';\nimport { plainToInstance } from 'class-transformer';\nimport { CreateLogAuditoriaDto } from '../../../../src/modules/auditoria/dto/create-log-auditoria.dto';\nimport { TipoOperacao } from '../../../../src/modules/auditoria/enums/tipo-operacao.enum';\n\ndescribe('CreateLogAuditoriaDto', () => {\n  it('deve ser válido com todos os campos obrigatórios', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.CREATE,\n      entidade_afetada: 'Usuario',\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBe(0);\n  });\n\n  it('deve ser inválido sem tipo_operacao', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      entidade_afetada: 'Usuario',\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBeGreaterThan(0);\n    expect(errors[0].property).toBe('tipo_operacao');\n  });\n\n  it('deve ser inválido sem entidade_afetada', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.CREATE,\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBeGreaterThan(0);\n    expect(errors[0].property).toBe('entidade_afetada');\n  });\n\n  it('deve ser inválido com tipo_operacao inválido', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: 'INVALID_TYPE' as TipoOperacao,\n      entidade_afetada: 'Usuario',\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBeGreaterThan(0);\n    expect(errors[0].property).toBe('tipo_operacao');\n  });\n\n  it('deve ser válido com campos opcionais', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.UPDATE,\n      entidade_afetada: 'Usuario',\n      entidade_id: '123e4567-e89b-12d3-a456-426614174000',\n      dados_anteriores: { nome: 'João' },\n      dados_novos: { nome: 'João Silva' },\n      usuario_id: '123e4567-e89b-12d3-a456-426614174001',\n      ip_origem: '192.168.1.1',\n      user_agent: 'Mozilla/5.0',\n      endpoint: '/api/v1/usuarios',\n      metodo_http: 'PUT',\n      dados_sensiveis_acessados: ['cpf', 'renda_familiar'],\n      motivo: 'Correção de dados cadastrais',\n      descricao: 'Atualização de nome do usuário',\n      data_hora: new Date().toISOString(),\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBe(0);\n  });\n\n  it('deve ser inválido com entidade_id em formato inválido', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n      entidade_id: 'id-invalido',\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBeGreaterThan(0);\n    expect(errors[0].property).toBe('entidade_id');\n  });\n\n  it('deve ser inválido com IP em formato inválido', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n      ip_origem: 'ip-invalido',\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBeGreaterThan(0);\n    expect(errors[0].property).toBe('ip_origem');\n  });\n\n  it('deve ser válido com dados_sensiveis_acessados como array vazio', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n      dados_sensiveis_acessados: [],\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBe(0);\n  });\n\n  it('deve ser inválido com dados_sensiveis_acessados como string', async () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n      dados_sensiveis_acessados: 'cpf' as any,\n    });\n\n    const errors = await validate(dto);\n    expect(errors.length).toBeGreaterThan(0);\n    expect(errors[0].property).toBe('dados_sensiveis_acessados');\n  });\n\n  it('deve verificar corretamente se contém dados LGPD', () => {\n    const dtoComDadosLGPD = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n      dados_sensiveis_acessados: ['cpf', 'renda_familiar'],\n    });\n\n    const dtoSemDadosLGPD = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n      dados_sensiveis_acessados: [],\n    });\n\n    const dtoSemCampoLGPD = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.READ,\n      entidade_afetada: 'Usuario',\n    });\n\n    expect(dtoComDadosLGPD.contemDadosLGPD()).toBe(true);\n    expect(dtoSemDadosLGPD.contemDadosLGPD()).toBe(false);\n    expect(dtoSemCampoLGPD.contemDadosLGPD()).toBe(false);\n  });\n\n  it('deve retornar uma representação textual correta', () => {\n    const dto = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.CREATE,\n      entidade_afetada: 'Usuario',\n      entidade_id: '123e4567-e89b-12d3-a456-426614174000',\n      descricao: 'Criação de novo usuário',\n    });\n\n    expect(dto.toString()).toBe(\n      '[create] Usuario (123e4567-e89b-12d3-a456-426614174000) - Criação de novo usuário',\n    );\n\n    const dtoSemDescricao = plainToInstance(CreateLogAuditoriaDto, {\n      tipo_operacao: TipoOperacao.CREATE,\n      entidade_afetada: 'Usuario',\n    });\n\n    expect(dtoSemDescricao.toString()).toBe('[create] Usuario - Sem descrição');\n  });\n});\n"],"version":3}