{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\dto\\create-token.dto.ts","mappings":";;;;;;;;;;;;AAAA,qDAQyB;AACzB,6CAAmE;AACnE,yDAAyC;AAEzC;;;GAGG;AACH,MAAa,cAAc;IAOzB,IAAI,CAAS;IAQb,SAAS,CAAU;IAQnB,OAAO,CAAY;IAYnB,YAAY,CAAU;IAStB,YAAY,GAAa,KAAK,CAAC;CAChC;AA7CD,wCA6CC;AAtCC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,2CAA2C;QACxD,OAAO,EAAE,8CAA8C;KACxD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC;IACxD,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC;;4CAChD;AAQb;IANC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,oBAAoB;QACjC,OAAO,EAAE,+CAA+C;KACzD,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC;;iDACtC;AAQnB;IANC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,+CAA+C;QAC5D,OAAO,EAAE,CAAC,eAAe,EAAE,iBAAiB,CAAC;KAC9C,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,yBAAO,EAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC;;+CACnC;AAYnB;IAVC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EACT,4EAA4E;QAC9E,OAAO,EAAE,GAAG;QACZ,OAAO,EAAE,CAAC;KACX,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,IAAA,uBAAK,EAAC,EAAE,OAAO,EAAE,iDAAiD,EAAE,CAAC;IACrE,IAAA,qBAAG,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,8CAA8C,EAAE,CAAC;;oDAC9C;AAStB;IAPC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,iDAAiD;QAC9D,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;KACf,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC;;oDACrC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\dto\\create-token.dto.ts"],"sourcesContent":["import {\n  IsNotEmpty,\n  IsString,\n  IsOptional,\n  IsArray,\n  IsInt,\n  Min,\n  IsBoolean,\n} from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\n\n/**\n * DTO para criação de um novo token de integrador.\n * Define os parâmetros necessários para geração de um token de acesso.\n */\nexport class CreateTokenDto {\n  @ApiProperty({\n    description: 'Nome do token (identificação para gestão)',\n    example: 'Token para integração com Sistema Financeiro',\n  })\n  @IsNotEmpty({ message: 'O nome do token é obrigatório' })\n  @IsString({ message: 'O nome do token deve ser uma string' })\n  nome: string;\n\n  @ApiPropertyOptional({\n    description: 'Descrição do token',\n    example: 'Acesso para consulta de benefícios e cidadãos',\n  })\n  @IsOptional()\n  @IsString({ message: 'A descrição deve ser uma string' })\n  descricao?: string;\n\n  @ApiPropertyOptional({\n    description: 'Lista de escopos de permissão para este token',\n    example: ['read:cidadaos', 'read:beneficios'],\n  })\n  @IsOptional()\n  @IsArray({ message: 'Os escopos devem ser um array' })\n  escopos?: string[];\n\n  @ApiPropertyOptional({\n    description:\n      'Número de dias de validade do token (se não informado, o token não expira)',\n    example: 365,\n    minimum: 1,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsInt({ message: 'Os dias de validade devem ser um número inteiro' })\n  @Min(1, { message: 'Os dias de validade devem ser maior que zero' })\n  diasValidade?: number;\n\n  @ApiPropertyOptional({\n    description: 'Indica se o token deve ser criado sem expiração',\n    example: false,\n    default: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo semExpiracao deve ser um booleano' })\n  semExpiracao?: boolean = false;\n}\n"],"version":3}