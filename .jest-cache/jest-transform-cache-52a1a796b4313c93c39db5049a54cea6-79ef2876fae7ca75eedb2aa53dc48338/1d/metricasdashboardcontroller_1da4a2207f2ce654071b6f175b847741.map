{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\controllers\\metricas-dashboard.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\controllers\\metricas-dashboard.controller.ts"],"sourcesContent":["import { Controller, Get, Query, UseGuards, Param } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiQuery,\n  ApiParam,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { ScopeType } from '../../../entities/user-permission.entity';\n\nimport { MetricasService, MetricasAnomaliasService } from '../services';\nimport { DashboardService } from '../services/dashboard.service';\n\n/**\n * Controlador para endpoints específicos de dashboard\n *\n * Este controlador fornece endpoints otimizados para:\n * 1. Obter resumo das métricas principais\n * 2. Listar alertas ativos de anomalias\n * 3. Obter KPIs configurados para dashboard\n * 4. Obter dados para gráficos e visualizações\n * 5. Exportar dados para relatórios\n */\n@ApiTags('Métricas e Dashboard')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard, PermissionGuard)\n@Controller('dashboard')\nexport class MetricasDashboardController {\n  constructor(\n    private readonly metricasService: MetricasService,\n    private readonly metricasAnomaliasService: MetricasAnomaliasService,\n    private readonly dashboardService: DashboardService,\n  ) {}\n\n  /**\n   * Obtém resumo das métricas principais para dashboard\n   */\n  @Get('resumo')\n  @RequiresPermission({\n    permissionName: 'dashboard.visualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Obtém resumo das métricas principais' })\n  @ApiResponse({ status: 200, description: 'Resumo obtido com sucesso' })\n  async obterResumo() {\n    return this.dashboardService.obterResumo();\n  }\n\n  /**\n   * Obtém KPIs para o dashboard\n   */\n  @Get('kpis')\n  @RequiresPermission({\n    permissionName: 'dashboard.visualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Obtém KPIs para o dashboard' })\n  @ApiResponse({ status: 200, description: 'KPIs obtidos com sucesso' })\n  async obterKPIs() {\n    return this.dashboardService.obterKPIs();\n  }\n\n  /**\n   * Obtém dados para gráficos do dashboard\n   */\n  @Get('graficos')\n  @RequiresPermission({\n    permissionName: 'dashboard.visualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Obtém dados para gráficos do dashboard' })\n  @ApiResponse({ status: 200, description: 'Dados obtidos com sucesso' })\n  @ApiQuery({\n    name: 'periodo',\n    required: false,\n    type: Number,\n    description: 'Período em dias para filtrar os dados',\n  })\n  async obterGraficos(@Query('periodo') periodo?: number) {\n    return this.dashboardService.obterGraficos(periodo ? +periodo : 30);\n  }\n\n  /**\n   * Lista alertas ativos de anomalias\n   */\n  @Get('alertas')\n  @RequiresPermission({\n    permissionName: 'dashboard.visualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Lista alertas ativos de anomalias' })\n  @ApiResponse({ status: 200, description: 'Alertas listados com sucesso' })\n  @ApiQuery({\n    name: 'prioridade',\n    required: false,\n    type: String,\n    description: 'Filtro por prioridade (alta, media, baixa)',\n  })\n  @ApiQuery({\n    name: 'limite',\n    required: false,\n    type: Number,\n    description: 'Limite de alertas a serem retornados',\n  })\n  async listarAlertas(\n    @Query('prioridade') prioridade?: string,\n    @Query('limite') limite?: number,\n  ) {\n    // Implementação temporária até que o método seja adicionado ao serviço\n    return {\n      total: 0,\n      prioridade: prioridade || 'todas',\n      alertas: [],\n    };\n  }\n}\n"],"version":3}