{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\registro-metrica.entity.ts","mappings":";;;;;;;;;;;;;AAAA,qCAAiH;AACjH,qDAA2G;AAE3G,qDAA2C;AAE3C;;;;;;;;GAQG;AAEI,IAAM,eAAe,GAArB,MAAM,eAAe;IAE1B,EAAE,CAAS;IAMX,oBAAoB,CAAS;IAI7B,OAAO,CAAU;IAKjB,KAAK,CAAS;IAId,UAAU,CAAO;IAGjB,QAAQ,CAAsB;IAK9B,SAAS,CAAS;IAMlB,UAAU,CAAS;IAMnB,QAAQ,CAAS;CAClB,CAAA;AA1CY,0CAAe;AAE1B;IADC,IAAA,gCAAsB,EAAC,MAAM,CAAC;;2CACpB;AAMX;IAJC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IACxB,IAAA,eAAK,EAAC,qCAAqC,CAAC;IAC5C,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,0CAA0C,EAAE,CAAC;IACnE,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC;;6DACnC;AAI7B;IAFC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,wBAAO,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;IACxD,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;kDAC1B,wBAAO,oBAAP,wBAAO;gDAAC;AAKjB;IAHC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IACpD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC;IAC9C,IAAA,0BAAQ,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;;8CACxC;AAId;IAFC,IAAA,0BAAgB,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;IACxC,IAAA,eAAK,EAAC,kCAAkC,CAAC;kDAC9B,IAAI,oBAAJ,IAAI;mDAAC;AAGjB;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;kDAChC,MAAM,oBAAN,MAAM;iDAAc;AAK9B;IAHC,IAAA,gBAAM,EAAC,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACtC,IAAA,4BAAU,GAAE;IACZ,IAAA,sBAAI,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;;kDACpC;AAMlB;IAJC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACxC,IAAA,eAAK,EAAC,mCAAmC,CAAC;IAC1C,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;;mDAChC;AAMnB;IAJC,IAAA,gBAAM,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACvC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC;IACrD,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;;iDACzD;0BAzCN,eAAe;IAD3B,IAAA,gBAAM,EAAC,oBAAoB,CAAC;GAChB,eAAe,CA0C3B","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\registro-metrica.entity.ts"],"sourcesContent":["import { Entity, PrimaryGeneratedColumn, Column, Index, ManyToOne, JoinColumn, CreateDateColumn } from 'typeorm';\nimport { IsNotEmpty, IsUUID, IsOptional, IsNumber, Min, IsString, MaxLength, IsIP } from 'class-validator';\nimport { MetricaDefinicao } from './metrica-definicao.entity';\nimport { Metrica } from './metrica.entity';\n\n/**\n * Entidade que representa um registro de métrica\n * \n * Esta entidade armazena os valores coletados para uma métrica específica,\n * incluindo o timestamp da coleta e detalhes adicionais.\n * \n * A tabela é particionada por tempo para otimizar o desempenho em consultas\n * com grandes volumes de dados.\n */\n@Entity('registros_metricas')\nexport class RegistroMetrica {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ type: 'uuid' })\n  @Index('idx_registros_metricas_definicao_id')\n  @IsNotEmpty({ message: 'ID da definição de métrica é obrigatório' })\n  @IsUUID('4', { message: 'ID da definição de métrica inválido' })\n  metrica_definicao_id: string;\n\n  @ManyToOne(() => Metrica, (metrica) => metrica.registros)\n  @JoinColumn({ name: 'metrica_id' })\n  metrica: Metrica;\n\n  @Column({ type: 'numeric', precision: 15, scale: 2 })\n  @IsNotEmpty({ message: 'Valor é obrigatório' })\n  @IsNumber({}, { message: 'Valor deve ser um número' })\n  valor: number;\n\n  @CreateDateColumn({ name: 'created_at' })\n  @Index('idx_registros_metricas_timestamp')\n  created_at: Date;\n\n  @Column({ type: 'jsonb', nullable: true })\n  detalhes: Record<string, any>;\n\n  @Column({ length: 45, nullable: true })\n  @IsOptional()\n  @IsIP(undefined, { message: 'IP de origem inválido' })\n  ip_origem: string;\n\n  @Column({ type: 'uuid', nullable: true })\n  @Index('idx_registros_metricas_usuario_id')\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do usuário inválido' })\n  usuario_id: string;\n\n  @Column({ length: 255, nullable: true })\n  @IsOptional()\n  @IsString({ message: 'Endpoint deve ser uma string' })\n  @MaxLength(255, { message: 'Endpoint deve ter no máximo 255 caracteres' })\n  endpoint: string;\n}\n"],"version":3}