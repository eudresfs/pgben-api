36fbb81f9a8dcf338c562077894abd42
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Recurso = exports.StatusRecurso = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const solicitacao_entity_1 = require("./solicitacao.entity");
const usuario_entity_1 = require("./usuario.entity");
const setor_entity_1 = require("./setor.entity");
const recurso_historico_entity_1 = require("./recurso-historico.entity");
var StatusRecurso;
(function (StatusRecurso) {
    StatusRecurso["PENDENTE"] = "pendente";
    StatusRecurso["EM_ANALISE"] = "em_analise";
    StatusRecurso["DEFERIDO"] = "deferido";
    StatusRecurso["INDEFERIDO"] = "indeferido";
    StatusRecurso["CANCELADO"] = "cancelado";
})(StatusRecurso || (exports.StatusRecurso = StatusRecurso = {}));
let Recurso = class Recurso {
    id;
    solicitacao_id;
    solicitacao;
    justificativa;
    status;
    created_at;
    data_analise;
    analista_id;
    analista;
    parecer;
    documentos_adicionais;
    motivo_indeferimento;
    prazo_analise;
    setor_responsavel_id;
    setor_responsavel;
    historicos;
    // Campos para controle de alteração de status
    statusAnterior;
    usuarioAlteracao;
    observacaoAlteracao;
    ipUsuario;
    /**
     * Prepara a alteração de status para posterior registro no histórico
     * @param novoStatus Novo status do recurso
     * @param usuario ID do usuário que realizou a alteração
     * @param observacao Observação sobre a alteração
     * @param ip IP do usuário que realizou a alteração
     */
    prepararAlteracaoStatus(novoStatus, usuario, observacao, ip) {
        this.statusAnterior = this.status;
        this.status = novoStatus;
        this.usuarioAlteracao = usuario;
        this.observacaoAlteracao = observacao;
        this.ipUsuario = ip;
    }
    // REMOVIDO: @AfterUpdate logStatusChange()
    // O logging de histórico agora é feito diretamente nos serviços
    // que têm acesso ao DataSource e repositórios adequados.
    // Isso evita o erro ConnectionNotFoundError que ocorria quando
    // o método tentava usar getRepository() sem contexto de conexão.
    updated_at;
    removed_at;
};
exports.Recurso = Recurso;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Recurso.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Solicitação é obrigatória' }),
    __metadata("design:type", String)
], Recurso.prototype, "solicitacao_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => solicitacao_entity_1.Solicitacao, { eager: false }),
    (0, typeorm_1.JoinColumn)({ name: 'solicitacao_id' }),
    __metadata("design:type", typeof (_a = typeof solicitacao_entity_1.Solicitacao !== "undefined" && solicitacao_entity_1.Solicitacao) === "function" ? _a : Object)
], Recurso.prototype, "solicitacao", void 0);
__decorate([
    (0, typeorm_1.Column)('text'),
    (0, class_validator_1.IsNotEmpty)({ message: 'Justificativa é obrigatória' }),
    __metadata("design:type", String)
], Recurso.prototype, "justificativa", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: StatusRecurso,
        enumName: 'status_recurso',
        default: StatusRecurso.PENDENTE,
    }),
    __metadata("design:type", String)
], Recurso.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Data de criação é obrigatória' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Recurso.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], Recurso.prototype, "data_analise", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Recurso.prototype, "analista_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'analista_id' }),
    __metadata("design:type", typeof (_d = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _d : Object)
], Recurso.prototype, "analista", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Recurso.prototype, "parecer", void 0);
__decorate([
    (0, typeorm_1.Column)('jsonb', { nullable: true }),
    __metadata("design:type", typeof (_e = typeof Record !== "undefined" && Record) === "function" ? _e : Object)
], Recurso.prototype, "documentos_adicionais", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true, length: 100 }),
    __metadata("design:type", String)
], Recurso.prototype, "motivo_indeferimento", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 5 }),
    __metadata("design:type", Number)
], Recurso.prototype, "prazo_analise", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Recurso.prototype, "setor_responsavel_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => setor_entity_1.Setor),
    (0, typeorm_1.JoinColumn)({ name: 'setor_responsavel_id' }),
    __metadata("design:type", typeof (_f = typeof setor_entity_1.Setor !== "undefined" && setor_entity_1.Setor) === "function" ? _f : Object)
], Recurso.prototype, "setor_responsavel", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => recurso_historico_entity_1.RecursoHistorico, (historico) => historico.recurso, {
        cascade: ['insert', 'update'],
    }),
    __metadata("design:type", Array)
], Recurso.prototype, "historicos", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Recurso.prototype, "statusAnterior", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Recurso.prototype, "usuarioAlteracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Recurso.prototype, "observacaoAlteracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Recurso.prototype, "ipUsuario", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_g = typeof Date !== "undefined" && Date) === "function" ? _g : Object)
], Recurso.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)(),
    __metadata("design:type", typeof (_h = typeof Date !== "undefined" && Date) === "function" ? _h : Object)
], Recurso.prototype, "removed_at", void 0);
exports.Recurso = Recurso = __decorate([
    (0, typeorm_1.Entity)('recurso'),
    (0, typeorm_1.Index)(['solicitacao_id']),
    (0, typeorm_1.Index)(['status']),
    (0, typeorm_1.Index)(['status', 'setor_responsavel_id']),
    (0, typeorm_1.Index)(['created_at'])
], Recurso);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,