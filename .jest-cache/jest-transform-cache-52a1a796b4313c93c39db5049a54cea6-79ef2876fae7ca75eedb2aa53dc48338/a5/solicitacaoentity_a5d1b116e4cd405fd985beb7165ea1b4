31d4e39bf1d6e71d0b0af5183decb7e2
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusSolicitacao = exports.Solicitacao = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const cidadao_entity_1 = require("./cidadao.entity");
const tipo_beneficio_entity_1 = require("./tipo-beneficio.entity");
const usuario_entity_1 = require("./usuario.entity");
const unidade_entity_1 = require("./unidade.entity");
const documento_entity_1 = require("./documento.entity");
const historico_solicitacao_entity_1 = require("./historico-solicitacao.entity");
const pendencia_entity_1 = require("./pendencia.entity");
const processo_judicial_entity_1 = require("./processo-judicial.entity");
const determinacao_judicial_entity_1 = require("./determinacao-judicial.entity");
const status_solicitacao_enum_1 = require("../enums/status-solicitacao.enum");
Object.defineProperty(exports, "StatusSolicitacao", { enumerable: true, get: function () { return status_solicitacao_enum_1.StatusSolicitacao; } });
let Solicitacao = class Solicitacao {
    id;
    protocolo;
    generateProtocol() {
        const date = new Date();
        const random = Math.floor(Math.random() * 10000)
            .toString()
            .padStart(4, '0');
        this.protocolo = `SOL${date.getFullYear()}${(date.getMonth() + 1).toString().padStart(2, '0')}${random}`;
    }
    statusAnterior;
    usuarioAlteracao;
    observacaoAlteracao;
    ipUsuario;
    /**
     * Prepara a alteração de status para posterior registro no histórico
     * @param novoStatus Novo status da solicitação
     * @param usuario ID do usuário que realizou a alteração
     * @param observacao Observação sobre a alteração
     * @param ip IP do usuário que realizou a alteração
     */
    prepararAlteracaoStatus(novoStatus, usuario, observacao, ip) {
        this.statusAnterior = this.status;
        this.status = novoStatus;
        this.usuarioAlteracao = usuario;
        this.observacaoAlteracao = observacao;
        this.ipUsuario = ip;
    }
    // REMOVIDO: @AfterUpdate logStatusChange()
    // O logging de histórico agora é feito diretamente nos serviços
    // que têm acesso ao DataSource e repositórios adequados.
    // Isso evita o erro ConnectionNotFoundError que ocorria quando
    // o método tentava usar getRepository() sem contexto de conexão.
    beneficiario_id;
    beneficiario;
    tipo_beneficio_id;
    tipo_beneficio;
    unidade_id;
    unidade;
    tecnico_id;
    tecnico;
    data_abertura;
    status;
    parecer_semtas;
    aprovador_id;
    aprovador;
    data_aprovacao;
    data_liberacao;
    liberador_id;
    liberador;
    observacoes;
    dados_complementares;
    documentos;
    /**
     * Relação com histórico de status da solicitação
     */
    historico;
    /**
     * Relação com histórico de status da solicitação
     */
    pendencias;
    /**
     * Controle de versão para detectar e prevenir atualizações concorrentes
     * Este campo é incrementado automaticamente a cada atualização
     */
    version;
    /**
     * Relação com processo judicial
     * Esta relação é gerenciada pelo módulo de solicitação, não pelo módulo judicial
     */
    processo_judicial_id;
    processo_judicial;
    /**
     * Relação com determinação judicial
     * Esta relação é gerenciada pelo módulo de solicitação, não pelo módulo judicial
     */
    determinacao_judicial_id;
    determinacao_judicial;
    /**
     * Flag que indica se a solicitação tem determinação judicial
     */
    determinacao_judicial_flag;
    /**
     * Relação com solicitação original (auto-relacionamento)
     * Usado para renovações, revisões ou outras solicitações derivadas
     */
    solicitacao_original_id;
    solicitacao_original;
    /**
     * Campos para suporte a renovação automática
     */
    renovacao_automatica;
    contador_renovacoes;
    data_proxima_renovacao;
    /**
     * Dados dinâmicos específicos para cada tipo de benefício
     */
    dados_dinamicos;
    /**
     * Data limite para conclusão da análise da solicitação
     * Utilizado para controle de SLA do processo de análise
     */
    prazo_analise;
    /**
     * Data limite para envio de documentos pelo cidadão
     * Utilizado quando a solicitação está no estado AGUARDANDO_DOCUMENTOS
     */
    prazo_documentos;
    /**
     * Data limite para conclusão do processamento da solicitação
     * Utilizado quando a solicitação está no estado EM_PROCESSAMENTO
     */
    prazo_processamento;
    created_at;
    updated_at;
    removed_at;
};
exports.Solicitacao = Solicitacao;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Solicitacao.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ unique: true }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Protocolo é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "protocolo", void 0);
__decorate([
    (0, typeorm_1.BeforeInsert)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], Solicitacao.prototype, "generateProtocol", null);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", typeof (_a = typeof status_solicitacao_enum_1.StatusSolicitacao !== "undefined" && status_solicitacao_enum_1.StatusSolicitacao) === "function" ? _a : Object)
], Solicitacao.prototype, "statusAnterior", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Solicitacao.prototype, "usuarioAlteracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Solicitacao.prototype, "observacaoAlteracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Solicitacao.prototype, "ipUsuario", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Beneficiário é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "beneficiario_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => cidadao_entity_1.Cidadao, { eager: false }),
    (0, typeorm_1.JoinColumn)({ name: 'beneficiario_id' }),
    __metadata("design:type", typeof (_b = typeof cidadao_entity_1.Cidadao !== "undefined" && cidadao_entity_1.Cidadao) === "function" ? _b : Object)
], Solicitacao.prototype, "beneficiario", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de benefício é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "tipo_beneficio_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => tipo_beneficio_entity_1.TipoBeneficio),
    (0, typeorm_1.JoinColumn)({ name: 'tipo_beneficio_id' }),
    __metadata("design:type", typeof (_c = typeof tipo_beneficio_entity_1.TipoBeneficio !== "undefined" && tipo_beneficio_entity_1.TipoBeneficio) === "function" ? _c : Object)
], Solicitacao.prototype, "tipo_beneficio", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Unidade é obrigatória' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "unidade_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => unidade_entity_1.Unidade),
    (0, typeorm_1.JoinColumn)({ name: 'unidade_id' }),
    __metadata("design:type", typeof (_d = typeof unidade_entity_1.Unidade !== "undefined" && unidade_entity_1.Unidade) === "function" ? _d : Object)
], Solicitacao.prototype, "unidade", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Técnico responsável é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "tecnico_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'tecnico_id' }),
    __metadata("design:type", typeof (_e = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _e : Object)
], Solicitacao.prototype, "tecnico", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Data de abertura é obrigatória' }),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], Solicitacao.prototype, "data_abertura", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: status_solicitacao_enum_1.StatusSolicitacao,
        enumName: 'status_solicitacao',
        default: status_solicitacao_enum_1.StatusSolicitacao.RASCUNHO,
    }),
    __metadata("design:type", typeof (_g = typeof status_solicitacao_enum_1.StatusSolicitacao !== "undefined" && status_solicitacao_enum_1.StatusSolicitacao) === "function" ? _g : Object)
], Solicitacao.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Solicitacao.prototype, "parecer_semtas", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "aprovador_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'aprovador_id' }),
    __metadata("design:type", typeof (_h = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _h : Object)
], Solicitacao.prototype, "aprovador", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_j = typeof Date !== "undefined" && Date) === "function" ? _j : Object)
], Solicitacao.prototype, "data_aprovacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_k = typeof Date !== "undefined" && Date) === "function" ? _k : Object)
], Solicitacao.prototype, "data_liberacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "liberador_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'liberador_id' }),
    __metadata("design:type", typeof (_l = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _l : Object)
], Solicitacao.prototype, "liberador", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Solicitacao.prototype, "observacoes", void 0);
__decorate([
    (0, typeorm_1.Column)('jsonb', { nullable: true }),
    __metadata("design:type", typeof (_m = typeof Record !== "undefined" && Record) === "function" ? _m : Object)
], Solicitacao.prototype, "dados_complementares", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => documento_entity_1.Documento, (documento) => documento.solicitacao, {
        cascade: ['insert', 'update'],
        onDelete: 'RESTRICT',
    }),
    __metadata("design:type", Array)
], Solicitacao.prototype, "documentos", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => historico_solicitacao_entity_1.HistoricoSolicitacao, (historico) => historico.solicitacao, {
        cascade: ['insert'],
        onDelete: 'CASCADE',
    }),
    __metadata("design:type", Array)
], Solicitacao.prototype, "historico", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => pendencia_entity_1.Pendencia, (pendencia) => pendencia.solicitacao, {
        cascade: ['insert'],
        onDelete: 'CASCADE',
    }),
    __metadata("design:type", Array)
], Solicitacao.prototype, "pendencias", void 0);
__decorate([
    (0, typeorm_1.VersionColumn)(),
    __metadata("design:type", Number)
], Solicitacao.prototype, "version", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "processo_judicial_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => processo_judicial_entity_1.ProcessoJudicial, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'processo_judicial_id' }),
    __metadata("design:type", typeof (_o = typeof processo_judicial_entity_1.ProcessoJudicial !== "undefined" && processo_judicial_entity_1.ProcessoJudicial) === "function" ? _o : Object)
], Solicitacao.prototype, "processo_judicial", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "determinacao_judicial_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => determinacao_judicial_entity_1.DeterminacaoJudicial, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'determinacao_judicial_id' }),
    __metadata("design:type", typeof (_p = typeof determinacao_judicial_entity_1.DeterminacaoJudicial !== "undefined" && determinacao_judicial_entity_1.DeterminacaoJudicial) === "function" ? _p : Object)
], Solicitacao.prototype, "determinacao_judicial", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'determinacao_judicial_flag',
        type: 'boolean',
        default: false,
    }),
    __metadata("design:type", Boolean)
], Solicitacao.prototype, "determinacao_judicial_flag", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "solicitacao_original_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => Solicitacao, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'solicitacao_original_id' }),
    __metadata("design:type", Solicitacao)
], Solicitacao.prototype, "solicitacao_original", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'renovacao_automatica', type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], Solicitacao.prototype, "renovacao_automatica", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'contador_renovacoes', type: 'integer', default: 0 }),
    __metadata("design:type", Number)
], Solicitacao.prototype, "contador_renovacoes", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'data_proxima_renovacao', type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_q = typeof Date !== "undefined" && Date) === "function" ? _q : Object)
], Solicitacao.prototype, "data_proxima_renovacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'dados_dinamicos', type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_r = typeof Record !== "undefined" && Record) === "function" ? _r : Object)
], Solicitacao.prototype, "dados_dinamicos", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'prazo_analise', type: 'timestamp', nullable: true }),
    __metadata("design:type", Object)
], Solicitacao.prototype, "prazo_analise", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'prazo_documentos', type: 'timestamp', nullable: true }),
    __metadata("design:type", Object)
], Solicitacao.prototype, "prazo_documentos", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'prazo_processamento', type: 'timestamp', nullable: true }),
    __metadata("design:type", Object)
], Solicitacao.prototype, "prazo_processamento", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_v = typeof Date !== "undefined" && Date) === "function" ? _v : Object)
], Solicitacao.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_w = typeof Date !== "undefined" && Date) === "function" ? _w : Object)
], Solicitacao.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)(),
    __metadata("design:type", typeof (_x = typeof Date !== "undefined" && Date) === "function" ? _x : Object)
], Solicitacao.prototype, "removed_at", void 0);
exports.Solicitacao = Solicitacao = __decorate([
    (0, typeorm_1.Entity)('solicitacao'),
    (0, typeorm_1.Index)(['protocolo'], { unique: true }),
    (0, typeorm_1.Index)(['status', 'unidade_id']),
    (0, typeorm_1.Index)(['status', 'tipo_beneficio_id']),
    (0, typeorm_1.Index)(['data_abertura', 'status']),
    (0, typeorm_1.Index)(['status'], { where: "status IN ('pendente', 'em_analise')" }),
    (0, typeorm_1.Index)(['processo_judicial_id'], { where: 'processo_judicial_id IS NOT NULL' }),
    (0, typeorm_1.Index)(['determinacao_judicial_id'], {
        where: 'determinacao_judicial_id IS NOT NULL',
    })
], Solicitacao);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,