83653e47a0b8fa4f77920fbadb6688f5
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationTemplateController_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationTemplateController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../../auth/guards/roles.guard");
const role_decorator_1 = require("../../../auth/decorators/role.decorator");
const notification_manager_service_1 = require("../services/notification-manager.service");
const create_notification_template_dto_1 = require("../dtos/create-notification-template.dto");
const roles_constants_1 = require("../../../shared/constants/roles.constants");
/**
 * Controlador para gerenciamento de templates de notificação
 */
let NotificationTemplateController = NotificationTemplateController_1 = class NotificationTemplateController {
    notificationManagerService;
    logger = new common_1.Logger(NotificationTemplateController_1.name);
    constructor(notificationManagerService) {
        this.notificationManagerService = notificationManagerService;
    }
    /**
     * Cria um novo template de notificação
     */
    async criarTemplate(createTemplateDto) {
        this.logger.log(`Criando novo template: ${createTemplateDto.nome}`);
        return this.notificationManagerService.criarTemplate(createTemplateDto);
    }
    /**
     * Lista todos os templates de notificação com paginação e filtros
     */
    async listarTemplates(page, limit, ativo) {
        return this.notificationManagerService.listarTemplates({
            page: page ? Number(page) : undefined,
            limit: limit ? Number(limit) : undefined,
            ativo: ativo !== undefined ? ativo === true : undefined,
        });
    }
    /**
     * Obtém um template de notificação pelo ID
     */
    async buscarTemplatePorId(id) {
        return this.notificationManagerService.buscarTemplatePorId(id);
    }
    /**
     * Ativa um template de notificação
     */
    async ativarTemplate(id) {
        this.logger.log(`Ativando template ID: ${id}`);
        return this.notificationManagerService.ativarTemplate(id);
    }
    /**
     * Desativa um template de notificação
     */
    async desativarTemplate(id) {
        this.logger.log(`Desativando template ID: ${id}`);
        return this.notificationManagerService.desativarTemplate(id);
    }
};
exports.NotificationTemplateController = NotificationTemplateController;
__decorate([
    (0, common_1.Post)(),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN),
    (0, swagger_1.ApiOperation)({ summary: 'Criar um novo template de notificação' }),
    (0, swagger_1.ApiResponse)({
        status: 201,
        description: 'Template criado com sucesso',
    }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof create_notification_template_dto_1.CreateNotificationTemplateDto !== "undefined" && create_notification_template_dto_1.CreateNotificationTemplateDto) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], NotificationTemplateController.prototype, "criarTemplate", null);
__decorate([
    (0, common_1.Get)(),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN, roles_constants_1.ROLES.GESTOR),
    (0, swagger_1.ApiOperation)({ summary: 'Listar templates de notificação' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de templates retornada com sucesso',
    }),
    __param(0, (0, common_1.Query)('page')),
    __param(1, (0, common_1.Query)('limit')),
    __param(2, (0, common_1.Query)('ativo')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number, Number, Boolean]),
    __metadata("design:returntype", Promise)
], NotificationTemplateController.prototype, "listarTemplates", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN, roles_constants_1.ROLES.GESTOR),
    (0, swagger_1.ApiOperation)({ summary: 'Obter template por ID' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Template encontrado',
    }),
    (0, swagger_1.ApiResponse)({
        status: 404,
        description: 'Template não encontrado',
    }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], NotificationTemplateController.prototype, "buscarTemplatePorId", null);
__decorate([
    (0, common_1.Put)(':id/ativar'),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN),
    (0, swagger_1.ApiOperation)({ summary: 'Ativar template de notificação' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Template ativado com sucesso',
    }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], NotificationTemplateController.prototype, "ativarTemplate", null);
__decorate([
    (0, common_1.Put)(':id/desativar'),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN),
    (0, swagger_1.ApiOperation)({ summary: 'Desativar template de notificação' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Template desativado com sucesso',
    }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], NotificationTemplateController.prototype, "desativarTemplate", null);
exports.NotificationTemplateController = NotificationTemplateController = NotificationTemplateController_1 = __decorate([
    (0, swagger_1.ApiTags)('Notificações'),
    (0, common_1.Controller)('notificacao/templates'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof notification_manager_service_1.NotificationManagerService !== "undefined" && notification_manager_service_1.NotificationManagerService) === "function" ? _a : Object])
], NotificationTemplateController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,