{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\versao-schema-beneficio.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\versao-schema-beneficio.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  Min,\n  IsBoolean,\n  IsOptional,\n} from 'class-validator';\nimport { TipoBeneficio } from './tipo-beneficio.entity';\n\n/**\n * Entidade para versionamento de schema de benefícios\n *\n * Permite controlar a evolução do schema de campos dinâmicos sem quebrar\n * dados existentes, mantendo um histórico de versões.\n */\n@Entity('versao_schema_beneficio')\n@Index(['tipo_beneficio_id', 'versao'], { unique: true })\nexport class VersaoSchemaBeneficio {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'Tipo de benefício é obrigatório' })\n  tipo_beneficio_id: string;\n\n  @ManyToOne(() => TipoBeneficio)\n  @JoinColumn({ name: 'tipo_beneficio_id' })\n  tipo_beneficio: TipoBeneficio;\n\n  @Column('varchar')\n  @IsNotEmpty({ message: 'Versão é obrigatória' })\n  versao: string;\n\n  @Column('jsonb')\n  @IsNotEmpty({ message: 'Schema é obrigatório' })\n  schema: any;\n\n  @Column('text', { nullable: true })\n  @IsOptional()\n  descricao_mudancas: string;\n\n  @Column({ default: true })\n  @IsBoolean({ message: 'Ativo deve ser um booleano' })\n  ativo: boolean;\n\n  @Column('timestamp')\n  @IsNotEmpty({ message: 'Data de início de vigência é obrigatória' })\n  data_inicio_vigencia: Date;\n\n  @Column('timestamp', { nullable: true })\n  @IsOptional()\n  data_fim_vigencia: Date;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  // Getters e Setters\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se a versão foi criada recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se a versão está ativa\n   */\n  isAtiva(): boolean {\n    return this.ativo;\n  }\n\n  /**\n   * Verifica se tem descrição de mudanças\n   */\n  temDescricaoMudancas(): boolean {\n    return (\n      !!this.descricao_mudancas && this.descricao_mudancas.trim().length > 0\n    );\n  }\n\n  /**\n   * Obtém a descrição das mudanças ou uma mensagem padrão\n   */\n  getDescricaoMudancas(): string {\n    return this.descricao_mudancas || 'Sem descrição de mudanças disponível';\n  }\n\n  /**\n   * Verifica se o schema tem campos obrigatórios\n   */\n  temCamposObrigatorios(): boolean {\n    if (!this.schema || !Array.isArray(this.schema.campos)) {\n      return false;\n    }\n    return this.schema.campos.some((campo: any) => campo.obrigatorio === true);\n  }\n\n  /**\n   * Obtém o número de campos no schema\n   */\n  getNumeroCampos(): number {\n    if (!this.schema || !Array.isArray(this.schema.campos)) {\n      return 0;\n    }\n    return this.schema.campos.length;\n  }\n\n  /**\n   * Obtém os tipos de campos únicos no schema\n   */\n  getTiposCampos(): string[] {\n    if (!this.schema || !Array.isArray(this.schema.campos)) {\n      return [];\n    }\n    const tipos =\n      this.schema.campos\n        ?.map((campo: any) => campo.tipo)\n        .filter((tipo: any): tipo is string => typeof tipo === 'string') || [];\n    return Array.from(new Set(tipos)) as string[];\n  }\n\n  /**\n   * Verifica se o schema é compatível com uma versão anterior\n   */\n  isCompativelCom(versaoAnterior: VersaoSchemaBeneficio): boolean {\n    if (!versaoAnterior || !versaoAnterior.schema) {\n      return false;\n    }\n\n    // Verifica se todos os campos obrigatórios da versão anterior ainda existem\n    const camposAnteriores = versaoAnterior.schema.campos || [];\n    const camposAtuais = this.schema.campos || [];\n\n    return camposAnteriores\n      .filter((campo: any) => campo.obrigatorio)\n      .every((campoObrigatorio: any) =>\n        camposAtuais.some(\n          (campoAtual: any) =>\n            campoAtual.nome === campoObrigatorio.nome &&\n            campoAtual.tipo === campoObrigatorio.tipo,\n        ),\n      );\n  }\n\n  /**\n   * Obtém um resumo da versão\n   */\n  getSummary(): string {\n    const numeroCampos = this.getNumeroCampos();\n    const status = this.isAtiva() ? 'Ativa' : 'Inativa';\n    return `Versão ${this.versao} - ${numeroCampos} campos - ${status}`;\n  }\n\n  /**\n   * Gera uma chave única para a versão\n   */\n  getUniqueKey(): string {\n    return `${this.tipo_beneficio_id}-v${this.versao}`;\n  }\n\n  /**\n   * Verifica se a versão pode ser removida\n   */\n  podeSerRemovida(): boolean {\n    return !this.isAtiva();\n  }\n\n  /**\n   * Obtém a data de criação formatada\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  }\n\n  /**\n   * Obtém a data de atualização formatada\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<VersaoSchemaBeneficio> {\n    return {\n      id: this.id,\n      tipo_beneficio_id: this.tipo_beneficio_id,\n      versao: this.versao,\n      ativo: this.ativo,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Obtém sugestões de melhoria para a versão\n   */\n  getSugestoesMelhoria(): string[] {\n    const sugestoes: string[] = [];\n\n    if (!this.temDescricaoMudancas()) {\n      sugestoes.push(\n        'Adicionar descrição das mudanças para melhor rastreabilidade',\n      );\n    }\n\n    if (this.getNumeroCampos() === 0) {\n      sugestoes.push('Schema não possui campos definidos');\n    }\n\n    if (!this.temCamposObrigatorios()) {\n      sugestoes.push('Considerar adicionar campos obrigatórios para validação');\n    }\n\n    const tiposCampos = this.getTiposCampos();\n    if (tiposCampos.length === 1 && tiposCampos[0] === 'string') {\n      sugestoes.push(\n        'Considerar diversificar tipos de campos para melhor validação',\n      );\n    }\n\n    return sugestoes;\n  }\n\n  /**\n   * Verifica se a versão precisa de atualização\n   */\n  precisaAtualizacao(): boolean {\n    const idadeEmDias = this.getIdadeRegistroEmDias();\n    return idadeEmDias > 365 && this.isAtiva(); // Versões ativas com mais de 1 ano\n  }\n\n  /**\n   * Simula a migração de dados de uma versão anterior\n   */\n  simularMigracao(\n    versaoOrigem: VersaoSchemaBeneficio,\n    dadosExemplo: any,\n  ): {\n    sucesso: boolean;\n    dadosMigrados?: any;\n    erros?: string[];\n    avisos?: string[];\n  } {\n    const erros: string[] = [];\n    const avisos: string[] = [];\n\n    if (!this.isCompativelCom(versaoOrigem)) {\n      erros.push('Versões não são compatíveis para migração automática');\n      return { sucesso: false, erros };\n    }\n\n    try {\n      const dadosMigrados = { ...dadosExemplo };\n      const camposNovos = this.schema.campos || [];\n      const camposAntigos = versaoOrigem.schema.campos || [];\n\n      // Verifica campos removidos\n      camposAntigos.forEach((campoAntigo: any) => {\n        const campoExiste = camposNovos.some(\n          (campo: any) => campo.nome === campoAntigo.nome,\n        );\n        if (!campoExiste) {\n          avisos.push(\n            `Campo '${campoAntigo.nome}' foi removido na nova versão`,\n          );\n          delete dadosMigrados[campoAntigo.nome];\n        }\n      });\n\n      // Verifica campos novos obrigatórios\n      camposNovos.forEach((campoNovo: any) => {\n        const campoExistia = camposAntigos.some(\n          (campo: any) => campo.nome === campoNovo.nome,\n        );\n        if (!campoExistia && campoNovo.obrigatorio) {\n          avisos.push(\n            `Campo obrigatório '${campoNovo.nome}' foi adicionado - valor padrão necessário`,\n          );\n        }\n      });\n\n      return {\n        sucesso: true,\n        dadosMigrados,\n        avisos: avisos.length > 0 ? avisos : undefined,\n      };\n    } catch (error) {\n      erros.push(`Erro durante simulação de migração: ${error.message}`);\n      return { sucesso: false, erros };\n    }\n  }\n}\n"],"version":3}