{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\controllers\\papel-conflito.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAA+E;AAC/E,6CAKyB;AACzB,wEAAmE;AACnE,4EAAwE;AACxE,0GAA4F;AAC5F,qFAAgF;AAChF,0FAAoF;AACpF,4GAGwD;AAExD;;;;;GAKG;AAKI,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAEf;IADnB,YACmB,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;IAChE,CAAC;IAEJ;;;;OAIG;IAaG,AAAN,KAAK,CAAC,kBAAkB,CACd,cAA2C;QAEnD,OAAO,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAC7D,cAAc,CAAC,UAAU,EACzB,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAC7C,CAAC;IACJ,CAAC;IAED;;;OAGG;IAaG,AAAN,KAAK,CAAC,oBAAoB;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,EAAE,CAAC;IAC7D,CAAC;IAED;;;;OAIG;IAYG,AAAN,KAAK,CAAC,yBAAyB,CACT,SAAiB;QAErC,OAAO,IAAI,CAAC,uBAAuB,CAAC,kCAAkC,CACpE,SAAS,CACV,CAAC;IACJ,CAAC;CACF,CAAA;AA1EY,0DAAuB;AAsB5B;IAZL,IAAA,aAAI,EAAC,WAAW,CAAC;IACjB,IAAA,kDAAkB,EAAC,EAAE,cAAc,EAAE,kCAAkC,EAAE,CAAC;IAC1E,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,iCAAiC;QAC1C,WAAW,EACT,6FAA6F;KAChG,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,mCAAmC;QAChD,IAAI,EAAE,6EAAmC;KAC1C,CAAC;IAEC,WAAA,IAAA,aAAI,GAAE,CAAA;;yDAAiB,4DAA2B,oBAA3B,4DAA2B;wDAClD,OAAO,oBAAP,OAAO;iEAKT;AAkBK;IAZL,IAAA,YAAG,EAAC,QAAQ,CAAC;IACb,IAAA,kDAAkB,EAAC,EAAE,cAAc,EAAE,gCAAgC,EAAE,CAAC;IACxE,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,uCAAuC;QAChD,WAAW,EACT,0EAA0E;KAC7E,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,uCAAuC;QACpD,IAAI,EAAE,CAAC,0DAAgB,CAAC;KACzB,CAAC;;;wDAC4B,OAAO,oBAAP,OAAO;mEAEpC;AAkBK;IAXL,IAAA,YAAG,EAAC,oBAAoB,CAAC;IACzB,IAAA,kDAAkB,EAAC,EAAE,cAAc,EAAE,kCAAkC,EAAE,CAAC;IAC1E,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,8CAA8C;QACvD,WAAW,EAAE,8DAA8D;KAC5E,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,mCAAmC;QAChD,IAAI,EAAE,6EAAmC;KAC1C,CAAC;IAEC,WAAA,IAAA,cAAK,EAAC,WAAW,CAAC,CAAA;;;wDAClB,OAAO,oBAAP,OAAO;wEAIT;kCAzEU,uBAAuB;IAJnC,IAAA,iBAAO,EAAC,SAAS,CAAC;IAClB,IAAA,mBAAU,EAAC,wBAAwB,CAAC;IACpC,IAAA,kBAAS,EAAC,6BAAY,EAAE,kCAAe,CAAC;IACxC,IAAA,uBAAa,GAAE;yDAG8B,mDAAuB,oBAAvB,mDAAuB;GAFxD,uBAAuB,CA0EnC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\controllers\\papel-conflito.controller.ts"],"sourcesContent":["import { Controller, Post, Body, UseGuards, Get, Param } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { VerificacaoPapelService } from '../services/verificacao-papel.service';\nimport { VerificacaoPapelConflitoDto } from '../dto/verificacao-papel-conflito.dto';\nimport {\n  VerificacaoPapelConflitoResponseDto,\n  RegraConflitoDto,\n} from '../dto/verificacao-papel-conflito-response.dto';\n\n/**\n * Controller de Verificação de Papéis Conflitantes\n *\n * Responsável por expor os endpoints de verificação de papéis conflitantes\n * para cidadãos, garantindo a integridade das regras de negócio.\n */\n@ApiTags('Cidadão')\n@Controller('cidadao/papel-conflito')\n@UseGuards(JwtAuthGuard, PermissionGuard)\n@ApiBearerAuth()\nexport class PapelConflitoController {\n  constructor(\n    private readonly verificacaoPapelService: VerificacaoPapelService,\n  ) {}\n\n  /**\n   * Verifica se existem conflitos entre papéis para um cidadão\n   * @param verificacaoDto Dados para verificação\n   * @returns Resultado da verificação\n   */\n  @Post('verificar')\n  @RequiresPermission({ permissionName: 'cidadao.verificar-papel-conflito' })\n  @ApiOperation({\n    summary: 'Verifica conflitos entre papéis',\n    description:\n      'Verifica se existem conflitos entre os papéis que um cidadão possui ou está tentando obter.',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Verificação realizada com sucesso',\n    type: VerificacaoPapelConflitoResponseDto,\n  })\n  async verificarConflitos(\n    @Body() verificacaoDto: VerificacaoPapelConflitoDto,\n  ): Promise<VerificacaoPapelConflitoResponseDto> {\n    return this.verificacaoPapelService.verificarPapeisConflitantes(\n      verificacaoDto.cidadao_id,\n      verificacaoDto.papeis.map((p) => p.papel_id),\n    );\n  }\n\n  /**\n   * Obtém as regras de conflito para papéis\n   * @returns Lista de regras de conflito\n   */\n  @Get('regras')\n  @RequiresPermission({ permissionName: 'cidadao.listar-regras-conflito' })\n  @ApiOperation({\n    summary: 'Lista regras de conflito entre papéis',\n    description:\n      'Retorna a lista de regras que definem conflitos entre papéis no sistema.',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de regras retornada com sucesso',\n    type: [RegraConflitoDto],\n  })\n  async listarRegrasConflito(): Promise<RegraConflitoDto[]> {\n    return this.verificacaoPapelService.listarRegrasConflito();\n  }\n\n  /**\n   * Verifica papéis conflitantes para um cidadão específico\n   * @param cidadaoId ID do cidadão\n   * @returns Resultado da verificação\n   */\n  @Get('cidadao/:cidadaoId')\n  @RequiresPermission({ permissionName: 'cidadao.verificar-papel-conflito' })\n  @ApiOperation({\n    summary: 'Verifica papéis conflitantes para um cidadão',\n    description: 'Verifica se o cidadão possui papéis conflitantes atualmente.',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Verificação realizada com sucesso',\n    type: VerificacaoPapelConflitoResponseDto,\n  })\n  async verificarConflitosCidadao(\n    @Param('cidadaoId') cidadaoId: string,\n  ): Promise<VerificacaoPapelConflitoResponseDto> {\n    return this.verificacaoPapelService.verificarPapeisConflitantesCidadao(\n      cidadaoId,\n    );\n  }\n}\n"],"version":3}