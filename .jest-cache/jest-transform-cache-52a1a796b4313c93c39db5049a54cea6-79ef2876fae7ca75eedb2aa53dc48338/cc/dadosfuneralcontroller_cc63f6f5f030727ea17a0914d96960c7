96981766018b290dab0f6fcd1aee4091
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DadosFuneralController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../../auth/guards/roles.guard");
const dados_funeral_service_1 = require("../services/dados-funeral.service");
const create_dados_funeral_dto_1 = require("../dto/create-dados-funeral.dto");
const dados_funeral_entity_1 = require("../../../entities/dados-funeral.entity");
/**
 * Controlador para gerenciar dados específicos do Auxílio Funeral
 */
let DadosFuneralController = class DadosFuneralController {
    dadosFuneralService;
    constructor(dadosFuneralService) {
        this.dadosFuneralService = dadosFuneralService;
    }
    /**
     * Criar dados de funeral para uma solicitação
     */
    async create(createDto) {
        return this.dadosFuneralService.create(createDto);
    }
    /**
     * Buscar dados de funeral por ID
     */
    async findOne(id) {
        return this.dadosFuneralService.findOne(id);
    }
    /**
     * Buscar dados de funeral por solicitação
     */
    async findBySolicitacao(solicitacaoId) {
        return this.dadosFuneralService.findBySolicitacao(solicitacaoId);
    }
    /**
     * Atualizar dados de funeral
     */
    async update(id, updateDto) {
        return this.dadosFuneralService.update(id, updateDto);
    }
    /**
     * Remover dados de funeral
     */
    async remove(id) {
        return this.dadosFuneralService.remove(id);
    }
};
exports.DadosFuneralController = DadosFuneralController;
__decorate([
    (0, common_1.Post)(),
    (0, swagger_1.ApiOperation)({
        summary: 'Criar dados de funeral',
        description: 'Cria dados específicos para solicitação de Auxílio Funeral',
    }),
    (0, swagger_1.ApiBody)({ type: create_dados_funeral_dto_1.CreateDadosFuneralDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.CREATED,
        description: 'Dados de funeral criados com sucesso',
        type: dados_funeral_entity_1.DadosFuneral,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof create_dados_funeral_dto_1.CreateDadosFuneralDto !== "undefined" && create_dados_funeral_dto_1.CreateDadosFuneralDto) === "function" ? _b : Object]),
    __metadata("design:returntype", typeof (_c = typeof Promise !== "undefined" && Promise) === "function" ? _c : Object)
], DadosFuneralController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de funeral por ID',
        description: 'Retorna os dados de funeral específicos pelo ID',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de funeral' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de funeral encontrados',
        type: dados_funeral_entity_1.DadosFuneral,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de funeral não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], DadosFuneralController.prototype, "findOne", null);
__decorate([
    (0, common_1.Get)('solicitacao/:solicitacaoId'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de funeral por solicitação',
        description: 'Retorna os dados de funeral de uma solicitação específica',
    }),
    (0, swagger_1.ApiParam)({ name: 'solicitacaoId', description: 'ID da solicitação' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de funeral encontrados',
        type: dados_funeral_entity_1.DadosFuneral,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de funeral não encontrados para esta solicitação',
    }),
    __param(0, (0, common_1.Param)('solicitacaoId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], DadosFuneralController.prototype, "findBySolicitacao", null);
__decorate([
    (0, common_1.Patch)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Atualizar dados de funeral',
        description: 'Atualiza dados específicos de uma solicitação de Auxílio Funeral',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de funeral' }),
    (0, swagger_1.ApiBody)({ type: create_dados_funeral_dto_1.UpdateDadosFuneralDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de funeral atualizados com sucesso',
        type: dados_funeral_entity_1.DadosFuneral,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de funeral não encontrados',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_f = typeof create_dados_funeral_dto_1.UpdateDadosFuneralDto !== "undefined" && create_dados_funeral_dto_1.UpdateDadosFuneralDto) === "function" ? _f : Object]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], DadosFuneralController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Remover dados de funeral',
        description: 'Remove dados específicos de funeral (apenas administradores)',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de funeral' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NO_CONTENT,
        description: 'Dados de funeral removidos com sucesso',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de funeral não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_h = typeof Promise !== "undefined" && Promise) === "function" ? _h : Object)
], DadosFuneralController.prototype, "remove", null);
exports.DadosFuneralController = DadosFuneralController = __decorate([
    (0, swagger_1.ApiTags)('Benefícios'),
    (0, common_1.Controller)('dados-funeral'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof dados_funeral_service_1.DadosFuneralService !== "undefined" && dados_funeral_service_1.DadosFuneralService) === "function" ? _a : Object])
], DadosFuneralController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,