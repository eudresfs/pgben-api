28ee76971b83385b52806fb456607701
"use strict";
/**
 * Domínio de Erros: NOTIFICACAO
 *
 * Define códigos de erro específicos para operações relacionadas
 * ao módulo de notificações do sistema SEMTAS.
 *
 * @see docs/ADRs/catalogo-erros.md
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NOTIFICACAO_ERRORS = void 0;
exports.throwNotificacaoNotFound = throwNotificacaoNotFound;
exports.throwSendFailed = throwSendFailed;
exports.throwInvalidEmail = throwInvalidEmail;
exports.throwInvalidPhone = throwInvalidPhone;
exports.throwTemplateNotFound = throwTemplateNotFound;
exports.throwTemplateVariablesMissing = throwTemplateVariablesMissing;
exports.throwUserOptedOut = throwUserOptedOut;
exports.throwFrequencyLimitExceeded = throwFrequencyLimitExceeded;
exports.throwSmtpConnectionFailed = throwSmtpConnectionFailed;
exports.throwApiQuotaExceeded = throwApiQuotaExceeded;
exports.throwQueueFull = throwQueueFull;
const common_1 = require("@nestjs/common");
const types_1 = require("../types");
const AppError_1 = require("../AppError");
/**
 * Catálogo de erros específicos do domínio NOTIFICACAO
 */
exports.NOTIFICACAO_ERRORS = {
    // ========================================
    // OPERAÇÕES CRUD
    // ========================================
    NOTIFICACAO_NOT_FOUND: {
        code: 'NOTIFICACAO_NOT_FOUND',
        message: 'Notificação não encontrada',
        httpStatus: common_1.HttpStatus.NOT_FOUND,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Notificação não encontrada no sistema',
            'en-US': 'Notification not found in the system',
        },
    },
    NOTIFICACAO_TEMPLATE_NOT_FOUND: {
        code: 'NOTIFICACAO_TEMPLATE_NOT_FOUND',
        message: 'Template de notificação não encontrado',
        httpStatus: common_1.HttpStatus.NOT_FOUND,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Template de notificação não encontrado',
            'en-US': 'Notification template not found',
        },
    },
    NOTIFICACAO_CREATION_FAILED: {
        code: 'NOTIFICACAO_CREATION_FAILED',
        message: 'Falha na criação da notificação',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Erro ao criar notificação',
            'en-US': 'Error creating notification',
        },
    },
    NOTIFICACAO_UPDATE_FAILED: {
        code: 'NOTIFICACAO_UPDATE_FAILED',
        message: 'Falha na atualização da notificação',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Erro ao atualizar notificação',
            'en-US': 'Error updating notification',
        },
    },
    NOTIFICACAO_DELETE_FAILED: {
        code: 'NOTIFICACAO_DELETE_FAILED',
        message: 'Falha na exclusão da notificação',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Erro ao excluir notificação',
            'en-US': 'Error deleting notification',
        },
    },
    // ========================================
    // VALIDAÇÕES DE DADOS
    // ========================================
    NOTIFICACAO_INVALID_TYPE: {
        code: 'NOTIFICACAO_INVALID_TYPE',
        message: 'Tipo de notificação inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Tipo de notificação especificado é inválido',
            'en-US': 'Specified notification type is invalid',
        },
    },
    NOTIFICACAO_INVALID_CHANNEL: {
        code: 'NOTIFICACAO_INVALID_CHANNEL',
        message: 'Canal de notificação inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Canal de notificação especificado é inválido',
            'en-US': 'Specified notification channel is invalid',
        },
    },
    NOTIFICACAO_INVALID_RECIPIENT: {
        code: 'NOTIFICACAO_INVALID_RECIPIENT',
        message: 'Destinatário inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Destinatário da notificação é inválido',
            'en-US': 'Notification recipient is invalid',
        },
    },
    NOTIFICACAO_INVALID_EMAIL: {
        code: 'NOTIFICACAO_INVALID_EMAIL',
        message: 'Email inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Endereço de email é inválido',
            'en-US': 'Email address is invalid',
        },
    },
    NOTIFICACAO_INVALID_PHONE: {
        code: 'NOTIFICACAO_INVALID_PHONE',
        message: 'Telefone inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Número de telefone é inválido',
            'en-US': 'Phone number is invalid',
        },
    },
    NOTIFICACAO_EMPTY_CONTENT: {
        code: 'NOTIFICACAO_EMPTY_CONTENT',
        message: 'Conteúdo da notificação vazio',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Conteúdo da notificação não pode estar vazio',
            'en-US': 'Notification content cannot be empty',
        },
    },
    NOTIFICACAO_CONTENT_TOO_LONG: {
        code: 'NOTIFICACAO_CONTENT_TOO_LONG',
        message: 'Conteúdo da notificação muito longo',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Conteúdo da notificação excede o limite de caracteres',
            'en-US': 'Notification content exceeds character limit',
        },
    },
    NOTIFICACAO_INVALID_SCHEDULE: {
        code: 'NOTIFICACAO_INVALID_SCHEDULE',
        message: 'Agendamento inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Data/hora de agendamento é inválida',
            'en-US': 'Schedule date/time is invalid',
        },
    },
    // ========================================
    // ENVIO DE NOTIFICAÇÕES
    // ========================================
    NOTIFICACAO_SEND_FAILED: {
        code: 'NOTIFICACAO_SEND_FAILED',
        message: 'Falha no envio da notificação',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Erro ao enviar notificação',
            'en-US': 'Error sending notification',
        },
    },
    NOTIFICACAO_EMAIL_SEND_FAILED: {
        code: 'NOTIFICACAO_EMAIL_SEND_FAILED',
        message: 'Falha no envio de email',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Erro ao enviar email',
            'en-US': 'Error sending email',
        },
    },
    NOTIFICACAO_SMS_SEND_FAILED: {
        code: 'NOTIFICACAO_SMS_SEND_FAILED',
        message: 'Falha no envio de SMS',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Erro ao enviar SMS',
            'en-US': 'Error sending SMS',
        },
    },
    NOTIFICACAO_PUSH_SEND_FAILED: {
        code: 'NOTIFICACAO_PUSH_SEND_FAILED',
        message: 'Falha no envio de push notification',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Erro ao enviar push notification',
            'en-US': 'Error sending push notification',
        },
    },
    NOTIFICACAO_DELIVERY_FAILED: {
        code: 'NOTIFICACAO_DELIVERY_FAILED',
        message: 'Falha na entrega da notificação',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Falha na entrega da notificação',
            'en-US': 'Notification delivery failed',
        },
    },
    NOTIFICACAO_BOUNCE_DETECTED: {
        code: 'NOTIFICACAO_BOUNCE_DETECTED',
        message: 'Bounce detectado no email',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Email retornou (bounce detectado)',
            'en-US': 'Email bounced (bounce detected)',
        },
    },
    NOTIFICACAO_SPAM_DETECTED: {
        code: 'NOTIFICACAO_SPAM_DETECTED',
        message: 'Notificação marcada como spam',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Notificação foi marcada como spam',
            'en-US': 'Notification was marked as spam',
        },
    },
    // ========================================
    // TEMPLATES
    // ========================================
    NOTIFICACAO_TEMPLATE_INVALID: {
        code: 'NOTIFICACAO_TEMPLATE_INVALID',
        message: 'Template de notificação inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Template de notificação é inválido',
            'en-US': 'Notification template is invalid',
        },
    },
    NOTIFICACAO_TEMPLATE_COMPILATION_FAILED: {
        code: 'NOTIFICACAO_TEMPLATE_COMPILATION_FAILED',
        message: 'Falha na compilação do template',
        httpStatus: common_1.HttpStatus.INTERNAL_SERVER_ERROR,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Erro ao compilar template de notificação',
            'en-US': 'Error compiling notification template',
        },
    },
    NOTIFICACAO_TEMPLATE_VARIABLES_MISSING: {
        code: 'NOTIFICACAO_TEMPLATE_VARIABLES_MISSING',
        message: 'Variáveis do template ausentes',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Variáveis obrigatórias do template estão ausentes',
            'en-US': 'Required template variables are missing',
        },
    },
    NOTIFICACAO_TEMPLATE_SYNTAX_ERROR: {
        code: 'NOTIFICACAO_TEMPLATE_SYNTAX_ERROR',
        message: 'Erro de sintaxe no template',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Erro de sintaxe no template de notificação',
            'en-US': 'Syntax error in notification template',
        },
    },
    // ========================================
    // PREFERÊNCIAS E CONFIGURAÇÕES
    // ========================================
    NOTIFICACAO_USER_OPTED_OUT: {
        code: 'NOTIFICACAO_USER_OPTED_OUT',
        message: 'Usuário optou por não receber notificações',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Usuário optou por não receber este tipo de notificação',
            'en-US': 'User opted out of this type of notification',
        },
    },
    NOTIFICACAO_CHANNEL_DISABLED: {
        code: 'NOTIFICACAO_CHANNEL_DISABLED',
        message: 'Canal de notificação desabilitado',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Canal de notificação está desabilitado',
            'en-US': 'Notification channel is disabled',
        },
    },
    NOTIFICACAO_FREQUENCY_LIMIT_EXCEEDED: {
        code: 'NOTIFICACAO_FREQUENCY_LIMIT_EXCEEDED',
        message: 'Limite de frequência excedido',
        httpStatus: common_1.HttpStatus.TOO_MANY_REQUESTS,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Limite de frequência de notificações excedido',
            'en-US': 'Notification frequency limit exceeded',
        },
    },
    NOTIFICACAO_QUIET_HOURS: {
        code: 'NOTIFICACAO_QUIET_HOURS',
        message: 'Horário de silêncio ativo',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.LOW,
        localizedMessages: {
            'pt-BR': 'Notificação bloqueada devido ao horário de silêncio',
            'en-US': 'Notification blocked due to quiet hours',
        },
    },
    // ========================================
    // INTEGRAÇÃO COM SERVIÇOS EXTERNOS
    // ========================================
    NOTIFICACAO_SMTP_CONNECTION_FAILED: {
        code: 'NOTIFICACAO_SMTP_CONNECTION_FAILED',
        message: 'Falha na conexão SMTP',
        httpStatus: common_1.HttpStatus.SERVICE_UNAVAILABLE,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Falha na conexão com servidor SMTP',
            'en-US': 'Failed to connect to SMTP server',
        },
    },
    NOTIFICACAO_SMS_PROVIDER_FAILED: {
        code: 'NOTIFICACAO_SMS_PROVIDER_FAILED',
        message: 'Falha no provedor de SMS',
        httpStatus: common_1.HttpStatus.SERVICE_UNAVAILABLE,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Falha no provedor de SMS',
            'en-US': 'SMS provider failure',
        },
    },
    NOTIFICACAO_PUSH_PROVIDER_FAILED: {
        code: 'NOTIFICACAO_PUSH_PROVIDER_FAILED',
        message: 'Falha no provedor de push notifications',
        httpStatus: common_1.HttpStatus.SERVICE_UNAVAILABLE,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Falha no provedor de push notifications',
            'en-US': 'Push notification provider failure',
        },
    },
    NOTIFICACAO_API_QUOTA_EXCEEDED: {
        code: 'NOTIFICACAO_API_QUOTA_EXCEEDED',
        message: 'Cota da API excedida',
        httpStatus: common_1.HttpStatus.TOO_MANY_REQUESTS,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Cota da API de notificações excedida',
            'en-US': 'Notification API quota exceeded',
        },
    },
    // ========================================
    // SEGURANÇA E PERMISSÕES
    // ========================================
    NOTIFICACAO_ACCESS_DENIED: {
        code: 'NOTIFICACAO_ACCESS_DENIED',
        message: 'Acesso negado à notificação',
        httpStatus: common_1.HttpStatus.FORBIDDEN,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Você não tem permissão para acessar esta notificação',
            'en-US': 'You do not have permission to access this notification',
        },
    },
    NOTIFICACAO_UNAUTHORIZED_SENDER: {
        code: 'NOTIFICACAO_UNAUTHORIZED_SENDER',
        message: 'Remetente não autorizado',
        httpStatus: common_1.HttpStatus.FORBIDDEN,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Remetente não autorizado para este tipo de notificação',
            'en-US': 'Sender not authorized for this type of notification',
        },
    },
    NOTIFICACAO_CONTENT_BLOCKED: {
        code: 'NOTIFICACAO_CONTENT_BLOCKED',
        message: 'Conteúdo bloqueado',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Conteúdo da notificação foi bloqueado por políticas de segurança',
            'en-US': 'Notification content was blocked by security policies',
        },
    },
    // ========================================
    // AGENDAMENTO E FILA
    // ========================================
    NOTIFICACAO_QUEUE_FULL: {
        code: 'NOTIFICACAO_QUEUE_FULL',
        message: 'Fila de notificações cheia',
        httpStatus: common_1.HttpStatus.SERVICE_UNAVAILABLE,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Fila de notificações está cheia',
            'en-US': 'Notification queue is full',
        },
    },
    NOTIFICACAO_SCHEDULE_CONFLICT: {
        code: 'NOTIFICACAO_SCHEDULE_CONFLICT',
        message: 'Conflito de agendamento',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Conflito no agendamento da notificação',
            'en-US': 'Notification scheduling conflict',
        },
    },
    NOTIFICACAO_EXPIRED: {
        code: 'NOTIFICACAO_EXPIRED',
        message: 'Notificação expirada',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Notificação expirou e não pode mais ser enviada',
            'en-US': 'Notification has expired and can no longer be sent',
        },
    },
};
// ========================================
// FUNÇÕES HELPER PARA NOTIFICACAO
// ========================================
/**
 * Lança erro de notificação não encontrada
 */
function throwNotificacaoNotFound(notificacaoId, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_NOT_FOUND', {
        ...context,
        data: {
            notificacaoId,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de falha no envio
 */
function throwSendFailed(canal, destinatario, erro, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_SEND_FAILED', {
        ...context,
        data: {
            canal,
            destinatario,
            erro,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de email inválido
 */
function throwInvalidEmail(email, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_INVALID_EMAIL', {
        ...context,
        data: {
            email,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de telefone inválido
 */
function throwInvalidPhone(telefone, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_INVALID_PHONE', {
        ...context,
        data: {
            telefone,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de template não encontrado
 */
function throwTemplateNotFound(templateId, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_TEMPLATE_NOT_FOUND', {
        ...context,
        data: {
            templateId,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de variáveis do template ausentes
 */
function throwTemplateVariablesMissing(variaveisAusentes, templateId, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_TEMPLATE_VARIABLES_MISSING', {
        ...context,
        data: {
            variaveisAusentes,
            templateId,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de usuário optou por não receber
 */
function throwUserOptedOut(userId, tipoNotificacao, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_USER_OPTED_OUT', {
        ...context,
        data: {
            userId,
            tipoNotificacao,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de limite de frequência excedido
 */
function throwFrequencyLimitExceeded(userId, tipoNotificacao, limiteAtual, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_FREQUENCY_LIMIT_EXCEEDED', {
        ...context,
        data: {
            userId,
            tipoNotificacao,
            limiteAtual,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de falha na conexão SMTP
 */
function throwSmtpConnectionFailed(servidor, porta, erro, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_SMTP_CONNECTION_FAILED', {
        ...context,
        data: {
            servidor,
            porta,
            erro,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de cota da API excedida
 */
function throwApiQuotaExceeded(provedor, cotaAtual, cotaMaxima, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_API_QUOTA_EXCEEDED', {
        ...context,
        data: {
            provedor,
            cotaAtual,
            cotaMaxima,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de fila cheia
 */
function throwQueueFull(tamanhoAtual, capacidadeMaxima, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('NOTIFICACAO_QUEUE_FULL', {
        ...context,
        data: {
            tamanhoAtual,
            capacidadeMaxima,
            ...context.data,
        },
    }, language);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXHNoYXJlZFxcZXhjZXB0aW9uc1xcZXJyb3ItY2F0YWxvZ1xcZG9tYWluc1xcbm90aWZpY2FjYW8uZXJyb3JzLnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7OztHQU9HOzs7QUFpaEJILDREQWdCQztBQUtELDBDQW9CQztBQUtELDhDQWdCQztBQUtELDhDQWdCQztBQUtELHNEQWdCQztBQUtELHNFQWtCQztBQUtELDhDQWtCQztBQUtELGtFQW9CQztBQUtELDhEQW9CQztBQUtELHNEQW9CQztBQUtELHdDQWtCQztBQXZ3QkQsMkNBQTRDO0FBQzVDLG9DQUF5RTtBQUN6RSwwQ0FBcUQ7QUF3QnJEOztHQUVHO0FBQ1UsUUFBQSxrQkFBa0IsR0FBb0M7SUFDakUsMkNBQTJDO0lBQzNDLGlCQUFpQjtJQUNqQiwyQ0FBMkM7SUFFM0MscUJBQXFCLEVBQUU7UUFDckIsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixPQUFPLEVBQUUsNEJBQTRCO1FBQ3JDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFNBQVM7UUFDaEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSx1Q0FBdUM7WUFDaEQsT0FBTyxFQUFFLHNDQUFzQztTQUNoRDtLQUNGO0lBRUQsOEJBQThCLEVBQUU7UUFDOUIsSUFBSSxFQUFFLGdDQUFnQztRQUN0QyxPQUFPLEVBQUUsd0NBQXdDO1FBQ2pELFVBQVUsRUFBRSxtQkFBVSxDQUFDLFNBQVM7UUFDaEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSx3Q0FBd0M7WUFDakQsT0FBTyxFQUFFLGlDQUFpQztTQUMzQztLQUNGO0lBRUQsMkJBQTJCLEVBQUU7UUFDM0IsSUFBSSxFQUFFLDZCQUE2QjtRQUNuQyxPQUFPLEVBQUUsaUNBQWlDO1FBQzFDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLHFCQUFxQjtRQUM1QyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxZQUFZO1FBQ3BDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLElBQUk7UUFDNUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLDJCQUEyQjtZQUNwQyxPQUFPLEVBQUUsNkJBQTZCO1NBQ3ZDO0tBQ0Y7SUFFRCx5QkFBeUIsRUFBRTtRQUN6QixJQUFJLEVBQUUsMkJBQTJCO1FBQ2pDLE9BQU8sRUFBRSxxQ0FBcUM7UUFDOUMsVUFBVSxFQUFFLG1CQUFVLENBQUMscUJBQXFCO1FBQzVDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFlBQVk7UUFDcEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsK0JBQStCO1lBQ3hDLE9BQU8sRUFBRSw2QkFBNkI7U0FDdkM7S0FDRjtJQUVELHlCQUF5QixFQUFFO1FBQ3pCLElBQUksRUFBRSwyQkFBMkI7UUFDakMsT0FBTyxFQUFFLGtDQUFrQztRQUMzQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxxQkFBcUI7UUFDNUMsUUFBUSxFQUFFLHFCQUFhLENBQUMsWUFBWTtRQUNwQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSw2QkFBNkI7WUFDdEMsT0FBTyxFQUFFLDZCQUE2QjtTQUN2QztLQUNGO0lBRUQsMkNBQTJDO0lBQzNDLHNCQUFzQjtJQUN0QiwyQ0FBMkM7SUFFM0Msd0JBQXdCLEVBQUU7UUFDeEIsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxPQUFPLEVBQUUsOEJBQThCO1FBQ3ZDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSw2Q0FBNkM7WUFDdEQsT0FBTyxFQUFFLHdDQUF3QztTQUNsRDtLQUNGO0lBRUQsMkJBQTJCLEVBQUU7UUFDM0IsSUFBSSxFQUFFLDZCQUE2QjtRQUNuQyxPQUFPLEVBQUUsK0JBQStCO1FBQ3hDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSw4Q0FBOEM7WUFDdkQsT0FBTyxFQUFFLDJDQUEyQztTQUNyRDtLQUNGO0lBRUQsNkJBQTZCLEVBQUU7UUFDN0IsSUFBSSxFQUFFLCtCQUErQjtRQUNyQyxPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSx3Q0FBd0M7WUFDakQsT0FBTyxFQUFFLG1DQUFtQztTQUM3QztLQUNGO0lBRUQseUJBQXlCLEVBQUU7UUFDekIsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSw4QkFBOEI7WUFDdkMsT0FBTyxFQUFFLDBCQUEwQjtTQUNwQztLQUNGO0lBRUQseUJBQXlCLEVBQUU7UUFDekIsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSwrQkFBK0I7WUFDeEMsT0FBTyxFQUFFLHlCQUF5QjtTQUNuQztLQUNGO0lBRUQseUJBQXlCLEVBQUU7UUFDekIsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxPQUFPLEVBQUUsK0JBQStCO1FBQ3hDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSw4Q0FBOEM7WUFDdkQsT0FBTyxFQUFFLHNDQUFzQztTQUNoRDtLQUNGO0lBRUQsNEJBQTRCLEVBQUU7UUFDNUIsSUFBSSxFQUFFLDhCQUE4QjtRQUNwQyxPQUFPLEVBQUUscUNBQXFDO1FBQzlDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSx1REFBdUQ7WUFDaEUsT0FBTyxFQUFFLDhDQUE4QztTQUN4RDtLQUNGO0lBRUQsNEJBQTRCLEVBQUU7UUFDNUIsSUFBSSxFQUFFLDhCQUE4QjtRQUNwQyxPQUFPLEVBQUUsc0JBQXNCO1FBQy9CLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxNQUFNO1FBQzlCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSxxQ0FBcUM7WUFDOUMsT0FBTyxFQUFFLCtCQUErQjtTQUN6QztLQUNGO0lBRUQsMkNBQTJDO0lBQzNDLHdCQUF3QjtJQUN4QiwyQ0FBMkM7SUFFM0MsdUJBQXVCLEVBQUU7UUFDdkIsSUFBSSxFQUFFLHlCQUF5QjtRQUMvQixPQUFPLEVBQUUsK0JBQStCO1FBQ3hDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLHFCQUFxQjtRQUM1QyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxZQUFZO1FBQ3BDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLElBQUk7UUFDNUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLDRCQUE0QjtZQUNyQyxPQUFPLEVBQUUsNEJBQTRCO1NBQ3RDO0tBQ0Y7SUFFRCw2QkFBNkIsRUFBRTtRQUM3QixJQUFJLEVBQUUsK0JBQStCO1FBQ3JDLE9BQU8sRUFBRSx5QkFBeUI7UUFDbEMsVUFBVSxFQUFFLG1CQUFVLENBQUMscUJBQXFCO1FBQzVDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFlBQVk7UUFDcEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsSUFBSTtRQUM1QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsc0JBQXNCO1lBQy9CLE9BQU8sRUFBRSxxQkFBcUI7U0FDL0I7S0FDRjtJQUVELDJCQUEyQixFQUFFO1FBQzNCLElBQUksRUFBRSw2QkFBNkI7UUFDbkMsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxxQkFBcUI7UUFDNUMsUUFBUSxFQUFFLHFCQUFhLENBQUMsWUFBWTtRQUNwQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSxvQkFBb0I7WUFDN0IsT0FBTyxFQUFFLG1CQUFtQjtTQUM3QjtLQUNGO0lBRUQsNEJBQTRCLEVBQUU7UUFDNUIsSUFBSSxFQUFFLDhCQUE4QjtRQUNwQyxPQUFPLEVBQUUscUNBQXFDO1FBQzlDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLHFCQUFxQjtRQUM1QyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxZQUFZO1FBQ3BDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLE1BQU07UUFDOUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLGtDQUFrQztZQUMzQyxPQUFPLEVBQUUsaUNBQWlDO1NBQzNDO0tBQ0Y7SUFFRCwyQkFBMkIsRUFBRTtRQUMzQixJQUFJLEVBQUUsNkJBQTZCO1FBQ25DLE9BQU8sRUFBRSxpQ0FBaUM7UUFDMUMsVUFBVSxFQUFFLG1CQUFVLENBQUMscUJBQXFCO1FBQzVDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFlBQVk7UUFDcEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsSUFBSTtRQUM1QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsaUNBQWlDO1lBQzFDLE9BQU8sRUFBRSw4QkFBOEI7U0FDeEM7S0FDRjtJQUVELDJCQUEyQixFQUFFO1FBQzNCLElBQUksRUFBRSw2QkFBNkI7UUFDbkMsT0FBTyxFQUFFLDJCQUEyQjtRQUNwQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxXQUFXO1FBQ2xDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFlBQVk7UUFDcEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsbUNBQW1DO1lBQzVDLE9BQU8sRUFBRSxpQ0FBaUM7U0FDM0M7S0FDRjtJQUVELHlCQUF5QixFQUFFO1FBQ3pCLElBQUksRUFBRSwyQkFBMkI7UUFDakMsT0FBTyxFQUFFLCtCQUErQjtRQUN4QyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxXQUFXO1FBQ2xDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFlBQVk7UUFDcEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsbUNBQW1DO1lBQzVDLE9BQU8sRUFBRSxpQ0FBaUM7U0FDM0M7S0FDRjtJQUVELDJDQUEyQztJQUMzQyxZQUFZO0lBQ1osMkNBQTJDO0lBRTNDLDRCQUE0QixFQUFFO1FBQzVCLElBQUksRUFBRSw4QkFBOEI7UUFDcEMsT0FBTyxFQUFFLGtDQUFrQztRQUMzQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxXQUFXO1FBQ2xDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFdBQVc7UUFDbkMsUUFBUSxFQUFFLHFCQUFhLENBQUMsSUFBSTtRQUM1QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsb0NBQW9DO1lBQzdDLE9BQU8sRUFBRSxrQ0FBa0M7U0FDNUM7S0FDRjtJQUVELHVDQUF1QyxFQUFFO1FBQ3ZDLElBQUksRUFBRSx5Q0FBeUM7UUFDL0MsT0FBTyxFQUFFLGlDQUFpQztRQUMxQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxxQkFBcUI7UUFDNUMsUUFBUSxFQUFFLHFCQUFhLENBQUMsWUFBWTtRQUNwQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSwwQ0FBMEM7WUFDbkQsT0FBTyxFQUFFLHVDQUF1QztTQUNqRDtLQUNGO0lBRUQsc0NBQXNDLEVBQUU7UUFDdEMsSUFBSSxFQUFFLHdDQUF3QztRQUM5QyxPQUFPLEVBQUUsZ0NBQWdDO1FBQ3pDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSxtREFBbUQ7WUFDNUQsT0FBTyxFQUFFLHlDQUF5QztTQUNuRDtLQUNGO0lBRUQsaUNBQWlDLEVBQUU7UUFDakMsSUFBSSxFQUFFLG1DQUFtQztRQUN6QyxPQUFPLEVBQUUsNkJBQTZCO1FBQ3RDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsV0FBVztRQUNuQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSw0Q0FBNEM7WUFDckQsT0FBTyxFQUFFLHVDQUF1QztTQUNqRDtLQUNGO0lBRUQsMkNBQTJDO0lBQzNDLCtCQUErQjtJQUMvQiwyQ0FBMkM7SUFFM0MsMEJBQTBCLEVBQUU7UUFDMUIsSUFBSSxFQUFFLDRCQUE0QjtRQUNsQyxPQUFPLEVBQUUsNENBQTRDO1FBQ3JELFVBQVUsRUFBRSxtQkFBVSxDQUFDLFdBQVc7UUFDbEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsZ0JBQWdCO1FBQ3hDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLE1BQU07UUFDOUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLHdEQUF3RDtZQUNqRSxPQUFPLEVBQUUsNkNBQTZDO1NBQ3ZEO0tBQ0Y7SUFFRCw0QkFBNEIsRUFBRTtRQUM1QixJQUFJLEVBQUUsOEJBQThCO1FBQ3BDLE9BQU8sRUFBRSxtQ0FBbUM7UUFDNUMsVUFBVSxFQUFFLG1CQUFVLENBQUMsV0FBVztRQUNsQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxnQkFBZ0I7UUFDeEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsd0NBQXdDO1lBQ2pELE9BQU8sRUFBRSxrQ0FBa0M7U0FDNUM7S0FDRjtJQUVELG9DQUFvQyxFQUFFO1FBQ3BDLElBQUksRUFBRSxzQ0FBc0M7UUFDNUMsT0FBTyxFQUFFLCtCQUErQjtRQUN4QyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxpQkFBaUI7UUFDeEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsZ0JBQWdCO1FBQ3hDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLE1BQU07UUFDOUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLCtDQUErQztZQUN4RCxPQUFPLEVBQUUsdUNBQXVDO1NBQ2pEO0tBQ0Y7SUFFRCx1QkFBdUIsRUFBRTtRQUN2QixJQUFJLEVBQUUseUJBQXlCO1FBQy9CLE9BQU8sRUFBRSwyQkFBMkI7UUFDcEMsVUFBVSxFQUFFLG1CQUFVLENBQUMsV0FBVztRQUNsQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxnQkFBZ0I7UUFDeEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsR0FBRztRQUMzQixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUscURBQXFEO1lBQzlELE9BQU8sRUFBRSx5Q0FBeUM7U0FDbkQ7S0FDRjtJQUVELDJDQUEyQztJQUMzQyxtQ0FBbUM7SUFDbkMsMkNBQTJDO0lBRTNDLGtDQUFrQyxFQUFFO1FBQ2xDLElBQUksRUFBRSxvQ0FBb0M7UUFDMUMsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxtQkFBbUI7UUFDMUMsUUFBUSxFQUFFLHFCQUFhLENBQUMsWUFBWTtRQUNwQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSxvQ0FBb0M7WUFDN0MsT0FBTyxFQUFFLGtDQUFrQztTQUM1QztLQUNGO0lBRUQsK0JBQStCLEVBQUU7UUFDL0IsSUFBSSxFQUFFLGlDQUFpQztRQUN2QyxPQUFPLEVBQUUsMEJBQTBCO1FBQ25DLFVBQVUsRUFBRSxtQkFBVSxDQUFDLG1CQUFtQjtRQUMxQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxZQUFZO1FBQ3BDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLElBQUk7UUFDNUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLDBCQUEwQjtZQUNuQyxPQUFPLEVBQUUsc0JBQXNCO1NBQ2hDO0tBQ0Y7SUFFRCxnQ0FBZ0MsRUFBRTtRQUNoQyxJQUFJLEVBQUUsa0NBQWtDO1FBQ3hDLE9BQU8sRUFBRSx5Q0FBeUM7UUFDbEQsVUFBVSxFQUFFLG1CQUFVLENBQUMsbUJBQW1CO1FBQzFDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFlBQVk7UUFDcEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUseUNBQXlDO1lBQ2xELE9BQU8sRUFBRSxvQ0FBb0M7U0FDOUM7S0FDRjtJQUVELDhCQUE4QixFQUFFO1FBQzlCLElBQUksRUFBRSxnQ0FBZ0M7UUFDdEMsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixVQUFVLEVBQUUsbUJBQVUsQ0FBQyxpQkFBaUI7UUFDeEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsWUFBWTtRQUNwQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSxzQ0FBc0M7WUFDL0MsT0FBTyxFQUFFLGlDQUFpQztTQUMzQztLQUNGO0lBRUQsMkNBQTJDO0lBQzNDLHlCQUF5QjtJQUN6QiwyQ0FBMkM7SUFFM0MseUJBQXlCLEVBQUU7UUFDekIsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxPQUFPLEVBQUUsNkJBQTZCO1FBQ3RDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFNBQVM7UUFDaEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsZ0JBQWdCO1FBQ3hDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLElBQUk7UUFDNUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLHNEQUFzRDtZQUMvRCxPQUFPLEVBQUUsd0RBQXdEO1NBQ2xFO0tBQ0Y7SUFFRCwrQkFBK0IsRUFBRTtRQUMvQixJQUFJLEVBQUUsaUNBQWlDO1FBQ3ZDLE9BQU8sRUFBRSwwQkFBMEI7UUFDbkMsVUFBVSxFQUFFLG1CQUFVLENBQUMsU0FBUztRQUNoQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxnQkFBZ0I7UUFDeEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsSUFBSTtRQUM1QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsd0RBQXdEO1lBQ2pFLE9BQU8sRUFBRSxxREFBcUQ7U0FDL0Q7S0FDRjtJQUVELDJCQUEyQixFQUFFO1FBQzNCLElBQUksRUFBRSw2QkFBNkI7UUFDbkMsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixVQUFVLEVBQUUsbUJBQVUsQ0FBQyxXQUFXO1FBQ2xDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLFdBQVc7UUFDbkMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQ0wsa0VBQWtFO1lBQ3BFLE9BQU8sRUFBRSx1REFBdUQ7U0FDakU7S0FDRjtJQUVELDJDQUEyQztJQUMzQyxxQkFBcUI7SUFDckIsMkNBQTJDO0lBRTNDLHNCQUFzQixFQUFFO1FBQ3RCLElBQUksRUFBRSx3QkFBd0I7UUFDOUIsT0FBTyxFQUFFLDRCQUE0QjtRQUNyQyxVQUFVLEVBQUUsbUJBQVUsQ0FBQyxtQkFBbUI7UUFDMUMsUUFBUSxFQUFFLHFCQUFhLENBQUMsWUFBWTtRQUNwQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1FBQzVCLGlCQUFpQixFQUFFO1lBQ2pCLE9BQU8sRUFBRSxpQ0FBaUM7WUFDMUMsT0FBTyxFQUFFLDRCQUE0QjtTQUN0QztLQUNGO0lBRUQsNkJBQTZCLEVBQUU7UUFDN0IsSUFBSSxFQUFFLCtCQUErQjtRQUNyQyxPQUFPLEVBQUUseUJBQXlCO1FBQ2xDLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFFBQVE7UUFDL0IsUUFBUSxFQUFFLHFCQUFhLENBQUMsZ0JBQWdCO1FBQ3hDLFFBQVEsRUFBRSxxQkFBYSxDQUFDLE1BQU07UUFDOUIsaUJBQWlCLEVBQUU7WUFDakIsT0FBTyxFQUFFLHdDQUF3QztZQUNqRCxPQUFPLEVBQUUsa0NBQWtDO1NBQzVDO0tBQ0Y7SUFFRCxtQkFBbUIsRUFBRTtRQUNuQixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsVUFBVSxFQUFFLG1CQUFVLENBQUMsV0FBVztRQUNsQyxRQUFRLEVBQUUscUJBQWEsQ0FBQyxnQkFBZ0I7UUFDeEMsUUFBUSxFQUFFLHFCQUFhLENBQUMsTUFBTTtRQUM5QixpQkFBaUIsRUFBRTtZQUNqQixPQUFPLEVBQUUsaURBQWlEO1lBQzFELE9BQU8sRUFBRSxvREFBb0Q7U0FDOUQ7S0FDRjtDQUNGLENBQUM7QUFFRiwyQ0FBMkM7QUFDM0Msa0NBQWtDO0FBQ2xDLDJDQUEyQztBQUUzQzs7R0FFRztBQUNILFNBQWdCLHdCQUF3QixDQUN0QyxhQUFxQixFQUNyQixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLHVCQUF1QixFQUN2QjtRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLGFBQWE7WUFDYixHQUFHLE9BQU8sQ0FBQyxJQUFJO1NBQ2hCO0tBQ0YsRUFDRCxRQUFRLENBQ1QsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLGVBQWUsQ0FDN0IsS0FBYSxFQUNiLFlBQW9CLEVBQ3BCLElBQVksRUFDWixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLHlCQUF5QixFQUN6QjtRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLEtBQUs7WUFDTCxZQUFZO1lBQ1osSUFBSTtZQUNKLEdBQUcsT0FBTyxDQUFDLElBQUk7U0FDaEI7S0FDRixFQUNELFFBQVEsQ0FDVCxDQUFDO0FBQ0osQ0FBQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IsaUJBQWlCLENBQy9CLEtBQWEsRUFDYixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLDJCQUEyQixFQUMzQjtRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLEtBQUs7WUFDTCxHQUFHLE9BQU8sQ0FBQyxJQUFJO1NBQ2hCO0tBQ0YsRUFDRCxRQUFRLENBQ1QsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLGlCQUFpQixDQUMvQixRQUFnQixFQUNoQixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLDJCQUEyQixFQUMzQjtRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLFFBQVE7WUFDUixHQUFHLE9BQU8sQ0FBQyxJQUFJO1NBQ2hCO0tBQ0YsRUFDRCxRQUFRLENBQ1QsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLHFCQUFxQixDQUNuQyxVQUFrQixFQUNsQixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLGdDQUFnQyxFQUNoQztRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLFVBQVU7WUFDVixHQUFHLE9BQU8sQ0FBQyxJQUFJO1NBQ2hCO0tBQ0YsRUFDRCxRQUFRLENBQ1QsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLDZCQUE2QixDQUMzQyxpQkFBMkIsRUFDM0IsVUFBa0IsRUFDbEIsVUFBbUMsRUFBRSxFQUNyQyxXQUFtQixPQUFPO0lBRTFCLE1BQU0sSUFBSSxtQkFBUSxDQUNoQix3Q0FBd0MsRUFDeEM7UUFDRSxHQUFHLE9BQU87UUFDVixJQUFJLEVBQUU7WUFDSixpQkFBaUI7WUFDakIsVUFBVTtZQUNWLEdBQUcsT0FBTyxDQUFDLElBQUk7U0FDaEI7S0FDRixFQUNELFFBQVEsQ0FDVCxDQUFDO0FBQ0osQ0FBQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IsaUJBQWlCLENBQy9CLE1BQWMsRUFDZCxlQUF1QixFQUN2QixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLDRCQUE0QixFQUM1QjtRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLE1BQU07WUFDTixlQUFlO1lBQ2YsR0FBRyxPQUFPLENBQUMsSUFBSTtTQUNoQjtLQUNGLEVBQ0QsUUFBUSxDQUNULENBQUM7QUFDSixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxTQUFnQiwyQkFBMkIsQ0FDekMsTUFBYyxFQUNkLGVBQXVCLEVBQ3ZCLFdBQW1CLEVBQ25CLFVBQW1DLEVBQUUsRUFDckMsV0FBbUIsT0FBTztJQUUxQixNQUFNLElBQUksbUJBQVEsQ0FDaEIsc0NBQXNDLEVBQ3RDO1FBQ0UsR0FBRyxPQUFPO1FBQ1YsSUFBSSxFQUFFO1lBQ0osTUFBTTtZQUNOLGVBQWU7WUFDZixXQUFXO1lBQ1gsR0FBRyxPQUFPLENBQUMsSUFBSTtTQUNoQjtLQUNGLEVBQ0QsUUFBUSxDQUNULENBQUM7QUFDSixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxTQUFnQix5QkFBeUIsQ0FDdkMsUUFBZ0IsRUFDaEIsS0FBYSxFQUNiLElBQVksRUFDWixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLG9DQUFvQyxFQUNwQztRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLFFBQVE7WUFDUixLQUFLO1lBQ0wsSUFBSTtZQUNKLEdBQUcsT0FBTyxDQUFDLElBQUk7U0FDaEI7S0FDRixFQUNELFFBQVEsQ0FDVCxDQUFDO0FBQ0osQ0FBQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IscUJBQXFCLENBQ25DLFFBQWdCLEVBQ2hCLFNBQWlCLEVBQ2pCLFVBQWtCLEVBQ2xCLFVBQW1DLEVBQUUsRUFDckMsV0FBbUIsT0FBTztJQUUxQixNQUFNLElBQUksbUJBQVEsQ0FDaEIsZ0NBQWdDLEVBQ2hDO1FBQ0UsR0FBRyxPQUFPO1FBQ1YsSUFBSSxFQUFFO1lBQ0osUUFBUTtZQUNSLFNBQVM7WUFDVCxVQUFVO1lBQ1YsR0FBRyxPQUFPLENBQUMsSUFBSTtTQUNoQjtLQUNGLEVBQ0QsUUFBUSxDQUNULENBQUM7QUFDSixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxTQUFnQixjQUFjLENBQzVCLFlBQW9CLEVBQ3BCLGdCQUF3QixFQUN4QixVQUFtQyxFQUFFLEVBQ3JDLFdBQW1CLE9BQU87SUFFMUIsTUFBTSxJQUFJLG1CQUFRLENBQ2hCLHdCQUF3QixFQUN4QjtRQUNFLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRTtZQUNKLFlBQVk7WUFDWixnQkFBZ0I7WUFDaEIsR0FBRyxPQUFPLENBQUMsSUFBSTtTQUNoQjtLQUNGLEVBQ0QsUUFBUSxDQUNULENBQUM7QUFDSixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxzaGFyZWRcXGV4Y2VwdGlvbnNcXGVycm9yLWNhdGFsb2dcXGRvbWFpbnNcXG5vdGlmaWNhY2FvLmVycm9ycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERvbcOtbmlvIGRlIEVycm9zOiBOT1RJRklDQUNBT1xuICpcbiAqIERlZmluZSBjw7NkaWdvcyBkZSBlcnJvIGVzcGVjw61maWNvcyBwYXJhIG9wZXJhw6fDtWVzIHJlbGFjaW9uYWRhc1xuICogYW8gbcOzZHVsbyBkZSBub3RpZmljYcOnw7VlcyBkbyBzaXN0ZW1hIFNFTVRBUy5cbiAqXG4gKiBAc2VlIGRvY3MvQURScy9jYXRhbG9nby1lcnJvcy5tZFxuICovXG5cbmltcG9ydCB7IEh0dHBTdGF0dXMgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBFcnJvckRlZmluaXRpb24sIEVycm9yQ2F0ZWdvcnksIEVycm9yU2V2ZXJpdHkgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBBcHBFcnJvciwgRXJyb3JDb250ZXh0IH0gZnJvbSAnLi4vQXBwRXJyb3InO1xuXG4vKipcbiAqIFRpcG8gcGFyYSBkYWRvcyBkZSBjb250ZXh0byBlc3BlY8OtZmljb3MgZGUgbm90aWZpY2HDp8Ojb1xuICovXG5leHBvcnQgaW50ZXJmYWNlIE5vdGlmaWNhY2FvRXJyb3JDb250ZXh0IGV4dGVuZHMgRXJyb3JDb250ZXh0IHtcbiAgZGF0YT86IHtcbiAgICBub3RpZmljYWNhb0lkPzogc3RyaW5nO1xuICAgIHVzZXJJZD86IHN0cmluZztcbiAgICBjaWRhZGFvSWQ/OiBzdHJpbmc7XG4gICAgdGlwb05vdGlmaWNhY2FvPzogc3RyaW5nO1xuICAgIGNhbmFsPzogc3RyaW5nO1xuICAgIGRlc3RpbmF0YXJpbz86IHN0cmluZztcbiAgICBhc3N1bnRvPzogc3RyaW5nO1xuICAgIGNvbnRldWRvPzogc3RyaW5nO1xuICAgIHRlbXBsYXRlSWQ/OiBzdHJpbmc7XG4gICAgYWdlbmRhbWVudG8/OiBzdHJpbmc7XG4gICAgdGVudGF0aXZhc0VudmlvPzogbnVtYmVyO1xuICAgIHVsdGltb0Vycm8/OiBzdHJpbmc7XG4gICAgc3RhdHVzRW50cmVnYT86IHN0cmluZztcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gIH07XG59XG5cbi8qKlxuICogQ2F0w6Fsb2dvIGRlIGVycm9zIGVzcGVjw61maWNvcyBkbyBkb23DrW5pbyBOT1RJRklDQUNBT1xuICovXG5leHBvcnQgY29uc3QgTk9USUZJQ0FDQU9fRVJST1JTOiBSZWNvcmQ8c3RyaW5nLCBFcnJvckRlZmluaXRpb24+ID0ge1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIE9QRVJBw4fDlUVTIENSVURcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIE5PVElGSUNBQ0FPX05PVF9GT1VORDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19OT1RfRk9VTkQnLFxuICAgIG1lc3NhZ2U6ICdOb3RpZmljYcOnw6NvIG7Do28gZW5jb250cmFkYScsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5OT1RfRk9VTkQsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuVkFMSURBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnTm90aWZpY2HDp8OjbyBuw6NvIGVuY29udHJhZGEgbm8gc2lzdGVtYScsXG4gICAgICAnZW4tVVMnOiAnTm90aWZpY2F0aW9uIG5vdCBmb3VuZCBpbiB0aGUgc3lzdGVtJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX1RFTVBMQVRFX05PVF9GT1VORDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19URU1QTEFURV9OT1RfRk9VTkQnLFxuICAgIG1lc3NhZ2U6ICdUZW1wbGF0ZSBkZSBub3RpZmljYcOnw6NvIG7Do28gZW5jb250cmFkbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5OT1RfRk9VTkQsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuVkFMSURBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnVGVtcGxhdGUgZGUgbm90aWZpY2HDp8OjbyBuw6NvIGVuY29udHJhZG8nLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiB0ZW1wbGF0ZSBub3QgZm91bmQnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fQ1JFQVRJT05fRkFJTEVEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX0NSRUFUSU9OX0ZBSUxFRCcsXG4gICAgbWVzc2FnZTogJ0ZhbGhhIG5hIGNyaWHDp8OjbyBkYSBub3RpZmljYcOnw6NvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUixcbiAgICBjYXRlZ29yeTogRXJyb3JDYXRlZ29yeS5JTlRFR1JBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuSElHSCxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0Vycm8gYW8gY3JpYXIgbm90aWZpY2HDp8OjbycsXG4gICAgICAnZW4tVVMnOiAnRXJyb3IgY3JlYXRpbmcgbm90aWZpY2F0aW9uJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX1VQREFURV9GQUlMRUQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fVVBEQVRFX0ZBSUxFRCcsXG4gICAgbWVzc2FnZTogJ0ZhbGhhIG5hIGF0dWFsaXphw6fDo28gZGEgbm90aWZpY2HDp8OjbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuSU5URUdSQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0Vycm8gYW8gYXR1YWxpemFyIG5vdGlmaWNhw6fDo28nLFxuICAgICAgJ2VuLVVTJzogJ0Vycm9yIHVwZGF0aW5nIG5vdGlmaWNhdGlvbicsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19ERUxFVEVfRkFJTEVEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX0RFTEVURV9GQUlMRUQnLFxuICAgIG1lc3NhZ2U6ICdGYWxoYSBuYSBleGNsdXPDo28gZGEgbm90aWZpY2HDp8OjbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuSU5URUdSQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0Vycm8gYW8gZXhjbHVpciBub3RpZmljYcOnw6NvJyxcbiAgICAgICdlbi1VUyc6ICdFcnJvciBkZWxldGluZyBub3RpZmljYXRpb24nLFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBWQUxJREHDh8OVRVMgREUgREFET1NcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIE5PVElGSUNBQ0FPX0lOVkFMSURfVFlQRToge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19JTlZBTElEX1RZUEUnLFxuICAgIG1lc3NhZ2U6ICdUaXBvIGRlIG5vdGlmaWNhw6fDo28gaW52w6FsaWRvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ1RpcG8gZGUgbm90aWZpY2HDp8OjbyBlc3BlY2lmaWNhZG8gw6kgaW52w6FsaWRvJyxcbiAgICAgICdlbi1VUyc6ICdTcGVjaWZpZWQgbm90aWZpY2F0aW9uIHR5cGUgaXMgaW52YWxpZCcsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19JTlZBTElEX0NIQU5ORUw6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fSU5WQUxJRF9DSEFOTkVMJyxcbiAgICBtZXNzYWdlOiAnQ2FuYWwgZGUgbm90aWZpY2HDp8OjbyBpbnbDoWxpZG8nLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuVkFMSURBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnQ2FuYWwgZGUgbm90aWZpY2HDp8OjbyBlc3BlY2lmaWNhZG8gw6kgaW52w6FsaWRvJyxcbiAgICAgICdlbi1VUyc6ICdTcGVjaWZpZWQgbm90aWZpY2F0aW9uIGNoYW5uZWwgaXMgaW52YWxpZCcsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19JTlZBTElEX1JFQ0lQSUVOVDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19JTlZBTElEX1JFQ0lQSUVOVCcsXG4gICAgbWVzc2FnZTogJ0Rlc3RpbmF0w6FyaW8gaW52w6FsaWRvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5LkhJR0gsXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdEZXN0aW5hdMOhcmlvIGRhIG5vdGlmaWNhw6fDo28gw6kgaW52w6FsaWRvJyxcbiAgICAgICdlbi1VUyc6ICdOb3RpZmljYXRpb24gcmVjaXBpZW50IGlzIGludmFsaWQnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fSU5WQUxJRF9FTUFJTDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19JTlZBTElEX0VNQUlMJyxcbiAgICBtZXNzYWdlOiAnRW1haWwgaW52w6FsaWRvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0VuZGVyZcOnbyBkZSBlbWFpbCDDqSBpbnbDoWxpZG8nLFxuICAgICAgJ2VuLVVTJzogJ0VtYWlsIGFkZHJlc3MgaXMgaW52YWxpZCcsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19JTlZBTElEX1BIT05FOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX0lOVkFMSURfUEhPTkUnLFxuICAgIG1lc3NhZ2U6ICdUZWxlZm9uZSBpbnbDoWxpZG8nLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuVkFMSURBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnTsO6bWVybyBkZSB0ZWxlZm9uZSDDqSBpbnbDoWxpZG8nLFxuICAgICAgJ2VuLVVTJzogJ1Bob25lIG51bWJlciBpcyBpbnZhbGlkJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX0VNUFRZX0NPTlRFTlQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fRU1QVFlfQ09OVEVOVCcsXG4gICAgbWVzc2FnZTogJ0NvbnRlw7pkbyBkYSBub3RpZmljYcOnw6NvIHZhemlvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5LkhJR0gsXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdDb250ZcO6ZG8gZGEgbm90aWZpY2HDp8OjbyBuw6NvIHBvZGUgZXN0YXIgdmF6aW8nLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiBjb250ZW50IGNhbm5vdCBiZSBlbXB0eScsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19DT05URU5UX1RPT19MT05HOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX0NPTlRFTlRfVE9PX0xPTkcnLFxuICAgIG1lc3NhZ2U6ICdDb250ZcO6ZG8gZGEgbm90aWZpY2HDp8OjbyBtdWl0byBsb25nbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5CQURfUkVRVUVTVCxcbiAgICBjYXRlZ29yeTogRXJyb3JDYXRlZ29yeS5WQUxJREFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5NRURJVU0sXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdDb250ZcO6ZG8gZGEgbm90aWZpY2HDp8OjbyBleGNlZGUgbyBsaW1pdGUgZGUgY2FyYWN0ZXJlcycsXG4gICAgICAnZW4tVVMnOiAnTm90aWZpY2F0aW9uIGNvbnRlbnQgZXhjZWVkcyBjaGFyYWN0ZXIgbGltaXQnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fSU5WQUxJRF9TQ0hFRFVMRToge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19JTlZBTElEX1NDSEVEVUxFJyxcbiAgICBtZXNzYWdlOiAnQWdlbmRhbWVudG8gaW52w6FsaWRvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0RhdGEvaG9yYSBkZSBhZ2VuZGFtZW50byDDqSBpbnbDoWxpZGEnLFxuICAgICAgJ2VuLVVTJzogJ1NjaGVkdWxlIGRhdGUvdGltZSBpcyBpbnZhbGlkJyxcbiAgICB9LFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gRU5WSU8gREUgTk9USUZJQ0HDh8OVRVNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIE5PVElGSUNBQ0FPX1NFTkRfRkFJTEVEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX1NFTkRfRkFJTEVEJyxcbiAgICBtZXNzYWdlOiAnRmFsaGEgbm8gZW52aW8gZGEgbm90aWZpY2HDp8OjbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuSU5URUdSQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5LkhJR0gsXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdFcnJvIGFvIGVudmlhciBub3RpZmljYcOnw6NvJyxcbiAgICAgICdlbi1VUyc6ICdFcnJvciBzZW5kaW5nIG5vdGlmaWNhdGlvbicsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19FTUFJTF9TRU5EX0ZBSUxFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19FTUFJTF9TRU5EX0ZBSUxFRCcsXG4gICAgbWVzc2FnZTogJ0ZhbGhhIG5vIGVudmlvIGRlIGVtYWlsJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUixcbiAgICBjYXRlZ29yeTogRXJyb3JDYXRlZ29yeS5JTlRFR1JBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuSElHSCxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0Vycm8gYW8gZW52aWFyIGVtYWlsJyxcbiAgICAgICdlbi1VUyc6ICdFcnJvciBzZW5kaW5nIGVtYWlsJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX1NNU19TRU5EX0ZBSUxFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19TTVNfU0VORF9GQUlMRUQnLFxuICAgIG1lc3NhZ2U6ICdGYWxoYSBubyBlbnZpbyBkZSBTTVMnLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnRXJybyBhbyBlbnZpYXIgU01TJyxcbiAgICAgICdlbi1VUyc6ICdFcnJvciBzZW5kaW5nIFNNUycsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19QVVNIX1NFTkRfRkFJTEVEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX1BVU0hfU0VORF9GQUlMRUQnLFxuICAgIG1lc3NhZ2U6ICdGYWxoYSBubyBlbnZpbyBkZSBwdXNoIG5vdGlmaWNhdGlvbicsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuSU5URUdSQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0Vycm8gYW8gZW52aWFyIHB1c2ggbm90aWZpY2F0aW9uJyxcbiAgICAgICdlbi1VUyc6ICdFcnJvciBzZW5kaW5nIHB1c2ggbm90aWZpY2F0aW9uJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX0RFTElWRVJZX0ZBSUxFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19ERUxJVkVSWV9GQUlMRUQnLFxuICAgIG1lc3NhZ2U6ICdGYWxoYSBuYSBlbnRyZWdhIGRhIG5vdGlmaWNhw6fDo28nLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnRmFsaGEgbmEgZW50cmVnYSBkYSBub3RpZmljYcOnw6NvJyxcbiAgICAgICdlbi1VUyc6ICdOb3RpZmljYXRpb24gZGVsaXZlcnkgZmFpbGVkJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX0JPVU5DRV9ERVRFQ1RFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19CT1VOQ0VfREVURUNURUQnLFxuICAgIG1lc3NhZ2U6ICdCb3VuY2UgZGV0ZWN0YWRvIG5vIGVtYWlsJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5NRURJVU0sXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdFbWFpbCByZXRvcm5vdSAoYm91bmNlIGRldGVjdGFkbyknLFxuICAgICAgJ2VuLVVTJzogJ0VtYWlsIGJvdW5jZWQgKGJvdW5jZSBkZXRlY3RlZCknLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fU1BBTV9ERVRFQ1RFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19TUEFNX0RFVEVDVEVEJyxcbiAgICBtZXNzYWdlOiAnTm90aWZpY2HDp8OjbyBtYXJjYWRhIGNvbW8gc3BhbScsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5CQURfUkVRVUVTVCxcbiAgICBjYXRlZ29yeTogRXJyb3JDYXRlZ29yeS5JTlRFR1JBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnTm90aWZpY2HDp8OjbyBmb2kgbWFyY2FkYSBjb21vIHNwYW0nLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiB3YXMgbWFya2VkIGFzIHNwYW0nLFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBURU1QTEFURVNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIE5PVElGSUNBQ0FPX1RFTVBMQVRFX0lOVkFMSUQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fVEVNUExBVEVfSU5WQUxJRCcsXG4gICAgbWVzc2FnZTogJ1RlbXBsYXRlIGRlIG5vdGlmaWNhw6fDo28gaW52w6FsaWRvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5LkhJR0gsXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdUZW1wbGF0ZSBkZSBub3RpZmljYcOnw6NvIMOpIGludsOhbGlkbycsXG4gICAgICAnZW4tVVMnOiAnTm90aWZpY2F0aW9uIHRlbXBsYXRlIGlzIGludmFsaWQnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fVEVNUExBVEVfQ09NUElMQVRJT05fRkFJTEVEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX1RFTVBMQVRFX0NPTVBJTEFUSU9OX0ZBSUxFRCcsXG4gICAgbWVzc2FnZTogJ0ZhbGhhIG5hIGNvbXBpbGHDp8OjbyBkbyB0ZW1wbGF0ZScsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuSU5URUdSQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5LkhJR0gsXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdFcnJvIGFvIGNvbXBpbGFyIHRlbXBsYXRlIGRlIG5vdGlmaWNhw6fDo28nLFxuICAgICAgJ2VuLVVTJzogJ0Vycm9yIGNvbXBpbGluZyBub3RpZmljYXRpb24gdGVtcGxhdGUnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fVEVNUExBVEVfVkFSSUFCTEVTX01JU1NJTkc6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fVEVNUExBVEVfVkFSSUFCTEVTX01JU1NJTkcnLFxuICAgIG1lc3NhZ2U6ICdWYXJpw6F2ZWlzIGRvIHRlbXBsYXRlIGF1c2VudGVzJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LlZBTElEQVRJT05TLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5LkhJR0gsXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdWYXJpw6F2ZWlzIG9icmlnYXTDs3JpYXMgZG8gdGVtcGxhdGUgZXN0w6NvIGF1c2VudGVzJyxcbiAgICAgICdlbi1VUyc6ICdSZXF1aXJlZCB0ZW1wbGF0ZSB2YXJpYWJsZXMgYXJlIG1pc3NpbmcnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fVEVNUExBVEVfU1lOVEFYX0VSUk9SOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX1RFTVBMQVRFX1NZTlRBWF9FUlJPUicsXG4gICAgbWVzc2FnZTogJ0Vycm8gZGUgc2ludGF4ZSBubyB0ZW1wbGF0ZScsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5CQURfUkVRVUVTVCxcbiAgICBjYXRlZ29yeTogRXJyb3JDYXRlZ29yeS5WQUxJREFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnRXJybyBkZSBzaW50YXhlIG5vIHRlbXBsYXRlIGRlIG5vdGlmaWNhw6fDo28nLFxuICAgICAgJ2VuLVVTJzogJ1N5bnRheCBlcnJvciBpbiBub3RpZmljYXRpb24gdGVtcGxhdGUnLFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBQUkVGRVLDik5DSUFTIEUgQ09ORklHVVJBw4fDlUVTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBOT1RJRklDQUNBT19VU0VSX09QVEVEX09VVDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19VU0VSX09QVEVEX09VVCcsXG4gICAgbWVzc2FnZTogJ1VzdcOhcmlvIG9wdG91IHBvciBuw6NvIHJlY2ViZXIgbm90aWZpY2HDp8O1ZXMnLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuT1BFUkFUSU9OQUxfRkxPVyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5NRURJVU0sXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdVc3XDoXJpbyBvcHRvdSBwb3IgbsOjbyByZWNlYmVyIGVzdGUgdGlwbyBkZSBub3RpZmljYcOnw6NvJyxcbiAgICAgICdlbi1VUyc6ICdVc2VyIG9wdGVkIG91dCBvZiB0aGlzIHR5cGUgb2Ygbm90aWZpY2F0aW9uJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX0NIQU5ORUxfRElTQUJMRUQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fQ0hBTk5FTF9ESVNBQkxFRCcsXG4gICAgbWVzc2FnZTogJ0NhbmFsIGRlIG5vdGlmaWNhw6fDo28gZGVzYWJpbGl0YWRvJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5Lk9QRVJBVElPTkFMX0ZMT1csXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnQ2FuYWwgZGUgbm90aWZpY2HDp8OjbyBlc3TDoSBkZXNhYmlsaXRhZG8nLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiBjaGFubmVsIGlzIGRpc2FibGVkJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX0ZSRVFVRU5DWV9MSU1JVF9FWENFRURFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19GUkVRVUVOQ1lfTElNSVRfRVhDRUVERUQnLFxuICAgIG1lc3NhZ2U6ICdMaW1pdGUgZGUgZnJlcXXDqm5jaWEgZXhjZWRpZG8nLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuVE9PX01BTllfUkVRVUVTVFMsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuT1BFUkFUSU9OQUxfRkxPVyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5NRURJVU0sXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdMaW1pdGUgZGUgZnJlcXXDqm5jaWEgZGUgbm90aWZpY2HDp8O1ZXMgZXhjZWRpZG8nLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiBmcmVxdWVuY3kgbGltaXQgZXhjZWVkZWQnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fUVVJRVRfSE9VUlM6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fUVVJRVRfSE9VUlMnLFxuICAgIG1lc3NhZ2U6ICdIb3LDoXJpbyBkZSBzaWzDqm5jaW8gYXRpdm8nLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuT1BFUkFUSU9OQUxfRkxPVyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5MT1csXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdOb3RpZmljYcOnw6NvIGJsb3F1ZWFkYSBkZXZpZG8gYW8gaG9yw6FyaW8gZGUgc2lsw6puY2lvJyxcbiAgICAgICdlbi1VUyc6ICdOb3RpZmljYXRpb24gYmxvY2tlZCBkdWUgdG8gcXVpZXQgaG91cnMnLFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBJTlRFR1JBw4fDg08gQ09NIFNFUlZJw4dPUyBFWFRFUk5PU1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgTk9USUZJQ0FDQU9fU01UUF9DT05ORUNUSU9OX0ZBSUxFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19TTVRQX0NPTk5FQ1RJT05fRkFJTEVEJyxcbiAgICBtZXNzYWdlOiAnRmFsaGEgbmEgY29uZXjDo28gU01UUCcsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5TRVJWSUNFX1VOQVZBSUxBQkxFLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnRmFsaGEgbmEgY29uZXjDo28gY29tIHNlcnZpZG9yIFNNVFAnLFxuICAgICAgJ2VuLVVTJzogJ0ZhaWxlZCB0byBjb25uZWN0IHRvIFNNVFAgc2VydmVyJyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX1NNU19QUk9WSURFUl9GQUlMRUQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fU01TX1BST1ZJREVSX0ZBSUxFRCcsXG4gICAgbWVzc2FnZTogJ0ZhbGhhIG5vIHByb3ZlZG9yIGRlIFNNUycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5TRVJWSUNFX1VOQVZBSUxBQkxFLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnRmFsaGEgbm8gcHJvdmVkb3IgZGUgU01TJyxcbiAgICAgICdlbi1VUyc6ICdTTVMgcHJvdmlkZXIgZmFpbHVyZScsXG4gICAgfSxcbiAgfSxcblxuICBOT1RJRklDQUNBT19QVVNIX1BST1ZJREVSX0ZBSUxFRDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19QVVNIX1BST1ZJREVSX0ZBSUxFRCcsXG4gICAgbWVzc2FnZTogJ0ZhbGhhIG5vIHByb3ZlZG9yIGRlIHB1c2ggbm90aWZpY2F0aW9ucycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5TRVJWSUNFX1VOQVZBSUxBQkxFLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5NRURJVU0sXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdGYWxoYSBubyBwcm92ZWRvciBkZSBwdXNoIG5vdGlmaWNhdGlvbnMnLFxuICAgICAgJ2VuLVVTJzogJ1B1c2ggbm90aWZpY2F0aW9uIHByb3ZpZGVyIGZhaWx1cmUnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fQVBJX1FVT1RBX0VYQ0VFREVEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX0FQSV9RVU9UQV9FWENFRURFRCcsXG4gICAgbWVzc2FnZTogJ0NvdGEgZGEgQVBJIGV4Y2VkaWRhJyxcbiAgICBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLlRPT19NQU5ZX1JFUVVFU1RTLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnQ290YSBkYSBBUEkgZGUgbm90aWZpY2HDp8O1ZXMgZXhjZWRpZGEnLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiBBUEkgcXVvdGEgZXhjZWVkZWQnLFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBTRUdVUkFOw4dBIEUgUEVSTUlTU8OVRVNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIE5PVElGSUNBQ0FPX0FDQ0VTU19ERU5JRUQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fQUNDRVNTX0RFTklFRCcsXG4gICAgbWVzc2FnZTogJ0FjZXNzbyBuZWdhZG8gw6Agbm90aWZpY2HDp8OjbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5GT1JCSURERU4sXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuT1BFUkFUSU9OQUxfRkxPVyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnVm9jw6ogbsOjbyB0ZW0gcGVybWlzc8OjbyBwYXJhIGFjZXNzYXIgZXN0YSBub3RpZmljYcOnw6NvJyxcbiAgICAgICdlbi1VUyc6ICdZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgdGhpcyBub3RpZmljYXRpb24nLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fVU5BVVRIT1JJWkVEX1NFTkRFUjoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19VTkFVVEhPUklaRURfU0VOREVSJyxcbiAgICBtZXNzYWdlOiAnUmVtZXRlbnRlIG7Do28gYXV0b3JpemFkbycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5GT1JCSURERU4sXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuT1BFUkFUSU9OQUxfRkxPVyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnUmVtZXRlbnRlIG7Do28gYXV0b3JpemFkbyBwYXJhIGVzdGUgdGlwbyBkZSBub3RpZmljYcOnw6NvJyxcbiAgICAgICdlbi1VUyc6ICdTZW5kZXIgbm90IGF1dGhvcml6ZWQgZm9yIHRoaXMgdHlwZSBvZiBub3RpZmljYXRpb24nLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fQ09OVEVOVF9CTE9DS0VEOiB7XG4gICAgY29kZTogJ05PVElGSUNBQ0FPX0NPTlRFTlRfQkxPQ0tFRCcsXG4gICAgbWVzc2FnZTogJ0NvbnRlw7pkbyBibG9xdWVhZG8nLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuVkFMSURBVElPTlMsXG4gICAgc2V2ZXJpdHk6IEVycm9yU2V2ZXJpdHkuTUVESVVNLFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOlxuICAgICAgICAnQ29udGXDumRvIGRhIG5vdGlmaWNhw6fDo28gZm9pIGJsb3F1ZWFkbyBwb3IgcG9sw610aWNhcyBkZSBzZWd1cmFuw6dhJyxcbiAgICAgICdlbi1VUyc6ICdOb3RpZmljYXRpb24gY29udGVudCB3YXMgYmxvY2tlZCBieSBzZWN1cml0eSBwb2xpY2llcycsXG4gICAgfSxcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEFHRU5EQU1FTlRPIEUgRklMQVxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgTk9USUZJQ0FDQU9fUVVFVUVfRlVMTDoge1xuICAgIGNvZGU6ICdOT1RJRklDQUNBT19RVUVVRV9GVUxMJyxcbiAgICBtZXNzYWdlOiAnRmlsYSBkZSBub3RpZmljYcOnw7VlcyBjaGVpYScsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5TRVJWSUNFX1VOQVZBSUxBQkxFLFxuICAgIGNhdGVnb3J5OiBFcnJvckNhdGVnb3J5LklOVEVHUkFUSU9OUyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5ISUdILFxuICAgIGxvY2FsaXplZE1lc3NhZ2VzOiB7XG4gICAgICAncHQtQlInOiAnRmlsYSBkZSBub3RpZmljYcOnw7VlcyBlc3TDoSBjaGVpYScsXG4gICAgICAnZW4tVVMnOiAnTm90aWZpY2F0aW9uIHF1ZXVlIGlzIGZ1bGwnLFxuICAgIH0sXG4gIH0sXG5cbiAgTk9USUZJQ0FDQU9fU0NIRURVTEVfQ09ORkxJQ1Q6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fU0NIRURVTEVfQ09ORkxJQ1QnLFxuICAgIG1lc3NhZ2U6ICdDb25mbGl0byBkZSBhZ2VuZGFtZW50bycsXG4gICAgaHR0cFN0YXR1czogSHR0cFN0YXR1cy5DT05GTElDVCxcbiAgICBjYXRlZ29yeTogRXJyb3JDYXRlZ29yeS5PUEVSQVRJT05BTF9GTE9XLFxuICAgIHNldmVyaXR5OiBFcnJvclNldmVyaXR5Lk1FRElVTSxcbiAgICBsb2NhbGl6ZWRNZXNzYWdlczoge1xuICAgICAgJ3B0LUJSJzogJ0NvbmZsaXRvIG5vIGFnZW5kYW1lbnRvIGRhIG5vdGlmaWNhw6fDo28nLFxuICAgICAgJ2VuLVVTJzogJ05vdGlmaWNhdGlvbiBzY2hlZHVsaW5nIGNvbmZsaWN0JyxcbiAgICB9LFxuICB9LFxuXG4gIE5PVElGSUNBQ0FPX0VYUElSRUQ6IHtcbiAgICBjb2RlOiAnTk9USUZJQ0FDQU9fRVhQSVJFRCcsXG4gICAgbWVzc2FnZTogJ05vdGlmaWNhw6fDo28gZXhwaXJhZGEnLFxuICAgIGh0dHBTdGF0dXM6IEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QsXG4gICAgY2F0ZWdvcnk6IEVycm9yQ2F0ZWdvcnkuT1BFUkFUSU9OQUxfRkxPVyxcbiAgICBzZXZlcml0eTogRXJyb3JTZXZlcml0eS5NRURJVU0sXG4gICAgbG9jYWxpemVkTWVzc2FnZXM6IHtcbiAgICAgICdwdC1CUic6ICdOb3RpZmljYcOnw6NvIGV4cGlyb3UgZSBuw6NvIHBvZGUgbWFpcyBzZXIgZW52aWFkYScsXG4gICAgICAnZW4tVVMnOiAnTm90aWZpY2F0aW9uIGhhcyBleHBpcmVkIGFuZCBjYW4gbm8gbG9uZ2VyIGJlIHNlbnQnLFxuICAgIH0sXG4gIH0sXG59O1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGVU7Dh8OVRVMgSEVMUEVSIFBBUkEgTk9USUZJQ0FDQU9cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBMYW7Dp2EgZXJybyBkZSBub3RpZmljYcOnw6NvIG7Do28gZW5jb250cmFkYVxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dOb3RpZmljYWNhb05vdEZvdW5kKFxuICBub3RpZmljYWNhb0lkOiBzdHJpbmcsXG4gIGNvbnRleHQ6IE5vdGlmaWNhY2FvRXJyb3JDb250ZXh0ID0ge30sXG4gIGxhbmd1YWdlOiBzdHJpbmcgPSAncHQtQlInLFxuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgQXBwRXJyb3IoXG4gICAgJ05PVElGSUNBQ0FPX05PVF9GT1VORCcsXG4gICAge1xuICAgICAgLi4uY29udGV4dCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbm90aWZpY2FjYW9JZCxcbiAgICAgICAgLi4uY29udGV4dC5kYXRhLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGxhbmd1YWdlLFxuICApO1xufVxuXG4vKipcbiAqIExhbsOnYSBlcnJvIGRlIGZhbGhhIG5vIGVudmlvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvd1NlbmRGYWlsZWQoXG4gIGNhbmFsOiBzdHJpbmcsXG4gIGRlc3RpbmF0YXJpbzogc3RyaW5nLFxuICBlcnJvOiBzdHJpbmcsXG4gIGNvbnRleHQ6IE5vdGlmaWNhY2FvRXJyb3JDb250ZXh0ID0ge30sXG4gIGxhbmd1YWdlOiBzdHJpbmcgPSAncHQtQlInLFxuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgQXBwRXJyb3IoXG4gICAgJ05PVElGSUNBQ0FPX1NFTkRfRkFJTEVEJyxcbiAgICB7XG4gICAgICAuLi5jb250ZXh0LFxuICAgICAgZGF0YToge1xuICAgICAgICBjYW5hbCxcbiAgICAgICAgZGVzdGluYXRhcmlvLFxuICAgICAgICBlcnJvLFxuICAgICAgICAuLi5jb250ZXh0LmRhdGEsXG4gICAgICB9LFxuICAgIH0sXG4gICAgbGFuZ3VhZ2UsXG4gICk7XG59XG5cbi8qKlxuICogTGFuw6dhIGVycm8gZGUgZW1haWwgaW52w6FsaWRvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvd0ludmFsaWRFbWFpbChcbiAgZW1haWw6IHN0cmluZyxcbiAgY29udGV4dDogTm90aWZpY2FjYW9FcnJvckNvbnRleHQgPSB7fSxcbiAgbGFuZ3VhZ2U6IHN0cmluZyA9ICdwdC1CUicsXG4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBBcHBFcnJvcihcbiAgICAnTk9USUZJQ0FDQU9fSU5WQUxJRF9FTUFJTCcsXG4gICAge1xuICAgICAgLi4uY29udGV4dCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgZW1haWwsXG4gICAgICAgIC4uLmNvbnRleHQuZGF0YSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBsYW5ndWFnZSxcbiAgKTtcbn1cblxuLyoqXG4gKiBMYW7Dp2EgZXJybyBkZSB0ZWxlZm9uZSBpbnbDoWxpZG9cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRocm93SW52YWxpZFBob25lKFxuICB0ZWxlZm9uZTogc3RyaW5nLFxuICBjb250ZXh0OiBOb3RpZmljYWNhb0Vycm9yQ29udGV4dCA9IHt9LFxuICBsYW5ndWFnZTogc3RyaW5nID0gJ3B0LUJSJyxcbik6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IEFwcEVycm9yKFxuICAgICdOT1RJRklDQUNBT19JTlZBTElEX1BIT05FJyxcbiAgICB7XG4gICAgICAuLi5jb250ZXh0LFxuICAgICAgZGF0YToge1xuICAgICAgICB0ZWxlZm9uZSxcbiAgICAgICAgLi4uY29udGV4dC5kYXRhLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGxhbmd1YWdlLFxuICApO1xufVxuXG4vKipcbiAqIExhbsOnYSBlcnJvIGRlIHRlbXBsYXRlIG7Do28gZW5jb250cmFkb1xuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dUZW1wbGF0ZU5vdEZvdW5kKFxuICB0ZW1wbGF0ZUlkOiBzdHJpbmcsXG4gIGNvbnRleHQ6IE5vdGlmaWNhY2FvRXJyb3JDb250ZXh0ID0ge30sXG4gIGxhbmd1YWdlOiBzdHJpbmcgPSAncHQtQlInLFxuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgQXBwRXJyb3IoXG4gICAgJ05PVElGSUNBQ0FPX1RFTVBMQVRFX05PVF9GT1VORCcsXG4gICAge1xuICAgICAgLi4uY29udGV4dCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdGVtcGxhdGVJZCxcbiAgICAgICAgLi4uY29udGV4dC5kYXRhLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGxhbmd1YWdlLFxuICApO1xufVxuXG4vKipcbiAqIExhbsOnYSBlcnJvIGRlIHZhcmnDoXZlaXMgZG8gdGVtcGxhdGUgYXVzZW50ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRocm93VGVtcGxhdGVWYXJpYWJsZXNNaXNzaW5nKFxuICB2YXJpYXZlaXNBdXNlbnRlczogc3RyaW5nW10sXG4gIHRlbXBsYXRlSWQ6IHN0cmluZyxcbiAgY29udGV4dDogTm90aWZpY2FjYW9FcnJvckNvbnRleHQgPSB7fSxcbiAgbGFuZ3VhZ2U6IHN0cmluZyA9ICdwdC1CUicsXG4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBBcHBFcnJvcihcbiAgICAnTk9USUZJQ0FDQU9fVEVNUExBVEVfVkFSSUFCTEVTX01JU1NJTkcnLFxuICAgIHtcbiAgICAgIC4uLmNvbnRleHQsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHZhcmlhdmVpc0F1c2VudGVzLFxuICAgICAgICB0ZW1wbGF0ZUlkLFxuICAgICAgICAuLi5jb250ZXh0LmRhdGEsXG4gICAgICB9LFxuICAgIH0sXG4gICAgbGFuZ3VhZ2UsXG4gICk7XG59XG5cbi8qKlxuICogTGFuw6dhIGVycm8gZGUgdXN1w6FyaW8gb3B0b3UgcG9yIG7Do28gcmVjZWJlclxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dVc2VyT3B0ZWRPdXQoXG4gIHVzZXJJZDogc3RyaW5nLFxuICB0aXBvTm90aWZpY2FjYW86IHN0cmluZyxcbiAgY29udGV4dDogTm90aWZpY2FjYW9FcnJvckNvbnRleHQgPSB7fSxcbiAgbGFuZ3VhZ2U6IHN0cmluZyA9ICdwdC1CUicsXG4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBBcHBFcnJvcihcbiAgICAnTk9USUZJQ0FDQU9fVVNFUl9PUFRFRF9PVVQnLFxuICAgIHtcbiAgICAgIC4uLmNvbnRleHQsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHVzZXJJZCxcbiAgICAgICAgdGlwb05vdGlmaWNhY2FvLFxuICAgICAgICAuLi5jb250ZXh0LmRhdGEsXG4gICAgICB9LFxuICAgIH0sXG4gICAgbGFuZ3VhZ2UsXG4gICk7XG59XG5cbi8qKlxuICogTGFuw6dhIGVycm8gZGUgbGltaXRlIGRlIGZyZXF1w6puY2lhIGV4Y2VkaWRvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvd0ZyZXF1ZW5jeUxpbWl0RXhjZWVkZWQoXG4gIHVzZXJJZDogc3RyaW5nLFxuICB0aXBvTm90aWZpY2FjYW86IHN0cmluZyxcbiAgbGltaXRlQXR1YWw6IG51bWJlcixcbiAgY29udGV4dDogTm90aWZpY2FjYW9FcnJvckNvbnRleHQgPSB7fSxcbiAgbGFuZ3VhZ2U6IHN0cmluZyA9ICdwdC1CUicsXG4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBBcHBFcnJvcihcbiAgICAnTk9USUZJQ0FDQU9fRlJFUVVFTkNZX0xJTUlUX0VYQ0VFREVEJyxcbiAgICB7XG4gICAgICAuLi5jb250ZXh0LFxuICAgICAgZGF0YToge1xuICAgICAgICB1c2VySWQsXG4gICAgICAgIHRpcG9Ob3RpZmljYWNhbyxcbiAgICAgICAgbGltaXRlQXR1YWwsXG4gICAgICAgIC4uLmNvbnRleHQuZGF0YSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBsYW5ndWFnZSxcbiAgKTtcbn1cblxuLyoqXG4gKiBMYW7Dp2EgZXJybyBkZSBmYWxoYSBuYSBjb25leMOjbyBTTVRQXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvd1NtdHBDb25uZWN0aW9uRmFpbGVkKFxuICBzZXJ2aWRvcjogc3RyaW5nLFxuICBwb3J0YTogbnVtYmVyLFxuICBlcnJvOiBzdHJpbmcsXG4gIGNvbnRleHQ6IE5vdGlmaWNhY2FvRXJyb3JDb250ZXh0ID0ge30sXG4gIGxhbmd1YWdlOiBzdHJpbmcgPSAncHQtQlInLFxuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgQXBwRXJyb3IoXG4gICAgJ05PVElGSUNBQ0FPX1NNVFBfQ09OTkVDVElPTl9GQUlMRUQnLFxuICAgIHtcbiAgICAgIC4uLmNvbnRleHQsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHNlcnZpZG9yLFxuICAgICAgICBwb3J0YSxcbiAgICAgICAgZXJybyxcbiAgICAgICAgLi4uY29udGV4dC5kYXRhLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGxhbmd1YWdlLFxuICApO1xufVxuXG4vKipcbiAqIExhbsOnYSBlcnJvIGRlIGNvdGEgZGEgQVBJIGV4Y2VkaWRhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvd0FwaVF1b3RhRXhjZWVkZWQoXG4gIHByb3ZlZG9yOiBzdHJpbmcsXG4gIGNvdGFBdHVhbDogbnVtYmVyLFxuICBjb3RhTWF4aW1hOiBudW1iZXIsXG4gIGNvbnRleHQ6IE5vdGlmaWNhY2FvRXJyb3JDb250ZXh0ID0ge30sXG4gIGxhbmd1YWdlOiBzdHJpbmcgPSAncHQtQlInLFxuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgQXBwRXJyb3IoXG4gICAgJ05PVElGSUNBQ0FPX0FQSV9RVU9UQV9FWENFRURFRCcsXG4gICAge1xuICAgICAgLi4uY29udGV4dCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgcHJvdmVkb3IsXG4gICAgICAgIGNvdGFBdHVhbCxcbiAgICAgICAgY290YU1heGltYSxcbiAgICAgICAgLi4uY29udGV4dC5kYXRhLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGxhbmd1YWdlLFxuICApO1xufVxuXG4vKipcbiAqIExhbsOnYSBlcnJvIGRlIGZpbGEgY2hlaWFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRocm93UXVldWVGdWxsKFxuICB0YW1hbmhvQXR1YWw6IG51bWJlcixcbiAgY2FwYWNpZGFkZU1heGltYTogbnVtYmVyLFxuICBjb250ZXh0OiBOb3RpZmljYWNhb0Vycm9yQ29udGV4dCA9IHt9LFxuICBsYW5ndWFnZTogc3RyaW5nID0gJ3B0LUJSJyxcbik6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IEFwcEVycm9yKFxuICAgICdOT1RJRklDQUNBT19RVUVVRV9GVUxMJyxcbiAgICB7XG4gICAgICAuLi5jb250ZXh0LFxuICAgICAgZGF0YToge1xuICAgICAgICB0YW1hbmhvQXR1YWwsXG4gICAgICAgIGNhcGFjaWRhZGVNYXhpbWEsXG4gICAgICAgIC4uLmNvbnRleHQuZGF0YSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBsYW5ndWFnZSxcbiAgKTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==