{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\AppError.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\AppError.ts"],"sourcesContent":["/**\n * Classe base para erros padronizados do sistema SEMTAS\n * \n * Implementa o padrão de erro estruturado conforme definido\n * no catálogo de erros, com suporte a contexto dinâmico,\n * localização e observabilidade.\n * \n * @see docs/ADRs/catalogo-erros.md\n */\n\nimport { HttpException } from '@nestjs/common';\nimport { ERROR_CATALOG, ErrorDefinition, ErrorCategory, ErrorSeverity } from './catalog';\n\n/**\n * Contexto dinâmico para personalização de erros\n */\nexport interface ErrorContext {\n  /** Dados específicos do erro para interpolação na mensagem */\n  data?: Record<string, any>;\n  /** Causa raiz do erro (para encadeamento) */\n  cause?: Error;\n  /** Metadados adicionais para logging e debugging */\n  metadata?: Record<string, any>;\n  /** ID da requisição para rastreabilidade */\n  requestId?: string;\n  /** ID do usuário que causou o erro */\n  userId?: string;\n  /** Contexto operacional adicional */\n  operationalContext?: {\n    module?: string;\n    operation?: string;\n    entityId?: string;\n    entityType?: string;\n  };\n}\n\n/**\n * Classe principal para erros padronizados do sistema\n */\nexport class AppError extends HttpException {\n  /** Código único do erro conforme catálogo */\n  public readonly errorCode: string;\n  \n  /** Definição completa do erro do catálogo */\n  public readonly definition: ErrorDefinition;\n  \n  /** Contexto dinâmico do erro */\n  public readonly context: ErrorContext;\n  \n  /** Timestamp de quando o erro ocorreu */\n  public readonly timestamp: Date;\n  \n  /** Mensagem localizada (se disponível) */\n  public readonly localizedMessage?: string;\n\n  constructor(\n    errorCode: string,\n    context: ErrorContext = {},\n    acceptedLanguage: string = 'pt-BR'\n  ) {\n    const definition = ERROR_CATALOG[errorCode];\n    \n    if (!definition) {\n      throw new Error(`Código de erro não encontrado no catálogo: ${errorCode}`);\n    }\n\n    // Interpolar dados na mensagem se fornecidos\n    const message = context.data \n      ? AppError.interpolateMessage(definition.message, context.data)\n      : definition.message;\n\n    super(message, definition.httpStatus);\n\n    this.name = 'AppError';\n    this.errorCode = errorCode;\n    this.definition = definition;\n    this.context = context;\n    this.timestamp = new Date();\n    \n    // Definir mensagem localizada\n    if (definition.localizedMessages?.[acceptedLanguage]) {\n      this.localizedMessage = context.data\n        ? AppError.interpolateMessage(definition.localizedMessages[acceptedLanguage], context.data)\n        : definition.localizedMessages[acceptedLanguage];\n    }\n\n    // Preservar stack trace da causa raiz\n    if (context.cause) {\n      this.stack = context.cause.stack;\n    }\n  }\n\n  /**\n   * Interpola dados dinâmicos na mensagem usando placeholders\n   * Formato: \"Erro no campo {fieldName} com valor {value}\"\n   */\n  private static interpolateMessage(template: string, data: Record<string, any>): string {\n    return template.replace(/\\{([^}]+)\\}/g, (match, key) => {\n      return data[key]?.toString() || match;\n    });\n  }\n\n  /**\n   * Retorna representação JSON estruturada do erro\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      errorCode: this.errorCode,\n      message: this.message,\n      localizedMessage: this.localizedMessage,\n      httpStatus: this.getStatus(),\n      category: this.definition.category,\n      severity: this.definition.severity,\n      timestamp: this.timestamp.toISOString(),\n      context: {\n        data: this.context.data,\n        metadata: this.context.metadata,\n        requestId: this.context.requestId,\n        userId: this.context.userId,\n        operationalContext: this.context.operationalContext,\n      },\n      legalReference: this.definition.legalReference,\n    };\n  }\n\n  /**\n   * Retorna dados estruturados para logging\n   */\n  public getLogData(): Record<string, any> {\n    return {\n      errorCode: this.errorCode,\n      category: this.definition.category,\n      severity: this.definition.severity,\n      httpStatus: this.getStatus(),\n      message: this.message,\n      localizedMessage: this.localizedMessage,\n      timestamp: this.timestamp.toISOString(),\n      requestId: this.context.requestId,\n      userId: this.context.userId,\n      operationalContext: this.context.operationalContext,\n      metadata: this.context.metadata,\n      legalReference: this.definition.legalReference,\n      causedBy: this.context.cause?.message,\n    };\n  }\n\n  /**\n   * Retorna dados seguros para resposta da API (sem informações sensíveis)\n   */\n  public getApiResponse(includeDetails: boolean = false): Record<string, any> {\n    const response = {\n      code: this.errorCode,\n      message: this.localizedMessage || this.message,\n      category: this.definition.category,\n      timestamp: this.timestamp.toISOString(),\n    };\n\n    if (includeDetails && this.context.data) {\n      // Filtrar dados sensíveis antes de incluir\n      const safeData = this.filterSensitiveData(this.context.data);\n      if (Object.keys(safeData).length > 0) {\n        (response as any).details = safeData;\n      }\n    }\n\n    if (this.definition.legalReference) {\n      (response as any).legalReference = this.definition.legalReference;\n    }\n\n    return response;\n  }\n\n  /**\n   * Remove dados sensíveis do contexto para exposição segura\n   */\n  private filterSensitiveData(data: Record<string, any>): Record<string, any> {\n    const sensitiveKeys = [\n      'password', 'senha', 'token', 'secret', 'key', 'cpf', 'rg', \n      'email', 'telefone', 'endereco', 'address', 'phone'\n    ];\n    \n    const filtered: Record<string, any> = {};\n    \n    for (const [key, value] of Object.entries(data)) {\n      const isSensitive = sensitiveKeys.some(sensitiveKey => \n        key.toLowerCase().includes(sensitiveKey.toLowerCase())\n      );\n      \n      if (!isSensitive) {\n        filtered[key] = value;\n      }\n    }\n    \n    return filtered;\n  }\n\n  /**\n   * Verifica se o erro é crítico baseado na severidade\n   */\n  public isCritical(): boolean {\n    return this.definition.severity === ErrorSeverity.CRITICAL;\n  }\n\n  /**\n   * Verifica se o erro é de alta severidade\n   */\n  public isHighSeverity(): boolean {\n    return this.definition.severity === ErrorSeverity.HIGH || this.isCritical();\n  }\n\n  /**\n   * Verifica se o erro pertence a uma categoria específica\n   */\n  public isCategory(category: ErrorCategory): boolean {\n    return this.definition.category === category;\n  }\n\n  /**\n   * Cria uma nova instância do erro com contexto adicional\n   */\n  public withContext(additionalContext: Partial<ErrorContext>): AppError {\n    const mergedContext: ErrorContext = {\n      ...this.context,\n      ...additionalContext,\n      data: { ...this.context.data, ...additionalContext.data },\n      metadata: { ...this.context.metadata, ...additionalContext.metadata },\n    };\n\n    return new AppError(this.errorCode, mergedContext);\n  }\n\n  /**\n   * Factory method para criar erro a partir de código PostgreSQL\n   */\n  public static fromPostgresError(\n    postgresCode: string,\n    context: ErrorContext = {},\n    acceptedLanguage: string = 'pt-BR'\n  ): AppError {\n    // Importar o mapa aqui para evitar dependência circular\n    const { POSTGRES_ERROR_MAP } = require('./catalog');\n    \n    const errorCode = POSTGRES_ERROR_MAP[postgresCode];\n    \n    if (!errorCode) {\n      // Fallback para erro genérico de sistema\n      return new AppError('SYSTEM_DATABASE_ERROR', {\n        ...context,\n        metadata: {\n          ...context.metadata,\n          postgresCode,\n        },\n      }, acceptedLanguage);\n    }\n\n    return new AppError(errorCode, {\n      ...context,\n      metadata: {\n        ...context.metadata,\n        postgresCode,\n      },\n    }, acceptedLanguage);\n  }\n}"],"version":3}