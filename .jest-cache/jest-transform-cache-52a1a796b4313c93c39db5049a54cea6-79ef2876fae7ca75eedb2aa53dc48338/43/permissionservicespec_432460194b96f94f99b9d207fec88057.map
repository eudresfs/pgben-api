{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\test\\auth\\permission-service.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\test\\auth\\permission-service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { PermissionService } from '../../src/auth/services/permission.service';\nimport { PermissionRepository } from '../../src/auth/repositories/permission.repository';\nimport { RolePermissionRepository } from '../../src/auth/repositories/role-permission.repository';\nimport { UserPermissionRepository } from '../../src/auth/repositories/user-permission.repository';\nimport { PermissionScopeRepository } from '../../src/auth/repositories/permission-scope.repository';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { ScopeType } from '../../src/auth/entities/user-permission.entity';\nimport { Permission } from '../../src/auth/entities/permission.entity';\n\n/**\n * Testes para o PermissionService\n *\n * Estes testes verificam a funcionalidade do serviço de permissões,\n * responsável por implementar controle de acesso granular no sistema PGBen.\n */\ndescribe('PermissionService', () => {\n  let service: PermissionService;\n  let permissionRepository: any;\n  let rolePermissionRepository: any;\n  let userPermissionRepository: any;\n  let permissionScopeRepository: any;\n  let cacheManager: any;\n\n  beforeEach(async () => {\n    // Mocks dos repositórios e dependências\n    const mockPermissionRepository = {\n      findByName: jest.fn(),\n      findById: jest.fn(),\n      findByComposite: jest.fn(),\n      findComposedPermissions: jest.fn(),\n    };\n\n    const mockRolePermissionRepository = {\n      findPermissionsByUserRoles: jest.fn(),\n    };\n\n    const mockUserPermissionRepository = {\n      findByUserAndPermission: jest.fn(),\n      findValidPermissions: jest.fn(),\n      createUserPermission: jest.fn(),\n      updateUserPermission: jest.fn(),\n    };\n\n    const mockPermissionScopeRepository = {\n      findByPermission: jest.fn(),\n    };\n\n    const mockCacheManager = {\n      get: jest.fn(),\n      set: jest.fn(),\n      del: jest.fn(),\n    };\n\n    const mockAuditoriaService = {\n      registrarAuditoria: jest.fn(),\n    };\n\n    // Criar módulo de teste com os mocks\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        {\n          provide: PermissionService,\n          useFactory: () => ({\n            hasPermission: jest.fn(),\n            grantPermission: jest.fn(),\n            revokePermission: jest.fn(),\n            clearUserPermissionCache: jest.fn(),\n            getUserPermissions: jest.fn(),\n          }),\n        },\n        {\n          provide: PermissionRepository,\n          useValue: mockPermissionRepository,\n        },\n        {\n          provide: RolePermissionRepository,\n          useValue: mockRolePermissionRepository,\n        },\n        {\n          provide: UserPermissionRepository,\n          useValue: mockUserPermissionRepository,\n        },\n        {\n          provide: PermissionScopeRepository,\n          useValue: mockPermissionScopeRepository,\n        },\n        {\n          provide: CACHE_MANAGER,\n          useValue: mockCacheManager,\n        },\n        {\n          provide: 'AuditoriaService',\n          useValue: mockAuditoriaService,\n        },\n      ],\n    }).compile();\n\n    service = module.get<PermissionService>(PermissionService);\n    permissionRepository =\n      module.get<PermissionRepository>(PermissionRepository);\n    rolePermissionRepository = module.get<RolePermissionRepository>(\n      RolePermissionRepository,\n    );\n    userPermissionRepository = module.get<UserPermissionRepository>(\n      UserPermissionRepository,\n    );\n    permissionScopeRepository = module.get<PermissionScopeRepository>(\n      PermissionScopeRepository,\n    );\n    cacheManager = module.get(CACHE_MANAGER);\n  });\n\n  it('serviço deve estar definido', () => {\n    expect(service).toBeDefined();\n  });\n\n  describe('hasPermission', () => {\n    it('deve verificar corretamente as permissões do usuário', async () => {\n      // Configure mock para retornar true\n      service.hasPermission = jest.fn().mockResolvedValue(true);\n\n      const result = await service.hasPermission({\n        userId: 'user-123',\n        permissionName: 'solicitacao.listar',\n        scopeType: ScopeType.UNIT,\n        scopeId: 'unidade-123',\n      });\n\n      expect(service.hasPermission).toHaveBeenCalled();\n      expect(result).toBe(true);\n    });\n  });\n\n  describe('grantPermission', () => {\n    it('deve atribuir uma permissão a um usuário', async () => {\n      // Configure mock para retornar true\n      service.grantPermission = jest.fn().mockResolvedValue(true);\n\n      const result = await service.grantPermission(\n        'user-123',\n        'solicitacao.listar',\n        ScopeType.UNIT,\n        'unidade-123',\n        null,\n        'admin-user',\n      );\n\n      expect(service.grantPermission).toHaveBeenCalled();\n      expect(result).toBe(true);\n    });\n  });\n\n  describe('revokePermission', () => {\n    it('deve revogar uma permissão de um usuário', async () => {\n      // Configure mock para retornar true\n      service.revokePermission = jest.fn().mockResolvedValue(true);\n\n      const result = await service.revokePermission(\n        'user-123',\n        'solicitacao.listar',\n        ScopeType.UNIT,\n        'unidade-123',\n        'admin-user',\n      );\n\n      expect(service.revokePermission).toHaveBeenCalled();\n      expect(result).toBe(true);\n    });\n  });\n});\n"],"version":3}