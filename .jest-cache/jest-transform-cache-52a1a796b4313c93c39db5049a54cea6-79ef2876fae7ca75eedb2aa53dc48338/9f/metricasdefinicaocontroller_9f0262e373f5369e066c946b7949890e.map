{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\controllers\\metricas-definicao.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\controllers\\metricas-definicao.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  Query,\n  UseGuards,\n  HttpStatus,\n  HttpCode,\n  Req,\n  HttpException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiParam,\n  ApiQuery,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Request } from 'express';\n\nimport { MetricasService as MetricasDefinicaoService } from '../services/metricas-definicao.service';\nimport { MetricasColetaService } from '../services/metricas-coleta.service';\nimport { MetricasCacheService } from '../services/metricas-cache.service';\nimport {\n  CriarMetricaDefinicaoDto,\n  AtualizarMetricaDefinicaoDto,\n  FiltroMetricasDto,\n} from '../dto/metrica-definicao.dto';\nimport {\n  CriarMetricaConfiguracaoDto,\n  AtualizarMetricaConfiguracaoDto,\n} from '../dto/metrica-configuracao.dto';\nimport {\n  ColetaManualMetricaDto,\n  ConsultaValorMetricaDto,\n  ConsultaSerieTemporalDto,\n} from '../dto/metrica-snapshot.dto';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../../../auth/guards/roles.guard';\nimport { Roles } from '../../../auth/decorators/role.decorator';\nimport { ROLES } from '../../../shared/constants/roles.constants';\n\n/**\n * Controlador para gerenciamento de métricas\n */\n@ApiTags('Métricas e Dashboard')\n@Controller('metricas')\n@UseGuards(JwtAuthGuard, RolesGuard)\n@ApiBearerAuth()\nexport class MetricasDefinicaoController {\n  constructor(\n    private readonly metricasService: MetricasDefinicaoService,\n    private readonly coletaService: MetricasColetaService,\n    private readonly cacheService: MetricasCacheService,\n  ) {}\n\n  /**\n   * Cria uma nova definição de métrica\n   */\n  @Post()\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Criar nova métrica' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Métrica criada com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async criarMetrica(\n    @Body() dto: CriarMetricaDefinicaoDto,\n    @Req() req: Request,\n  ) {\n    // Obter usuário atual da requisição\n    const usuarioId = req.user?.['sub'] || 'sistema';\n    const usuarioNome = req.user?.['nome'] || 'Sistema';\n\n    return this.metricasService.criarMetrica(dto, usuarioId, usuarioNome);\n  }\n\n  /**\n   * Atualiza uma definição de métrica existente\n   */\n  @Put(':id')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Atualizar métrica existente' })\n  @ApiParam({ name: 'id', description: 'ID da métrica' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Métrica atualizada com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async atualizarMetrica(\n    @Param('id') id: string,\n    @Body() dto: AtualizarMetricaDefinicaoDto,\n    @Req() req: Request,\n  ) {\n    // Obter usuário atual da requisição\n    const usuarioId = req.user?.['sub'] || 'sistema';\n    const usuarioNome = req.user?.['nome'] || 'Sistema';\n\n    return this.metricasService.atualizarMetrica(\n      id,\n      dto,\n      usuarioId,\n      usuarioNome,\n    );\n  }\n\n  /**\n   * Busca uma métrica pelo ID\n   */\n  @Get(':id')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.COORDENADOR)\n  @ApiOperation({ summary: 'Buscar métrica por ID' })\n  @ApiParam({ name: 'id', description: 'ID da métrica' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Métrica encontrada' })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async buscarMetricaPorId(@Param('id') id: string) {\n    const metrica = await this.metricasService.buscarMetricaPorId(id);\n\n    if (!metrica) {\n      throw new HttpException('Métrica não encontrada', HttpStatus.NOT_FOUND);\n    }\n\n    return metrica;\n  }\n\n  /**\n   * Busca uma métrica pelo código\n   */\n  @Get('codigo/:codigo')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.COORDENADOR)\n  @ApiOperation({ summary: 'Buscar métrica por código' })\n  @ApiParam({ name: 'codigo', description: 'Código da métrica' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Métrica encontrada' })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async buscarMetricaPorCodigo(@Param('codigo') codigo: string) {\n    const metrica = await this.metricasService.buscarMetricaPorCodigo(codigo);\n\n    if (!metrica) {\n      throw new HttpException('Métrica não encontrada', HttpStatus.NOT_FOUND);\n    }\n\n    return metrica;\n  }\n\n  /**\n   * Lista métricas com filtros e paginação\n   */\n  @Get()\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.COORDENADOR)\n  @ApiOperation({ summary: 'Listar métricas com filtros' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Lista de métricas' })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async listarMetricas(@Query() filtros: FiltroMetricasDto) {\n    return this.metricasService.listarMetricas(filtros);\n  }\n\n  /**\n   * Remove uma métrica (exclusão lógica)\n   */\n  @Delete(':id')\n  @Roles(ROLES.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Remover métrica' })\n  @ApiParam({ name: 'id', description: 'ID da métrica' })\n  @ApiResponse({\n    status: HttpStatus.NO_CONTENT,\n    description: 'Métrica removida com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async removerMetrica(@Param('id') id: string) {\n    await this.metricasService.removerMetrica(id);\n  }\n\n  /**\n   * Cria configuração para uma métrica\n   */\n  @Post('configuracao')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Criar configuração para métrica' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Configuração criada com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async criarConfiguracao(\n    @Body() dto: CriarMetricaConfiguracaoDto,\n    @Req() req: Request,\n  ) {\n    // Obter usuário atual da requisição\n    const usuarioId = req.user?.['sub'] || 'sistema';\n    const usuarioNome = req.user?.['nome'] || 'Sistema';\n\n    return this.metricasService.criarConfiguracao(dto, usuarioId, usuarioNome);\n  }\n\n  /**\n   * Atualiza configuração de uma métrica\n   */\n  @Put('configuracao/:id')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Atualizar configuração de métrica' })\n  @ApiParam({ name: 'id', description: 'ID da configuração' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Configuração atualizada com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Configuração não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async atualizarConfiguracao(\n    @Param('id') id: string,\n    @Body() dto: AtualizarMetricaConfiguracaoDto,\n    @Req() req: Request,\n  ) {\n    // Obter usuário atual da requisição\n    const usuarioId = req.user?.['sub'] || 'sistema';\n    const usuarioNome = req.user?.['nome'] || 'Sistema';\n\n    return this.metricasService.atualizarConfiguracao(\n      id,\n      dto,\n      usuarioId,\n      usuarioNome,\n    );\n  }\n\n  /**\n   * Busca configuração de uma métrica\n   */\n  @Get('configuracao/metrica/:metricaId')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.COORDENADOR)\n  @ApiOperation({ summary: 'Buscar configuração de uma métrica' })\n  @ApiParam({ name: 'metricaId', description: 'ID da métrica' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Configuração encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Configuração não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async buscarConfiguracaoPorMetrica(@Param('metricaId') metricaId: string) {\n    const configuracao =\n      await this.metricasService.buscarConfiguracaoPorMetrica(metricaId);\n\n    if (!configuracao) {\n      throw new HttpException(\n        'Configuração não encontrada',\n        HttpStatus.NOT_FOUND,\n      );\n    }\n\n    return configuracao;\n  }\n\n  /**\n   * Coleta manualmente uma métrica específica\n   */\n  @Post('coleta')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Coletar métrica manualmente' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Métrica coletada com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async coletarMetrica(@Body() dto: ColetaManualMetricaDto) {\n    return this.coletaService.coletarMetricaManual(dto.codigo, dto.dimensoes);\n  }\n\n  /**\n   * Consulta o valor atual de uma métrica\n   */\n  @Post('valor')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.COORDENADOR, ROLES.TECNICO)\n  @ApiOperation({ summary: 'Consultar valor atual de uma métrica' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Valor da métrica' })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async consultarValorMetrica(@Body() dto: ConsultaValorMetricaDto) {\n    const metrica = await this.metricasService.buscarMetricaPorCodigo(\n      dto.codigo,\n    );\n\n    if (!metrica) {\n      throw new HttpException('Métrica não encontrada', HttpStatus.NOT_FOUND);\n    }\n\n    // Buscar último snapshot\n    const snapshot = await this.cacheService.obterUltimoSnapshot(\n      metrica.id,\n      dto.dimensoes,\n    );\n\n    if (!snapshot) {\n      throw new HttpException(\n        'Nenhum valor disponível para a métrica',\n        HttpStatus.NOT_FOUND,\n      );\n    }\n\n    return {\n      metrica: {\n        id: metrica.id,\n        codigo: metrica.codigo,\n        nome: metrica.nome,\n        descricao: metrica.descricao,\n        unidade: metrica.unidade,\n        prefixo: metrica.prefixo,\n        sufixo: metrica.sufixo,\n      },\n      snapshot: {\n        id: snapshot.id,\n        valor: snapshot.valor,\n        valor_formatado: snapshot.valor_formatado,\n        periodo_inicio: snapshot.periodo_inicio,\n        periodo_fim: snapshot.periodo_fim,\n        dimensoes: snapshot.dimensoes,\n        data_coleta: snapshot.created_at,\n      },\n    };\n  }\n\n  /**\n   * Consulta série temporal de uma métrica\n   */\n  @Post('serie-temporal')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.COORDENADOR)\n  @ApiOperation({ summary: 'Consultar série temporal de uma métrica' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Série temporal da métrica',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Métrica não encontrada',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async consultarSerieTemporalMetrica(@Body() dto: ConsultaSerieTemporalDto) {\n    const metrica = await this.metricasService.buscarMetricaPorCodigo(\n      dto.codigo,\n    );\n\n    if (!metrica) {\n      throw new HttpException('Métrica não encontrada', HttpStatus.NOT_FOUND);\n    }\n\n    // Buscar snapshots para o período\n    const snapshots = await this.cacheService.obterSerieTemporal(\n      metrica.id,\n      dto.data_inicial,\n      dto.data_final,\n      dto.dimensoes,\n    );\n\n    return {\n      metrica: {\n        id: metrica.id,\n        codigo: metrica.codigo,\n        nome: metrica.nome,\n        descricao: metrica.descricao,\n        unidade: metrica.unidade,\n        prefixo: metrica.prefixo,\n        sufixo: metrica.sufixo,\n      },\n      periodo: {\n        inicio: dto.data_inicial,\n        fim: dto.data_final,\n        granularidade: dto.granularidade || metrica.granularidade,\n      },\n      dimensoes: dto.dimensoes || {},\n      pontos: snapshots.map((s) => ({\n        valor: s.valor,\n        valor_formatado: s.valor_formatado,\n        periodo_inicio: s.periodo_inicio,\n        periodo_fim: s.periodo_fim,\n      })),\n    };\n  }\n\n  /**\n   * Limpa o cache de métricas\n   */\n  @Post('cache/limpar')\n  @Roles(ROLES.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Limpar cache de métricas' })\n  @ApiResponse({\n    status: HttpStatus.NO_CONTENT,\n    description: 'Cache limpo com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async limparCache() {\n    this.cacheService.limparCacheCompleto();\n  }\n\n  /**\n   * Obtém estatísticas de uso do cache\n   */\n  @Get('cache/estatisticas')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Obter estatísticas do cache de métricas' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Estatísticas do cache' })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Não autorizado',\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Acesso negado' })\n  async obterEstatisticasCache() {\n    return this.cacheService.obterEstatisticas();\n  }\n}\n"],"version":3}