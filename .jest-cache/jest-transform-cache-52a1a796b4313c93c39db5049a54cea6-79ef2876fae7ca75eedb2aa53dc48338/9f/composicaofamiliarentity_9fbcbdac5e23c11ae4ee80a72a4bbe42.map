{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\composicao-familiar.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\composicao-familiar.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n  OneToOne,\n} from 'typeorm';\nimport { IsNotEmpty, IsOptional, IsNumber, Min, IsEnum, Length, Validate } from 'class-validator';\nimport { Cidadao } from './cidadao.entity';\nimport { EscolaridadeEnum } from '../enums/escolaridade.enum';\nimport { CPFValidator } from '../modules/cidadao/validators/cpf-validator';\nimport { ParentescoEnum } from '../enums/parentesco.enum';\n\n@Entity('composicao_familiar')\n@Index(['cidadao_id', 'nome'], { unique: true })\nexport class ComposicaoFamiliar {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  cidadao_id: string;\n\n  @ManyToOne(() => Cidadao, (cidadao) => cidadao.composicao_familiar, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'cidadao_id' })\n  cidadao: Cidadao;\n\n  @Column()\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  nome: string;\n\n  @Column({ nullable: false })\n  @IsNotEmpty({ message: 'CPF é obrigatório' })\n  @Length(11, 14, { message: 'CPF deve ter entre 11 e 14 caracteres' })\n  @Validate(CPFValidator, { message: 'CPF inválido' })\n  cpf: string;\n\n  @Column({ nullable: true })\n  @IsNotEmpty({ message: 'NIS do parente é obrigatório' })\n  nis: string;\n\n  @Column('integer')\n  @IsNotEmpty({ message: 'Idade do parente é obrigatório' })\n  @IsNumber({}, { message: 'Idade deve ser um número' })\n  @Min(0, { message: 'Idade não pode ser negativa' })\n  idade: number;\n\n  @Column()\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  ocupacao: string;\n\n  @Column({\n    type: 'enum',\n    enum: EscolaridadeEnum,\n    enumName: 'escolaridade_enum',\n    nullable: false,\n  })\n  @IsNotEmpty({ message: 'Escolaridade é obrigatória' })\n  @IsEnum(EscolaridadeEnum, { message: 'Escolaridade inválida' })\n  escolaridade: EscolaridadeEnum;\n\n  @Column({\n    type: 'enum',\n    enum: ParentescoEnum,\n    enumName: 'parentesco',\n    default: ParentescoEnum.OUTRO,\n  })\n  @IsNotEmpty({ message: 'Parentesco é obrigatório' })\n  parentesco: ParentescoEnum;\n\n  @Column('decimal', { precision: 10, scale: 2, nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Renda deve ser um número' })\n  @Min(0, { message: 'Renda não pode ser negativa' })\n  renda: number;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  observacoes: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters e Setters\n  get cidadaoId(): string {\n    return this.cidadao_id;\n  }\n\n  set cidadaoId(value: string) {\n    this.cidadao_id = value;\n  }\n\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se o membro foi criado recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se o membro foi removido\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se o membro está ativo\n   */\n  isAtivo(): boolean {\n    return !this.removed_at;\n  }\n\n  /**\n   * Verifica se é menor de idade\n   */\n  isMenorIdade(): boolean {\n    return this.idade < 18;\n  }\n\n  /**\n   * Verifica se é maior de idade\n   */\n  isMaiorIdade(): boolean {\n    return this.idade >= 18;\n  }\n\n  /**\n   * Verifica se é idoso (65 anos ou mais)\n   */\n  isIdoso(): boolean {\n    return this.idade >= 65;\n  }\n\n  /**\n   * Verifica se é criança (0-12 anos)\n   */\n  isCrianca(): boolean {\n    return this.idade >= 0 && this.idade <= 12;\n  }\n\n  /**\n   * Verifica se é adolescente (13-17 anos)\n   */\n  isAdolescente(): boolean {\n    return this.idade >= 13 && this.idade <= 17;\n  }\n\n  /**\n   * Verifica se é adulto (18-64 anos)\n   */\n  isAdulto(): boolean {\n    return this.idade >= 18 && this.idade <= 64;\n  }\n\n  /**\n   * Obtém a faixa etária\n   */\n  getFaixaEtaria(): string {\n    if (this.isCrianca()) return 'Criança';\n    if (this.isAdolescente()) return 'Adolescente';\n    if (this.isAdulto()) return 'Adulto';\n    if (this.isIdoso()) return 'Idoso';\n    return 'Indefinido';\n  }\n\n  /**\n   * Verifica se tem renda\n   */\n  temRenda(): boolean {\n    return this.renda !== null && this.renda !== undefined && this.renda > 0;\n  }\n\n  /**\n   * Obtém a renda formatada\n   */\n  getRendaFormatada(): string {\n    if (!this.temRenda()) return 'Sem renda';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(this.renda);\n  }\n\n  /**\n   * Verifica se tem NIS\n   */\n  temNIS(): boolean {\n    return !!(this.nis && this.nis.trim());\n  }\n\n  /**\n   * Verifica se é cônjuge\n   */\n  isConjuge(): boolean {\n    return this.parentesco === ParentescoEnum.CONJUGE;\n  }\n\n  /**\n   * Verifica se é filho(a)\n   */\n  isFilho(): boolean {\n    return this.parentesco === ParentescoEnum.FILHO;\n  }\n\n  /**\n   * Verifica se é pai/mãe\n   */\n  isPai(): boolean {\n    return this.parentesco === ParentescoEnum.PAI || this.parentesco === ParentescoEnum.MAE;\n  }\n\n  /**\n   * Verifica se é irmão(ã)\n   */\n  isIrmao(): boolean {\n    return this.parentesco === ParentescoEnum.IRMAO;\n  }\n\n  /**\n   * Verifica se é avô/avó\n   */\n  isAvo(): boolean {\n    return this.parentesco === ParentescoEnum.AVO;\n  }\n\n  /**\n   * Verifica se é neto(a)\n   */\n  isNeto(): boolean {\n    return this.parentesco === ParentescoEnum.NETO;\n  }\n\n  /**\n   * Obtém a descrição do parentesco\n   */\n  getDescricaoParentesco(): string {\n    const descricoes = {\n      [ParentescoEnum.CONJUGE]: 'Cônjuge',\n      [ParentescoEnum.FILHO]: 'Filho(a)',\n      [ParentescoEnum.PAI]: 'Pai',\n      [ParentescoEnum.MAE]: 'Mãe',\n      [ParentescoEnum.IRMAO]: 'Irmão(ã)',\n      [ParentescoEnum.AVO]: 'Avô/Avó',\n      [ParentescoEnum.NETO]: 'Neto(a)',\n      [ParentescoEnum.TIO]: 'Tio(a)',\n      [ParentescoEnum.SOBRINHO]: 'Sobrinho(a)',\n      [ParentescoEnum.OUTRO]: 'Outro',\n    };\n    return descricoes[this.parentesco] || this.parentesco;\n  }\n\n  /**\n   * Obtém a descrição da escolaridade\n   */\n  getDescricaoEscolaridade(): string {\n    const descricoes = {\n      [EscolaridadeEnum.ANALFABETO]: 'Analfabeto',\n      [EscolaridadeEnum.FUNDAMENTAL_INCOMPLETO]: 'Fundamental Incompleto',\n      [EscolaridadeEnum.FUNDAMENTAL_COMPLETO]: 'Fundamental Completo',\n      [EscolaridadeEnum.MEDIO_INCOMPLETO]: 'Médio Incompleto',\n      [EscolaridadeEnum.MEDIO_COMPLETO]: 'Médio Completo',\n      [EscolaridadeEnum.SUPERIOR_INCOMPLETO]: 'Superior Incompleto',\n      [EscolaridadeEnum.SUPERIOR_COMPLETO]: 'Superior Completo',\n      [EscolaridadeEnum.POS_GRADUACAO]: 'Pós-graduação',\n    };\n    return descricoes[this.escolaridade] || this.escolaridade;\n  }\n\n  /**\n   * Verifica se pertence a um cidadão específico\n   */\n  pertenceAoCidadao(cidadaoId: string): boolean {\n    return this.cidadao_id === cidadaoId;\n  }\n\n  /**\n   * Obtém um resumo do membro familiar\n   */\n  getSummary(): string {\n    const renda = this.temRenda() ? ` - ${this.getRendaFormatada()}` : ' - Sem renda';\n    return `${this.nome} (${this.getDescricaoParentesco()}, ${this.idade} anos)${renda}`;\n  }\n\n  /**\n   * Gera uma chave única para o membro\n   */\n  getUniqueKey(): string {\n    return `${this.cidadao_id}_${this.cpf}_${this.parentesco}`;\n  }\n\n  /**\n   * Verifica se os dados são consistentes\n   */\n  isConsistente(): boolean {\n    // Verifica se tem cidadão\n    if (!this.cidadao_id) return false;\n    \n    // Verifica se tem nome\n    if (!this.nome || !this.nome.trim()) return false;\n    \n    // Verifica se tem CPF\n    if (!this.cpf || !this.cpf.trim()) return false;\n    \n    // Verifica se a idade é válida\n    if (this.idade < 0 || this.idade > 150) return false;\n    \n    // Verifica se tem ocupação\n    if (!this.ocupacao || !this.ocupacao.trim()) return false;\n    \n    // Se tem renda, deve ser positiva\n    if (this.renda !== null && this.renda !== undefined && this.renda < 0) {\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removido\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n    \n    // Outras validações específicas podem ser adicionadas\n    return true;\n  }\n\n  /**\n   * Clona o membro familiar (sem ID)\n   */\n  clone(): Partial<ComposicaoFamiliar> {\n    return {\n      cidadao_id: this.cidadao_id,\n      nome: this.nome,\n      cpf: this.cpf,\n      nis: this.nis,\n      idade: this.idade,\n      ocupacao: this.ocupacao,\n      escolaridade: this.escolaridade,\n      parentesco: this.parentesco,\n      renda: this.renda,\n      observacoes: this.observacoes,\n    };\n  }\n\n  /**\n   * Verifica se é dependente econômico (menor de idade ou sem renda)\n   */\n  isDependenteEconomico(): boolean {\n    return this.isMenorIdade() || !this.temRenda();\n  }\n\n  /**\n   * Verifica se contribui para a renda familiar\n   */\n  contribuiParaRenda(): boolean {\n    return this.temRenda() && this.isMaiorIdade();\n  }\n\n  /**\n   * Obtém o CPF formatado\n   */\n  getCpfFormatado(): string {\n    if (!this.cpf) return '';\n    const cpfLimpo = this.cpf.replace(/\\D/g, '');\n    return cpfLimpo.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<ComposicaoFamiliar> {\n    return {\n      id: this.id,\n      nome: this.nome.substring(0, 3) + '***',\n      idade: this.idade,\n      parentesco: this.parentesco,\n      escolaridade: this.escolaridade,\n      ocupacao: this.ocupacao,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Verifica se é prioritário para benefícios (idoso, criança, deficiente)\n   */\n  isPrioritario(): boolean {\n    return this.isIdoso() || this.isCrianca();\n  }\n\n  /**\n   * Obtém sugestões de verificação para o membro\n   */\n  getSugestoesVerificacao(): string[] {\n    const sugestoes: string[] = [];\n    \n    if (!this.temNIS()) {\n      sugestoes.push('Cadastrar NIS do membro familiar');\n    }\n    \n    if (this.isMaiorIdade() && !this.temRenda() && !this.ocupacao.toLowerCase().includes('estudante')) {\n      sugestoes.push('Verificar situação de trabalho/renda');\n    }\n    \n    if (!this.observacoes && this.isPrioritario()) {\n      sugestoes.push('Adicionar observações sobre condições especiais');\n    }\n    \n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar consistência dos dados do membro');\n    }\n    \n    return sugestoes;\n  }\n\n  /**\n   * Calcula a contribuição percentual para a renda familiar\n   */\n  getContribuicaoPercentual(rendaFamiliarTotal: number): number {\n    if (!this.temRenda() || !rendaFamiliarTotal || rendaFamiliarTotal <= 0) {\n      return 0;\n    }\n    return (this.renda / rendaFamiliarTotal) * 100;\n  }\n}\n\n\n"],"version":3}