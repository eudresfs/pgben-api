3af821bf9cb0b9c991d3118c506c608d
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProcessoJudicialRepository = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("typeorm");
const processo_judicial_entity_1 = require("../../../entities/processo-judicial.entity");
/**
 * Repositório personalizado para ProcessoJudicial
 *
 * Fornece métodos especializados para acesso e manipulação de processos judiciais
 */
let ProcessoJudicialRepository = class ProcessoJudicialRepository extends typeorm_1.Repository {
    dataSource;
    constructor(dataSource) {
        super(processo_judicial_entity_1.ProcessoJudicial, dataSource.createEntityManager());
        this.dataSource = dataSource;
    }
    /**
     * Busca um processo judicial pelo número
     *
     * @param numero Número do processo judicial
     * @returns Processo judicial encontrado ou null
     */
    async findByNumero(numero) {
        return this.findOne({ where: { numero_processo: numero } });
    }
    /**
     * Verifica se um processo judicial está vinculado a alguma solicitação
     *
     * @param processoId ID do processo judicial
     * @returns true se estiver vinculado, false caso contrário
     */
    async isVinculadoASolicitacao(processoId) {
        const count = await this.createQueryBuilder('processo')
            .leftJoin('solicitacao', 'solicitacao', 'solicitacao.processo_judicial_id = processo.id')
            .where('processo.id = :id', { id: processoId })
            .andWhere('solicitacao.id IS NOT NULL')
            .getCount();
        return count > 0;
    }
};
exports.ProcessoJudicialRepository = ProcessoJudicialRepository;
exports.ProcessoJudicialRepository = ProcessoJudicialRepository = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_1.DataSource !== "undefined" && typeorm_1.DataSource) === "function" ? _a : Object])
], ProcessoJudicialRepository);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGp1ZGljaWFsXFxyZXBvc2l0b3JpZXNcXHByb2Nlc3NvLWp1ZGljaWFsLnJlcG9zaXRvcnkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUE0QztBQUM1QyxxQ0FBaUQ7QUFDakQseUZBQThFO0FBRTlFOzs7O0dBSUc7QUFFSSxJQUFNLDBCQUEwQixHQUFoQyxNQUFNLDBCQUEyQixTQUFRLG9CQUE0QjtJQUN0RDtJQUFwQixZQUFvQixVQUFzQjtRQUN4QyxLQUFLLENBQUMsMkNBQWdCLEVBQUUsVUFBVSxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQztRQUR4QyxlQUFVLEdBQVYsVUFBVSxDQUFZO0lBRTFDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBYztRQUMvQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxlQUFlLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxVQUFrQjtRQUM5QyxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUM7YUFDcEQsUUFBUSxDQUNQLGFBQWEsRUFDYixhQUFhLEVBQ2IsZ0RBQWdELENBQ2pEO2FBQ0EsS0FBSyxDQUFDLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDO2FBQzlDLFFBQVEsQ0FBQyw0QkFBNEIsQ0FBQzthQUN0QyxRQUFRLEVBQUUsQ0FBQztRQUVkLE9BQU8sS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNuQixDQUFDO0NBQ0YsQ0FBQTtBQWxDWSxnRUFBMEI7cUNBQTFCLDBCQUEwQjtJQUR0QyxJQUFBLG1CQUFVLEdBQUU7eURBRXFCLG9CQUFVLG9CQUFWLG9CQUFVO0dBRC9CLDBCQUEwQixDQWtDdEMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGp1ZGljaWFsXFxyZXBvc2l0b3JpZXNcXHByb2Nlc3NvLWp1ZGljaWFsLnJlcG9zaXRvcnkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IERhdGFTb3VyY2UsIFJlcG9zaXRvcnkgfSBmcm9tICd0eXBlb3JtJztcbmltcG9ydCB7IFByb2Nlc3NvSnVkaWNpYWwgfSBmcm9tICcuLi8uLi8uLi9lbnRpdGllcy9wcm9jZXNzby1qdWRpY2lhbC5lbnRpdHknO1xuXG4vKipcbiAqIFJlcG9zaXTDs3JpbyBwZXJzb25hbGl6YWRvIHBhcmEgUHJvY2Vzc29KdWRpY2lhbFxuICpcbiAqIEZvcm5lY2UgbcOpdG9kb3MgZXNwZWNpYWxpemFkb3MgcGFyYSBhY2Vzc28gZSBtYW5pcHVsYcOnw6NvIGRlIHByb2Nlc3NvcyBqdWRpY2lhaXNcbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByb2Nlc3NvSnVkaWNpYWxSZXBvc2l0b3J5IGV4dGVuZHMgUmVwb3NpdG9yeTxQcm9jZXNzb0p1ZGljaWFsPiB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0YVNvdXJjZTogRGF0YVNvdXJjZSkge1xuICAgIHN1cGVyKFByb2Nlc3NvSnVkaWNpYWwsIGRhdGFTb3VyY2UuY3JlYXRlRW50aXR5TWFuYWdlcigpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBCdXNjYSB1bSBwcm9jZXNzbyBqdWRpY2lhbCBwZWxvIG7Dum1lcm9cbiAgICpcbiAgICogQHBhcmFtIG51bWVybyBOw7ptZXJvIGRvIHByb2Nlc3NvIGp1ZGljaWFsXG4gICAqIEByZXR1cm5zIFByb2Nlc3NvIGp1ZGljaWFsIGVuY29udHJhZG8gb3UgbnVsbFxuICAgKi9cbiAgYXN5bmMgZmluZEJ5TnVtZXJvKG51bWVybzogc3RyaW5nKTogUHJvbWlzZTxQcm9jZXNzb0p1ZGljaWFsIHwgbnVsbD4ge1xuICAgIHJldHVybiB0aGlzLmZpbmRPbmUoeyB3aGVyZTogeyBudW1lcm9fcHJvY2Vzc286IG51bWVybyB9IH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFZlcmlmaWNhIHNlIHVtIHByb2Nlc3NvIGp1ZGljaWFsIGVzdMOhIHZpbmN1bGFkbyBhIGFsZ3VtYSBzb2xpY2l0YcOnw6NvXG4gICAqXG4gICAqIEBwYXJhbSBwcm9jZXNzb0lkIElEIGRvIHByb2Nlc3NvIGp1ZGljaWFsXG4gICAqIEByZXR1cm5zIHRydWUgc2UgZXN0aXZlciB2aW5jdWxhZG8sIGZhbHNlIGNhc28gY29udHLDoXJpb1xuICAgKi9cbiAgYXN5bmMgaXNWaW5jdWxhZG9BU29saWNpdGFjYW8ocHJvY2Vzc29JZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgY29uc3QgY291bnQgPSBhd2FpdCB0aGlzLmNyZWF0ZVF1ZXJ5QnVpbGRlcigncHJvY2Vzc28nKVxuICAgICAgLmxlZnRKb2luKFxuICAgICAgICAnc29saWNpdGFjYW8nLFxuICAgICAgICAnc29saWNpdGFjYW8nLFxuICAgICAgICAnc29saWNpdGFjYW8ucHJvY2Vzc29fanVkaWNpYWxfaWQgPSBwcm9jZXNzby5pZCcsXG4gICAgICApXG4gICAgICAud2hlcmUoJ3Byb2Nlc3NvLmlkID0gOmlkJywgeyBpZDogcHJvY2Vzc29JZCB9KVxuICAgICAgLmFuZFdoZXJlKCdzb2xpY2l0YWNhby5pZCBJUyBOT1QgTlVMTCcpXG4gICAgICAuZ2V0Q291bnQoKTtcblxuICAgIHJldHVybiBjb3VudCA+IDA7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==