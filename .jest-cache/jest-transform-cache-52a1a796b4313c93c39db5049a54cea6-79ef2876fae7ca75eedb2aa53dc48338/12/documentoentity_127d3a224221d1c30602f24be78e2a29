a4e2a207639e31562d1fb4a301e543fd
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Documento = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const solicitacao_entity_1 = require("./solicitacao.entity");
const usuario_entity_1 = require("./usuario.entity");
const cidadao_entity_1 = require("./cidadao.entity");
const enums_1 = require("../enums");
/**
 * Entidade Documento
 *
 * Representa documentos anexados pelos cidadãos, podendo estar vinculados
 * a uma solicitação específica ou serem documentos gerais reutilizáveis.
 * Todos os documentos são sempre vinculados a um cidadão.
 */
let Documento = class Documento {
    id;
    solicitacao_id;
    solicitacao;
    cidadao_id;
    cidadao;
    tipo;
    nome_arquivo;
    nome_original;
    caminho;
    thumbnail;
    descricao;
    tamanho;
    mimetype;
    data_upload;
    usuario_upload_id;
    usuario_upload;
    verificado;
    data_verificacao;
    usuario_verificacao_id;
    usuario_verificacao;
    observacoes_verificacao;
    reutilizavel;
    hash_arquivo;
    data_validade;
    metadados;
    created_at;
    updated_at;
    removed_at;
};
exports.Documento = Documento;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Documento.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'ID da solicitação deve ser um UUID válido' }),
    __metadata("design:type", String)
], Documento.prototype, "solicitacao_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => solicitacao_entity_1.Solicitacao, (solicitacao) => solicitacao.documentos, {
        nullable: true,
    }),
    (0, typeorm_1.JoinColumn)({ name: 'solicitacao_id' }),
    __metadata("design:type", typeof (_a = typeof solicitacao_entity_1.Solicitacao !== "undefined" && solicitacao_entity_1.Solicitacao) === "function" ? _a : Object)
], Documento.prototype, "solicitacao", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Cidadão é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do cidadão deve ser um UUID válido' }),
    __metadata("design:type", String)
], Documento.prototype, "cidadao_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => cidadao_entity_1.Cidadao, { nullable: false }),
    (0, typeorm_1.JoinColumn)({ name: 'cidadao_id' }),
    __metadata("design:type", typeof (_b = typeof cidadao_entity_1.Cidadao !== "undefined" && cidadao_entity_1.Cidadao) === "function" ? _b : Object)
], Documento.prototype, "cidadao", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: enums_1.TipoDocumentoEnum,
        enumName: 'tipo_documento_enum',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de documento é obrigatório' }),
    __metadata("design:type", typeof (_c = typeof enums_1.TipoDocumentoEnum !== "undefined" && enums_1.TipoDocumentoEnum) === "function" ? _c : Object)
], Documento.prototype, "tipo", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome do arquivo é obrigatório' }),
    __metadata("design:type", String)
], Documento.prototype, "nome_arquivo", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome original do arquivo é obrigatório' }),
    __metadata("design:type", String)
], Documento.prototype, "nome_original", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Caminho do arquivo é obrigatório' }),
    __metadata("design:type", String)
], Documento.prototype, "caminho", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Documento.prototype, "thumbnail", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Documento.prototype, "descricao", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Tamanho deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Tamanho não pode ser negativo' }),
    __metadata("design:type", Number)
], Documento.prototype, "tamanho", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo MIME é obrigatório' }),
    __metadata("design:type", String)
], Documento.prototype, "mimetype", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Data de upload é obrigatória' }),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], Documento.prototype, "data_upload", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Usuário que fez upload é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do usuário deve ser um UUID válido' }),
    __metadata("design:type", String)
], Documento.prototype, "usuario_upload_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario, { nullable: false }),
    (0, typeorm_1.JoinColumn)({ name: 'usuario_upload_id' }),
    __metadata("design:type", typeof (_e = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _e : Object)
], Documento.prototype, "usuario_upload", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], Documento.prototype, "verificado", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true, type: 'timestamp' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], Documento.prototype, "data_verificacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', {
        message: 'ID do usuário de verificação deve ser um UUID válido',
    }),
    __metadata("design:type", String)
], Documento.prototype, "usuario_verificacao_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'usuario_verificacao_id' }),
    __metadata("design:type", typeof (_g = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _g : Object)
], Documento.prototype, "usuario_verificacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], Documento.prototype, "observacoes_verificacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], Documento.prototype, "reutilizavel", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], Documento.prototype, "hash_arquivo", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true, type: 'date' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", typeof (_h = typeof Date !== "undefined" && Date) === "function" ? _h : Object)
], Documento.prototype, "data_validade", void 0);
__decorate([
    (0, typeorm_1.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Documento.prototype, "metadados", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_j = typeof Date !== "undefined" && Date) === "function" ? _j : Object)
], Documento.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_k = typeof Date !== "undefined" && Date) === "function" ? _k : Object)
], Documento.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)(),
    __metadata("design:type", typeof (_l = typeof Date !== "undefined" && Date) === "function" ? _l : Object)
], Documento.prototype, "removed_at", void 0);
exports.Documento = Documento = __decorate([
    (0, typeorm_1.Entity)('documentos'),
    (0, typeorm_1.Index)(['cidadao_id']),
    (0, typeorm_1.Index)(['solicitacao_id']),
    (0, typeorm_1.Index)(['tipo']),
    (0, typeorm_1.Index)(['usuario_upload_id']),
    (0, typeorm_1.Index)(['data_upload']),
    (0, typeorm_1.Index)(['verificado']),
    (0, typeorm_1.Index)(['reutilizavel'])
], Documento);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,