9a43d718740bb664fe12ef15fa3ffa01
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetClientInfo = void 0;
const common_1 = require("@nestjs/common");
exports.GetClientInfo = (0, common_1.createParamDecorator)((data, ctx) => {
    const request = ctx.switchToHttp().getRequest();
    // Extrai o IP real considerando proxies
    const getClientIp = (req) => {
        return (req.headers['x-forwarded-for']?.split(',')[0]?.trim() ||
            req.headers['x-real-ip'] ||
            req.connection?.remoteAddress ||
            req.socket?.remoteAddress ||
            '127.0.0.1');
    };
    return {
        ip: getClientIp(request),
        userAgent: request.headers['user-agent'] || 'Unknown',
        origin: request.headers.origin,
        referer: request.headers.referer,
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGNvbW1vblxcZGVjb3JhdG9yc1xcZ2V0LWNsaWVudC1pbmZvLmRlY29yYXRvci50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBd0U7QUFJM0QsUUFBQSxhQUFhLEdBQUcsSUFBQSw2QkFBb0IsRUFDL0MsQ0FBQyxJQUFhLEVBQUUsR0FBcUIsRUFBYyxFQUFFO0lBQ25ELE1BQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxVQUFVLEVBQVcsQ0FBQztJQUV6RCx3Q0FBd0M7SUFDeEMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFZLEVBQVUsRUFBRTtRQUMzQyxPQUFPLENBQ0osR0FBRyxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBWSxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUU7WUFDaEUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQVk7WUFDcEMsR0FBRyxDQUFDLFVBQVUsRUFBRSxhQUFhO1lBQzdCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsYUFBYTtZQUN6QixXQUFXLENBQ1osQ0FBQztJQUNKLENBQUMsQ0FBQztJQUVGLE9BQU87UUFDTCxFQUFFLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQztRQUN4QixTQUFTLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxTQUFTO1FBQ3JELE1BQU0sRUFBRSxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU07UUFDOUIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTztLQUNqQyxDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGNvbW1vblxcZGVjb3JhdG9yc1xcZ2V0LWNsaWVudC1pbmZvLmRlY29yYXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVQYXJhbURlY29yYXRvciwgRXhlY3V0aW9uQ29udGV4dCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IFJlcXVlc3QgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IENsaWVudEluZm8gfSBmcm9tICcuLi9pbnRlcmZhY2VzL2NsaWVudC1pbmZvLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjb25zdCBHZXRDbGllbnRJbmZvID0gY3JlYXRlUGFyYW1EZWNvcmF0b3IoXG4gIChkYXRhOiB1bmtub3duLCBjdHg6IEV4ZWN1dGlvbkNvbnRleHQpOiBDbGllbnRJbmZvID0+IHtcbiAgICBjb25zdCByZXF1ZXN0ID0gY3R4LnN3aXRjaFRvSHR0cCgpLmdldFJlcXVlc3Q8UmVxdWVzdD4oKTtcblxuICAgIC8vIEV4dHJhaSBvIElQIHJlYWwgY29uc2lkZXJhbmRvIHByb3hpZXNcbiAgICBjb25zdCBnZXRDbGllbnRJcCA9IChyZXE6IFJlcXVlc3QpOiBzdHJpbmcgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgKHJlcS5oZWFkZXJzWyd4LWZvcndhcmRlZC1mb3InXSBhcyBzdHJpbmcpPy5zcGxpdCgnLCcpWzBdPy50cmltKCkgfHxcbiAgICAgICAgKHJlcS5oZWFkZXJzWyd4LXJlYWwtaXAnXSBhcyBzdHJpbmcpIHx8XG4gICAgICAgIHJlcS5jb25uZWN0aW9uPy5yZW1vdGVBZGRyZXNzIHx8XG4gICAgICAgIHJlcS5zb2NrZXQ/LnJlbW90ZUFkZHJlc3MgfHxcbiAgICAgICAgJzEyNy4wLjAuMSdcbiAgICAgICk7XG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICBpcDogZ2V0Q2xpZW50SXAocmVxdWVzdCksXG4gICAgICB1c2VyQWdlbnQ6IHJlcXVlc3QuaGVhZGVyc1sndXNlci1hZ2VudCddIHx8ICdVbmtub3duJyxcbiAgICAgIG9yaWdpbjogcmVxdWVzdC5oZWFkZXJzLm9yaWdpbixcbiAgICAgIHJlZmVyZXI6IHJlcXVlc3QuaGVhZGVycy5yZWZlcmVyLFxuICAgIH07XG4gIH0sXG4pO1xuIl0sInZlcnNpb24iOjN9