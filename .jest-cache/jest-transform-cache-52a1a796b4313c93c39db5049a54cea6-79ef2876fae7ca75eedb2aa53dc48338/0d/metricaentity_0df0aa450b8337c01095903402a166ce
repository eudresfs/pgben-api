a416f8d6555a1355075ad73142040c13
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metrica = exports.CategoriaMetricaEnum = exports.TipoMetricaEnum = void 0;
const typeorm_1 = require("typeorm");
const registro_metrica_entity_1 = require("./registro-metrica.entity");
const regra_alerta_entity_1 = require("./regra-alerta.entity");
/**
 * Tipos de métricas suportados pelo sistema
 */
var TipoMetricaEnum;
(function (TipoMetricaEnum) {
    TipoMetricaEnum["SEGURANCA"] = "seguranca";
    TipoMetricaEnum["LGPD"] = "lgpd";
    TipoMetricaEnum["DOCUMENTO"] = "documento";
    TipoMetricaEnum["SISTEMA"] = "sistema";
    TipoMetricaEnum["BANCO_DADOS"] = "banco_dados";
    TipoMetricaEnum["HTTP"] = "http";
})(TipoMetricaEnum || (exports.TipoMetricaEnum = TipoMetricaEnum = {}));
/**
 * Categorias de métricas
 */
var CategoriaMetricaEnum;
(function (CategoriaMetricaEnum) {
    CategoriaMetricaEnum["CONTAGEM"] = "contagem";
    CategoriaMetricaEnum["DURACAO"] = "duracao";
    CategoriaMetricaEnum["TAMANHO"] = "tamanho";
    CategoriaMetricaEnum["PERCENTUAL"] = "percentual";
    CategoriaMetricaEnum["ESTADO"] = "estado";
    CategoriaMetricaEnum["ERRO"] = "erro";
})(CategoriaMetricaEnum || (exports.CategoriaMetricaEnum = CategoriaMetricaEnum = {}));
/**
 * Entidade que representa uma definição de métrica no sistema
 *
 * Esta entidade armazena as informações básicas sobre uma métrica,
 * como seu nome, tipo, categoria e limiares para alertas.
 */
let Metrica = class Metrica {
    id;
    nome;
    tipo;
    categoria;
    descricao;
    ativo;
    unidade_medida;
    limiar_alerta;
    limiar_critico;
    tags;
    created_at;
    updated_at;
    removed_at;
    registros;
    regras_alerta;
};
exports.Metrica = Metrica;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Metrica.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 100 }),
    __metadata("design:type", String)
], Metrica.prototype, "nome", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: TipoMetricaEnum,
    }),
    __metadata("design:type", String)
], Metrica.prototype, "tipo", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: CategoriaMetricaEnum,
    }),
    __metadata("design:type", String)
], Metrica.prototype, "categoria", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Metrica.prototype, "descricao", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: true }),
    __metadata("design:type", Boolean)
], Metrica.prototype, "ativo", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 50, nullable: true }),
    __metadata("design:type", String)
], Metrica.prototype, "unidade_medida", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'numeric', precision: 15, scale: 2, nullable: true }),
    __metadata("design:type", Number)
], Metrica.prototype, "limiar_alerta", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'numeric', precision: 15, scale: 2, nullable: true }),
    __metadata("design:type", Number)
], Metrica.prototype, "limiar_critico", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_a = typeof Record !== "undefined" && Record) === "function" ? _a : Object)
], Metrica.prototype, "tags", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Metrica.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], Metrica.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)({ nullable: true }),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], Metrica.prototype, "removed_at", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => registro_metrica_entity_1.RegistroMetrica, (registro) => registro.metrica),
    __metadata("design:type", Array)
], Metrica.prototype, "registros", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => regra_alerta_entity_1.RegraAlerta, (regra) => regra.metrica),
    __metadata("design:type", Array)
], Metrica.prototype, "regras_alerta", void 0);
exports.Metrica = Metrica = __decorate([
    (0, typeorm_1.Entity)('metricas')
], Metrica);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxtZXRyaWNhLmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscUNBQXlJO0FBQ3pJLHVFQUE0RDtBQUM1RCwrREFBb0Q7QUFFcEQ7O0dBRUc7QUFDSCxJQUFZLGVBT1g7QUFQRCxXQUFZLGVBQWU7SUFDekIsMENBQXVCLENBQUE7SUFDdkIsZ0NBQWEsQ0FBQTtJQUNiLDBDQUF1QixDQUFBO0lBQ3ZCLHNDQUFtQixDQUFBO0lBQ25CLDhDQUEyQixDQUFBO0lBQzNCLGdDQUFhLENBQUE7QUFDZixDQUFDLEVBUFcsZUFBZSwrQkFBZixlQUFlLFFBTzFCO0FBRUQ7O0dBRUc7QUFDSCxJQUFZLG9CQU9YO0FBUEQsV0FBWSxvQkFBb0I7SUFDOUIsNkNBQXFCLENBQUE7SUFDckIsMkNBQW1CLENBQUE7SUFDbkIsMkNBQW1CLENBQUE7SUFDbkIsaURBQXlCLENBQUE7SUFDekIseUNBQWlCLENBQUE7SUFDakIscUNBQWEsQ0FBQTtBQUNmLENBQUMsRUFQVyxvQkFBb0Isb0NBQXBCLG9CQUFvQixRQU8vQjtBQUVEOzs7OztHQUtHO0FBRUksSUFBTSxPQUFPLEdBQWIsTUFBTSxPQUFPO0lBRWxCLEVBQUUsQ0FBUztJQUdYLElBQUksQ0FBUztJQU1iLElBQUksQ0FBa0I7SUFNdEIsU0FBUyxDQUF1QjtJQUdoQyxTQUFTLENBQVM7SUFHbEIsS0FBSyxDQUFVO0lBR2YsY0FBYyxDQUFTO0lBR3ZCLGFBQWEsQ0FBUztJQUd0QixjQUFjLENBQVM7SUFHdkIsSUFBSSxDQUFzQjtJQUcxQixVQUFVLENBQU87SUFHakIsVUFBVSxDQUFPO0lBR2pCLFVBQVUsQ0FBTztJQUdqQixTQUFTLENBQW9CO0lBRzdCLGFBQWEsQ0FBZ0I7Q0FDOUIsQ0FBQTtBQW5EWSwwQkFBTztBQUVsQjtJQURDLElBQUEsZ0NBQXNCLEVBQUMsTUFBTSxDQUFDOzttQ0FDcEI7QUFHWDtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7cUNBQ1g7QUFNYjtJQUpDLElBQUEsZ0JBQU0sRUFBQztRQUNOLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQzs7cUNBQ29CO0FBTXRCO0lBSkMsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsb0JBQW9CO0tBQzNCLENBQUM7OzBDQUM4QjtBQUdoQztJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzswQ0FDdkI7QUFHbEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7O3NDQUNYO0FBR2Y7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7K0NBQ2hCO0FBR3ZCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzs4Q0FDL0M7QUFHdEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7OytDQUM5QztBQUd2QjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNwQyxNQUFNLG9CQUFOLE1BQU07cUNBQWM7QUFHMUI7SUFEQyxJQUFBLDBCQUFnQixHQUFFO2tEQUNQLElBQUksb0JBQUosSUFBSTsyQ0FBQztBQUdqQjtJQURDLElBQUEsMEJBQWdCLEdBQUU7a0RBQ1AsSUFBSSxvQkFBSixJQUFJOzJDQUFDO0FBR2pCO0lBREMsSUFBQSwwQkFBZ0IsRUFBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDekIsSUFBSSxvQkFBSixJQUFJOzJDQUFDO0FBR2pCO0lBREMsSUFBQSxtQkFBUyxFQUFDLEdBQUcsRUFBRSxDQUFDLHlDQUFlLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUM7OzBDQUNwQztBQUc3QjtJQURDLElBQUEsbUJBQVMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxpQ0FBVyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDOzs4Q0FDMUI7a0JBbERsQixPQUFPO0lBRG5CLElBQUEsZ0JBQU0sRUFBQyxVQUFVLENBQUM7R0FDTixPQUFPLENBbURuQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcZW50aXRpZXNcXG1ldHJpY2EuZW50aXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgQ29sdW1uLCBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uLCBDcmVhdGVEYXRlQ29sdW1uLCBVcGRhdGVEYXRlQ29sdW1uLCBEZWxldGVEYXRlQ29sdW1uLCBPbmVUb01hbnksIEluZGV4IH0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBSZWdpc3Ryb01ldHJpY2EgfSBmcm9tICcuL3JlZ2lzdHJvLW1ldHJpY2EuZW50aXR5JztcbmltcG9ydCB7IFJlZ3JhQWxlcnRhIH0gZnJvbSAnLi9yZWdyYS1hbGVydGEuZW50aXR5JztcblxuLyoqXG4gKiBUaXBvcyBkZSBtw6l0cmljYXMgc3Vwb3J0YWRvcyBwZWxvIHNpc3RlbWFcbiAqL1xuZXhwb3J0IGVudW0gVGlwb01ldHJpY2FFbnVtIHtcbiAgU0VHVVJBTkNBID0gJ3NlZ3VyYW5jYScsXG4gIExHUEQgPSAnbGdwZCcsXG4gIERPQ1VNRU5UTyA9ICdkb2N1bWVudG8nLFxuICBTSVNURU1BID0gJ3Npc3RlbWEnLFxuICBCQU5DT19EQURPUyA9ICdiYW5jb19kYWRvcycsXG4gIEhUVFAgPSAnaHR0cCcsXG59XG5cbi8qKlxuICogQ2F0ZWdvcmlhcyBkZSBtw6l0cmljYXNcbiAqL1xuZXhwb3J0IGVudW0gQ2F0ZWdvcmlhTWV0cmljYUVudW0ge1xuICBDT05UQUdFTSA9ICdjb250YWdlbScsXG4gIERVUkFDQU8gPSAnZHVyYWNhbycsXG4gIFRBTUFOSE8gPSAndGFtYW5obycsXG4gIFBFUkNFTlRVQUwgPSAncGVyY2VudHVhbCcsXG4gIEVTVEFETyA9ICdlc3RhZG8nLFxuICBFUlJPID0gJ2Vycm8nLFxufVxuXG4vKipcbiAqIEVudGlkYWRlIHF1ZSByZXByZXNlbnRhIHVtYSBkZWZpbmnDp8OjbyBkZSBtw6l0cmljYSBubyBzaXN0ZW1hXG4gKiBcbiAqIEVzdGEgZW50aWRhZGUgYXJtYXplbmEgYXMgaW5mb3JtYcOnw7VlcyBiw6FzaWNhcyBzb2JyZSB1bWEgbcOpdHJpY2EsXG4gKiBjb21vIHNldSBub21lLCB0aXBvLCBjYXRlZ29yaWEgZSBsaW1pYXJlcyBwYXJhIGFsZXJ0YXMuXG4gKi9cbkBFbnRpdHkoJ21ldHJpY2FzJylcbmV4cG9ydCBjbGFzcyBNZXRyaWNhIHtcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oJ3V1aWQnKVxuICBpZDogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyBsZW5ndGg6IDEwMCB9KVxuICBub21lOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ2VudW0nLFxuICAgIGVudW06IFRpcG9NZXRyaWNhRW51bSxcbiAgfSlcbiAgdGlwbzogVGlwb01ldHJpY2FFbnVtO1xuXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICdlbnVtJyxcbiAgICBlbnVtOiBDYXRlZ29yaWFNZXRyaWNhRW51bSxcbiAgfSlcbiAgY2F0ZWdvcmlhOiBDYXRlZ29yaWFNZXRyaWNhRW51bTtcblxuICBAQ29sdW1uKHsgdHlwZTogJ3RleHQnLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkZXNjcmljYW86IHN0cmluZztcblxuICBAQ29sdW1uKHsgZGVmYXVsdDogdHJ1ZSB9KVxuICBhdGl2bzogYm9vbGVhbjtcblxuICBAQ29sdW1uKHsgbGVuZ3RoOiA1MCwgbnVsbGFibGU6IHRydWUgfSlcbiAgdW5pZGFkZV9tZWRpZGE6IHN0cmluZztcblxuICBAQ29sdW1uKHsgdHlwZTogJ251bWVyaWMnLCBwcmVjaXNpb246IDE1LCBzY2FsZTogMiwgbnVsbGFibGU6IHRydWUgfSlcbiAgbGltaWFyX2FsZXJ0YTogbnVtYmVyO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAnbnVtZXJpYycsIHByZWNpc2lvbjogMTUsIHNjYWxlOiAyLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBsaW1pYXJfY3JpdGljbzogbnVtYmVyO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAnanNvbmInLCBudWxsYWJsZTogdHJ1ZSB9KVxuICB0YWdzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuXG4gIEBDcmVhdGVEYXRlQ29sdW1uKClcbiAgY3JlYXRlZF9hdDogRGF0ZTtcblxuICBAVXBkYXRlRGF0ZUNvbHVtbigpXG4gIHVwZGF0ZWRfYXQ6IERhdGU7XG5cbiAgQERlbGV0ZURhdGVDb2x1bW4oeyBudWxsYWJsZTogdHJ1ZSB9KVxuICByZW1vdmVkX2F0OiBEYXRlO1xuXG4gIEBPbmVUb01hbnkoKCkgPT4gUmVnaXN0cm9NZXRyaWNhLCAocmVnaXN0cm8pID0+IHJlZ2lzdHJvLm1ldHJpY2EpXG4gIHJlZ2lzdHJvczogUmVnaXN0cm9NZXRyaWNhW107XG5cbiAgQE9uZVRvTWFueSgoKSA9PiBSZWdyYUFsZXJ0YSwgKHJlZ3JhKSA9PiByZWdyYS5tZXRyaWNhKVxuICByZWdyYXNfYWxlcnRhOiBSZWdyYUFsZXJ0YVtdO1xufVxuIl0sInZlcnNpb24iOjN9