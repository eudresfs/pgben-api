{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\dto\\converter-papel.dto.ts","mappings":";;;;;;;;;;;;;AAAA,6CAA8C;AAC9C,qDAA2E;AAE3E;;;;;GAKG;AACH,MAAa,iBAAiB;IAO5B,qBAAqB,CAAS;IAQ9B,UAAU,CAAS;IAQnB,iBAAiB,CAAS;IAQ1B,UAAU,CAAS;IASnB,aAAa,CAAS;IAQtB,oBAAoB,CAAuB;CAC5C;AAjDD,8CAiDC;AA1CC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8DAA8D;QAC3E,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,0CAA0C,EAAE,CAAC;IACnE,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC;;gEACxC;AAQ9B;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,4DAA4D;QACzE,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC;;qDAC/C;AAQnB;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,iDAAiD;QAC9D,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC;IAChE,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,iDAAiD,EAAE,CAAC;;4DAClD;AAQ1B;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC;;qDAC/C;AASnB;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,yCAAyC;QACtD,OAAO,EACL,wEAAwE;KAC3E,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC;;wDACrC;AAQtB;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,2DAA2D;QACxE,OAAO,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;QAC/C,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;kDACU,MAAM,oBAAN,MAAM;+DAAc","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\dto\\converter-papel.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsUUID, IsOptional } from 'class-validator';\n\n/**\n * DTO para conversão de papel de um cidadão\n *\n * Permite converter um cidadão que está na composição familiar de uma solicitação\n * para se tornar o beneficiário principal de uma nova solicitação.\n */\nexport class ConverterPapelDto {\n  @ApiProperty({\n    description: 'ID da solicitação onde o cidadão está na composição familiar',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsNotEmpty({ message: 'ID da solicitação original é obrigatório' })\n  @IsUUID('4', { message: 'ID da solicitação deve ser um UUID válido' })\n  solicitacao_origem_id: string;\n\n  @ApiProperty({\n    description: 'ID do cidadão a ser convertido de membro para beneficiário',\n    example: '123e4567-e89b-12d3-a456-426614174001',\n  })\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  @IsUUID('4', { message: 'ID do cidadão deve ser um UUID válido' })\n  cidadao_id: string;\n\n  @ApiProperty({\n    description: 'ID do tipo de benefício para a nova solicitação',\n    example: '123e4567-e89b-12d3-a456-426614174002',\n  })\n  @IsNotEmpty({ message: 'ID do tipo de benefício é obrigatório' })\n  @IsUUID('4', { message: 'ID do tipo de benefício deve ser um UUID válido' })\n  tipo_beneficio_id: string;\n\n  @ApiProperty({\n    description: 'ID da unidade para a nova solicitação',\n    example: '123e4567-e89b-12d3-a456-426614174003',\n  })\n  @IsNotEmpty({ message: 'ID da unidade é obrigatório' })\n  @IsUUID('4', { message: 'ID da unidade deve ser um UUID válido' })\n  unidade_id: string;\n\n  @ApiProperty({\n    description: 'Justificativa para a conversão de papel',\n    example:\n      'Cidadão precisa ser beneficiário devido a mudança na situação familiar',\n  })\n  @IsNotEmpty({ message: 'Justificativa é obrigatória' })\n  @IsString({ message: 'Justificativa deve ser uma string' })\n  justificativa: string;\n\n  @ApiProperty({\n    description: 'Dados complementares específicos para o tipo de benefício',\n    example: { campo1: 'valor1', campo2: 'valor2' },\n    required: false,\n  })\n  @IsOptional()\n  dados_complementares?: Record<string, any>;\n}\n"],"version":3}