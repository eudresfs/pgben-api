b29a2af162efafd508237cfa4f1f7ee1
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuscaCidadaoDto = void 0;
exports.IsOnlyOneSearchParam = IsOnlyOneSearchParam;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
/**
 * Validador customizado para garantir que apenas um parâmetro de busca seja fornecido
 */
function IsOnlyOneSearchParam(validationOptions) {
    return (0, class_validator_1.ValidateBy)({
        name: 'isOnlyOneSearchParam',
        validator: {
            validate(value, args) {
                const object = args.object;
                const searchParams = [
                    object.id,
                    object.cpf,
                    object.nis,
                    object.telefone,
                    object.nome,
                ];
                const definedParams = searchParams.filter((param) => param !== undefined && param !== null && param !== '');
                return definedParams.length === 1;
            },
            defaultMessage(args) {
                return 'Apenas um parâmetro de busca deve ser fornecido por vez (id, cpf, nis, telefone ou nome)';
            },
        },
    }, validationOptions);
}
/**
 * DTO para busca unificada de cidadão
 * Permite buscar por ID, CPF, NIS, telefone ou nome
 * Apenas um parâmetro deve ser fornecido por vez
 */
class BuscaCidadaoDto {
    id;
    cpf;
    nis;
    telefone;
    nome;
    includeRelations = false;
}
exports.BuscaCidadaoDto = BuscaCidadaoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do cidadão (UUID)',
        example: '123e4567-e89b-12d3-a456-426614174000',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'ID deve ser um UUID válido' }),
    IsOnlyOneSearchParam({
        message: 'Apenas um parâmetro de busca deve ser fornecido por vez (id, cpf, nis, telefone ou nome)',
    }),
    __metadata("design:type", String)
], BuscaCidadaoDto.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'CPF do cidadão (com ou sem formatação)',
        example: '12345678901',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'CPF deve ser uma string' }),
    __metadata("design:type", String)
], BuscaCidadaoDto.prototype, "cpf", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'NIS do cidadão (PIS/PASEP)',
        example: '12345678901',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'NIS deve ser uma string' }),
    __metadata("design:type", String)
], BuscaCidadaoDto.prototype, "nis", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Telefone do cidadão (com ou sem formatação)',
        example: '11987654321',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Telefone deve ser uma string' }),
    __metadata("design:type", String)
], BuscaCidadaoDto.prototype, "telefone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome do cidadão (busca parcial)',
        example: 'João Silva',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    __metadata("design:type", String)
], BuscaCidadaoDto.prototype, "nome", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Se deve incluir relacionamentos (papéis e composição familiar)',
        example: false,
        required: false,
        default: false,
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], BuscaCidadaoDto.prototype, "includeRelations", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNpZGFkYW9cXGR0b1xcYnVzY2EtY2lkYWRhby5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBYUEsb0RBMkJDO0FBeENELDZDQUE4QztBQUM5QyxxREFPeUI7QUFFekI7O0dBRUc7QUFDSCxTQUFnQixvQkFBb0IsQ0FBQyxpQkFBcUM7SUFDeEUsT0FBTyxJQUFBLDRCQUFVLEVBQ2Y7UUFDRSxJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLFNBQVMsRUFBRTtZQUNULFFBQVEsQ0FBQyxLQUFVLEVBQUUsSUFBeUI7Z0JBQzVDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUF5QixDQUFDO2dCQUM5QyxNQUFNLFlBQVksR0FBRztvQkFDbkIsTUFBTSxDQUFDLEVBQUU7b0JBQ1QsTUFBTSxDQUFDLEdBQUc7b0JBQ1YsTUFBTSxDQUFDLEdBQUc7b0JBQ1YsTUFBTSxDQUFDLFFBQVE7b0JBQ2YsTUFBTSxDQUFDLElBQUk7aUJBQ1osQ0FBQztnQkFDRixNQUFNLGFBQWEsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUN2QyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLFNBQVMsSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLEtBQUssS0FBSyxFQUFFLENBQ2pFLENBQUM7Z0JBRUYsT0FBTyxhQUFhLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztZQUNwQyxDQUFDO1lBQ0QsY0FBYyxDQUFDLElBQXlCO2dCQUN0QyxPQUFPLDBGQUEwRixDQUFDO1lBQ3BHLENBQUM7U0FDRjtLQUNGLEVBQ0QsaUJBQWlCLENBQ2xCLENBQUM7QUFDSixDQUFDO0FBRUQ7Ozs7R0FJRztBQUNILE1BQWEsZUFBZTtJQVkxQixFQUFFLENBQVU7SUFTWixHQUFHLENBQVU7SUFTYixHQUFHLENBQVU7SUFTYixRQUFRLENBQVU7SUFTbEIsSUFBSSxDQUFVO0lBVWQsZ0JBQWdCLEdBQWEsS0FBSyxDQUFDO0NBQ3BDO0FBM0RELDBDQTJEQztBQS9DQztJQVhDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxzQkFBc0I7UUFDbkMsT0FBTyxFQUFFLHNDQUFzQztRQUMvQyxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSx3QkFBTSxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxDQUFDO0lBQ3RELG9CQUFvQixDQUFDO1FBQ3BCLE9BQU8sRUFDTCwwRkFBMEY7S0FDN0YsQ0FBQzs7MkNBQ1U7QUFTWjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSx3Q0FBd0M7UUFDckQsT0FBTyxFQUFFLGFBQWE7UUFDdEIsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxDQUFDOzs0Q0FDcEM7QUFTYjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw0QkFBNEI7UUFDekMsT0FBTyxFQUFFLGFBQWE7UUFDdEIsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxDQUFDOzs0Q0FDcEM7QUFTYjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw2Q0FBNkM7UUFDMUQsT0FBTyxFQUFFLGFBQWE7UUFDdEIsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxDQUFDOztpREFDcEM7QUFTbEI7SUFQQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsaUNBQWlDO1FBQzlDLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQzs7NkNBQ3BDO0FBVWQ7SUFSQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQ1QsZ0VBQWdFO1FBQ2xFLE9BQU8sRUFBRSxLQUFLO1FBQ2QsUUFBUSxFQUFFLEtBQUs7UUFDZixPQUFPLEVBQUUsS0FBSztLQUNmLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7O3lEQUNzQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcbW9kdWxlc1xcY2lkYWRhb1xcZHRvXFxidXNjYS1jaWRhZGFvLmR0by50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQcm9wZXJ0eSB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XG5pbXBvcnQge1xuICBJc09wdGlvbmFsLFxuICBJc1N0cmluZyxcbiAgSXNVVUlELFxuICBWYWxpZGF0ZUJ5LFxuICBWYWxpZGF0aW9uT3B0aW9ucyxcbiAgVmFsaWRhdGlvbkFyZ3VtZW50cyxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcblxuLyoqXG4gKiBWYWxpZGFkb3IgY3VzdG9taXphZG8gcGFyYSBnYXJhbnRpciBxdWUgYXBlbmFzIHVtIHBhcsOibWV0cm8gZGUgYnVzY2Egc2VqYSBmb3JuZWNpZG9cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIElzT25seU9uZVNlYXJjaFBhcmFtKHZhbGlkYXRpb25PcHRpb25zPzogVmFsaWRhdGlvbk9wdGlvbnMpIHtcbiAgcmV0dXJuIFZhbGlkYXRlQnkoXG4gICAge1xuICAgICAgbmFtZTogJ2lzT25seU9uZVNlYXJjaFBhcmFtJyxcbiAgICAgIHZhbGlkYXRvcjoge1xuICAgICAgICB2YWxpZGF0ZSh2YWx1ZTogYW55LCBhcmdzOiBWYWxpZGF0aW9uQXJndW1lbnRzKSB7XG4gICAgICAgICAgY29uc3Qgb2JqZWN0ID0gYXJncy5vYmplY3QgYXMgQnVzY2FDaWRhZGFvRHRvO1xuICAgICAgICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IFtcbiAgICAgICAgICAgIG9iamVjdC5pZCxcbiAgICAgICAgICAgIG9iamVjdC5jcGYsXG4gICAgICAgICAgICBvYmplY3QubmlzLFxuICAgICAgICAgICAgb2JqZWN0LnRlbGVmb25lLFxuICAgICAgICAgICAgb2JqZWN0Lm5vbWUsXG4gICAgICAgICAgXTtcbiAgICAgICAgICBjb25zdCBkZWZpbmVkUGFyYW1zID0gc2VhcmNoUGFyYW1zLmZpbHRlcihcbiAgICAgICAgICAgIChwYXJhbSkgPT4gcGFyYW0gIT09IHVuZGVmaW5lZCAmJiBwYXJhbSAhPT0gbnVsbCAmJiBwYXJhbSAhPT0gJycsXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIHJldHVybiBkZWZpbmVkUGFyYW1zLmxlbmd0aCA9PT0gMTtcbiAgICAgICAgfSxcbiAgICAgICAgZGVmYXVsdE1lc3NhZ2UoYXJnczogVmFsaWRhdGlvbkFyZ3VtZW50cykge1xuICAgICAgICAgIHJldHVybiAnQXBlbmFzIHVtIHBhcsOibWV0cm8gZGUgYnVzY2EgZGV2ZSBzZXIgZm9ybmVjaWRvIHBvciB2ZXogKGlkLCBjcGYsIG5pcywgdGVsZWZvbmUgb3Ugbm9tZSknO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHZhbGlkYXRpb25PcHRpb25zLFxuICApO1xufVxuXG4vKipcbiAqIERUTyBwYXJhIGJ1c2NhIHVuaWZpY2FkYSBkZSBjaWRhZMOjb1xuICogUGVybWl0ZSBidXNjYXIgcG9yIElELCBDUEYsIE5JUywgdGVsZWZvbmUgb3Ugbm9tZVxuICogQXBlbmFzIHVtIHBhcsOibWV0cm8gZGV2ZSBzZXIgZm9ybmVjaWRvIHBvciB2ZXpcbiAqL1xuZXhwb3J0IGNsYXNzIEJ1c2NhQ2lkYWRhb0R0byB7XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdJRCBkbyBjaWRhZMOjbyAoVVVJRCknLFxuICAgIGV4YW1wbGU6ICcxMjNlNDU2Ny1lODliLTEyZDMtYTQ1Ni00MjY2MTQxNzQwMDAnLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNVVUlEKCc0JywgeyBtZXNzYWdlOiAnSUQgZGV2ZSBzZXIgdW0gVVVJRCB2w6FsaWRvJyB9KVxuICBASXNPbmx5T25lU2VhcmNoUGFyYW0oe1xuICAgIG1lc3NhZ2U6XG4gICAgICAnQXBlbmFzIHVtIHBhcsOibWV0cm8gZGUgYnVzY2EgZGV2ZSBzZXIgZm9ybmVjaWRvIHBvciB2ZXogKGlkLCBjcGYsIG5pcywgdGVsZWZvbmUgb3Ugbm9tZSknLFxuICB9KVxuICBpZD86IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnQ1BGIGRvIGNpZGFkw6NvIChjb20gb3Ugc2VtIGZvcm1hdGHDp8OjbyknLFxuICAgIGV4YW1wbGU6ICcxMjM0NTY3ODkwMScsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdDUEYgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgY3BmPzogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdOSVMgZG8gY2lkYWTDo28gKFBJUy9QQVNFUCknLFxuICAgIGV4YW1wbGU6ICcxMjM0NTY3ODkwMScsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdOSVMgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgbmlzPzogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdUZWxlZm9uZSBkbyBjaWRhZMOjbyAoY29tIG91IHNlbSBmb3JtYXRhw6fDo28pJyxcbiAgICBleGFtcGxlOiAnMTE5ODc2NTQzMjEnLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnVGVsZWZvbmUgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgdGVsZWZvbmU/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ05vbWUgZG8gY2lkYWTDo28gKGJ1c2NhIHBhcmNpYWwpJyxcbiAgICBleGFtcGxlOiAnSm/Do28gU2lsdmEnLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnTm9tZSBkZXZlIHNlciB1bWEgc3RyaW5nJyB9KVxuICBub21lPzogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnU2UgZGV2ZSBpbmNsdWlyIHJlbGFjaW9uYW1lbnRvcyAocGFww6lpcyBlIGNvbXBvc2nDp8OjbyBmYW1pbGlhciknLFxuICAgIGV4YW1wbGU6IGZhbHNlLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICBkZWZhdWx0OiBmYWxzZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBpbmNsdWRlUmVsYXRpb25zPzogYm9vbGVhbiA9IGZhbHNlO1xufVxuIl0sInZlcnNpb24iOjN9