905b81cbb3943db77d59881688f6416a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DadosNatalidade = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const solicitacao_entity_1 = require("./solicitacao.entity");
/**
 * Entidade para armazenar dados específicos do cidadão para Auxílio Natalidade
 *
 * Armazena informações específicas necessárias para a solicitação do benefício
 * de Auxílio Natalidade, como dados da gestação, pré-natal, etc.
 */
let DadosNatalidade = class DadosNatalidade {
    id;
    solicitacao_id;
    solicitacao;
    realiza_pre_natal;
    atendida_psf_ubs;
    gravidez_risco;
    data_provavel_parto;
    gemeos_trigemeos;
    ja_tem_filhos;
    quantidade_filhos;
    telefone_cadastrado_cpf;
    chave_pix;
    created_at;
    updated_at;
    removed_at;
    // Getters
    get createdAt() {
        return this.created_at;
    }
    get updatedAt() {
        return this.updated_at;
    }
    get removedAt() {
        return this.removed_at;
    }
    // Métodos Utilitários
    /**
     * Verifica se todos os critérios para pecúnia estão preenchidos
     */
    temCriteriosPecunia() {
        return !!(this.telefone_cadastrado_cpf && this.chave_pix);
    }
    /**
     * Verifica se é uma gravidez múltipla
     */
    isGravidezMultipla() {
        return this.gemeos_trigemeos;
    }
    /**
     * Verifica se é primípara (primeiro filho)
     */
    isPrimipara() {
        return !this.ja_tem_filhos || this.quantidade_filhos === 0;
    }
    /**
     * Calcula se está no prazo para solicitação baseado na data provável do parto
     */
    estaNoPrazoSolicitacao(prazoMaximoDias) {
        if (!this.data_provavel_parto)
            return false;
        const hoje = new Date();
        const dataLimite = new Date(this.data_provavel_parto);
        dataLimite.setDate(dataLimite.getDate() + prazoMaximoDias);
        return hoje <= dataLimite;
    }
    /**
     * Valida se os dados estão completos para submissão
     */
    validarDadosCompletos() {
        const erros = [];
        if (this.ja_tem_filhos && (this.quantidade_filhos === null || this.quantidade_filhos === undefined)) {
            erros.push('Quantidade de filhos é obrigatória quando já tem filhos');
        }
        if (this.realiza_pre_natal && !this.atendida_psf_ubs) {
            erros.push('Quando realiza pré-natal, deve informar se é atendida pelo PSF/UBS');
        }
        return {
            valido: erros.length === 0,
            erros
        };
    }
};
exports.DadosNatalidade = DadosNatalidade;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], DadosNatalidade.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID da solicitação é obrigatório' }),
    __metadata("design:type", String)
], DadosNatalidade.prototype, "solicitacao_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => solicitacao_entity_1.Solicitacao, { onDelete: 'CASCADE' }),
    (0, typeorm_1.JoinColumn)({ name: 'solicitacao_id' }),
    __metadata("design:type", typeof (_a = typeof solicitacao_entity_1.Solicitacao !== "undefined" && solicitacao_entity_1.Solicitacao) === "function" ? _a : Object)
], DadosNatalidade.prototype, "solicitacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)({ message: 'Realiza pré-natal deve ser um booleano' }),
    __metadata("design:type", Boolean)
], DadosNatalidade.prototype, "realiza_pre_natal", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)({ message: 'Atendida pelo PSF/UBS deve ser um booleano' }),
    __metadata("design:type", Boolean)
], DadosNatalidade.prototype, "atendida_psf_ubs", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)({ message: 'Gravidez de risco deve ser um booleano' }),
    __metadata("design:type", Boolean)
], DadosNatalidade.prototype, "gravidez_risco", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'date', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDateString)({}, { message: 'Data provável do parto deve ser uma data válida' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], DadosNatalidade.prototype, "data_provavel_parto", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)({ message: 'Gêmeos/Trigêmeos deve ser um booleano' }),
    __metadata("design:type", Boolean)
], DadosNatalidade.prototype, "gemeos_trigemeos", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: false }),
    (0, class_validator_1.IsBoolean)({ message: 'Já tem filhos deve ser um booleano' }),
    __metadata("design:type", Boolean)
], DadosNatalidade.prototype, "ja_tem_filhos", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'integer', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Quantidade de filhos deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Quantidade de filhos não pode ser negativa' }),
    __metadata("design:type", Number)
], DadosNatalidade.prototype, "quantidade_filhos", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], DadosNatalidade.prototype, "telefone_cadastrado_cpf", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], DadosNatalidade.prototype, "chave_pix", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], DadosNatalidade.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], DadosNatalidade.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)(),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], DadosNatalidade.prototype, "removed_at", void 0);
exports.DadosNatalidade = DadosNatalidade = __decorate([
    (0, typeorm_1.Entity)('dados_natalidade'),
    (0, typeorm_1.Index)(['solicitacao_id'], { unique: true })
], DadosNatalidade);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,