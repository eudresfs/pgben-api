e2b216821c771a87768f2b6498f5a408
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogAuditoria = void 0;
const typeorm_1 = require("typeorm");
const tipo_operacao_enum_1 = require("../enums/tipo-operacao.enum");
/**
 * Entidade LogAuditoria - Versão MVP
 *
 * Responsável por armazenar os logs de auditoria do sistema,
 * registrando operações críticas realizadas pelos usuários.
 * Implementação simplificada para o MVP com foco em rastreabilidade básica.
 */
let LogAuditoria = class LogAuditoria {
    id;
    /**
     * Tipo de operação realizada
     * Utiliza o enum TipoOperacao para padronização
     */
    tipo_operacao;
    /**
     * Entidade afetada pela operação
     * Ex: Usuario, Cidadao, Solicitacao, etc.
     */
    entidade_afetada;
    /**
     * ID da entidade afetada
     */
    entidade_id;
    /**
     * Dados anteriores à operação
     */
    dados_anteriores;
    /**
     * Novos dados após a operação
     */
    dados_novos;
    /**
     * ID do usuário que realizou a operação
     */
    usuario_id;
    // Relação com usuário removida para simplificar o MVP
    /**
     * Descrição da operação realizada
     */
    descricao;
    /**
     * Endereço IP de origem da requisição
     */
    ip_origem;
    /**
     * User-Agent do navegador ou cliente
     */
    user_agent;
    /**
     * Dados sensíveis que foram acessados (LGPD)
     */
    dados_sensiveis_acessados;
    /**
     * Endpoint acessado
     */
    endpoint;
    /**
     * Método HTTP utilizado
     */
    metodo_http;
    // Campos não essenciais para o MVP foram removidos
    /**
     * Data e hora da operação
     */
    data_hora;
    /**
     * Data e hora de criação do registro
     */
    created_at;
    /**
     * Data e hora da última atualização do registro
     */
    updated_at;
};
exports.LogAuditoria = LogAuditoria;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], LogAuditoria.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 20,
        comment: 'Tipo de operação (CREATE, READ, UPDATE, DELETE, ACCESS, etc.)',
    }),
    __metadata("design:type", typeof (_a = typeof tipo_operacao_enum_1.TipoOperacao !== "undefined" && tipo_operacao_enum_1.TipoOperacao) === "function" ? _a : Object)
], LogAuditoria.prototype, "tipo_operacao", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 100,
        comment: 'Nome da entidade afetada pela operação',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "entidade_afetada", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 36,
        nullable: true,
        comment: 'ID da entidade afetada pela operação',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "entidade_id", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'jsonb',
        nullable: true,
        comment: 'Dados anteriores à operação, armazenados em formato JSON',
    }),
    __metadata("design:type", typeof (_b = typeof Record !== "undefined" && Record) === "function" ? _b : Object)
], LogAuditoria.prototype, "dados_anteriores", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'jsonb',
        nullable: true,
        comment: 'Novos dados após a operação, armazenados em formato JSON',
    }),
    __metadata("design:type", typeof (_c = typeof Record !== "undefined" && Record) === "function" ? _c : Object)
], LogAuditoria.prototype, "dados_novos", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'usuario_id',
        nullable: true,
        comment: 'ID do usuário que realizou a operação',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "usuario_id", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 500,
        nullable: true,
        comment: 'Descrição textual da operação realizada',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "descricao", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 45, // Suporte para IPv4 e IPv6
        nullable: true,
        comment: 'Endereço IP de origem que realizou a requisição',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "ip_origem", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 500,
        nullable: true,
        comment: 'User-Agent do navegador ou cliente que realizou a requisição',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "user_agent", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'jsonb',
        nullable: true,
        comment: 'Array de campos sensíveis que foram acessados, para compliance com LGPD',
    }),
    __metadata("design:type", Array)
], LogAuditoria.prototype, "dados_sensiveis_acessados", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 255,
        nullable: true,
        comment: 'Endpoint acessado',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "endpoint", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'varchar',
        length: 10,
        nullable: true,
        comment: 'Método HTTP utilizado',
    }),
    __metadata("design:type", String)
], LogAuditoria.prototype, "metodo_http", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'timestamptz',
        nullable: true,
        comment: 'Data e hora em que a operação foi realizada',
    }),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], LogAuditoria.prototype, "data_hora", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({
        type: 'timestamptz',
        comment: 'Data e hora de criação do registro',
    }),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], LogAuditoria.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({
        type: 'timestamptz',
        comment: 'Data e hora da última atualização do registro',
    }),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], LogAuditoria.prototype, "updated_at", void 0);
exports.LogAuditoria = LogAuditoria = __decorate([
    (0, typeorm_1.Entity)('logs_auditoria'),
    (0, typeorm_1.Index)(['usuario_id', 'created_at']),
    (0, typeorm_1.Index)(['entidade_afetada', 'created_at']),
    (0, typeorm_1.Index)(['tipo_operacao', 'created_at'])
], LogAuditoria);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxsb2ctYXVkaXRvcmlhLmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscUNBT2lCO0FBQ2pCLG9FQUEyRDtBQUUzRDs7Ozs7O0dBTUc7QUFLSSxJQUFNLFlBQVksR0FBbEIsTUFBTSxZQUFZO0lBRXZCLEVBQUUsQ0FBUztJQUVYOzs7T0FHRztJQU1ILGFBQWEsQ0FBZTtJQUU1Qjs7O09BR0c7SUFNSCxnQkFBZ0IsQ0FBUztJQUV6Qjs7T0FFRztJQU9ILFdBQVcsQ0FBUztJQUVwQjs7T0FFRztJQU1ILGdCQUFnQixDQUFzQjtJQUV0Qzs7T0FFRztJQU1ILFdBQVcsQ0FBc0I7SUFFakM7O09BRUc7SUFNSCxVQUFVLENBQVM7SUFFbkIsc0RBQXNEO0lBRXREOztPQUVHO0lBT0gsU0FBUyxDQUFTO0lBRWxCOztPQUVHO0lBT0gsU0FBUyxDQUFTO0lBRWxCOztPQUVHO0lBT0gsVUFBVSxDQUFTO0lBRW5COztPQUVHO0lBTUgseUJBQXlCLENBQVc7SUFFcEM7O09BRUc7SUFPSCxRQUFRLENBQVM7SUFFakI7O09BRUc7SUFPSCxXQUFXLENBQVM7SUFFcEIsbURBQW1EO0lBRW5EOztPQUVHO0lBTUgsU0FBUyxDQUFPO0lBRWhCOztPQUVHO0lBS0gsVUFBVSxDQUFPO0lBRWpCOztPQUVHO0lBS0gsVUFBVSxDQUFPO0NBQ2xCLENBQUE7QUFuS1ksb0NBQVk7QUFFdkI7SUFEQyxJQUFBLGdDQUFzQixFQUFDLE1BQU0sQ0FBQzs7d0NBQ3BCO0FBV1g7SUFMQyxJQUFBLGdCQUFNLEVBQUM7UUFDTixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxFQUFFO1FBQ1YsT0FBTyxFQUFFLCtEQUErRDtLQUN6RSxDQUFDO2tEQUNhLGlDQUFZLG9CQUFaLGlDQUFZO21EQUFDO0FBVzVCO0lBTEMsSUFBQSxnQkFBTSxFQUFDO1FBQ04s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QUFDLGtCQUFrQixFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pDLElBQUEsZUFBSyxFQUFDLENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQyxDQUFDO0dBQzFCLFlBQVksQ0FtS3hCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxlbnRpdGllc1xcbG9nLWF1ZGl0b3JpYS5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRW50aXR5LFxuICBDb2x1bW4sXG4gIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sXG4gIENyZWF0ZURhdGVDb2x1bW4sXG4gIEluZGV4LFxuICBVcGRhdGVEYXRlQ29sdW1uLFxufSBmcm9tICd0eXBlb3JtJztcbmltcG9ydCB7IFRpcG9PcGVyYWNhbyB9IGZyb20gJy4uL2VudW1zL3RpcG8tb3BlcmFjYW8uZW51bSc7XG5cbi8qKlxuICogRW50aWRhZGUgTG9nQXVkaXRvcmlhIC0gVmVyc8OjbyBNVlBcbiAqXG4gKiBSZXNwb25zw6F2ZWwgcG9yIGFybWF6ZW5hciBvcyBsb2dzIGRlIGF1ZGl0b3JpYSBkbyBzaXN0ZW1hLFxuICogcmVnaXN0cmFuZG8gb3BlcmHDp8O1ZXMgY3LDrXRpY2FzIHJlYWxpemFkYXMgcGVsb3MgdXN1w6FyaW9zLlxuICogSW1wbGVtZW50YcOnw6NvIHNpbXBsaWZpY2FkYSBwYXJhIG8gTVZQIGNvbSBmb2NvIGVtIHJhc3RyZWFiaWxpZGFkZSBiw6FzaWNhLlxuICovXG5ARW50aXR5KCdsb2dzX2F1ZGl0b3JpYScpXG5ASW5kZXgoWyd1c3VhcmlvX2lkJywgJ2NyZWF0ZWRfYXQnXSlcbkBJbmRleChbJ2VudGlkYWRlX2FmZXRhZGEnLCAnY3JlYXRlZF9hdCddKVxuQEluZGV4KFsndGlwb19vcGVyYWNhbycsICdjcmVhdGVkX2F0J10pXG5leHBvcnQgY2xhc3MgTG9nQXVkaXRvcmlhIHtcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oJ3V1aWQnKVxuICBpZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaXBvIGRlIG9wZXJhw6fDo28gcmVhbGl6YWRhXG4gICAqIFV0aWxpemEgbyBlbnVtIFRpcG9PcGVyYWNhbyBwYXJhIHBhZHJvbml6YcOnw6NvXG4gICAqL1xuICBAQ29sdW1uKHtcbiAgICB0eXBlOiAndmFyY2hhcicsXG4gICAgbGVuZ3RoOiAyMCxcbiAgICBjb21tZW50OiAnVGlwbyBkZSBvcGVyYcOnw6NvIChDUkVBVEUsIFJFQUQsIFVQREFURSwgREVMRVRFLCBBQ0NFU1MsIGV0Yy4pJyxcbiAgfSlcbiAgdGlwb19vcGVyYWNhbzogVGlwb09wZXJhY2FvO1xuXG4gIC8qKlxuICAgKiBFbnRpZGFkZSBhZmV0YWRhIHBlbGEgb3BlcmHDp8Ojb1xuICAgKiBFeDogVXN1YXJpbywgQ2lkYWRhbywgU29saWNpdGFjYW8sIGV0Yy5cbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICd2YXJjaGFyJyxcbiAgICBsZW5ndGg6IDEwMCxcbiAgICBjb21tZW50OiAnTm9tZSBkYSBlbnRpZGFkZSBhZmV0YWRhIHBlbGEgb3BlcmHDp8OjbycsXG4gIH0pXG4gIGVudGlkYWRlX2FmZXRhZGE6IHN0cmluZztcblxuICAvKipcbiAgICogSUQgZGEgZW50aWRhZGUgYWZldGFkYVxuICAgKi9cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ3ZhcmNoYXInLFxuICAgIGxlbmd0aDogMzYsXG4gICAgbnVsbGFibGU6IHRydWUsXG4gICAgY29tbWVudDogJ0lEIGRhIGVudGlkYWRlIGFmZXRhZGEgcGVsYSBvcGVyYcOnw6NvJyxcbiAgfSlcbiAgZW50aWRhZGVfaWQ6IHN0cmluZztcblxuICAvKipcbiAgICogRGFkb3MgYW50ZXJpb3JlcyDDoCBvcGVyYcOnw6NvXG4gICAqL1xuICBAQ29sdW1uKHtcbiAgICB0eXBlOiAnanNvbmInLFxuICAgIG51bGxhYmxlOiB0cnVlLFxuICAgIGNvbW1lbnQ6ICdEYWRvcyBhbnRlcmlvcmVzIMOgIG9wZXJhw6fDo28sIGFybWF6ZW5hZG9zIGVtIGZvcm1hdG8gSlNPTicsXG4gIH0pXG4gIGRhZG9zX2FudGVyaW9yZXM6IFJlY29yZDxzdHJpbmcsIGFueT47XG5cbiAgLyoqXG4gICAqIE5vdm9zIGRhZG9zIGFww7NzIGEgb3BlcmHDp8Ojb1xuICAgKi9cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ2pzb25iJyxcbiAgICBudWxsYWJsZTogdHJ1ZSxcbiAgICBjb21tZW50OiAnTm92b3MgZGFkb3MgYXDDs3MgYSBvcGVyYcOnw6NvLCBhcm1hemVuYWRvcyBlbSBmb3JtYXRvIEpTT04nLFxuICB9KVxuICBkYWRvc19ub3ZvczogUmVjb3JkPHN0cmluZywgYW55PjtcblxuICAvKipcbiAgICogSUQgZG8gdXN1w6FyaW8gcXVlIHJlYWxpem91IGEgb3BlcmHDp8Ojb1xuICAgKi9cbiAgQENvbHVtbih7XG4gICAgbmFtZTogJ3VzdWFyaW9faWQnLFxuICAgIG51bGxhYmxlOiB0cnVlLFxuICAgIGNvbW1lbnQ6ICdJRCBkbyB1c3XDoXJpbyBxdWUgcmVhbGl6b3UgYSBvcGVyYcOnw6NvJyxcbiAgfSlcbiAgdXN1YXJpb19pZDogc3RyaW5nO1xuXG4gIC8vIFJlbGHDp8OjbyBjb20gdXN1w6FyaW8gcmVtb3ZpZGEgcGFyYSBzaW1wbGlmaWNhciBvIE1WUFxuXG4gIC8qKlxuICAgKiBEZXNjcmnDp8OjbyBkYSBvcGVyYcOnw6NvIHJlYWxpemFkYVxuICAgKi9cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ3ZhcmNoYXInLFxuICAgIGxlbmd0aDogNTAwLFxuICAgIG51bGxhYmxlOiB0cnVlLFxuICAgIGNvbW1lbnQ6ICdEZXNjcmnDp8OjbyB0ZXh0dWFsIGRhIG9wZXJhw6fDo28gcmVhbGl6YWRhJyxcbiAgfSlcbiAgZGVzY3JpY2FvOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEVuZGVyZcOnbyBJUCBkZSBvcmlnZW0gZGEgcmVxdWlzacOnw6NvXG4gICAqL1xuICBAQ29sdW1uKHtcbiAgICB0eXBlOiAndmFyY2hhcicsXG4gICAgbGVuZ3RoOiA0NSwgLy8gU3Vwb3J0ZSBwYXJhIElQdjQgZSBJUHY2XG4gICAgbnVsbGFibGU6IHRydWUsXG4gICAgY29tbWVudDogJ0VuZGVyZcOnbyBJUCBkZSBvcmlnZW0gcXVlIHJlYWxpem91IGEgcmVxdWlzacOnw6NvJyxcbiAgfSlcbiAgaXBfb3JpZ2VtOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFVzZXItQWdlbnQgZG8gbmF2ZWdhZG9yIG91IGNsaWVudGVcbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICd2YXJjaGFyJyxcbiAgICBsZW5ndGg6IDUwMCxcbiAgICBudWxsYWJsZTogdHJ1ZSxcbiAgICBjb21tZW50OiAnVXNlci1BZ2VudCBkbyBuYXZlZ2Fkb3Igb3UgY2xpZW50ZSBxdWUgcmVhbGl6b3UgYSByZXF1aXNpw6fDo28nLFxuICB9KVxuICB1c2VyX2FnZW50OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIERhZG9zIHNlbnPDrXZlaXMgcXVlIGZvcmFtIGFjZXNzYWRvcyAoTEdQRClcbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICdqc29uYicsXG4gICAgbnVsbGFibGU6IHRydWUsXG4gICAgY29tbWVudDogJ0FycmF5IGRlIGNhbXBvcyBzZW5zw612ZWlzIHF1ZSBmb3JhbSBhY2Vzc2Fkb3MsIHBhcmEgY29tcGxpYW5jZSBjb20gTEdQRCcsXG4gIH0pXG4gIGRhZG9zX3NlbnNpdmVpc19hY2Vzc2Fkb3M6IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBFbmRwb2ludCBhY2Vzc2Fkb1xuICAgKi9cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ3ZhcmNoYXInLFxuICAgIGxlbmd0aDogMjU1LFxuICAgIG51bGxhYmxlOiB0cnVlLFxuICAgIGNvbW1lbnQ6ICdFbmRwb2ludCBhY2Vzc2FkbycsXG4gIH0pXG4gIGVuZHBvaW50OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIE3DqXRvZG8gSFRUUCB1dGlsaXphZG9cbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICd2YXJjaGFyJyxcbiAgICBsZW5ndGg6IDEwLFxuICAgIG51bGxhYmxlOiB0cnVlLFxuICAgIGNvbW1lbnQ6ICdNw6l0b2RvIEhUVFAgdXRpbGl6YWRvJyxcbiAgfSlcbiAgbWV0b2RvX2h0dHA6IHN0cmluZztcblxuICAvLyBDYW1wb3MgbsOjbyBlc3NlbmNpYWlzIHBhcmEgbyBNVlAgZm9yYW0gcmVtb3ZpZG9zXG5cbiAgLyoqXG4gICAqIERhdGEgZSBob3JhIGRhIG9wZXJhw6fDo29cbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICd0aW1lc3RhbXB0eicsXG4gICAgbnVsbGFibGU6IHRydWUsXG4gICAgY29tbWVudDogJ0RhdGEgZSBob3JhIGVtIHF1ZSBhIG9wZXJhw6fDo28gZm9pIHJlYWxpemFkYScsXG4gIH0pXG4gIGRhdGFfaG9yYTogRGF0ZTtcblxuICAvKipcbiAgICogRGF0YSBlIGhvcmEgZGUgY3JpYcOnw6NvIGRvIHJlZ2lzdHJvXG4gICAqL1xuICBAQ3JlYXRlRGF0ZUNvbHVtbih7XG4gICAgdHlwZTogJ3RpbWVzdGFtcHR6JyxcbiAgICBjb21tZW50OiAnRGF0YSBlIGhvcmEgZGUgY3JpYcOnw6NvIGRvIHJlZ2lzdHJvJyxcbiAgfSlcbiAgY3JlYXRlZF9hdDogRGF0ZTtcblxuICAvKipcbiAgICogRGF0YSBlIGhvcmEgZGEgw7psdGltYSBhdHVhbGl6YcOnw6NvIGRvIHJlZ2lzdHJvXG4gICAqL1xuICBAVXBkYXRlRGF0ZUNvbHVtbih7XG4gICAgdHlwZTogJ3RpbWVzdGFtcHR6JyxcbiAgICBjb21tZW50OiAnRGF0YSBlIGhvcmEgZGEgw7psdGltYSBhdHVhbGl6YcOnw6NvIGRvIHJlZ2lzdHJvJyxcbiAgfSlcbiAgdXBkYXRlZF9hdDogRGF0ZTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==