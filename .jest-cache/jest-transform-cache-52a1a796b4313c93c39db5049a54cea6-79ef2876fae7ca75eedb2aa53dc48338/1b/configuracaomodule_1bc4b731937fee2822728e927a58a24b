715520e0f7e5cfaf3288a7f28a3ce3bc
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfiguracaoModule = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const auth_module_1 = require("../../auth/auth.module");
const services_1 = require("./services");
const repositories_1 = require("./repositories");
const entities_1 = require("../../entities");
const controllers_1 = require("./controllers");
/**
 * Módulo de Configuração do PGBen
 *
 * Responsável por centralizar a gestão de parâmetros operacionais,
 * templates, workflows e integrações do sistema.
 *
 * Este módulo permite personalizar o comportamento do sistema sem
 * necessidade de alterações no código-fonte, fornecendo uma camada
 * de abstração para configurações dinâmicas.
 */
let ConfiguracaoModule = class ConfiguracaoModule {
};
exports.ConfiguracaoModule = ConfiguracaoModule;
exports.ConfiguracaoModule = ConfiguracaoModule = __decorate([
    (0, common_1.Module)({
        imports: [
            typeorm_1.TypeOrmModule.forFeature([
                entities_1.Parametro,
                entities_1.Template,
                entities_1.WorkflowBeneficio,
                entities_1.ConfiguracaoIntegracao,
            ]),
            // Importa o módulo compartilhado de autenticação
            auth_module_1.AuthModule,
        ],
        controllers: [
            controllers_1.ParametroController,
            controllers_1.TemplateController,
            controllers_1.WorkflowController,
            controllers_1.IntegracaoController,
            controllers_1.LimitesController,
        ],
        providers: [
            // Repositórios
            repositories_1.ParametroRepository,
            repositories_1.TemplateRepository,
            repositories_1.WorkflowBeneficioRepository,
            repositories_1.ConfiguracaoIntegracaoRepository,
            // Serviços
            services_1.ParametroService,
            services_1.TemplateService,
            services_1.WorkflowService,
            services_1.IntegracaoService,
            services_1.LimitesService,
        ],
        exports: [
            // Exportamos os serviços para uso em outros módulos
            services_1.ParametroService,
            services_1.TemplateService,
            services_1.WorkflowService,
            services_1.IntegracaoService,
            services_1.LimitesService,
        ],
    })
], ConfiguracaoModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNvbmZpZ3VyYWNhb1xcY29uZmlndXJhY2FvLm1vZHVsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwyQ0FBd0M7QUFDeEMsNkNBQWdEO0FBQ2hELHdEQUFvRDtBQUNwRCx5Q0FNb0I7QUFDcEIsaURBS3dCO0FBQ3hCLDZDQUt3QjtBQUN4QiwrQ0FNdUI7QUFFdkI7Ozs7Ozs7OztHQVNHO0FBMENJLElBQU0sa0JBQWtCLEdBQXhCLE1BQU0sa0JBQWtCO0NBZ0I5QixDQUFBO0FBaEJZLGdEQUFrQjs2QkFBbEIsa0JBQWtCO0lBekM5QixJQUFBLGVBQU0sRUFBQztRQUNOLE9BQU8sRUFBRTtZQUNQLHVCQUFhLENBQUMsVUFBVSxDQUFDO2dCQUN2QixvQkFBUztnQkFDVCxtQkFBUTtnQkFDUiw0QkFBaUI7Z0JBQ2pCLGlDQUFzQjthQUN2QixDQUFDO1lBQ0YsaURBQWlEO1lBQ2pELHdCQUFVO1NBQ1g7UUFDRCxXQUFXLEVBQUU7WUFDWCxpQ0FBbUI7WUFDbkIsZ0NBQWtCO1lBQ2xCLGdDQUFrQjtZQUNsQixrQ0FBb0I7WUFDcEIsK0JBQWlCO1NBQ2xCO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsZUFBZTtZQUNmLGtDQUFtQjtZQUNuQixpQ0FBa0I7WUFDbEIsMENBQTJCO1lBQzNCLCtDQUFnQztZQUVoQyxXQUFXO1lBQ1gsMkJBQWdCO1lBQ2hCLDBCQUFlO1lBQ2YsMEJBQWU7WUFDZiw0QkFBaUI7WUFDakIseUJBQWM7U0FDZjtRQUNELE9BQU8sRUFBRTtZQUNQLG9EQUFvRDtZQUNwRCwyQkFBZ0I7WUFDaEIsMEJBQWU7WUFDZiwwQkFBZTtZQUNmLDRCQUFpQjtZQUNqQix5QkFBYztTQUNmO0tBQ0YsQ0FBQztHQUNXLGtCQUFrQixDQWdCOUIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNvbmZpZ3VyYWNhb1xcY29uZmlndXJhY2FvLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBUeXBlT3JtTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcbmltcG9ydCB7IEF1dGhNb2R1bGUgfSBmcm9tICcuLi8uLi9hdXRoL2F1dGgubW9kdWxlJztcbmltcG9ydCB7XG4gIFBhcmFtZXRyb1NlcnZpY2UsXG4gIFRlbXBsYXRlU2VydmljZSxcbiAgV29ya2Zsb3dTZXJ2aWNlLFxuICBJbnRlZ3JhY2FvU2VydmljZSxcbiAgTGltaXRlc1NlcnZpY2UsXG59IGZyb20gJy4vc2VydmljZXMnO1xuaW1wb3J0IHtcbiAgUGFyYW1ldHJvUmVwb3NpdG9yeSxcbiAgVGVtcGxhdGVSZXBvc2l0b3J5LFxuICBXb3JrZmxvd0JlbmVmaWNpb1JlcG9zaXRvcnksXG4gIENvbmZpZ3VyYWNhb0ludGVncmFjYW9SZXBvc2l0b3J5LFxufSBmcm9tICcuL3JlcG9zaXRvcmllcyc7XG5pbXBvcnQge1xuICBQYXJhbWV0cm8sXG4gIFRlbXBsYXRlLFxuICBXb3JrZmxvd0JlbmVmaWNpbyxcbiAgQ29uZmlndXJhY2FvSW50ZWdyYWNhbyxcbn0gZnJvbSAnLi4vLi4vZW50aXRpZXMnO1xuaW1wb3J0IHtcbiAgUGFyYW1ldHJvQ29udHJvbGxlcixcbiAgVGVtcGxhdGVDb250cm9sbGVyLFxuICBXb3JrZmxvd0NvbnRyb2xsZXIsXG4gIEludGVncmFjYW9Db250cm9sbGVyLFxuICBMaW1pdGVzQ29udHJvbGxlcixcbn0gZnJvbSAnLi9jb250cm9sbGVycyc7XG5cbi8qKlxuICogTcOzZHVsbyBkZSBDb25maWd1cmHDp8OjbyBkbyBQR0JlblxuICpcbiAqIFJlc3BvbnPDoXZlbCBwb3IgY2VudHJhbGl6YXIgYSBnZXN0w6NvIGRlIHBhcsOibWV0cm9zIG9wZXJhY2lvbmFpcyxcbiAqIHRlbXBsYXRlcywgd29ya2Zsb3dzIGUgaW50ZWdyYcOnw7VlcyBkbyBzaXN0ZW1hLlxuICpcbiAqIEVzdGUgbcOzZHVsbyBwZXJtaXRlIHBlcnNvbmFsaXphciBvIGNvbXBvcnRhbWVudG8gZG8gc2lzdGVtYSBzZW1cbiAqIG5lY2Vzc2lkYWRlIGRlIGFsdGVyYcOnw7VlcyBubyBjw7NkaWdvLWZvbnRlLCBmb3JuZWNlbmRvIHVtYSBjYW1hZGFcbiAqIGRlIGFic3RyYcOnw6NvIHBhcmEgY29uZmlndXJhw6fDtWVzIGRpbsOibWljYXMuXG4gKi9cbkBNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgVHlwZU9ybU1vZHVsZS5mb3JGZWF0dXJlKFtcbiAgICAgIFBhcmFtZXRybyxcbiAgICAgIFRlbXBsYXRlLFxuICAgICAgV29ya2Zsb3dCZW5lZmljaW8sXG4gICAgICBDb25maWd1cmFjYW9JbnRlZ3JhY2FvLFxuICAgIF0pLFxuICAgIC8vIEltcG9ydGEgbyBtw7NkdWxvIGNvbXBhcnRpbGhhZG8gZGUgYXV0ZW50aWNhw6fDo29cbiAgICBBdXRoTW9kdWxlLFxuICBdLFxuICBjb250cm9sbGVyczogW1xuICAgIFBhcmFtZXRyb0NvbnRyb2xsZXIsXG4gICAgVGVtcGxhdGVDb250cm9sbGVyLFxuICAgIFdvcmtmbG93Q29udHJvbGxlcixcbiAgICBJbnRlZ3JhY2FvQ29udHJvbGxlcixcbiAgICBMaW1pdGVzQ29udHJvbGxlcixcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgLy8gUmVwb3NpdMOzcmlvc1xuICAgIFBhcmFtZXRyb1JlcG9zaXRvcnksXG4gICAgVGVtcGxhdGVSZXBvc2l0b3J5LFxuICAgIFdvcmtmbG93QmVuZWZpY2lvUmVwb3NpdG9yeSxcbiAgICBDb25maWd1cmFjYW9JbnRlZ3JhY2FvUmVwb3NpdG9yeSxcblxuICAgIC8vIFNlcnZpw6dvc1xuICAgIFBhcmFtZXRyb1NlcnZpY2UsXG4gICAgVGVtcGxhdGVTZXJ2aWNlLFxuICAgIFdvcmtmbG93U2VydmljZSxcbiAgICBJbnRlZ3JhY2FvU2VydmljZSxcbiAgICBMaW1pdGVzU2VydmljZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIC8vIEV4cG9ydGFtb3Mgb3Mgc2VydmnDp29zIHBhcmEgdXNvIGVtIG91dHJvcyBtw7NkdWxvc1xuICAgIFBhcmFtZXRyb1NlcnZpY2UsXG4gICAgVGVtcGxhdGVTZXJ2aWNlLFxuICAgIFdvcmtmbG93U2VydmljZSxcbiAgICBJbnRlZ3JhY2FvU2VydmljZSxcbiAgICBMaW1pdGVzU2VydmljZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhY2FvTW9kdWxlIHtcbiAgLyoqXG4gICAqIERvY3VtZW50YcOnw6NvIGRvIG3Ds2R1bG8gZGUgY29uZmlndXJhw6fDo29cbiAgICpcbiAgICogRXN0ZSBtw7NkdWxvIGZvcm5lY2U6XG4gICAqXG4gICAqIDEuIEdlcmVuY2lhbWVudG8gZGUgcGFyw6JtZXRyb3MgZG8gc2lzdGVtYSBjb20gdGlwYWdlbSBkaW7Dom1pY2FcbiAgICogMi4gU2lzdGVtYSBkZSB0ZW1wbGF0ZXMgcGFyYSBlbWFpbHMsIG5vdGlmaWNhw6fDtWVzIGUgZG9jdW1lbnRvc1xuICAgKiAzLiBXb3JrZmxvd3MgcGVyc29uYWxpesOhdmVpcyBwYXJhIHRpcG9zIGRlIGJlbmVmw61jaW9zXG4gICAqIDQuIENvbmZpZ3VyYcOnw7VlcyBkZSBpbnRlZ3Jhw6fDtWVzIGV4dGVybmFzXG4gICAqIDUuIExpbWl0ZXMgb3BlcmFjaW9uYWlzIGNvbmZpZ3Vyw6F2ZWlzXG4gICAqXG4gICAqIMOJIGltcGxlbWVudGFkbyBzZWd1aW5kbyBvcyBwcmluY8OtcGlvcyBTT0xJRCBlIENsZWFuIEFyY2hpdGVjdHVyZSxcbiAgICogY29tIHNlcnZpw6dvcyBlc3BlY2lhbGl6YWRvcyBwYXJhIGNhZGEgZG9tw61uaW8gZSByZXBvc2l0w7NyaW9zXG4gICAqIHBhcmEgYWJzdHJhw6fDo28gZGEgY2FtYWRhIGRlIHBlcnNpc3TDqm5jaWEuXG4gICAqL1xufVxuIl0sInZlcnNpb24iOjN9