{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\shared.module.ts","mappings":";;;;;;;;;AAAA,2CAAgD;AAChD,2CAA6D;AAI7D,uCAA2D;AAC3D,6CAAgD;AAEhD,6DAA+D;AAE/D,eAAe;AACf,4EAAwE;AAExE,8FAGqD;AAErD,8BAA8B;AAC9B,2EAAsE;AAEtE,gBAAgB;AAChB,sEAAkE;AAElE,WAAW;AACX,0EAAsE;AACtE,4DAAwD;AACxD,4EAAuE;AACvE,0EAAqE;AAErE,aAAa;AACb,gEAGqC;AACrC,8DAAmD;AA4D5C,IAAM,YAAY,GAAlB,MAAM,YAAY;CAAG,CAAA;AAAf,oCAAY;uBAAZ,YAAY;IA1DxB,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,OAAO,CAAC,oCAAmB,CAAC;YACzC,uBAAa,CAAC,YAAY,CAAC;gBACzB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,MAAM,EAAE,CAAC,sBAAa,CAAC;gBACvB,UAAU,EAAE,KAAK,EAAE,aAA4B,EAAE,EAAE,CAAC,CAAC;oBACnD,IAAI,EAAE,UAAU;oBAChB,IAAI,EAAE,aAAa,CAAC,GAAG,CAAS,eAAe,CAAC;oBAChD,IAAI,EAAE,aAAa,CAAC,GAAG,CAAqB,eAAe,CAAC;oBAC5D,QAAQ,EAAE,aAAa,CAAC,GAAG,CAAS,eAAe,CAAC;oBACpD,QAAQ,EAAE,aAAa,CAAC,GAAG,CAAS,eAAe,CAAC;oBACpD,QAAQ,EAAE,aAAa,CAAC,GAAG,CAAS,eAAe,CAAC;oBACpD,QAAQ,EAAE,CAAC,SAAS,GAAG,mCAAmC,CAAC;oBAC3D,8CAA8C;oBAC9C,6FAA6F;oBAC7F,QAAQ,EAAE,GAAG;oBACb,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,aAAa,CAAC,GAAG,CAAS,KAAK,CAAC,KAAK,aAAa;iBAC1D,CAAC;aACH,CAAC;YACF,8BAA8B;YAC9B,2CAAmB;YACnB,gBAAgB;YAChB,oCAAgB;SACjB;QACD,OAAO,EAAE;YACP,2CAAmB;YACnB,qBAAY;YACZ,oCAAgB;YAChB,0CAAmB;YACnB,4BAAY;YACZ,2CAAmB;YACnB,yCAAkB;YAClB,aAAa;YACb,qBAAK;YACL,sCAAqB;YACrB,qCAAoB;YACpB,sDAAuB;SACxB;QACD,SAAS,EAAE;YACT,0BAA0B;YAC1B,2CAAmB;YACnB,0CAAmB;YACnB,4BAAY;YACZ,yCAAkB;YAElB,aAAa;YACb,qBAAK;YACL,sCAAqB;YACrB,qCAAoB;YACpB,sDAAuB;YAEvB,wCAAwC;YACxC,EAAE,OAAO,EAAE,sBAAe,EAAE,QAAQ,EAAE,wCAAkB,EAAE;YAC1D,EAAE,OAAO,EAAE,sBAAe,EAAE,QAAQ,EAAE,yDAA0B,EAAE;SACnE;KACF,CAAC;GACW,YAAY,CAAG","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\shared.module.ts"],"sourcesContent":["import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { configModuleOptions } from './configs/module-options';\n\n// Interceptors\nimport { LoggingInterceptor } from './interceptors/logging.interceptor';\nimport { ResponseInterceptor } from './interceptors/response.interceptor';\nimport {\n  ValidationErrorInterceptor,\n  ValidationMessageHelper,\n} from './interceptors/validation-error.interceptor';\n\n// Módulo unificado de logging\nimport { UnifiedLoggerModule } from './logging/unified-logger.module';\n\n// Monitoramento\nimport { MonitoringModule } from './monitoring/monitoring.module';\n\n// Services\nimport { CriptografiaService } from './services/criptografia.service';\nimport { MinioService } from './services/minio.service';\nimport { ChaveMonitorService } from './services/chave-monitor.service';\nimport { HealthCheckService } from './services/health-check.service';\n\n// Validators\nimport {\n  IsEnumValueConstraint,\n  EnumValidationHelper,\n} from './validators/enum-validator';\nimport { IsCPF } from './validators/cpf.validator';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(configModuleOptions),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get<string>('database.host'),\n        port: configService.get<number | undefined>('database.port'),\n        database: configService.get<string>('database.name'),\n        username: configService.get<string>('database.user'),\n        password: configService.get<string>('database.pass'),\n        entities: [__dirname + '/../**/entities/*.entity{.ts,.js}'],\n        // Timezone configured on the Postgres server.\n        // This is used to typecast server date/time values to JavaScript Date object and vice versa.\n        timezone: 'Z',\n        synchronize: false,\n        debug: configService.get<string>('env') === 'development',\n      }),\n    }),\n    // Módulo unificado de logging\n    UnifiedLoggerModule,\n    // Monitoramento\n    MonitoringModule,\n  ],\n  exports: [\n    UnifiedLoggerModule,\n    ConfigModule,\n    MonitoringModule,\n    CriptografiaService,\n    MinioService,\n    ChaveMonitorService,\n    HealthCheckService,\n    // Validators\n    IsCPF,\n    IsEnumValueConstraint,\n    EnumValidationHelper,\n    ValidationMessageHelper,\n  ],\n  providers: [\n    // Serviços compartilhados\n    ChaveMonitorService,\n    CriptografiaService,\n    MinioService,\n    HealthCheckService,\n\n    // Validators\n    IsCPF,\n    IsEnumValueConstraint,\n    EnumValidationHelper,\n    ValidationMessageHelper,\n\n    // Interceptores para logging e métricas\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n    { provide: APP_INTERCEPTOR, useClass: ValidationErrorInterceptor },\n  ],\n})\nexport class SharedModule {}\n"],"version":3}