81c7126b1e43fd0b3e1ad829398a2256
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerificacaoRenovacoesPendentesResponseDto = void 0;
const swagger_1 = require("@nestjs/swagger");
/**
 * DTO para resposta de verificação de renovações pendentes
 *
 * Este DTO é utilizado para retornar o resultado da verificação e processamento
 * manual de renovações pendentes, garantindo a padronização das respostas da API.
 */
class VerificacaoRenovacoesPendentesResponseDto {
    renovacoes_processadas;
}
exports.VerificacaoRenovacoesPendentesResponseDto = VerificacaoRenovacoesPendentesResponseDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Número de renovações processadas',
        example: 5,
    }),
    __metadata("design:type", Number)
], VerificacaoRenovacoesPendentesResponseDto.prototype, "renovacoes_processadas", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGJlbmVmaWNpb1xcZHRvXFx2ZXJpZmljYWNhby1yZW5vdmFjb2VzLXBlbmRlbnRlcy1yZXNwb25zZS5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQThDO0FBRTlDOzs7OztHQUtHO0FBQ0gsTUFBYSx5Q0FBeUM7SUFLcEQsc0JBQXNCLENBQVM7Q0FDaEM7QUFORCw4RkFNQztBQURDO0lBSkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLGtDQUFrQztRQUMvQyxPQUFPLEVBQUUsQ0FBQztLQUNYLENBQUM7O3lGQUM2QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcbW9kdWxlc1xcYmVuZWZpY2lvXFxkdG9cXHZlcmlmaWNhY2FvLXJlbm92YWNvZXMtcGVuZGVudGVzLXJlc3BvbnNlLmR0by50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQcm9wZXJ0eSB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XG5cbi8qKlxuICogRFRPIHBhcmEgcmVzcG9zdGEgZGUgdmVyaWZpY2HDp8OjbyBkZSByZW5vdmHDp8O1ZXMgcGVuZGVudGVzXG4gKlxuICogRXN0ZSBEVE8gw6kgdXRpbGl6YWRvIHBhcmEgcmV0b3JuYXIgbyByZXN1bHRhZG8gZGEgdmVyaWZpY2HDp8OjbyBlIHByb2Nlc3NhbWVudG9cbiAqIG1hbnVhbCBkZSByZW5vdmHDp8O1ZXMgcGVuZGVudGVzLCBnYXJhbnRpbmRvIGEgcGFkcm9uaXphw6fDo28gZGFzIHJlc3Bvc3RhcyBkYSBBUEkuXG4gKi9cbmV4cG9ydCBjbGFzcyBWZXJpZmljYWNhb1Jlbm92YWNvZXNQZW5kZW50ZXNSZXNwb25zZUR0byB7XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdOw7ptZXJvIGRlIHJlbm92YcOnw7VlcyBwcm9jZXNzYWRhcycsXG4gICAgZXhhbXBsZTogNSxcbiAgfSlcbiAgcmVub3ZhY29lc19wcm9jZXNzYWRhczogbnVtYmVyO1xufVxuIl0sInZlcnNpb24iOjN9