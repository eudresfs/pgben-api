{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\metrica-definicao.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\metrica-definicao.entity.ts"],"sourcesContent":["import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, OneToMany, Index } from 'typeorm';\nimport { MetricaSnapshot } from './metrica-snapshot.entity';\nimport { MetricaConfiguracao } from './metrica-configuracao.entity';\n\n/**\n * Tipos de métricas suportados pelo sistema\n */\nexport enum TipoMetrica {\n  /** Contagem simples de ocorrências */\n  CONTAGEM = 'contagem',\n  \n  /** Soma de valores */\n  SOMA = 'soma',\n  \n  /** Média de valores */\n  MEDIA = 'media',\n  \n  /** Valor mínimo */\n  MINIMO = 'minimo',\n  \n  /** Valor máximo */\n  MAXIMO = 'maximo',\n  \n  /** Métrica calculada a partir de outras métricas usando fórmula personalizada */\n  COMPOSTA = 'composta',\n  \n  /** Percentil (requer parâmetro adicional) */\n  PERCENTIL = 'percentil',\n  \n  /** Contagem de valores distintos */\n  CARDINALIDADE = 'cardinalidade',\n  \n  /** Taxa de variação entre períodos */\n  TAXA_VARIACAO = 'taxa_variacao',\n}\n\n/**\n * Categorias de métricas para organização\n */\nexport enum CategoriaMetrica {\n  FINANCEIRO = 'financeiro',\n  OPERACIONAL = 'operacional',\n  DESEMPENHO = 'desempenho',\n  QUALIDADE = 'qualidade',\n  USUARIO = 'usuario',\n  BENEFICIO = 'beneficio',\n  PROCESSAMENTO = 'processamento',\n  SISTEMA = 'sistema',\n}\n\n/**\n * Granularidades temporais suportadas para agregação\n */\nexport enum GranularidadeTemporal {\n  MINUTO = 'minuto',\n  HORA = 'hora',\n  DIA = 'dia',\n  SEMANA = 'semana',\n  MES = 'mes',\n  TRIMESTRE = 'trimestre',\n  ANO = 'ano',\n}\n\n/**\n * Definição de uma métrica no sistema\n * \n * Esta entidade armazena a definição de cada métrica, incluindo sua fórmula\n * de cálculo, tipo, categoria, e configurações de coleta e armazenamento.\n */\n@Entity('metrica_definicao')\n@Index(['codigo'], { unique: true })\nexport class MetricaDefinicao {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Código único da métrica (snake_case)\n   * Exemplo: 'tempo_medio_processamento_beneficio'\n   */\n  @Column({ length: 100, unique: true })\n  codigo: string;\n\n  /**\n   * Nome de exibição da métrica\n   * Exemplo: 'Tempo Médio de Processamento de Benefício'\n   */\n  @Column({ length: 100 })\n  nome: string;\n\n  /**\n   * Descrição detalhada da métrica\n   */\n  @Column({ type: 'text' })\n  descricao: string;\n\n  /**\n   * Tipo da métrica (contagem, soma, média, etc.)\n   */\n  @Column({\n    type: 'enum',\n    enum: TipoMetrica,\n    enumName: 'tipo_metrica',\n    default: TipoMetrica.CONTAGEM,\n  })\n  tipo: TipoMetrica;\n\n  /**\n   * Categoria da métrica para organização\n   */\n  @Column({\n    type: 'enum',\n    enum: CategoriaMetrica,\n    enumName: 'categoria_metrica',\n    default: CategoriaMetrica.OPERACIONAL,\n  })\n  categoria: CategoriaMetrica;\n\n  /**\n   * Unidade de medida da métrica\n   * Exemplo: 'segundos', 'reais', 'percentual', 'quantidade'\n   */\n  @Column({ length: 50, nullable: true })\n  unidade: string;\n\n  /**\n   * Prefixo a ser exibido antes do valor\n   * Exemplo: 'R$', '$'\n   */\n  @Column({ length: 10, nullable: true })\n  prefixo: string;\n\n  /**\n   * Sufixo a ser exibido após o valor\n   * Exemplo: '%', 'ms'\n   */\n  @Column({ length: 10, nullable: true })\n  sufixo: string;\n\n  /**\n   * Número de casas decimais a serem exibidas\n   */\n  @Column({ default: 2 })\n  casas_decimais: number;\n\n  /**\n   * Consulta SQL para coletar dados (para métricas baseadas em banco de dados)\n   */\n  @Column({ type: 'text', nullable: true })\n  sql_consulta: string;\n\n  /**\n   * Fórmula para cálculo (para métricas compostas)\n   * Pode referenciar outras métricas usando seus códigos\n   * Exemplo: 'metrica_a / metrica_b * 100'\n   */\n  @Column({ type: 'text', nullable: true })\n  formula_calculo: string;\n\n  /**\n   * Fonte de dados da métrica\n   * Exemplo: 'banco_dados', 'api', 'evento', 'arquivo'\n   */\n  @Column({ length: 50, default: 'banco_dados' })\n  fonte_dados: string;\n\n  /**\n   * Especificação de como agregar os dados em diferentes períodos\n   * Exemplo: 'soma', 'media', 'ultimo', 'primeiro'\n   */\n  @Column({ length: 20, default: 'soma' })\n  agregacao_temporal: string;\n\n  /**\n   * Granularidade mínima de coleta/armazenamento\n   */\n  @Column({\n    type: 'enum',\n    enum: GranularidadeTemporal,\n    enumName: 'granularidade_temporal',\n    default: GranularidadeTemporal.DIA,\n  })\n  granularidade: GranularidadeTemporal;\n\n  /**\n   * Referência a outras métricas utilizadas no cálculo (caso seja composta)\n   * Armazenado como array de códigos de métricas\n   */\n  @Column('simple-array', { nullable: true })\n  metricas_dependentes: string[];\n\n  /**\n   * Flag que indica se a métrica está ativa para coleta\n   */\n  @Column({ default: true })\n  ativa: boolean;\n\n  /**\n   * Parâmetros específicos para o tipo de métrica\n   * Armazenado como JSON\n   * Exemplo para PERCENTIL: { \"percentil\": 95 }\n   */\n  @Column({ type: 'jsonb', nullable: true })\n  parametros_especificos: Record<string, any>;\n\n  /**\n   * Tags para filtrar e categorizar métricas\n   */\n  @Column('simple-array', { nullable: true })\n  tags: string[];\n\n  /**\n   * Versão atual da definição da métrica\n   */\n  @Column({ default: 1 })\n  versao: number;\n\n  /**\n   * Data da última coleta bem-sucedida\n   */\n  @Column({ type: 'timestamp', nullable: true })\n  ultima_coleta: Date;\n\n  /**\n   * Flag que indica se a métrica é calculada em tempo real ou pré-calculada\n   */\n  @Column({ default: false })\n  calculo_tempo_real: boolean;\n\n  /**\n   * Usuário que criou a métrica\n   */\n  @Column({ length: 100, nullable: true })\n  criado_por: string;\n\n  /**\n   * Usuário que atualizou a métrica pela última vez\n   */\n  @Column({ length: 100, nullable: true })\n  atualizado_por: string;\n\n  /**\n   * Data de criação do registro\n   */\n  @CreateDateColumn()\n  created_at: Date;\n\n  /**\n   * Data da última atualização do registro\n   */\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  /**\n   * Relacionamento com snapshots históricos da métrica\n   * \n   * Usando lazy loading para evitar dependências circulares\n   */\n  @OneToMany(() => MetricaSnapshot, (snapshot) => snapshot.definicao, { lazy: true })\n  snapshots: Promise<MetricaSnapshot[]>;\n\n  /**\n   * Relacionamento com configurações de coleta e armazenamento\n   * \n   * Usando lazy loading para evitar dependências circulares\n   */\n  @OneToMany(() => MetricaConfiguracao, (config) => config.metrica, { lazy: true })\n  configuracoes: Promise<MetricaConfiguracao[]>;\n}\n"],"version":3}