{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\controllers\\workflow.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\controllers\\workflow.controller.ts"],"sourcesContent":["import { Controller, Get, Put, Delete, Body, Param } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse, ApiParam } from '@nestjs/swagger';\nimport { WorkflowService } from '../services/workflow.service';\nimport { WorkflowUpdateDto } from '../dtos/workflow/workflow-update.dto';\nimport { WorkflowResponseDto } from '../dtos/workflow/workflow-response.dto';\n\n/**\n * Controlador responsável pelas operações de workflows de benefícios\n */\n@ApiTags('Configuração')\n@Controller('configuracao/workflows')\nexport class WorkflowController {\n  constructor(private readonly workflowService: WorkflowService) {}\n\n  /**\n   * Busca todos os workflows de benefícios\n   * @returns Lista de workflows\n   */\n  @Get()\n  @ApiOperation({ summary: 'Buscar todos os workflows de benefícios' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de workflows encontrados',\n    type: [WorkflowResponseDto],\n  })\n  async buscarTodos(): Promise<WorkflowResponseDto[]> {\n    return this.workflowService.buscarTodos();\n  }\n\n  /**\n   * Busca um workflow específico por tipo de benefício\n   * @param tipoBeneficioId ID do tipo de benefício\n   * @returns Workflow encontrado\n   */\n  @Get(':tipoBeneficioId')\n  @ApiOperation({ summary: 'Buscar workflow por tipo de benefício' })\n  @ApiParam({\n    name: 'tipoBeneficioId',\n    description: 'ID do tipo de benefício',\n    example: '550e8400-e29b-41d4-a716-446655440000',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Workflow encontrado',\n    type: WorkflowResponseDto,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow não encontrado',\n  })\n  async buscarPorTipoBeneficio(\n    @Param('tipoBeneficioId') tipoBeneficioId: string,\n  ): Promise<WorkflowResponseDto> {\n    return this.workflowService.buscarPorTipoBeneficio(tipoBeneficioId);\n  }\n\n  /**\n   * Cria ou atualiza um workflow para um tipo de benefício\n   * @param tipoBeneficioId ID do tipo de benefício\n   * @param dto Dados para atualização\n   * @returns Workflow atualizado\n   */\n  @Put(':tipoBeneficioId')\n  @ApiOperation({\n    summary: 'Criar ou atualizar workflow para tipo de benefício',\n  })\n  @ApiParam({\n    name: 'tipoBeneficioId',\n    description: 'ID do tipo de benefício',\n    example: '550e8400-e29b-41d4-a716-446655440000',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Workflow criado/atualizado com sucesso',\n    type: WorkflowResponseDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos ou workflow inconsistente',\n  })\n  async atualizarOuCriar(\n    @Param('tipoBeneficioId') tipoBeneficioId: string,\n    @Body() dto: WorkflowUpdateDto,\n  ): Promise<WorkflowResponseDto> {\n    return this.workflowService.atualizarOuCriar(tipoBeneficioId, dto);\n  }\n\n  /**\n   * Remove um workflow\n   * @param tipoBeneficioId ID do tipo de benefício\n   */\n  @Delete(':tipoBeneficioId')\n  @ApiOperation({ summary: 'Remover workflow' })\n  @ApiParam({\n    name: 'tipoBeneficioId',\n    description: 'ID do tipo de benefício',\n    example: '550e8400-e29b-41d4-a716-446655440000',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'Workflow removido com sucesso',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow não encontrado',\n  })\n  async remover(\n    @Param('tipoBeneficioId') tipoBeneficioId: string,\n  ): Promise<void> {\n    await this.workflowService.remover(tipoBeneficioId);\n  }\n\n  /**\n   * Ativa ou desativa um workflow\n   * @param tipoBeneficioId ID do tipo de benefício\n   * @param ativo Status de ativação\n   * @returns Workflow atualizado\n   */\n  @Put(':tipoBeneficioId/status')\n  @ApiOperation({ summary: 'Ativar ou desativar workflow' })\n  @ApiParam({\n    name: 'tipoBeneficioId',\n    description: 'ID do tipo de benefício',\n    example: '550e8400-e29b-41d4-a716-446655440000',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Status do workflow atualizado com sucesso',\n    type: WorkflowResponseDto,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow não encontrado',\n  })\n  async alterarStatus(\n    @Param('tipoBeneficioId') tipoBeneficioId: string,\n    @Body() { ativo }: { ativo: boolean },\n  ): Promise<WorkflowResponseDto> {\n    return this.workflowService.alterarStatus(tipoBeneficioId, ativo);\n  }\n}\n"],"version":3}