f69ea1f1443248ba9ecdbbe692e84820
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const workflow_service_1 = require("../services/workflow.service");
const workflow_update_dto_1 = require("../dtos/workflow/workflow-update.dto");
const workflow_response_dto_1 = require("../dtos/workflow/workflow-response.dto");
/**
 * Controlador responsável pelas operações de workflows de benefícios
 */
let WorkflowController = class WorkflowController {
    workflowService;
    constructor(workflowService) {
        this.workflowService = workflowService;
    }
    /**
     * Busca todos os workflows de benefícios
     * @returns Lista de workflows
     */
    async buscarTodos() {
        return this.workflowService.buscarTodos();
    }
    /**
     * Busca um workflow específico por tipo de benefício
     * @param tipoBeneficioId ID do tipo de benefício
     * @returns Workflow encontrado
     */
    async buscarPorTipoBeneficio(tipoBeneficioId) {
        return this.workflowService.buscarPorTipoBeneficio(tipoBeneficioId);
    }
    /**
     * Cria ou atualiza um workflow para um tipo de benefício
     * @param tipoBeneficioId ID do tipo de benefício
     * @param dto Dados para atualização
     * @returns Workflow atualizado
     */
    async atualizarOuCriar(tipoBeneficioId, dto) {
        return this.workflowService.atualizarOuCriar(tipoBeneficioId, dto);
    }
    /**
     * Remove um workflow
     * @param tipoBeneficioId ID do tipo de benefício
     */
    async remover(tipoBeneficioId) {
        await this.workflowService.remover(tipoBeneficioId);
    }
    /**
     * Ativa ou desativa um workflow
     * @param tipoBeneficioId ID do tipo de benefício
     * @param ativo Status de ativação
     * @returns Workflow atualizado
     */
    async alterarStatus(tipoBeneficioId, { ativo }) {
        return this.workflowService.alterarStatus(tipoBeneficioId, ativo);
    }
};
exports.WorkflowController = WorkflowController;
__decorate([
    (0, common_1.Get)(),
    (0, swagger_1.ApiOperation)({ summary: 'Buscar todos os workflows de benefícios' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de workflows encontrados',
        type: [workflow_response_dto_1.WorkflowResponseDto],
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", typeof (_b = typeof Promise !== "undefined" && Promise) === "function" ? _b : Object)
], WorkflowController.prototype, "buscarTodos", null);
__decorate([
    (0, common_1.Get)(':tipoBeneficioId'),
    (0, swagger_1.ApiOperation)({ summary: 'Buscar workflow por tipo de benefício' }),
    (0, swagger_1.ApiParam)({
        name: 'tipoBeneficioId',
        description: 'ID do tipo de benefício',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Workflow encontrado',
        type: workflow_response_dto_1.WorkflowResponseDto,
    }),
    (0, swagger_1.ApiResponse)({
        status: 404,
        description: 'Workflow não encontrado',
    }),
    __param(0, (0, common_1.Param)('tipoBeneficioId')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_c = typeof Promise !== "undefined" && Promise) === "function" ? _c : Object)
], WorkflowController.prototype, "buscarPorTipoBeneficio", null);
__decorate([
    (0, common_1.Put)(':tipoBeneficioId'),
    (0, swagger_1.ApiOperation)({
        summary: 'Criar ou atualizar workflow para tipo de benefício',
    }),
    (0, swagger_1.ApiParam)({
        name: 'tipoBeneficioId',
        description: 'ID do tipo de benefício',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Workflow criado/atualizado com sucesso',
        type: workflow_response_dto_1.WorkflowResponseDto,
    }),
    (0, swagger_1.ApiResponse)({
        status: 400,
        description: 'Dados inválidos ou workflow inconsistente',
    }),
    __param(0, (0, common_1.Param)('tipoBeneficioId')),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_d = typeof workflow_update_dto_1.WorkflowUpdateDto !== "undefined" && workflow_update_dto_1.WorkflowUpdateDto) === "function" ? _d : Object]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], WorkflowController.prototype, "atualizarOuCriar", null);
__decorate([
    (0, common_1.Delete)(':tipoBeneficioId'),
    (0, swagger_1.ApiOperation)({ summary: 'Remover workflow' }),
    (0, swagger_1.ApiParam)({
        name: 'tipoBeneficioId',
        description: 'ID do tipo de benefício',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, swagger_1.ApiResponse)({
        status: 204,
        description: 'Workflow removido com sucesso',
    }),
    (0, swagger_1.ApiResponse)({
        status: 404,
        description: 'Workflow não encontrado',
    }),
    __param(0, (0, common_1.Param)('tipoBeneficioId')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_f = typeof Promise !== "undefined" && Promise) === "function" ? _f : Object)
], WorkflowController.prototype, "remover", null);
__decorate([
    (0, common_1.Put)(':tipoBeneficioId/status'),
    (0, swagger_1.ApiOperation)({ summary: 'Ativar ou desativar workflow' }),
    (0, swagger_1.ApiParam)({
        name: 'tipoBeneficioId',
        description: 'ID do tipo de benefício',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Status do workflow atualizado com sucesso',
        type: workflow_response_dto_1.WorkflowResponseDto,
    }),
    (0, swagger_1.ApiResponse)({
        status: 404,
        description: 'Workflow não encontrado',
    }),
    __param(0, (0, common_1.Param)('tipoBeneficioId')),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], WorkflowController.prototype, "alterarStatus", null);
exports.WorkflowController = WorkflowController = __decorate([
    (0, swagger_1.ApiTags)('Configuração'),
    (0, common_1.Controller)('configuracao/workflows'),
    __metadata("design:paramtypes", [typeof (_a = typeof workflow_service_1.WorkflowService !== "undefined" && workflow_service_1.WorkflowService) === "function" ? _a : Object])
], WorkflowController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,