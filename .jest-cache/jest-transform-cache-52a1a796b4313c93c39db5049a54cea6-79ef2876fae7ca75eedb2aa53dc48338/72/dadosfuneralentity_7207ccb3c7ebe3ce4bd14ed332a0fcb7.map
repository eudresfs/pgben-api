{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\dados-funeral.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\dados-funeral.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { IsNotEmpty, IsDateString, IsEnum, IsOptional } from 'class-validator';\nimport { Solicitacao } from './solicitacao.entity';\nimport { TipoUrnaEnum, ParentescoEnum } from '../enums';\n\n/**\n * Entidade para armazenar dados específicos do cidadão para Auxílio Funeral\n *\n * Armazena informações específicas necessárias para a solicitação do benefício\n * de Auxílio Funeral, como dados do falecido, tipo de urna, etc.\n */\n@Entity('dados_funeral')\n@Index(['solicitacao_id'], { unique: true })\nexport class DadosFuneral {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'ID da solicitação é obrigatório' })\n  solicitacao_id: string;\n\n  @ManyToOne(() => Solicitacao, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'solicitacao_id' })\n  solicitacao: Solicitacao;\n\n  @Column()\n  @IsNotEmpty({ message: 'Nome completo do falecido é obrigatório' })\n  nome_completo_falecido: string;\n\n  @Column({ type: 'date' })\n  @IsNotEmpty({ message: 'Data do óbito é obrigatória' })\n  @IsDateString({}, { message: 'Data do óbito deve ser uma data válida' })\n  data_obito: Date;\n\n  @Column()\n  @IsNotEmpty({ message: 'Local do óbito é obrigatório' })\n  local_obito: string;\n\n  @Column({ type: 'date' })\n  @IsNotEmpty({ message: 'Data da autorização é obrigatória' })\n  @IsDateString({}, { message: 'Data da autorização deve ser uma data válida' })\n  data_autorizacao: Date;\n\n  @Column({\n    type: 'enum',\n    enum: ParentescoEnum,\n    enumName: 'grau_parentesco',\n  })\n  @IsNotEmpty({ message: 'Grau de parentesco é obrigatório' })\n  @IsEnum(ParentescoEnum, { message: 'Grau de parentesco inválido' })\n  grau_parentesco_requerente: ParentescoEnum;\n\n  @Column({\n    type: 'enum',\n    enum: TipoUrnaEnum,\n    enumName: 'tipo_urna',\n  })\n  @IsNotEmpty({ message: 'Tipo de urna é obrigatório' })\n  @IsEnum(TipoUrnaEnum, { message: 'Tipo de urna inválido' })\n  tipo_urna_necessaria: TipoUrnaEnum;\n\n  @Column('text', { nullable: true })\n  @IsOptional()\n  observacoes_especiais?: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  numero_certidao_obito?: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  cartorio_emissor?: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se é parente de primeiro grau\n   */\n  isParentePrimeiroGrau(): boolean {\n    const primeiroGrau = [\n      ParentescoEnum.CONJUGE,\n      ParentescoEnum.FILHO,\n      ParentescoEnum.PAI,\n      ParentescoEnum.MAE,\n    ];\n\n    return primeiroGrau.includes(this.grau_parentesco_requerente);\n  }\n\n  /**\n   * Verifica se é parente de segundo grau\n   */\n  isParenteSegundoGrau(): boolean {\n    const segundoGrau = [\n      ParentescoEnum.IRMAO,\n      ParentescoEnum.AVO,\n      ParentescoEnum.NETO,\n    ];\n\n    return segundoGrau.includes(this.grau_parentesco_requerente);\n  }\n\n  /**\n   * Calcula dias entre óbito e solicitação\n   */\n  calcularDiasAposObito(): number {\n    const hoje = new Date();\n    const dataObito = new Date(this.data_obito);\n    const diffTime = Math.abs(hoje.getTime() - dataObito.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se está no prazo para solicitação\n   */\n  estaNoPrazoSolicitacao(prazoMaximoDias: number): boolean {\n    return this.calcularDiasAposObito() <= prazoMaximoDias;\n  }\n\n  /**\n   * Verifica se é caso de urgência (óbito recente)\n   */\n  isCasoUrgencia(): boolean {\n    return this.calcularDiasAposObito() <= 3;\n  }\n\n  /**\n   * Determina prioridade baseada no grau de parentesco\n   */\n  calcularPrioridadeParentesco(): number {\n    if (this.isParentePrimeiroGrau()) return 100;\n    if (this.isParenteSegundoGrau()) return 80;\n    return 60;\n  }\n\n  /**\n   * Verifica se precisa de urna especial\n   */\n  precisaUrnaEspecial(): boolean {\n    return [\n      TipoUrnaEnum.INFANTIL,\n      TipoUrnaEnum.ESPECIAL,\n      TipoUrnaEnum.OBESO,\n    ].includes(this.tipo_urna_necessaria);\n  }\n\n  /**\n   * Valida se os dados estão completos para submissão\n   */\n  validarDadosCompletos(): { valido: boolean; erros: string[] } {\n    const erros: string[] = [];\n\n    if (\n      !this.nome_completo_falecido ||\n      this.nome_completo_falecido.trim().length === 0\n    ) {\n      erros.push('Nome completo do falecido é obrigatório');\n    }\n\n    if (!this.data_obito) {\n      erros.push('Data do óbito é obrigatória');\n    }\n\n    if (!this.local_obito || this.local_obito.trim().length === 0) {\n      erros.push('Local do óbito é obrigatório');\n    }\n\n    if (!this.data_autorizacao) {\n      erros.push('Data da autorização é obrigatória');\n    }\n\n    if (!this.grau_parentesco_requerente) {\n      erros.push('Grau de parentesco do requerente é obrigatório');\n    }\n\n    if (!this.tipo_urna_necessaria) {\n      erros.push('Tipo de urna necessária é obrigatório');\n    }\n\n    // Validação de datas\n    if (this.data_obito && this.data_autorizacao) {\n      const dataObito = new Date(this.data_obito);\n      const dataAutorizacao = new Date(this.data_autorizacao);\n\n      if (dataObito > dataAutorizacao) {\n        erros.push('Data da autorização não pode ser anterior à data do óbito');\n      }\n    }\n\n    return {\n      valido: erros.length === 0,\n      erros,\n    };\n  }\n}\n"],"version":3}