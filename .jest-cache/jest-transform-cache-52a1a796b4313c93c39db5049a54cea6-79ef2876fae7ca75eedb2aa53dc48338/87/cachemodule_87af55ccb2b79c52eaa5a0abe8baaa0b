cb00d62e2e75aee08ec6f86bfab52001
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheModule = void 0;
const common_1 = require("@nestjs/common");
const config_1 = require("@nestjs/config");
const cache_service_1 = require("./cache.service");
const cache_metrics_provider_1 = require("./cache-metrics.provider");
const bull_1 = require("@nestjs/bull");
const monitoring_module_1 = require("../monitoring/monitoring.module");
const redis_config_1 = require("./redis.config");
let CacheModule = class CacheModule {
};
exports.CacheModule = CacheModule;
exports.CacheModule = CacheModule = __decorate([
    (0, common_1.Module)({
        imports: [
            // Registramos a fila de cache com configurações otimizadas
            bull_1.BullModule.registerQueueAsync({
                name: 'cache',
                imports: [config_1.ConfigModule],
                useFactory: (configService) => ({
                    redis: (0, redis_config_1.getRedisConfig)(configService),
                    defaultJobOptions: {
                        attempts: 3,
                        backoff: {
                            type: 'exponential',
                            delay: 1000,
                        },
                        removeOnComplete: true,
                        timeout: 5000, // 5 segundos de timeout para jobs
                    },
                }),
                inject: [config_1.ConfigService],
            }),
            // Importamos o módulo de monitoramento para ter acesso ao serviço de métricas
            monitoring_module_1.MonitoringModule,
        ],
        providers: [cache_service_1.CacheService, cache_metrics_provider_1.CacheMetricsProvider],
        exports: [cache_service_1.CacheService, cache_metrics_provider_1.CacheMetricsProvider],
    })
], CacheModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXHNoYXJlZFxcY2FjaGVcXGNhY2hlLm1vZHVsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwyQ0FBd0M7QUFDeEMsMkNBQTZEO0FBQzdELG1EQUErQztBQUMvQyxxRUFBZ0U7QUFDaEUsdUNBQTBDO0FBQzFDLHVFQUFtRTtBQUNuRSxpREFBZ0Q7QUE0QnpDLElBQU0sV0FBVyxHQUFqQixNQUFNLFdBQVc7Q0FBRyxDQUFBO0FBQWQsa0NBQVc7c0JBQVgsV0FBVztJQTFCdkIsSUFBQSxlQUFNLEVBQUM7UUFDTixPQUFPLEVBQUU7WUFDUCwyREFBMkQ7WUFDM0QsaUJBQVUsQ0FBQyxrQkFBa0IsQ0FBQztnQkFDNUIsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsT0FBTyxFQUFFLENBQUMscUJBQVksQ0FBQztnQkFDdkIsVUFBVSxFQUFFLENBQUMsYUFBNEIsRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDN0MsS0FBSyxFQUFFLElBQUEsNkJBQWMsRUFBQyxhQUFhLENBQUM7b0JBQ3BDLGlCQUFpQixFQUFFO3dCQUNqQixRQUFRLEVBQUUsQ0FBQzt3QkFDWCxPQUFPLEVBQUU7NEJBQ1AsSUFBSSxFQUFFLGFBQWE7NEJBQ25CLEtBQUssRUFBRSxJQUFJO3lCQUNaO3dCQUNELGdCQUFnQixFQUFFLElBQUk7d0JBQ3RCLE9BQU8sRUFBRSxJQUFJLEVBQUUsa0NBQWtDO3FCQUNsRDtpQkFDRixDQUFDO2dCQUNGLE1BQU0sRUFBRSxDQUFDLHNCQUFhLENBQUM7YUFDeEIsQ0FBQztZQUNGLDhFQUE4RTtZQUM5RSxvQ0FBZ0I7U0FDakI7UUFDRCxTQUFTLEVBQUUsQ0FBQyw0QkFBWSxFQUFFLDZDQUFvQixDQUFDO1FBQy9DLE9BQU8sRUFBRSxDQUFDLDRCQUFZLEVBQUUsNkNBQW9CLENBQUM7S0FDOUMsQ0FBQztHQUNXLFdBQVcsQ0FBRyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcc2hhcmVkXFxjYWNoZVxcY2FjaGUubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IENvbmZpZ01vZHVsZSwgQ29uZmlnU2VydmljZSB9IGZyb20gJ0BuZXN0anMvY29uZmlnJztcbmltcG9ydCB7IENhY2hlU2VydmljZSB9IGZyb20gJy4vY2FjaGUuc2VydmljZSc7XG5pbXBvcnQgeyBDYWNoZU1ldHJpY3NQcm92aWRlciB9IGZyb20gJy4vY2FjaGUtbWV0cmljcy5wcm92aWRlcic7XG5pbXBvcnQgeyBCdWxsTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy9idWxsJztcbmltcG9ydCB7IE1vbml0b3JpbmdNb2R1bGUgfSBmcm9tICcuLi9tb25pdG9yaW5nL21vbml0b3JpbmcubW9kdWxlJztcbmltcG9ydCB7IGdldFJlZGlzQ29uZmlnIH0gZnJvbSAnLi9yZWRpcy5jb25maWcnO1xuXG5ATW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIC8vIFJlZ2lzdHJhbW9zIGEgZmlsYSBkZSBjYWNoZSBjb20gY29uZmlndXJhw6fDtWVzIG90aW1pemFkYXNcbiAgICBCdWxsTW9kdWxlLnJlZ2lzdGVyUXVldWVBc3luYyh7XG4gICAgICBuYW1lOiAnY2FjaGUnLFxuICAgICAgaW1wb3J0czogW0NvbmZpZ01vZHVsZV0sXG4gICAgICB1c2VGYWN0b3J5OiAoY29uZmlnU2VydmljZTogQ29uZmlnU2VydmljZSkgPT4gKHtcbiAgICAgICAgcmVkaXM6IGdldFJlZGlzQ29uZmlnKGNvbmZpZ1NlcnZpY2UpLFxuICAgICAgICBkZWZhdWx0Sm9iT3B0aW9uczoge1xuICAgICAgICAgIGF0dGVtcHRzOiAzLFxuICAgICAgICAgIGJhY2tvZmY6IHtcbiAgICAgICAgICAgIHR5cGU6ICdleHBvbmVudGlhbCcsXG4gICAgICAgICAgICBkZWxheTogMTAwMCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJlbW92ZU9uQ29tcGxldGU6IHRydWUsXG4gICAgICAgICAgdGltZW91dDogNTAwMCwgLy8gNSBzZWd1bmRvcyBkZSB0aW1lb3V0IHBhcmEgam9ic1xuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgICBpbmplY3Q6IFtDb25maWdTZXJ2aWNlXSxcbiAgICB9KSxcbiAgICAvLyBJbXBvcnRhbW9zIG8gbcOzZHVsbyBkZSBtb25pdG9yYW1lbnRvIHBhcmEgdGVyIGFjZXNzbyBhbyBzZXJ2acOnbyBkZSBtw6l0cmljYXNcbiAgICBNb25pdG9yaW5nTW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFtDYWNoZVNlcnZpY2UsIENhY2hlTWV0cmljc1Byb3ZpZGVyXSxcbiAgZXhwb3J0czogW0NhY2hlU2VydmljZSwgQ2FjaGVNZXRyaWNzUHJvdmlkZXJdLFxufSlcbmV4cG9ydCBjbGFzcyBDYWNoZU1vZHVsZSB7fVxuIl0sInZlcnNpb24iOjN9