2c55f3afda6cf1d610f0883168b58b99
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AtualizarMetricaConfiguracaoDto = exports.CriarMetricaConfiguracaoDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const entities_1 = require("../../../entities");
/**
 * DTO para criar configuração de uma métrica
 */
class CriarMetricaConfiguracaoDto {
    metrica_id;
    coleta_automatica;
    tipo_agendamento;
    intervalo_segundos;
    expressao_cron;
    nome_evento;
    max_snapshots;
    periodo_retencao_dias;
    estrategia_amostragem;
    tamanho_amostra;
    cacheamento_habilitado;
    cache_ttl;
    alertas;
    visualizacao;
    exibir_dashboard;
    prioridade_dashboard;
}
exports.CriarMetricaConfiguracaoDto = CriarMetricaConfiguracaoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID da métrica para a qual a configuração será criada',
        example: '123e4567-e89b-12d3-a456-426614174000',
    }),
    (0, class_validator_1.IsUUID)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CriarMetricaConfiguracaoDto.prototype, "metrica_id", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Habilita ou desabilita a coleta automática',
        example: true,
        default: true,
    }),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], CriarMetricaConfiguracaoDto.prototype, "coleta_automatica", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tipo de agendamento para coleta automática',
        enum: entities_1.TipoAgendamento,
        example: entities_1.TipoAgendamento.INTERVALO,
        default: entities_1.TipoAgendamento.INTERVALO,
    }),
    (0, class_validator_1.IsEnum)(entities_1.TipoAgendamento),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_a = typeof entities_1.TipoAgendamento !== "undefined" && entities_1.TipoAgendamento) === "function" ? _a : Object)
], CriarMetricaConfiguracaoDto.prototype, "tipo_agendamento", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Valor do intervalo de coleta em segundos (para tipo INTERVALO)',
        example: 86400, // 1 dia
        default: 86400,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], CriarMetricaConfiguracaoDto.prototype, "intervalo_segundos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Expressão cron para agendamento complexo (para tipo CRON)',
        example: '0 0 * * *', // Diariamente à meia-noite
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], CriarMetricaConfiguracaoDto.prototype, "expressao_cron", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Nome do evento que dispara a coleta (para tipo EVENTO)',
        example: 'beneficio_aprovado',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], CriarMetricaConfiguracaoDto.prototype, "nome_evento", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Número máximo de snapshots a serem mantidos (0 = sem limite)',
        example: 365,
        default: 0,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], CriarMetricaConfiguracaoDto.prototype, "max_snapshots", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Período máximo de retenção em dias (0 = sem limite)',
        example: 365,
        default: 365,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], CriarMetricaConfiguracaoDto.prototype, "periodo_retencao_dias", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Estratégia de amostragem para coleta de dados',
        enum: entities_1.EstrategiaAmostragem,
        example: entities_1.EstrategiaAmostragem.COMPLETA,
        default: entities_1.EstrategiaAmostragem.COMPLETA,
    }),
    (0, class_validator_1.IsEnum)(entities_1.EstrategiaAmostragem),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_b = typeof entities_1.EstrategiaAmostragem !== "undefined" && entities_1.EstrategiaAmostragem) === "function" ? _b : Object)
], CriarMetricaConfiguracaoDto.prototype, "estrategia_amostragem", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tamanho da amostra (quando aplicável)',
        example: 1000,
        default: 0,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], CriarMetricaConfiguracaoDto.prototype, "tamanho_amostra", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Habilita ou desabilita o cacheamento dos valores',
        example: true,
        default: true,
    }),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], CriarMetricaConfiguracaoDto.prototype, "cacheamento_habilitado", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tempo de vida do cache em segundos',
        example: 300, // 5 minutos
        default: 300,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], CriarMetricaConfiguracaoDto.prototype, "cache_ttl", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Configurações de alertas baseados no valor da métrica',
        example: [
            {
                tipo: 'valor_maximo',
                valor: 100,
                mensagem: 'Valor excedeu o limite',
                severidade: 'alta',
            },
            {
                tipo: 'valor_minimo',
                valor: 10,
                mensagem: 'Valor abaixo do mínimo',
                severidade: 'media',
            },
        ],
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Array)
], CriarMetricaConfiguracaoDto.prototype, "alertas", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Configurações de visualização',
        example: { cor: '#FF5500', icone: 'chart-line', destaque: true },
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_c = typeof Record !== "undefined" && Record) === "function" ? _c : Object)
], CriarMetricaConfiguracaoDto.prototype, "visualizacao", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Flag que indica se a métrica deve ser exibida em dashboards',
        example: true,
        default: true,
    }),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], CriarMetricaConfiguracaoDto.prototype, "exibir_dashboard", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Prioridade de exibição (ordem) no dashboard (menor = mais importante)',
        example: 100,
        default: 100,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], CriarMetricaConfiguracaoDto.prototype, "prioridade_dashboard", void 0);
/**
 * DTO para atualizar configuração de uma métrica
 */
class AtualizarMetricaConfiguracaoDto {
    coleta_automatica;
    tipo_agendamento;
    intervalo_segundos;
    expressao_cron;
    nome_evento;
    max_snapshots;
    periodo_retencao_dias;
    estrategia_amostragem;
    tamanho_amostra;
    cacheamento_habilitado;
    cache_ttl;
    alertas;
    visualizacao;
    exibir_dashboard;
    prioridade_dashboard;
}
exports.AtualizarMetricaConfiguracaoDto = AtualizarMetricaConfiguracaoDto;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Habilita ou desabilita a coleta automática',
        example: true,
    }),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], AtualizarMetricaConfiguracaoDto.prototype, "coleta_automatica", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tipo de agendamento para coleta automática',
        enum: entities_1.TipoAgendamento,
        example: entities_1.TipoAgendamento.INTERVALO,
    }),
    (0, class_validator_1.IsEnum)(entities_1.TipoAgendamento),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_d = typeof entities_1.TipoAgendamento !== "undefined" && entities_1.TipoAgendamento) === "function" ? _d : Object)
], AtualizarMetricaConfiguracaoDto.prototype, "tipo_agendamento", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Valor do intervalo de coleta em segundos (para tipo INTERVALO)',
        example: 86400, // 1 dia
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], AtualizarMetricaConfiguracaoDto.prototype, "intervalo_segundos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Expressão cron para agendamento complexo (para tipo CRON)',
        example: '0 0 * * *', // Diariamente à meia-noite
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], AtualizarMetricaConfiguracaoDto.prototype, "expressao_cron", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Nome do evento que dispara a coleta (para tipo EVENTO)',
        example: 'beneficio_aprovado',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], AtualizarMetricaConfiguracaoDto.prototype, "nome_evento", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Número máximo de snapshots a serem mantidos (0 = sem limite)',
        example: 365,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], AtualizarMetricaConfiguracaoDto.prototype, "max_snapshots", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Período máximo de retenção em dias (0 = sem limite)',
        example: 365,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], AtualizarMetricaConfiguracaoDto.prototype, "periodo_retencao_dias", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Estratégia de amostragem para coleta de dados',
        enum: entities_1.EstrategiaAmostragem,
        example: entities_1.EstrategiaAmostragem.COMPLETA,
    }),
    (0, class_validator_1.IsEnum)(entities_1.EstrategiaAmostragem),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_e = typeof entities_1.EstrategiaAmostragem !== "undefined" && entities_1.EstrategiaAmostragem) === "function" ? _e : Object)
], AtualizarMetricaConfiguracaoDto.prototype, "estrategia_amostragem", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tamanho da amostra (quando aplicável)',
        example: 1000,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], AtualizarMetricaConfiguracaoDto.prototype, "tamanho_amostra", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Habilita ou desabilita o cacheamento dos valores',
        example: true,
    }),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], AtualizarMetricaConfiguracaoDto.prototype, "cacheamento_habilitado", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tempo de vida do cache em segundos',
        example: 300, // 5 minutos
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], AtualizarMetricaConfiguracaoDto.prototype, "cache_ttl", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Configurações de alertas baseados no valor da métrica',
        example: [
            {
                tipo: 'valor_maximo',
                valor: 100,
                mensagem: 'Valor excedeu o limite',
                severidade: 'alta',
            },
        ],
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Array)
], AtualizarMetricaConfiguracaoDto.prototype, "alertas", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Configurações de visualização',
        example: { cor: '#FF5500', icone: 'chart-line', destaque: true },
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_f = typeof Record !== "undefined" && Record) === "function" ? _f : Object)
], AtualizarMetricaConfiguracaoDto.prototype, "visualizacao", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Flag que indica se a métrica deve ser exibida em dashboards',
        example: true,
    }),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], AtualizarMetricaConfiguracaoDto.prototype, "exibir_dashboard", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Prioridade de exibição (ordem) no dashboard (menor = mais importante)',
        example: 100,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], AtualizarMetricaConfiguracaoDto.prototype, "prioridade_dashboard", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,