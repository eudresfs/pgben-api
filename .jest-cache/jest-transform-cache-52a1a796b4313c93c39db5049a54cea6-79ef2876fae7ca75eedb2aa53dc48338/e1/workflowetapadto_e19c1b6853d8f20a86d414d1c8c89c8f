d2cf710ab2a45737f586f8b07aab045a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowEtapaDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const enums_1 = require("../../../../enums");
/**
 * DTO para uma etapa de workflow de benefício.
 * Representa um passo específico no fluxo de aprovação.
 */
class WorkflowEtapaDto {
    id;
    inicial;
    ordem;
    descricao;
    setor_id;
    acao;
    prazo_sla;
    template_notificacao_id;
    proximas_etapas;
    sla_horas;
}
exports.WorkflowEtapaDto = WorkflowEtapaDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID único da etapa',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O ID é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'O ID deve ser uma string' }),
    __metadata("design:type", String)
], WorkflowEtapaDto.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se esta é a etapa inicial do workflow',
        example: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'O indicador de etapa inicial deve ser um booleano' }),
    __metadata("design:type", Boolean)
], WorkflowEtapaDto.prototype, "inicial", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Ordem da etapa no fluxo de trabalho',
        example: 1,
        minimum: 1,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'A ordem é obrigatória' }),
    (0, class_validator_1.IsInt)({ message: 'A ordem deve ser um número inteiro' }),
    (0, class_validator_1.Min)(1, { message: 'A ordem deve ser no mínimo 1' }),
    __metadata("design:type", Number)
], WorkflowEtapaDto.prototype, "ordem", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Descrição da etapa',
        example: 'Análise inicial da solicitação',
        maxLength: 200,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'A descrição é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'A descrição deve ser uma string' }),
    (0, class_validator_1.MaxLength)(200, { message: 'A descrição deve ter no máximo 200 caracteres' }),
    __metadata("design:type", String)
], WorkflowEtapaDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do setor responsável pela etapa',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O setor é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'O ID do setor deve ser um UUID válido' }),
    __metadata("design:type", String)
], WorkflowEtapaDto.prototype, "setor_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo de ação a ser realizada nesta etapa',
        enum: enums_1.WorkflowAcaoEnum,
        example: enums_1.WorkflowAcaoEnum.ANALISE,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'A ação é obrigatória' }),
    (0, class_validator_1.IsEnum)(enums_1.WorkflowAcaoEnum, { message: 'Tipo de ação inválido' }),
    __metadata("design:type", typeof (_a = typeof enums_1.WorkflowAcaoEnum !== "undefined" && enums_1.WorkflowAcaoEnum) === "function" ? _a : Object)
], WorkflowEtapaDto.prototype, "acao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Prazo em horas para cumprimento da etapa (SLA)',
        example: 48,
        minimum: 1,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O prazo SLA é obrigatório' }),
    (0, class_validator_1.IsInt)({ message: 'O prazo SLA deve ser um número inteiro' }),
    (0, class_validator_1.Min)(1, { message: 'O prazo SLA deve ser no mínimo 1 hora' }),
    (0, class_validator_1.Max)(720, { message: 'O prazo SLA deve ser no máximo 720 horas (30 dias)' }),
    __metadata("design:type", Number)
], WorkflowEtapaDto.prototype, "prazo_sla", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do template de notificação associado à etapa',
        example: '550e8400-e29b-41d4-a716-446655440000',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'O ID do template deve ser um UUID válido' }),
    __metadata("design:type", String)
], WorkflowEtapaDto.prototype, "template_notificacao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Lista de IDs das próximas etapas possíveis',
        example: [
            '550e8400-e29b-41d4-a716-446655440001',
            '550e8400-e29b-41d4-a716-446655440002',
        ],
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)({ message: 'A lista de próximas etapas deve ser um array' }),
    __metadata("design:type", Array)
], WorkflowEtapaDto.prototype, "proximas_etapas", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'SLA em horas para esta etapa',
        example: 48,
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)({ message: 'O SLA em horas deve ser um número inteiro' }),
    __metadata("design:type", Number)
], WorkflowEtapaDto.prototype, "sla_horas", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNvbmZpZ3VyYWNhb1xcZHRvc1xcd29ya2Zsb3dcXHdvcmtmbG93LWV0YXBhLmR0by50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQThDO0FBQzlDLHFEQVl5QjtBQUN6Qiw2Q0FBcUQ7QUFFckQ7OztHQUdHO0FBQ0gsTUFBYSxnQkFBZ0I7SUFPM0IsRUFBRSxDQUFTO0lBUVgsT0FBTyxDQUFXO0lBU2xCLEtBQUssQ0FBUztJQVVkLFNBQVMsQ0FBUztJQVFsQixRQUFRLENBQVM7SUFTakIsSUFBSSxDQUFtQjtJQVd2QixTQUFTLENBQVM7SUFTbEIsdUJBQXVCLENBQVU7SUFZakMsZUFBZSxDQUFZO0lBUzNCLFNBQVMsQ0FBVTtDQUNwQjtBQTdGRCw0Q0E2RkM7QUF0RkM7SUFOQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsbUJBQW1CO1FBQ2hDLE9BQU8sRUFBRSxzQ0FBc0M7S0FDaEQsQ0FBQztJQUNELElBQUEsNEJBQVUsRUFBQyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxDQUFDO0lBQzdDLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxDQUFDOzs0Q0FDdkM7QUFRWDtJQU5DLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw4Q0FBOEM7UUFDM0QsT0FBTyxFQUFFLElBQUk7S0FDZCxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwyQkFBUyxFQUFDLEVBQUUsT0FBTyxFQUFFLG1EQUFtRCxFQUFFLENBQUM7O2lEQUMxRDtBQVNsQjtJQVJDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxxQ0FBcUM7UUFDbEQsT0FBTyxFQUFFLENBQUM7UUFDVixPQUFPLEVBQUUsQ0FBQztLQUNYLENBQUM7SUFDRCxJQUFBLDRCQUFVLEVBQUMsRUFB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QUFDLEVBQUUsT0FBTyxFQUFFLDJDQUEyQyxFQUFFLENBQUM7O21EQUM3QyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcbW9kdWxlc1xcY29uZmlndXJhY2FvXFxkdG9zXFx3b3JrZmxvd1xcd29ya2Zsb3ctZXRhcGEuZHRvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwaVByb3BlcnR5IH0gZnJvbSAnQG5lc3Rqcy9zd2FnZ2VyJztcbmltcG9ydCB7XG4gIElzRW51bSxcbiAgSXNJbnQsXG4gIElzTm90RW1wdHksXG4gIElzT3B0aW9uYWwsXG4gIElzU3RyaW5nLFxuICBJc1VVSUQsXG4gIE1heCxcbiAgTWluLFxuICBNYXhMZW5ndGgsXG4gIElzQXJyYXksXG4gIElzQm9vbGVhbixcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcbmltcG9ydCB7IFdvcmtmbG93QWNhb0VudW0gfSBmcm9tICcuLi8uLi8uLi8uLi9lbnVtcyc7XG5cbi8qKlxuICogRFRPIHBhcmEgdW1hIGV0YXBhIGRlIHdvcmtmbG93IGRlIGJlbmVmw61jaW8uXG4gKiBSZXByZXNlbnRhIHVtIHBhc3NvIGVzcGVjw61maWNvIG5vIGZsdXhvIGRlIGFwcm92YcOnw6NvLlxuICovXG5leHBvcnQgY2xhc3MgV29ya2Zsb3dFdGFwYUR0byB7XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdJRCDDum5pY28gZGEgZXRhcGEnLFxuICAgIGV4YW1wbGU6ICc1NTBlODQwMC1lMjliLTQxZDQtYTcxNi00NDY2NTU0NDAwMDAnLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdPIElEIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ08gSUQgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgaWQ6IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnSW5kaWNhIHNlIGVzdGEgw6kgYSBldGFwYSBpbmljaWFsIGRvIHdvcmtmbG93JyxcbiAgICBleGFtcGxlOiB0cnVlLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc0Jvb2xlYW4oeyBtZXNzYWdlOiAnTyBpbmRpY2Fkb3IgZGUgZXRhcGEgaW5pY2lhbCBkZXZlIHNlciB1bSBib29sZWFubycgfSlcbiAgaW5pY2lhbD86IGJvb2xlYW47XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdPcmRlbSBkYSBldGFwYSBubyBmbHV4byBkZSB0cmFiYWxobycsXG4gICAgZXhhbXBsZTogMSxcbiAgICBtaW5pbXVtOiAxLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdBIG9yZGVtIMOpIG9icmlnYXTDs3JpYScgfSlcbiAgQElzSW50KHsgbWVzc2FnZTogJ0Egb3JkZW0gZGV2ZSBzZXIgdW0gbsO6bWVybyBpbnRlaXJvJyB9KVxuICBATWluKDEsIHsgbWVzc2FnZTogJ0Egb3JkZW0gZGV2ZSBzZXIgbm8gbcOtbmltbyAxJyB9KVxuICBvcmRlbTogbnVtYmVyO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdEZXNjcmnDp8OjbyBkYSBldGFwYScsXG4gICAgZXhhbXBsZTogJ0Fuw6FsaXNlIGluaWNpYWwgZGEgc29saWNpdGHDp8OjbycsXG4gICAgbWF4TGVuZ3RoOiAyMDAsXG4gIH0pXG4gIEBJc05vdEVtcHR5KHsgbWVzc2FnZTogJ0EgZGVzY3Jpw6fDo28gw6kgb2JyaWdhdMOzcmlhJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnQSBkZXNjcmnDp8OjbyBkZXZlIHNlciB1bWEgc3RyaW5nJyB9KVxuICBATWF4TGVuZ3RoKDIwMCwgeyBtZXNzYWdlOiAnQSBkZXNjcmnDp8OjbyBkZXZlIHRlciBubyBtw6F4aW1vIDIwMCBjYXJhY3RlcmVzJyB9KVxuICBkZXNjcmljYW86IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnSUQgZG8gc2V0b3IgcmVzcG9uc8OhdmVsIHBlbGEgZXRhcGEnLFxuICAgIGV4YW1wbGU6ICc1NTBlODQwMC1lMjliLTQxZDQtYTcxNi00NDY2NTU0NDAwMDAnLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdPIHNldG9yIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgQElzVVVJRCgnNCcsIHsgbWVzc2FnZTogJ08gSUQgZG8gc2V0b3IgZGV2ZSBzZXIgdW0gVVVJRCB2w6FsaWRvJyB9KVxuICBzZXRvcl9pZDogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdUaXBvIGRlIGHDp8OjbyBhIHNlciByZWFsaXphZGEgbmVzdGEgZXRhcGEnLFxuICAgIGVudW06IFdvcmtmbG93QWNhb0VudW0sXG4gICAgZXhhbXBsZTogV29ya2Zsb3dBY2FvRW51bS5BTkFMSVNFLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdBIGHDp8OjbyDDqSBvYnJpZ2F0w7NyaWEnIH0pXG4gIEBJc0VudW0oV29ya2Zsb3dBY2FvRW51bSwgeyBtZXNzYWdlOiAnVGlwbyBkZSBhw6fDo28gaW52w6FsaWRvJyB9KVxuICBhY2FvOiBXb3JrZmxvd0FjYW9FbnVtO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdQcmF6byBlbSBob3JhcyBwYXJhIGN1bXByaW1lbnRvIGRhIGV0YXBhIChTTEEpJyxcbiAgICBleGFtcGxlOiA0OCxcbiAgICBtaW5pbXVtOiAxLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdPIHByYXpvIFNMQSDDqSBvYnJpZ2F0w7NyaW8nIH0pXG4gIEBJc0ludCh7IG1lc3NhZ2U6ICdPIHByYXpvIFNMQSBkZXZlIHNlciB1bSBuw7ptZXJvIGludGVpcm8nIH0pXG4gIEBNaW4oMSwgeyBtZXNzYWdlOiAnTyBwcmF6byBTTEEgZGV2ZSBzZXIgbm8gbcOtbmltbyAxIGhvcmEnIH0pXG4gIEBNYXgoNzIwLCB7IG1lc3NhZ2U6ICdPIHByYXpvIFNMQSBkZXZlIHNlciBubyBtw6F4aW1vIDcyMCBob3JhcyAoMzAgZGlhcyknIH0pXG4gIHByYXpvX3NsYTogbnVtYmVyO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdJRCBkbyB0ZW1wbGF0ZSBkZSBub3RpZmljYcOnw6NvIGFzc29jaWFkbyDDoCBldGFwYScsXG4gICAgZXhhbXBsZTogJzU1MGU4NDAwLWUyOWItNDFkNC1hNzE2LTQ0NjY1NTQ0MDAwMCcsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1VVSUQoJzQnLCB7IG1lc3NhZ2U6ICdPIElEIGRvIHRlbXBsYXRlIGRldmUgc2VyIHVtIFVVSUQgdsOhbGlkbycgfSlcbiAgdGVtcGxhdGVfbm90aWZpY2FjYW9faWQ/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ0xpc3RhIGRlIElEcyBkYXMgcHLDs3hpbWFzIGV0YXBhcyBwb3Nzw612ZWlzJyxcbiAgICBleGFtcGxlOiBbXG4gICAgICAnNTUwZTg0MDAtZTI5Yi00MWQ0LWE3MTYtNDQ2NjU1NDQwMDAxJyxcbiAgICAgICc1NTBlODQwMC1lMjliLTQxZDQtYTcxNi00NDY2NTU0NDAwMDInLFxuICAgIF0sXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc0FycmF5KHsgbWVzc2FnZTogJ0EgbGlzdGEgZGUgcHLDs3hpbWFzIGV0YXBhcyBkZXZlIHNlciB1bSBhcnJheScgfSlcbiAgcHJveGltYXNfZXRhcGFzPzogc3RyaW5nW107XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ1NMQSBlbSBob3JhcyBwYXJhIGVzdGEgZXRhcGEnLFxuICAgIGV4YW1wbGU6IDQ4LFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNJbnQoeyBtZXNzYWdlOiAnTyBTTEEgZW0gaG9yYXMgZGV2ZSBzZXIgdW0gbsO6bWVybyBpbnRlaXJvJyB9KVxuICBzbGFfaG9yYXM/OiBudW1iZXI7XG59XG4iXSwidmVyc2lvbiI6M30=