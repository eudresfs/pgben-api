{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\update-dados-sociais.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\update-dados-sociais.dto.ts"],"sourcesContent":["import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateDadosSociaisDto } from './create-dados-sociais.dto';\nimport {\n  IsOptional,\n  IsNumber,\n  Min,\n  Max,\n  IsEnum,\n  IsString,\n  IsBoolean,\n  ValidateIf,\n  MaxLength,\n} from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { EscolaridadeEnum } from '../../../enums/escolaridade.enum';\nimport { SituacaoTrabalhoEnum } from '../../../enums/situacao-trabalho.enum';\nimport { IsEnumValue } from '../../../shared/validators/enum-validator';\n\n/**\n * DTO para atualização de dados sociais de um cidadão\n * \n * Permite atualização parcial dos dados sociais, mantendo as mesmas\n * validações do DTO de criação mas com todos os campos opcionais.\n */\nexport class UpdateDadosSociaisDto extends PartialType(CreateDadosSociaisDto) {\n  @ApiProperty({\n    description: 'Nível de escolaridade do cidadão',\n    enum: EscolaridadeEnum,\n    example: EscolaridadeEnum.MEDIO_COMPLETO,\n    required: false,\n    enumName: 'EscolaridadeEnum'\n  })\n  @IsOptional()\n  @IsEnumValue(EscolaridadeEnum, {\n    enumName: 'Escolaridade',\n    caseSensitive: false,\n  })\n  escolaridade?: EscolaridadeEnum;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão faz parte de público prioritário',\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo publico_prioritario deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  publico_prioritario?: boolean;\n\n  @ApiProperty({\n    description: 'Renda mensal do cidadão em reais',\n    example: 1500.50,\n    minimum: 0,\n    maximum: 50000,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Renda deve ser um número válido com no máximo 2 casas decimais' })\n  @Min(0, { message: 'Renda não pode ser negativa' })\n  @Max(50000, { message: 'Renda não pode exceder R$ 50.000,00' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      // Remove vírgulas e converte para número\n      const cleanValue = value.replace(/,/g, '.');\n      return parseFloat(cleanValue);\n    }\n    return value;\n  })\n  renda?: number;\n\n  @ApiProperty({\n    description: 'Ocupação ou profissão do cidadão',\n    example: 'Auxiliar de limpeza',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Ocupação deve ser um texto' })\n  @MaxLength(255, { message: 'Ocupação deve ter no máximo 255 caracteres' })\n  ocupacao?: string;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão recebe Programa Bolsa Família',\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo recebe_pbf deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  recebe_pbf?: boolean;\n\n  @ApiProperty({\n    description: 'Valor mensal recebido do Programa Bolsa Família',\n    example: 400.00,\n    minimum: 50,\n    maximum: 10000,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf((o) => o.recebe_pbf === true)\n  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Valor do PBF deve ser um número válido com no máximo 2 casas decimais' })\n  @Min(50, { message: 'Valor do PBF deve ser no mínimo R$ 50,00' })\n  @Max(10000, { message: 'Valor do PBF não pode exceder R$ 10.000,00' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      // Remove vírgulas e espaços, converte para número\n      const cleanValue = value.replace(/[,\\s]/g, '.').replace(/\\.{2,}/g, '.');\n      return parseFloat(cleanValue) || 0;\n    }\n    return value;\n  })\n  valor_pbf?: number;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão recebe Benefício de Prestação Continuada',\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo recebe_bpc deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  recebe_bpc?: boolean;\n\n  @ApiProperty({\n    description: 'Tipo do BPC recebido (idoso, deficiente, etc.)',\n    example: 'Pessoa com deficiência',\n    maxLength: 100,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf((o) => o.recebe_bpc === true)\n  @IsString({ message: 'Tipo do BPC deve ser um texto' })\n  @MaxLength(100, { message: 'Tipo do BPC deve ter no máximo 100 caracteres' })\n  tipo_bpc?: string;\n\n  @ApiProperty({\n    description: 'Valor mensal recebido do BPC',\n    example: 1320.00,\n    minimum: 100,\n    maximum: 10000,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf((o) => o.recebe_bpc === true)\n  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Valor do BPC deve ser um número válido com no máximo 2 casas decimais' })\n  @Min(100, { message: 'Valor do BPC deve ser no mínimo R$ 100,00' })\n  @Max(10000, { message: 'Valor do BPC não pode exceder R$ 10.000,00' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      // Remove vírgulas e espaços, converte para número\n      const cleanValue = value.replace(/[,\\s]/g, '.').replace(/\\.{2,}/g, '.');\n      return parseFloat(cleanValue) || 0;\n    }\n    return value;\n  })\n  valor_bpc?: number;\n\n  @ApiProperty({\n    description: 'Curso profissionalizante que o cidadão possui ou está cursando',\n    example: 'Técnico em Informática',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Curso profissionalizante deve ser um texto' })\n  @MaxLength(255, { message: 'Curso profissionalizante deve ter no máximo 255 caracteres' })\n  curso_profissionalizante?: string;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão tem interesse em fazer curso profissionalizante',\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo interesse_curso_profissionalizante deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  interesse_curso_profissionalizante?: boolean;\n\n  @ApiProperty({\n    description: 'Situação atual de trabalho do cidadão',\n    enum: SituacaoTrabalhoEnum,\n    example: SituacaoTrabalhoEnum.DESEMPREGADO,\n    required: false,\n    enumName: 'SituacaoTrabalhoEnum'\n  })\n  @IsOptional()\n  @IsEnumValue(SituacaoTrabalhoEnum, {\n    enumName: 'Situação de Trabalho',\n    caseSensitive: false,\n  })\n  situacao_trabalho?: SituacaoTrabalhoEnum;\n\n  @ApiProperty({\n    description: 'Área de trabalho ou interesse profissional',\n    example: 'Serviços gerais',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Área de trabalho deve ser um texto' })\n  @MaxLength(255, { message: 'Área de trabalho deve ter no máximo 255 caracteres' })\n  area_trabalho?: string;\n\n  @ApiProperty({\n    description: 'Indica se há familiar apto para trabalhar na composição familiar',\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo familiar_apto_trabalho deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  familiar_apto_trabalho?: boolean;\n\n  @ApiProperty({\n    description: 'Área de interesse profissional de familiares',\n    example: 'Construção civil',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Área de interesse familiar deve ser um texto' })\n  @MaxLength(255, { message: 'Área de interesse familiar deve ter no máximo 255 caracteres' })\n  area_interesse_familiar?: string;\n\n  @ApiProperty({\n    description: 'Observações adicionais sobre a situação social',\n    example: 'Família em situação de vulnerabilidade social',\n    maxLength: 1000,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Observações devem ser um texto' })\n  @MaxLength(1000, { message: 'Observações devem ter no máximo 1000 caracteres' })\n  observacoes?: string;\n}"],"version":3}