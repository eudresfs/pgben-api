58f15bb7789c0bad60bc50c93ea7b8d6
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsultaSerieTemporalDto = exports.ConsultaValorMetricaDto = exports.ColetaManualMetricaDto = exports.FiltroMetricaSnapshotsDto = exports.CriarMetricaSnapshotDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const entities_1 = require("../../../entities");
/**
 * DTO para criar um snapshot de métrica manualmente
 */
class CriarMetricaSnapshotDto {
    definicao_id;
    periodo_inicio;
    periodo_fim;
    granularidade;
    valor;
    dimensoes;
    metadados;
}
exports.CriarMetricaSnapshotDto = CriarMetricaSnapshotDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID da definição da métrica',
        example: '123e4567-e89b-12d3-a456-426614174000',
    }),
    (0, class_validator_1.IsUUID)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CriarMetricaSnapshotDto.prototype, "definicao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Início do período de referência',
        example: '2023-01-01T00:00:00.000Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], CriarMetricaSnapshotDto.prototype, "periodo_inicio", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Fim do período de referência',
        example: '2023-01-31T23:59:59.999Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], CriarMetricaSnapshotDto.prototype, "periodo_fim", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Granularidade temporal do snapshot',
        enum: entities_1.GranularidadeTemporal,
        example: entities_1.GranularidadeTemporal.MES,
    }),
    (0, class_validator_1.IsEnum)(entities_1.GranularidadeTemporal),
    __metadata("design:type", typeof (_c = typeof entities_1.GranularidadeTemporal !== "undefined" && entities_1.GranularidadeTemporal) === "function" ? _c : Object)
], CriarMetricaSnapshotDto.prototype, "granularidade", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Valor numérico da métrica',
        example: 85.75,
    }),
    (0, class_validator_1.IsNumber)(),
    __metadata("design:type", Number)
], CriarMetricaSnapshotDto.prototype, "valor", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Dimensões ou filtros aplicados na coleta do valor',
        example: { regiao: 'nordeste', faixa_etaria: '18-25' },
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_d = typeof Record !== "undefined" && Record) === "function" ? _d : Object)
], CriarMetricaSnapshotDto.prototype, "dimensoes", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Metadados adicionais sobre o snapshot',
        example: { fonte: 'importacao_manual', usuario: 'admin' },
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_e = typeof Record !== "undefined" && Record) === "function" ? _e : Object)
], CriarMetricaSnapshotDto.prototype, "metadados", void 0);
/**
 * DTO para filtrar snapshots na consulta
 */
class FiltroMetricaSnapshotsDto {
    codigo_metrica;
    metrica_id;
    data_inicial;
    data_final;
    granularidade;
    dimensoes;
    pagina;
    limite;
    ordenar_por;
    direcao;
}
exports.FiltroMetricaSnapshotsDto = FiltroMetricaSnapshotsDto;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Código da métrica',
        example: 'tempo_medio_processamento_beneficio',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], FiltroMetricaSnapshotsDto.prototype, "codigo_metrica", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'ID da métrica',
        example: '123e4567-e89b-12d3-a456-426614174000',
    }),
    (0, class_validator_1.IsUUID)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], FiltroMetricaSnapshotsDto.prototype, "metrica_id", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Data inicial do período',
        example: '2023-01-01T00:00:00.000Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], FiltroMetricaSnapshotsDto.prototype, "data_inicial", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Data final do período',
        example: '2023-12-31T23:59:59.999Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_g = typeof Date !== "undefined" && Date) === "function" ? _g : Object)
], FiltroMetricaSnapshotsDto.prototype, "data_final", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Granularidade do snapshot',
        enum: entities_1.GranularidadeTemporal,
        example: entities_1.GranularidadeTemporal.MES,
    }),
    (0, class_validator_1.IsEnum)(entities_1.GranularidadeTemporal),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_h = typeof entities_1.GranularidadeTemporal !== "undefined" && entities_1.GranularidadeTemporal) === "function" ? _h : Object)
], FiltroMetricaSnapshotsDto.prototype, "granularidade", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Dimensões para filtrar os snapshots',
        example: { regiao: 'nordeste' },
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_j = typeof Record !== "undefined" && Record) === "function" ? _j : Object)
], FiltroMetricaSnapshotsDto.prototype, "dimensoes", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Página para paginação de resultados',
        example: 1,
        default: 1,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], FiltroMetricaSnapshotsDto.prototype, "pagina", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Quantidade de itens por página',
        example: 10,
        default: 10,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], FiltroMetricaSnapshotsDto.prototype, "limite", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Ordenar por campo específico',
        example: 'periodo_inicio',
        default: 'periodo_inicio',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], FiltroMetricaSnapshotsDto.prototype, "ordenar_por", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Direção da ordenação (asc ou desc)',
        example: 'desc',
        default: 'desc',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], FiltroMetricaSnapshotsDto.prototype, "direcao", void 0);
/**
 * DTO para configurar a coleta manual de uma métrica
 */
class ColetaManualMetricaDto {
    codigo;
    dimensoes;
    periodo_inicio;
    periodo_fim;
}
exports.ColetaManualMetricaDto = ColetaManualMetricaDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Código da métrica',
        example: 'tempo_medio_processamento_beneficio',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ColetaManualMetricaDto.prototype, "codigo", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Dimensões para filtrar a coleta',
        example: { regiao: 'nordeste', faixa_etaria: '18-25' },
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_k = typeof Record !== "undefined" && Record) === "function" ? _k : Object)
], ColetaManualMetricaDto.prototype, "dimensoes", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Data de início do período (se não informado, usa padrão da granularidade)',
        example: '2023-01-01T00:00:00.000Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_l = typeof Date !== "undefined" && Date) === "function" ? _l : Object)
], ColetaManualMetricaDto.prototype, "periodo_inicio", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Data de fim do período (se não informado, usa data atual)',
        example: '2023-01-31T23:59:59.999Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_m = typeof Date !== "undefined" && Date) === "function" ? _m : Object)
], ColetaManualMetricaDto.prototype, "periodo_fim", void 0);
/**
 * DTO para consultar valor atual de uma métrica
 */
class ConsultaValorMetricaDto {
    codigo;
    dimensoes;
}
exports.ConsultaValorMetricaDto = ConsultaValorMetricaDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Código da métrica',
        example: 'tempo_medio_processamento_beneficio',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ConsultaValorMetricaDto.prototype, "codigo", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Dimensões para filtrar o valor',
        example: { regiao: 'nordeste', faixa_etaria: '18-25' },
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_o = typeof Record !== "undefined" && Record) === "function" ? _o : Object)
], ConsultaValorMetricaDto.prototype, "dimensoes", void 0);
/**
 * DTO para consultar série temporal de uma métrica
 */
class ConsultaSerieTemporalDto {
    codigo;
    data_inicial;
    data_final;
    granularidade;
    dimensoes;
    limite_pontos;
}
exports.ConsultaSerieTemporalDto = ConsultaSerieTemporalDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Código da métrica',
        example: 'tempo_medio_processamento_beneficio',
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ConsultaSerieTemporalDto.prototype, "codigo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Data inicial do período',
        example: '2023-01-01T00:00:00.000Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_p = typeof Date !== "undefined" && Date) === "function" ? _p : Object)
], ConsultaSerieTemporalDto.prototype, "data_inicial", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Data final do período',
        example: '2023-12-31T23:59:59.999Z',
    }),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_q = typeof Date !== "undefined" && Date) === "function" ? _q : Object)
], ConsultaSerieTemporalDto.prototype, "data_final", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Granularidade para agregação dos dados',
        enum: entities_1.GranularidadeTemporal,
        example: entities_1.GranularidadeTemporal.MES,
    }),
    (0, class_validator_1.IsEnum)(entities_1.GranularidadeTemporal),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_r = typeof entities_1.GranularidadeTemporal !== "undefined" && entities_1.GranularidadeTemporal) === "function" ? _r : Object)
], ConsultaSerieTemporalDto.prototype, "granularidade", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Dimensões para filtrar os dados',
        example: { regiao: 'nordeste' },
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_s = typeof Record !== "undefined" && Record) === "function" ? _s : Object)
], ConsultaSerieTemporalDto.prototype, "dimensoes", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Limitar número máximo de pontos na série',
        example: 12,
    }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], ConsultaSerieTemporalDto.prototype, "limite_pontos", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,