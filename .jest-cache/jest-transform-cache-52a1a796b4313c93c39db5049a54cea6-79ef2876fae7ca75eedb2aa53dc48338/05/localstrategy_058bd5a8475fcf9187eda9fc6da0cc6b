479af47a8cab052ff5e2d947b188fc08
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var LocalStrategy_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalStrategy = void 0;
const common_1 = require("@nestjs/common");
const passport_1 = require("@nestjs/passport");
const passport_local_1 = require("passport-local");
const logger_service_1 = require("../../shared/logger/logger.service");
const util_1 = require("../../shared/request-context/util");
const strategy_constant_1 = require("../constants/strategy.constant");
const auth_service_1 = require("../services/auth.service");
let LocalStrategy = LocalStrategy_1 = class LocalStrategy extends (0, passport_1.PassportStrategy)(passport_local_1.Strategy, strategy_constant_1.STRATEGY_LOCAL) {
    authService;
    logger;
    constructor(authService, logger) {
        // Add option passReqToCallback: true to configure strategy to be request-scoped.
        super({
            usernameField: 'username',
            passwordField: 'password',
            passReqToCallback: true,
        });
        this.authService = authService;
        this.logger = logger;
        this.logger.setContext(LocalStrategy_1.name);
    }
    async validate(request, username, password) {
        const ctx = (0, util_1.createRequestContext)(request);
        this.logger.log(ctx, `${this.validate.name} was called`);
        const user = await this.authService.validateUser(ctx, username, password);
        // Passport automatically creates a user object, based on the value we return from the validate() method,
        // and assigns it to the Request object as req.user
        return user;
    }
};
exports.LocalStrategy = LocalStrategy;
exports.LocalStrategy = LocalStrategy = LocalStrategy_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [typeof (_a = typeof auth_service_1.AuthService !== "undefined" && auth_service_1.AuthService) === "function" ? _a : Object, typeof (_b = typeof logger_service_1.AppLogger !== "undefined" && logger_service_1.AppLogger) === "function" ? _b : Object])
], LocalStrategy);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGF1dGhcXHN0cmF0ZWdpZXNcXGxvY2FsLnN0cmF0ZWd5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMkNBQTRDO0FBQzVDLCtDQUFvRDtBQUVwRCxtREFBMEM7QUFFMUMsdUVBQStEO0FBQy9ELDREQUF5RTtBQUN6RSxzRUFBZ0U7QUFFaEUsMkRBQXVEO0FBR2hELElBQU0sYUFBYSxxQkFBbkIsTUFBTSxhQUFjLFNBQVEsSUFBQSwyQkFBZ0IsRUFBQyx5QkFBUSxFQUFFLGtDQUFjLENBQUM7SUFFakU7SUFDUztJQUZuQixZQUNVLFdBQXdCLEVBQ2YsTUFBaUI7UUFFbEMsaUZBQWlGO1FBQ2pGLEtBQUssQ0FBQztZQUNKLGFBQWEsRUFBRSxVQUFVO1lBQ3pCLGFBQWEsRUFBRSxVQUFVO1lBQ3pCLGlCQUFpQixFQUFFLElBQUk7U0FDeEIsQ0FBQyxDQUFDO1FBUkssZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDZixXQUFNLEdBQU4sTUFBTSxDQUFXO1FBUWxDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLGVBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQVEsQ0FDWixPQUFnQixFQUNoQixRQUFnQixFQUNoQixRQUFnQjtRQUVoQixNQUFNLEdBQUcsR0FBRyxJQUFBLDJCQUFvQixFQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxhQUFhLENBQUMsQ0FBQztRQUV6RCxNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDMUUseUdBQXlHO1FBQ3pHLG1EQUFtRDtRQUNuRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRixDQUFBO0FBNUJZLHNDQUFhO3dCQUFiLGFBQWE7SUFEekIsSUFBQSxtQkFBVSxHQUFFO3lEQUdZLDBCQUFXLG9CQUFYLDBCQUFXLG9EQUNQLDBCQUFTLG9CQUFULDBCQUFTO0dBSHpCLGFBQWEsQ0E0QnpCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxhdXRoXFxzdHJhdGVnaWVzXFxsb2NhbC5zdHJhdGVneS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgUGFzc3BvcnRTdHJhdGVneSB9IGZyb20gJ0BuZXN0anMvcGFzc3BvcnQnO1xuaW1wb3J0IHsgUmVxdWVzdCB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgU3RyYXRlZ3kgfSBmcm9tICdwYXNzcG9ydC1sb2NhbCc7XG5cbmltcG9ydCB7IEFwcExvZ2dlciB9IGZyb20gJy4uLy4uL3NoYXJlZC9sb2dnZXIvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgY3JlYXRlUmVxdWVzdENvbnRleHQgfSBmcm9tICcuLi8uLi9zaGFyZWQvcmVxdWVzdC1jb250ZXh0L3V0aWwnO1xuaW1wb3J0IHsgU1RSQVRFR1lfTE9DQUwgfSBmcm9tICcuLi9jb25zdGFudHMvc3RyYXRlZ3kuY29uc3RhbnQnO1xuaW1wb3J0IHsgVXNlckFjY2Vzc1Rva2VuQ2xhaW1zIH0gZnJvbSAnLi4vZHRvcy9hdXRoLXRva2VuLW91dHB1dC5kdG8nO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTG9jYWxTdHJhdGVneSBleHRlbmRzIFBhc3Nwb3J0U3RyYXRlZ3koU3RyYXRlZ3ksIFNUUkFURUdZX0xPQ0FMKSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyOiBBcHBMb2dnZXIsXG4gICkge1xuICAgIC8vIEFkZCBvcHRpb24gcGFzc1JlcVRvQ2FsbGJhY2s6IHRydWUgdG8gY29uZmlndXJlIHN0cmF0ZWd5IHRvIGJlIHJlcXVlc3Qtc2NvcGVkLlxuICAgIHN1cGVyKHtcbiAgICAgIHVzZXJuYW1lRmllbGQ6ICd1c2VybmFtZScsXG4gICAgICBwYXNzd29yZEZpZWxkOiAncGFzc3dvcmQnLFxuICAgICAgcGFzc1JlcVRvQ2FsbGJhY2s6IHRydWUsXG4gICAgfSk7XG4gICAgdGhpcy5sb2dnZXIuc2V0Q29udGV4dChMb2NhbFN0cmF0ZWd5Lm5hbWUpO1xuICB9XG5cbiAgYXN5bmMgdmFsaWRhdGUoXG4gICAgcmVxdWVzdDogUmVxdWVzdCxcbiAgICB1c2VybmFtZTogc3RyaW5nLFxuICAgIHBhc3N3b3JkOiBzdHJpbmcsXG4gICk6IFByb21pc2U8VXNlckFjY2Vzc1Rva2VuQ2xhaW1zPiB7XG4gICAgY29uc3QgY3R4ID0gY3JlYXRlUmVxdWVzdENvbnRleHQocmVxdWVzdCk7XG5cbiAgICB0aGlzLmxvZ2dlci5sb2coY3R4LCBgJHt0aGlzLnZhbGlkYXRlLm5hbWV9IHdhcyBjYWxsZWRgKTtcblxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnZhbGlkYXRlVXNlcihjdHgsIHVzZXJuYW1lLCBwYXNzd29yZCk7XG4gICAgLy8gUGFzc3BvcnQgYXV0b21hdGljYWxseSBjcmVhdGVzIGEgdXNlciBvYmplY3QsIGJhc2VkIG9uIHRoZSB2YWx1ZSB3ZSByZXR1cm4gZnJvbSB0aGUgdmFsaWRhdGUoKSBtZXRob2QsXG4gICAgLy8gYW5kIGFzc2lnbnMgaXQgdG8gdGhlIFJlcXVlc3Qgb2JqZWN0IGFzIHJlcS51c2VyXG4gICAgcmV0dXJuIHVzZXI7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==