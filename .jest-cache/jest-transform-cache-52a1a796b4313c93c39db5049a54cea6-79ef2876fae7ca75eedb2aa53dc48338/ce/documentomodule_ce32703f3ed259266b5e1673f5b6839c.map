{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\documento\\documento.module.ts","mappings":";;;;;;;;;AAAA,2CAAwC;AACxC,6CAAgD;AAChD,+DAAwD;AACxD,6EAAyE;AACzE,oEAAgE;AAChE,mFAA8E;AAC9E,4EAAuE;AACvE,sEAAiE;AACjE,gFAA2E;AAC3E,sFAAiF;AAEjF,mCAAoD;AAGpD,2CAA6D;AAC7D,6CAA2C;AAC3C,wDAAoD;AACpD,sFAAiF;AACjF,wFAAmF;AACnF,8DAA0D;AAE1D;;;;;GAKG;AAuEI,IAAM,eAAe,GAArB,MAAM,eAAe;CAAG,CAAA;AAAlB,0CAAe;0BAAf,eAAe;IAtE3B,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,UAAU,CAAC,CAAC,oBAAS,CAAC,CAAC;YACrC,+BAAY,CAAC,aAAa,CAAC;gBACzB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,UAAU,EAAE,KAAK,EAAE,aAA4B,EAAE,EAAE,CAAC,CAAC;oBACnD,OAAO,EAAE,IAAA,sBAAa,GAAE;oBACxB,UAAU,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;wBAC5B,MAAM,YAAY,GAAG;4BACnB,iBAAiB;4BACjB,YAAY;4BACZ,WAAW;4BACX,WAAW;4BACX,oBAAoB;4BACpB,yEAAyE;4BACzE,0BAA0B;4BAC1B,mEAAmE;yBACpE,CAAC;wBAEF,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;4BACzC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBACjB,CAAC;6BAAM,CAAC;4BACN,EAAE,CAAC,IAAI,KAAK,CAAC,+BAA+B,CAAC,EAAE,KAAK,CAAC,CAAC;wBACxD,CAAC;oBACH,CAAC;oBACD,MAAM,EAAE;wBACN,QAAQ,EACN,aAAa,CAAC,GAAG,CAAS,eAAe,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE,OAAO;qBAC1E;iBACF,CAAC;gBACF,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB,CAAC;YACF,qBAAY;YACZ,wBAAU;YACV,2CAAmB;YACnB,4BAAY;SACb;QACD,WAAW,EAAE,CAAC,0CAAmB,CAAC;QAClC,SAAS,EAAE;YACT,oCAAgB;YAChB,+CAAqB;YACrB,iDAAsB;YACtB,2CAAmB;YACnB;gBACE,OAAO,EAAE,qCAAgB;gBACzB,UAAU,EAAE,CACV,aAA4B,EAC5B,oBAA0C,EAC1C,EAAE;oBACF,yDAAyD;oBACzD,MAAM,UAAU,GAAG,aAAa,CAAC,GAAG,CAAS,eAAe,CAAC,CAAC;oBAC9D,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAS,YAAY,CAAC,CAAC;oBACvD,MAAM,WAAW,GAAG,aAAa,CAAC,GAAG,CAAS,mBAAmB,CAAC,CAAC;oBACnE,MAAM,eAAe,GAAG,aAAa,CAAC,GAAG,CACvC,uBAAuB,CACxB,CAAC;oBAEF,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC/D,6DAA6D;wBAC7D,6CAA6C;wBAC7C,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,OAAO,IAAI,qCAAgB,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;gBACnE,CAAC;gBACD,MAAM,EAAE,CAAC,sBAAa,EAAE,6CAAoB,CAAC;aAC9C;YACD,mDAAuB;SACxB;QACD,OAAO,EAAE,CAAC,oCAAgB,EAAE,iDAAsB,CAAC;KACpD,CAAC;GACW,eAAe,CAAG","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\documento\\documento.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { DocumentoController } from './controllers/documento.controller';\nimport { DocumentoService } from './services/documento.service';\nimport { StorageProviderFactory } from './factories/storage-provider.factory';\nimport { LocalStorageAdapter } from './adapters/local-storage.adapter';\nimport { S3StorageAdapter } from './adapters/s3-storage.adapter';\nimport { MimeValidationService } from './services/mime-validation.service';\nimport { InputSanitizerValidator } from './validators/input-sanitizer.validator';\nimport { TODOS_MIME_TYPES_PERMITIDOS } from './config/documento.config';\nimport { diskStorage, memoryStorage } from 'multer';\nimport { extname } from 'path';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { Documento } from '../../entities';\nimport { AuthModule } from '../../auth/auth.module';\nimport { UnifiedLoggerModule } from '../../shared/logging/unified-logger.module';\nimport { UnifiedLoggerService } from '../../shared/logging/unified-logger.service';\nimport { SharedModule } from '../../shared/shared.module';\n\n/**\n * Módulo de Documentos\n *\n * Responsável por gerenciar os documentos anexados às solicitações de benefícios,\n * incluindo upload, verificação e remoção.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Documento]),\n    MulterModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        storage: memoryStorage(),\n        fileFilter: (req, file, cb) => {\n          const allowedMimes = [\n            'application/pdf',\n            'image/jpeg',\n            'image/png',\n            'image/gif',\n            'application/msword',\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n            'application/vnd.ms-excel',\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n          ];\n\n          if (allowedMimes.includes(file.mimetype)) {\n            cb(null, true);\n          } else {\n            cb(new Error('Tipo de arquivo não permitido'), false);\n          }\n        },\n        limits: {\n          fileSize:\n            configService.get<number>('MAX_FILE_SIZE') || 10 * 1024 * 1024, // 10MB\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule,\n    AuthModule,\n    UnifiedLoggerModule,\n    SharedModule,\n  ],\n  controllers: [DocumentoController],\n  providers: [\n    DocumentoService,\n    MimeValidationService,\n    StorageProviderFactory,\n    LocalStorageAdapter,\n    {\n      provide: S3StorageAdapter,\n      useFactory: (\n        configService: ConfigService,\n        unifiedLoggerService: UnifiedLoggerService,\n      ) => {\n        // Verifica se todas as configurações AWS estão presentes\n        const bucketName = configService.get<string>('AWS_S3_BUCKET');\n        const region = configService.get<string>('AWS_REGION');\n        const accessKeyId = configService.get<string>('AWS_ACCESS_KEY_ID');\n        const secretAccessKey = configService.get<string>(\n          'AWS_SECRET_ACCESS_KEY',\n        );\n\n        if (!bucketName || !region || !accessKeyId || !secretAccessKey) {\n          // Retorna null quando AWS não está configurado completamente\n          // Isso evita erros de injeção de dependência\n          return null;\n        }\n        return new S3StorageAdapter(configService, unifiedLoggerService);\n      },\n      inject: [ConfigService, UnifiedLoggerService],\n    },\n    InputSanitizerValidator,\n  ],\n  exports: [DocumentoService, StorageProviderFactory],\n})\nexport class DocumentoModule {}\n"],"version":3}