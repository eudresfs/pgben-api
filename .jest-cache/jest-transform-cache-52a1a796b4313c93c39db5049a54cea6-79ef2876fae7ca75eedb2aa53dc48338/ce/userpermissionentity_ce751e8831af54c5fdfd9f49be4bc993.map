{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\user-permission.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\user-permission.entity.ts"],"sourcesContent":["import { Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn, Index } from 'typeorm';\nimport { IsNotEmpty, IsUUID, IsEnum, IsOptional, IsString, Length } from 'class-validator';\nimport { Permission } from './permission.entity';\nimport { Usuario } from './usuario.entity';\n\n/**\n * Enum que define os tipos de escopo para permissões\n */\nexport enum TipoEscopo {\n  /**\n   * Escopo global (acesso a todos os recursos)\n   */\n  GLOBAL = 'GLOBAL',\n  \n  /**\n   * Escopo limitado a uma unidade específica\n   */\n  UNIDADE = 'UNIDADE',\n  \n  /**\n   * Escopo limitado ao próprio usuário\n   */\n  PROPRIO = 'PROPRIO'\n}\n\n// Mapeamento para compatibilidade com código existente\nexport const ScopeType = {\n  GLOBAL: TipoEscopo.GLOBAL,\n  UNIT: TipoEscopo.UNIDADE,\n  SELF: TipoEscopo.PROPRIO\n};\n\n/**\n * Entidade que representa permissões atribuídas diretamente a usuários.\n * \n * Estas permissões podem sobrepor-se às permissões da role do usuário,\n * permitindo conceder ou revogar permissões específicas.\n */\n@Entity('usuario_permissao')\n@Index(['usuario_id', 'permissao_id'], { unique: true })\n@Index(['usuario_id'])\n@Index(['permissao_id'])\n@Index(['tipo_escopo'])\n@Index(['escopo_id'])\n@Index(['criado_por'])\n@Index(['created_at'])\nexport class UserPermission {\n  /**\n   * Identificador único do mapeamento\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Referência ao usuário\n   */\n  @Column({ type: 'uuid', name: 'usuario_id' })\n  @IsNotEmpty({ message: 'ID do usuário é obrigatório' })\n  @IsUUID('4', { message: 'ID do usuário inválido' })\n  usuario_id: string;\n\n  /**\n   * Relação com o usuário\n   */\n  @ManyToOne(() => Usuario, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'usuario_id' })\n  usuario: Usuario;\n\n  /**\n   * Referência à permissão\n   */\n  @Column({ type: 'uuid', name: 'permissao_id' })\n  @IsNotEmpty({ message: 'ID da permissão é obrigatório' })\n  @IsUUID('4', { message: 'ID da permissão inválido' })\n  permissao_id: string;\n\n  /**\n   * Relação com a permissão\n   */\n  @ManyToOne(() => Permission, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'permissao_id' })\n  permissao: Permission;\n\n  /**\n   * Se a permissão é concedida (true) ou revogada (false)\n   */\n  @Column({ type: 'boolean', default: true, name: 'concedida' })\n  concedida: boolean;\n\n  /**\n   * Tipo de escopo (GLOBAL, UNIDADE, PROPRIO)\n   */\n  @Column({\n    type: 'varchar',\n    length: 20,\n    name: 'tipo_escopo',\n    default: TipoEscopo.GLOBAL\n  })\n  @IsEnum(TipoEscopo, { message: 'Tipo de escopo inválido' })\n  tipo_escopo: TipoEscopo;\n\n  /**\n   * ID do escopo (ex: ID da unidade)\n   */\n  @Column({ type: 'uuid', nullable: true, name: 'escopo_id' })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do escopo inválido' })\n  escopo_id: string | null;\n\n  /**\n   * Data de validade (para permissões temporárias)\n   */\n  @Column({ type: 'timestamp', nullable: true, name: 'valido_ate' })\n  valido_ate: Date | null;\n\n  /**\n   * Data de criação\n   */\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n\n  /**\n   * Data de última atualização\n   */\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n\n  /**\n   * Usuário que criou o mapeamento\n   */\n  @Column({ type: 'uuid', nullable: true, name: 'criado_por' })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do criador inválido' })\n  criado_por: string | null;\n\n  /**\n   * Relação com o usuário que criou o mapeamento\n   */\n  @ManyToOne(() => Usuario, { nullable: true })\n  @JoinColumn({ name: 'criado_por' })\n  usuario_criador: Usuario | null;\n\n  /**\n   * Usuário que atualizou o mapeamento por último\n   */\n  @Column({ type: 'uuid', nullable: true, name: 'atualizado_por' })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do atualizador inválido' })\n  atualizado_por: string | null;\n\n  /**\n   * Relação com o usuário que atualizou o mapeamento por último\n   */\n  @ManyToOne(() => Usuario, { nullable: true })\n  @JoinColumn({ name: 'atualizado_por' })\n  usuario_atualizador: Usuario | null;\n\n  // Getters e setters para compatibilidade com código existente\n  get userId(): string {\n    return this.usuario_id;\n  }\n\n  set userId(value: string) {\n    this.usuario_id = value;\n  }\n\n  get user(): Usuario {\n    return this.usuario;\n  }\n\n  set user(value: Usuario) {\n    this.usuario = value;\n  }\n\n  get permissionId(): string {\n    return this.permissao_id;\n  }\n\n  set permissionId(value: string) {\n    this.permissao_id = value;\n  }\n\n  get permission(): Permission {\n    return this.permissao;\n  }\n\n  set permission(value: Permission) {\n    this.permissao = value;\n  }\n\n  get granted(): boolean {\n    return this.concedida;\n  }\n\n  set granted(value: boolean) {\n    this.concedida = value;\n  }\n\n  get scopeType(): TipoEscopo {\n    return this.tipo_escopo;\n  }\n\n  set scopeType(value: TipoEscopo) {\n    this.tipo_escopo = value;\n  }\n\n  get scopeId(): string | null {\n    return this.escopo_id;\n  }\n\n  set scopeId(value: string | null) {\n    this.escopo_id = value;\n  }\n\n  get validUntil(): Date | null {\n    return this.valido_ate;\n  }\n\n  set validUntil(value: Date | null) {\n    this.valido_ate = value;\n  }\n\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get createdBy(): string | null {\n    return this.criado_por;\n  }\n\n  set createdBy(value: string | null) {\n    this.criado_por = value;\n  }\n\n  get creator(): Usuario | null {\n    return this.usuario_criador;\n  }\n\n  set creator(value: Usuario | null) {\n    this.usuario_criador = value;\n  }\n\n  get updatedBy(): string | null {\n    return this.atualizado_por;\n  }\n\n  set updatedBy(value: string | null) {\n    this.atualizado_por = value;\n  }\n\n  get updater(): Usuario | null {\n    return this.usuario_atualizador;\n  }\n\n  set updater(value: Usuario | null) {\n    this.usuario_atualizador = value;\n  }\n\n  /**\n   * Verifica se a permissão foi criada por um usuário específico\n   * @param usuarioId ID do usuário\n   * @returns true se foi criada pelo usuário\n   */\n  foiCriadaPor(usuarioId: string): boolean {\n    return this.criado_por === usuarioId;\n  }\n\n  /**\n   * Verifica se a permissão foi atualizada por um usuário específico\n   * @param usuarioId ID do usuário\n   * @returns true se foi atualizada pelo usuário\n   */\n  foiAtualizadaPor(usuarioId: string): boolean {\n    return this.atualizado_por === usuarioId;\n  }\n\n  /**\n   * Verifica se a permissão ainda é válida (não expirou)\n   * @returns true se ainda é válida\n   */\n  isValida(): boolean {\n    if (!this.valido_ate) return true;\n    return new Date() <= this.valido_ate;\n  }\n\n  /**\n   * Verifica se a permissão expirou\n   * @returns true se expirou\n   */\n  isExpirada(): boolean {\n    return !this.isValida();\n  }\n\n  /**\n   * Verifica se a permissão tem escopo global\n   * @returns true se é global\n   */\n  isGlobal(): boolean {\n    return this.tipo_escopo === TipoEscopo.GLOBAL;\n  }\n\n  /**\n   * Verifica se a permissão tem escopo de unidade\n   * @returns true se é por unidade\n   */\n  isPorUnidade(): boolean {\n    return this.tipo_escopo === TipoEscopo.UNIDADE;\n  }\n\n  /**\n   * Verifica se a permissão tem escopo próprio\n   * @returns true se é própria\n   */\n  isPropria(): boolean {\n    return this.tipo_escopo === TipoEscopo.PROPRIO;\n  }\n\n  /**\n   * Verifica se a permissão pertence a um usuário específico\n   * @param usuarioId ID do usuário\n   * @returns true se pertence ao usuário\n   */\n  pertenceAoUsuario(usuarioId: string): boolean {\n    return this.usuario_id === usuarioId;\n  }\n\n  /**\n   * Verifica se a permissão é para uma permissão específica\n   * @param permissaoId ID da permissão\n   * @returns true se é para a permissão\n   */\n  isParaPermissao(permissaoId: string): boolean {\n    return this.permissao_id === permissaoId;\n  }\n\n  /**\n   * Verifica se a permissão tem escopo específico\n   * @param escopoId ID do escopo\n   * @returns true se tem o escopo\n   */\n  temEscopo(escopoId: string): boolean {\n    return this.escopo_id === escopoId;\n  }\n\n  /**\n   * Define a data de validade da permissão\n   * @param data Data de validade\n   */\n  definirValidade(data: Date): void {\n    this.valido_ate = data;\n  }\n\n  /**\n   * Remove a data de validade (torna permanente)\n   */\n  tornarPermanente(): void {\n    this.valido_ate = null;\n  }\n\n  /**\n   * Atualiza o usuário que modificou a permissão\n   * @param usuarioId ID do usuário\n   */\n  atualizarPor(usuarioId: string): void {\n    this.atualizado_por = usuarioId;\n  }\n\n  /**\n   * Obtém uma chave única para a permissão\n   * @returns chave única baseada em usuário e permissão\n   */\n  getUniqueKey(): string {\n    return `${this.usuario_id}:${this.permissao_id}`;\n  }\n\n  /**\n   * Obtém o tempo restante até a expiração em dias\n   * @returns dias até expiração ou null se permanente\n   */\n  getDiasAteExpiracao(): number | null {\n    if (!this.valido_ate) return null;\n    const now = new Date();\n    const diffMs = this.valido_ate.getTime() - now.getTime();\n    return Math.max(0, Math.ceil(diffMs / (1000 * 60 * 60 * 24)));\n  }\n\n  /**\n   * Verifica se a permissão expira em breve\n   * @param dias Número de dias para considerar \"em breve\"\n   * @returns true se expira em breve\n   */\n  expiraEmBreve(dias: number = 7): boolean {\n    const diasRestantes = this.getDiasAteExpiracao();\n    return diasRestantes !== null && diasRestantes <= dias;\n  }\n}\n"],"version":3}