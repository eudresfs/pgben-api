122a76c1f2af2398acdfbd46fb76f33d
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurarFluxoDto = exports.EtapaFluxoDto = exports.TipoAprovador = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
/**
 * Enum para definir os tipos de aprovadores de etapas
 */
var TipoAprovador;
(function (TipoAprovador) {
    TipoAprovador["TECNICO"] = "tecnico";
    TipoAprovador["COORDENADOR_CRAS"] = "coordenador_cras";
    TipoAprovador["COORDENADOR_CREAS"] = "coordenador_creas";
    TipoAprovador["GESTOR_UNIDADE"] = "gestor_unidade";
    TipoAprovador["GESTOR"] = "gestor_semtas";
    TipoAprovador["COMISSAO"] = "comissao";
})(TipoAprovador || (exports.TipoAprovador = TipoAprovador = {}));
/**
 * DTO para etapa de fluxo de aprovação
 */
class EtapaFluxoDto {
    ordem;
    nome;
    descricao;
    tipo_aprovador;
    prazo_dias;
}
exports.EtapaFluxoDto = EtapaFluxoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Ordem da etapa no fluxo de aprovação',
        example: 1,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Ordem é obrigatória' }),
    __metadata("design:type", Number)
], EtapaFluxoDto.prototype, "ordem", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome da etapa',
        example: 'Análise Técnica',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser um texto' }),
    __metadata("design:type", String)
], EtapaFluxoDto.prototype, "nome", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Descrição da etapa',
        example: 'Análise técnica da documentação e critérios de elegibilidade',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Descrição é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser um texto' }),
    __metadata("design:type", String)
], EtapaFluxoDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo de aprovador responsável pela etapa',
        enum: TipoAprovador,
        example: TipoAprovador.TECNICO,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de aprovador é obrigatório' }),
    (0, class_validator_1.IsEnum)(TipoAprovador, { message: 'Tipo de aprovador inválido' }),
    __metadata("design:type", String)
], EtapaFluxoDto.prototype, "tipo_aprovador", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Prazo máximo em dias para conclusão da etapa',
        example: 5,
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], EtapaFluxoDto.prototype, "prazo_dias", void 0);
/**
 * DTO para configuração de fluxo de aprovação
 */
class ConfigurarFluxoDto {
    descricao;
    etapas;
}
exports.ConfigurarFluxoDto = ConfigurarFluxoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Descrição geral do fluxo de aprovação',
        example: 'Fluxo padrão para aprovação de benefícios eventuais',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Descrição é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser um texto' }),
    __metadata("design:type", String)
], ConfigurarFluxoDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Etapas do fluxo de aprovação',
        type: [EtapaFluxoDto],
    }),
    (0, class_validator_1.IsArray)({ message: 'Etapas deve ser um array' }),
    (0, class_validator_1.ArrayMinSize)(1, { message: 'Deve haver pelo menos uma etapa no fluxo' }),
    (0, class_validator_1.ValidateNested)({ each: true }),
    (0, class_transformer_1.Type)(() => EtapaFluxoDto),
    __metadata("design:type", Array)
], ConfigurarFluxoDto.prototype, "etapas", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGJlbmVmaWNpb1xcZHRvXFxjb25maWd1cmFyLWZsdXhvLmR0by50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSw2Q0FBbUU7QUFDbkUscURBUXlCO0FBQ3pCLHlEQUF5QztBQUV6Qzs7R0FFRztBQUNILElBQVksYUFPWDtBQVBELFdBQVksYUFBYTtJQUN2QixvQ0FBbUIsQ0FBQTtJQUNuQixzREFBcUMsQ0FBQTtJQUNyQyx3REFBdUMsQ0FBQTtJQUN2QyxrREFBaUMsQ0FBQTtJQUNqQyx5Q0FBd0IsQ0FBQTtJQUN4QixzQ0FBcUIsQ0FBQTtBQUN2QixDQUFDLEVBUFcsYUFBYSw2QkFBYixhQUFhLFFBT3hCO0FBRUQ7O0dBRUc7QUFDSCxNQUFhLGFBQWE7SUFNeEIsS0FBSyxDQUFTO0lBUWQsSUFBSSxDQUFTO0lBUWIsU0FBUyxDQUFTO0lBU2xCLGNBQWMsQ0FBZ0I7SUFPOUIsVUFBVSxDQUFVO0NBQ3JCO0FBdkNELHNDQXVDQztBQWpDQztJQUxDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxzQ0FBc0M7UUFDbkQsT0FBTyxFQUFFLENBQUM7S0FDWCxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLENBQUM7OzRDQUNqQztBQVFkO0lBTkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLGVBQWU7UUFDNUIsT0FBTyxFQUFFLGlCQUFpQjtLQUMzQixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLENBQUM7SUFDN0MsSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLENBQUM7OzJDQUNuQztBQVFiO0lBTkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLG9CQUFvQjtRQUNqQyxPQUFPLEVBQUUsOERBQThEO0tBQ3hFLENBQUM7SUFDRCxJQUFBLDRCQUFVLEVBQUMsRUFBRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsQ0FBQztJQUNsRCxJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsQ0FBQzs7Z0RBQ25DO0FBU2xCO0lBUEMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLDBDQUEwQztRQUN2RCxJQUFJLEVBQUUsYUFBYTtRQUNuQixPQUFPLEVBQUUsYUFBYSxDQUFDLE9BQU87S0FDL0IsQ0FBQztJQUNELElBQUEsNEJBQVUsRUFBQyxFQUFFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxDQUFDO0lBQzFELElBQUEsd0JBQU0sRUFBQyxhQUFhLEVBQUUsRUFBRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQzs7cURBQ25DO0FBTzlCO0lBTEMsSUFBQSw2QkFBbUIsRUFBQztRQUNuQixXQUFXLEVBQUUsOENBQThDO1FBQzNELE9BQU8sRUFBRSxDQUFDO0tBQ1gsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTs7aURBQ087QUFHdEI7O0dBRUc7QUFDSCxNQUFhLGtCQUFrQjtJQU83QixTQUFTLENBQVM7SUFVbEIsTUFBTSxDQUFrQjtDQUN6QjtBQWxCRCxnREFrQkM7QUFYQztJQU5DLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSx1Q0FBdUM7UUFDcEQsT0FBTyxFQUFFLHFEQUFxRDtLQUMvRCxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLENBQUM7SUFDbEQsSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLENBQUM7O3FEQUNuQztBQVVsQjtJQVJDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw4QkFBOEI7UUFDM0MsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO0tBQ3RCLENBQUM7SUFDRCxJQUFBLHlCQUFPLEVBQUMsRUFBRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQztJQUNoRCxJQUFBLDhCQUFZLEVBQUMsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLDBDQUEwQyxFQUFFLENBQUM7SUFDeEUsSUFBQSxnQ0FBYyxFQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQzlCLElBQUEsd0JBQUksRUFBQyxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUM7O2tEQUNGIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFxiZW5lZmljaW9cXGR0b1xcY29uZmlndXJhci1mbHV4by5kdG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBpUHJvcGVydHksIEFwaVByb3BlcnR5T3B0aW9uYWwgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuaW1wb3J0IHtcbiAgSXNOb3RFbXB0eSxcbiAgSXNTdHJpbmcsXG4gIElzQXJyYXksXG4gIFZhbGlkYXRlTmVzdGVkLFxuICBJc09wdGlvbmFsLFxuICBJc0VudW0sXG4gIEFycmF5TWluU2l6ZSxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcbmltcG9ydCB7IFR5cGUgfSBmcm9tICdjbGFzcy10cmFuc2Zvcm1lcic7XG5cbi8qKlxuICogRW51bSBwYXJhIGRlZmluaXIgb3MgdGlwb3MgZGUgYXByb3ZhZG9yZXMgZGUgZXRhcGFzXG4gKi9cbmV4cG9ydCBlbnVtIFRpcG9BcHJvdmFkb3Ige1xuICBURUNOSUNPID0gJ3RlY25pY28nLFxuICBDT09SREVOQURPUl9DUkFTID0gJ2Nvb3JkZW5hZG9yX2NyYXMnLFxuICBDT09SREVOQURPUl9DUkVBUyA9ICdjb29yZGVuYWRvcl9jcmVhcycsXG4gIEdFU1RPUl9VTklEQURFID0gJ2dlc3Rvcl91bmlkYWRlJyxcbiAgR0VTVE9SID0gJ2dlc3Rvcl9zZW10YXMnLFxuICBDT01JU1NBTyA9ICdjb21pc3NhbycsXG59XG5cbi8qKlxuICogRFRPIHBhcmEgZXRhcGEgZGUgZmx1eG8gZGUgYXByb3Zhw6fDo29cbiAqL1xuZXhwb3J0IGNsYXNzIEV0YXBhRmx1eG9EdG8ge1xuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnT3JkZW0gZGEgZXRhcGEgbm8gZmx1eG8gZGUgYXByb3Zhw6fDo28nLFxuICAgIGV4YW1wbGU6IDEsXG4gIH0pXG4gIEBJc05vdEVtcHR5KHsgbWVzc2FnZTogJ09yZGVtIMOpIG9icmlnYXTDs3JpYScgfSlcbiAgb3JkZW06IG51bWJlcjtcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnTm9tZSBkYSBldGFwYScsXG4gICAgZXhhbXBsZTogJ0Fuw6FsaXNlIFTDqWNuaWNhJyxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnTm9tZSDDqSBvYnJpZ2F0w7NyaW8nIH0pXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdOb21lIGRldmUgc2VyIHVtIHRleHRvJyB9KVxuICBub21lOiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ0Rlc2NyacOnw6NvIGRhIGV0YXBhJyxcbiAgICBleGFtcGxlOiAnQW7DoWxpc2UgdMOpY25pY2EgZGEgZG9jdW1lbnRhw6fDo28gZSBjcml0w6lyaW9zIGRlIGVsZWdpYmlsaWRhZGUnLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdEZXNjcmnDp8OjbyDDqSBvYnJpZ2F0w7NyaWEnIH0pXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdEZXNjcmnDp8OjbyBkZXZlIHNlciB1bSB0ZXh0bycgfSlcbiAgZGVzY3JpY2FvOiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ1RpcG8gZGUgYXByb3ZhZG9yIHJlc3BvbnPDoXZlbCBwZWxhIGV0YXBhJyxcbiAgICBlbnVtOiBUaXBvQXByb3ZhZG9yLFxuICAgIGV4YW1wbGU6IFRpcG9BcHJvdmFkb3IuVEVDTklDTyxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnVGlwbyBkZSBhcHJvdmFkb3Igw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBASXNFbnVtKFRpcG9BcHJvdmFkb3IsIHsgbWVzc2FnZTogJ1RpcG8gZGUgYXByb3ZhZG9yIGludsOhbGlkbycgfSlcbiAgdGlwb19hcHJvdmFkb3I6IFRpcG9BcHJvdmFkb3I7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOiAnUHJhem8gbcOheGltbyBlbSBkaWFzIHBhcmEgY29uY2x1c8OjbyBkYSBldGFwYScsXG4gICAgZXhhbXBsZTogNSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBwcmF6b19kaWFzPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIERUTyBwYXJhIGNvbmZpZ3VyYcOnw6NvIGRlIGZsdXhvIGRlIGFwcm92YcOnw6NvXG4gKi9cbmV4cG9ydCBjbGFzcyBDb25maWd1cmFyRmx1eG9EdG8ge1xuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnRGVzY3Jpw6fDo28gZ2VyYWwgZG8gZmx1eG8gZGUgYXByb3Zhw6fDo28nLFxuICAgIGV4YW1wbGU6ICdGbHV4byBwYWRyw6NvIHBhcmEgYXByb3Zhw6fDo28gZGUgYmVuZWbDrWNpb3MgZXZlbnR1YWlzJyxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnRGVzY3Jpw6fDo28gw6kgb2JyaWdhdMOzcmlhJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnRGVzY3Jpw6fDo28gZGV2ZSBzZXIgdW0gdGV4dG8nIH0pXG4gIGRlc2NyaWNhbzogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdFdGFwYXMgZG8gZmx1eG8gZGUgYXByb3Zhw6fDo28nLFxuICAgIHR5cGU6IFtFdGFwYUZsdXhvRHRvXSxcbiAgfSlcbiAgQElzQXJyYXkoeyBtZXNzYWdlOiAnRXRhcGFzIGRldmUgc2VyIHVtIGFycmF5JyB9KVxuICBAQXJyYXlNaW5TaXplKDEsIHsgbWVzc2FnZTogJ0RldmUgaGF2ZXIgcGVsbyBtZW5vcyB1bWEgZXRhcGEgbm8gZmx1eG8nIH0pXG4gIEBWYWxpZGF0ZU5lc3RlZCh7IGVhY2g6IHRydWUgfSlcbiAgQFR5cGUoKCkgPT4gRXRhcGFGbHV4b0R0bylcbiAgZXRhcGFzOiBFdGFwYUZsdXhvRHRvW107XG59XG4iXSwidmVyc2lvbiI6M30=