{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\configurar-fluxo.dto.ts","mappings":";;;;;;;;;;;;AAAA,6CAAmE;AACnE,qDAQyB;AACzB,yDAAyC;AAEzC;;GAEG;AACH,IAAY,aAOX;AAPD,WAAY,aAAa;IACvB,oCAAmB,CAAA;IACnB,sDAAqC,CAAA;IACrC,wDAAuC,CAAA;IACvC,kDAAiC,CAAA;IACjC,yCAAwB,CAAA;IACxB,sCAAqB,CAAA;AACvB,CAAC,EAPW,aAAa,6BAAb,aAAa,QAOxB;AAED;;GAEG;AACH,MAAa,aAAa;IAMxB,KAAK,CAAS;IAQd,IAAI,CAAS;IAQb,SAAS,CAAS;IASlB,cAAc,CAAgB;IAO9B,UAAU,CAAU;CACrB;AAvCD,sCAuCC;AAjCC;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,sCAAsC;QACnD,OAAO,EAAE,CAAC;KACX,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC;;4CACjC;AAQd;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,eAAe;QAC5B,OAAO,EAAE,iBAAiB;KAC3B,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC;IAC7C,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;;2CACnC;AAQb;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,oBAAoB;QACjC,OAAO,EAAE,8DAA8D;KACxE,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;IAClD,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;;gDACnC;AASlB;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,0CAA0C;QACvD,IAAI,EAAE,aAAa;QACnB,OAAO,EAAE,aAAa,CAAC,OAAO;KAC/B,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC;IAC1D,IAAA,wBAAM,EAAC,aAAa,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;;qDACnC;AAO9B;IALC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,8CAA8C;QAC3D,OAAO,EAAE,CAAC;KACX,CAAC;IACD,IAAA,4BAAU,GAAE;;iDACO;AAGtB;;GAEG;AACH,MAAa,kBAAkB;IAO7B,SAAS,CAAS;IAUlB,MAAM,CAAkB;CACzB;AAlBD,gDAkBC;AAXC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,qDAAqD;KAC/D,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;IAClD,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;;qDACnC;AAUlB;IARC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8BAA8B;QAC3C,IAAI,EAAE,CAAC,aAAa,CAAC;KACtB,CAAC;IACD,IAAA,yBAAO,EAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;IAChD,IAAA,8BAAY,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,0CAA0C,EAAE,CAAC;IACxE,IAAA,gCAAc,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAC9B,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,aAAa,CAAC;;kDACF","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\configurar-fluxo.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsArray,\n  ValidateNested,\n  IsOptional,\n  IsEnum,\n  ArrayMinSize,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\n/**\n * Enum para definir os tipos de aprovadores de etapas\n */\nexport enum TipoAprovador {\n  TECNICO = 'tecnico',\n  COORDENADOR_CRAS = 'coordenador_cras',\n  COORDENADOR_CREAS = 'coordenador_creas',\n  GESTOR_UNIDADE = 'gestor_unidade',\n  GESTOR = 'gestor_semtas',\n  COMISSAO = 'comissao',\n}\n\n/**\n * DTO para etapa de fluxo de aprovação\n */\nexport class EtapaFluxoDto {\n  @ApiProperty({\n    description: 'Ordem da etapa no fluxo de aprovação',\n    example: 1,\n  })\n  @IsNotEmpty({ message: 'Ordem é obrigatória' })\n  ordem: number;\n\n  @ApiProperty({\n    description: 'Nome da etapa',\n    example: 'Análise Técnica',\n  })\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  @IsString({ message: 'Nome deve ser um texto' })\n  nome: string;\n\n  @ApiProperty({\n    description: 'Descrição da etapa',\n    example: 'Análise técnica da documentação e critérios de elegibilidade',\n  })\n  @IsNotEmpty({ message: 'Descrição é obrigatória' })\n  @IsString({ message: 'Descrição deve ser um texto' })\n  descricao: string;\n\n  @ApiProperty({\n    description: 'Tipo de aprovador responsável pela etapa',\n    enum: TipoAprovador,\n    example: TipoAprovador.TECNICO,\n  })\n  @IsNotEmpty({ message: 'Tipo de aprovador é obrigatório' })\n  @IsEnum(TipoAprovador, { message: 'Tipo de aprovador inválido' })\n  tipo_aprovador: TipoAprovador;\n\n  @ApiPropertyOptional({\n    description: 'Prazo máximo em dias para conclusão da etapa',\n    example: 5,\n  })\n  @IsOptional()\n  prazo_dias?: number;\n}\n\n/**\n * DTO para configuração de fluxo de aprovação\n */\nexport class ConfigurarFluxoDto {\n  @ApiProperty({\n    description: 'Descrição geral do fluxo de aprovação',\n    example: 'Fluxo padrão para aprovação de benefícios eventuais',\n  })\n  @IsNotEmpty({ message: 'Descrição é obrigatória' })\n  @IsString({ message: 'Descrição deve ser um texto' })\n  descricao: string;\n\n  @ApiProperty({\n    description: 'Etapas do fluxo de aprovação',\n    type: [EtapaFluxoDto],\n  })\n  @IsArray({ message: 'Etapas deve ser um array' })\n  @ArrayMinSize(1, { message: 'Deve haver pelo menos uma etapa no fluxo' })\n  @ValidateNested({ each: true })\n  @Type(() => EtapaFluxoDto)\n  etapas: EtapaFluxoDto[];\n}\n"],"version":3}