{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\decorators\\get-integrador.decorator.ts","mappings":";;;AAAA,2CAAwE;AAExE;;;;;;;;;;;GAWG;AACU,QAAA,aAAa,GAAG,IAAA,6BAAoB,EAC/C,CAAC,IAAa,EAAE,GAAqB,EAAE,EAAE;IACvC,MAAM,OAAO,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;IAChD,OAAO,OAAO,CAAC,UAAU,CAAC;AAC5B,CAAC,CACF,CAAC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\decorators\\get-integrador.decorator.ts"],"sourcesContent":["import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\n/**\n * Decorator para injetar o objeto integrador na assinatura do método do controller.\n * Extrai o integrador do objeto de requisição que foi previamente configurado pelo guard.\n *\n * @example\n * // Uso em um método de controller\n * @Get('recursos')\n * getRecursos(@GetIntegrador() integrador: Integrador) {\n *   // O integrador já está disponível aqui\n *   return `Recursos para ${integrador.nome}`;\n * }\n */\nexport const GetIntegrador = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.integrador;\n  },\n);\n"],"version":3}