{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-info-bancaria.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-info-bancaria.dto.ts"],"sourcesContent":["import {\n  IsNotEmpty,\n  IsOptional,\n  IsEnum,\n  IsString,\n  MaxLength,\n  IsUUID,\n  Matches,\n} from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { TipoConta, TipoChavePix } from '../../../enums/info-bancaria.enum';\n\n/**\n * DTO para criação de informações bancárias\n */\nexport class CreateInfoBancariaDto {\n  @ApiProperty({\n    description: 'ID do cidadão',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  @IsUUID('4', { message: 'ID do cidadão deve ser um UUID válido' })\n  cidadao_id: string;\n\n  @ApiProperty({\n    description: 'Código do banco (3 dígitos)',\n    example: '001',\n    maxLength: 3,\n  })\n  @IsOptional()\n  @IsString({ message: 'Código do banco deve ser uma string' })\n  @Matches(/^\\d{3}$/, { message: 'Código do banco deve ter 3 dígitos' })\n  banco?: string;\n\n  @ApiProperty({\n    description: 'Nome do banco',\n    example: 'Banco do Brasil S.A.',\n    maxLength: 100,\n  })\n  @IsOptional()\n  @IsString({ message: 'Nome do banco deve ser uma string' })\n  @MaxLength(100, {\n    message: 'Nome do banco deve ter no máximo 100 caracteres',\n  })\n  nome_banco?: string;\n\n  @ApiProperty({\n    description: 'Número da agência',\n    example: '1234-5',\n    maxLength: 10,\n  })\n  @IsOptional()\n  @IsString({ message: 'Agência deve ser uma string' })\n  @Matches(/^\\d{4,5}(-\\d)?$/, {\n    message: 'Agência deve ter formato válido (ex: 1234 ou 1234-5)',\n  })\n  agencia?: string;\n\n  @ApiProperty({\n    description: 'Número da conta',\n    example: '12345678-9',\n    maxLength: 20,\n  })\n  @IsOptional()\n  @IsString({ message: 'Conta deve ser uma string' })\n  @Matches(/^\\d{1,15}(-\\d)?$/, { message: 'Conta deve ter formato válido' })\n  conta?: string;\n\n  @ApiProperty({\n    description: 'Tipo da conta bancária',\n    enum: TipoConta,\n    example: TipoConta.POUPANCA_SOCIAL,\n  })\n  @IsEnum(TipoConta, { message: 'Tipo de conta inválido' })\n  @IsOptional()\n  tipo_conta?: TipoConta;\n\n  @ApiPropertyOptional({\n    description: 'Chave PIX',\n    example: '12345678901',\n    maxLength: 255,\n  })\n  @IsNotEmpty({ message: 'Chave PIX é obrigatória' })\n  @IsString({ message: 'Chave PIX deve ser uma string' })\n  @MaxLength(255, { message: 'Chave PIX deve ter no máximo 255 caracteres' })\n  chave_pix: string;\n\n  @ApiPropertyOptional({\n    description: 'Tipo da chave PIX',\n    enum: TipoChavePix,\n    example: TipoChavePix.CPF,\n  })\n  @IsNotEmpty({ message: 'Tipo da chave PIX é obrigatório' })\n  @IsEnum(TipoChavePix, { message: 'Tipo de chave PIX inválido' })\n  tipo_chave_pix?: TipoChavePix;\n\n  @ApiPropertyOptional({\n    description: 'Observações sobre a conta bancária',\n    example: 'Conta poupança social para recebimento de benefícios',\n  })\n  @IsOptional()\n  @IsString({ message: 'Observações devem ser uma string' })\n  observacoes?: string;\n}\n"],"version":3}