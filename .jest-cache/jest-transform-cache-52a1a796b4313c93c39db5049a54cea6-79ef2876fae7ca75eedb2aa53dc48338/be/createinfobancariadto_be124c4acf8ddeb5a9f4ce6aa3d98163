74ff490caf8ad0f9ccf291e2563e5122
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateInfoBancariaDto = void 0;
const class_validator_1 = require("class-validator");
const swagger_1 = require("@nestjs/swagger");
const info_bancaria_enum_1 = require("../../../enums/info-bancaria.enum");
/**
 * DTO para criação de informações bancárias
 */
class CreateInfoBancariaDto {
    cidadao_id;
    banco;
    nome_banco;
    agencia;
    conta;
    tipo_conta;
    chave_pix;
    tipo_chave_pix;
    observacoes;
}
exports.CreateInfoBancariaDto = CreateInfoBancariaDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do cidadão',
        example: '123e4567-e89b-12d3-a456-426614174000',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID do cidadão é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do cidadão deve ser um UUID válido' }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "cidadao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Código do banco (3 dígitos)',
        example: '001',
        maxLength: 3,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Código do banco deve ser uma string' }),
    (0, class_validator_1.Matches)(/^\d{3}$/, { message: 'Código do banco deve ter 3 dígitos' }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "banco", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome do banco',
        example: 'Banco do Brasil S.A.',
        maxLength: 100,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Nome do banco deve ser uma string' }),
    (0, class_validator_1.MaxLength)(100, {
        message: 'Nome do banco deve ter no máximo 100 caracteres',
    }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "nome_banco", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Número da agência',
        example: '1234-5',
        maxLength: 10,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Agência deve ser uma string' }),
    (0, class_validator_1.Matches)(/^\d{4,5}(-\d)?$/, {
        message: 'Agência deve ter formato válido (ex: 1234 ou 1234-5)',
    }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "agencia", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Número da conta',
        example: '12345678-9',
        maxLength: 20,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Conta deve ser uma string' }),
    (0, class_validator_1.Matches)(/^\d{1,15}(-\d)?$/, { message: 'Conta deve ter formato válido' }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "conta", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo da conta bancária',
        enum: info_bancaria_enum_1.TipoConta,
        example: info_bancaria_enum_1.TipoConta.POUPANCA_SOCIAL,
    }),
    (0, class_validator_1.IsEnum)(info_bancaria_enum_1.TipoConta, { message: 'Tipo de conta inválido' }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_a = typeof info_bancaria_enum_1.TipoConta !== "undefined" && info_bancaria_enum_1.TipoConta) === "function" ? _a : Object)
], CreateInfoBancariaDto.prototype, "tipo_conta", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Chave PIX',
        example: '12345678901',
        maxLength: 255,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Chave PIX é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Chave PIX deve ser uma string' }),
    (0, class_validator_1.MaxLength)(255, { message: 'Chave PIX deve ter no máximo 255 caracteres' }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "chave_pix", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tipo da chave PIX',
        enum: info_bancaria_enum_1.TipoChavePix,
        example: info_bancaria_enum_1.TipoChavePix.CPF,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo da chave PIX é obrigatório' }),
    (0, class_validator_1.IsEnum)(info_bancaria_enum_1.TipoChavePix, { message: 'Tipo de chave PIX inválido' }),
    __metadata("design:type", typeof (_b = typeof info_bancaria_enum_1.TipoChavePix !== "undefined" && info_bancaria_enum_1.TipoChavePix) === "function" ? _b : Object)
], CreateInfoBancariaDto.prototype, "tipo_chave_pix", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Observações sobre a conta bancária',
        example: 'Conta poupança social para recebimento de benefícios',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Observações devem ser uma string' }),
    __metadata("design:type", String)
], CreateInfoBancariaDto.prototype, "observacoes", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNpZGFkYW9cXGR0b1xcY3JlYXRlLWluZm8tYmFuY2FyaWEuZHRvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxxREFReUI7QUFDekIsNkNBQW1FO0FBQ25FLDBFQUE0RTtBQUU1RTs7R0FFRztBQUNILE1BQWEscUJBQXFCO0lBT2hDLFVBQVUsQ0FBUztJQVVuQixLQUFLLENBQVU7SUFZZixVQUFVLENBQVU7SUFZcEIsT0FBTyxDQUFVO0lBVWpCLEtBQUssQ0FBVTtJQVNmLFVBQVUsQ0FBYTtJQVV2QixTQUFTLENBQVM7SUFTbEIsY0FBYyxDQUFnQjtJQVE5QixXQUFXLENBQVU7Q0FDdEI7QUF4RkQsc0RBd0ZDO0FBakZDO0lBTkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLGVBQWU7UUFDNUIsT0FBTyxFQUFFLHNDQUFzQztLQUNoRCxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLENBQUM7SUFDdEQsSUFBQSx3QkFBTSxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSx1Q0FBdUMsRUFBRSxDQUFDOzt5REFDL0M7QUFVbkI7SUFSQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsNkJBQTZCO1FBQzFDLE9BQU8sRUFBRSxLQUFLO1FBQ2QsU0FBUyxFQUFFLENBQUM7S0FDYixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLENBQUM7SUFDNUQsSUFBQSx5QkFBTyxFQUFDLFNBQVMsRUFBRSxFQUFFLE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxDQUFDOztvREFDdkQ7QUFZZjtJQVZDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxlQUFlO1FBQzVCLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsU0FBUyxFQUFFLEdBQUc7S0FDZixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLENBQUM7SUFDMUQsSUFBQSwyQkFBUyxFQUFDLEdBQUcsRUFBRTtRQUNkLE9BQU8sRUFBRSxpREFBaUQ7S0FDM0QsQ0FBQzs7eURBQ2tCO0FBWXBCO0lBVkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLG1CQUFtQjtRQUNoQyxPQUFPLEVBQUUsUUFBUTtRQUNqQixTQUFTLEVBQUUsRUFBRTtLQUNkLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsQ0FBQztJQUNwRCxJQUFBLHlCQUFPLEVBQUMsaUJBQWlCLEVBQUU7UUFDMUIsT0FBTyxFQUFFLHNEQUFzRDtLQUNoRSxDQUFDOztzREFDZTtBQVVqQjtJQVJDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxpQkFBaUI7UUFDOUIsT0FBTyxFQUFFLFlBQVk7UUFDckIsU0FBUyxFQUFFLEVBQUU7S0FDZCxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLENBQUM7SUFDbEQsSUFBQSx5QkFBTyxFQUFDLGtCQUFrQixFQUFFLEVBQUUsT0FBTyxFQUFFLCtCQUErQixFQUFFLENBQUM7O29EQUMzRDtBQVNmO0lBUEMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLHdCQUF3QjtRQUNyQyxJQUFJLEVBQUUsOEJBQVM7UUFDZixPQUFPLEVBQUUsOEJBQVMsQ0FBQyxlQUFlO0tBQ25DLENBQUM7SUFDRCxJQUFBLHdCQUFNLEVBQUMsOEJBQVMsRUFBRSxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxDQUFDO0lBQ3hELElBQUEsNEJBQVUsR0FBRTtrREFDQSw4QkFBUyxvQkFBVCw4QkFBUzt5REFBQztBQVV2QjtJQVJDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsV0FBVyxFQUFFLFdBQVc7UUFDeEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsU0FBUyxFQUFFLEdBQUc7S0FDZixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLENBQUM7SUFDbEQsSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLCtCQUErQixFQUFFLENBQUM7SUFDdEQsSUFBQSwyQkFBUyxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSw2Q0FBNkMsRUFBRSxDQUFDOzt3REFDekQ7QUFTbEI7SUFQQyxJQUFBLDZCQUFtQixFQUFDO1FBQ25CLFdBQVcsRUFBRSxtQkFBbUI7UUFDaEMsSUFBSSxFQUFFLGlDQUFZO1FBQ2xCLE9BQU8sRUFBRSxpQ0FBWSxDQUFDLEdBQUc7S0FDMUIsQ0FBQztJQUNELElBQUEsNEJBQVUsRUFBQyxFQUFFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxDQUFDO0lBQzFELElBQUEsd0JBQU0sRUFBQyxpQ0FBWSxFQUFFLEVBQUUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLENBQUM7a0RBQy9DLGlDQUFZLG9CQUFaLGlDQUFZOzZEQUFDO0FBUTlCO0lBTkMsSUFBQSw2QkFBbUIsRUFBQztRQUNuQixXQUFXLEVBQUUsb0NBQW9DO1FBQ2pELE9BQU8sRUFBRSxzREFBc0Q7S0FDaEUsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxDQUFDOzswREFDckMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNpZGFkYW9cXGR0b1xcY3JlYXRlLWluZm8tYmFuY2FyaWEuZHRvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIElzTm90RW1wdHksXG4gIElzT3B0aW9uYWwsXG4gIElzRW51bSxcbiAgSXNTdHJpbmcsXG4gIE1heExlbmd0aCxcbiAgSXNVVUlELFxuICBNYXRjaGVzLFxufSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuaW1wb3J0IHsgQXBpUHJvcGVydHksIEFwaVByb3BlcnR5T3B0aW9uYWwgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuaW1wb3J0IHsgVGlwb0NvbnRhLCBUaXBvQ2hhdmVQaXggfSBmcm9tICcuLi8uLi8uLi9lbnVtcy9pbmZvLWJhbmNhcmlhLmVudW0nO1xuXG4vKipcbiAqIERUTyBwYXJhIGNyaWHDp8OjbyBkZSBpbmZvcm1hw6fDtWVzIGJhbmPDoXJpYXNcbiAqL1xuZXhwb3J0IGNsYXNzIENyZWF0ZUluZm9CYW5jYXJpYUR0byB7XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdJRCBkbyBjaWRhZMOjbycsXG4gICAgZXhhbXBsZTogJzEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCcsXG4gIH0pXG4gIEBJc05vdEVtcHR5KHsgbWVzc2FnZTogJ0lEIGRvIGNpZGFkw6NvIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgQElzVVVJRCgnNCcsIHsgbWVzc2FnZTogJ0lEIGRvIGNpZGFkw6NvIGRldmUgc2VyIHVtIFVVSUQgdsOhbGlkbycgfSlcbiAgY2lkYWRhb19pZDogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdDw7NkaWdvIGRvIGJhbmNvICgzIGTDrWdpdG9zKScsXG4gICAgZXhhbXBsZTogJzAwMScsXG4gICAgbWF4TGVuZ3RoOiAzLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdDw7NkaWdvIGRvIGJhbmNvIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBNYXRjaGVzKC9eXFxkezN9JC8sIHsgbWVzc2FnZTogJ0PDs2RpZ28gZG8gYmFuY28gZGV2ZSB0ZXIgMyBkw61naXRvcycgfSlcbiAgYmFuY28/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ05vbWUgZG8gYmFuY28nLFxuICAgIGV4YW1wbGU6ICdCYW5jbyBkbyBCcmFzaWwgUy5BLicsXG4gICAgbWF4TGVuZ3RoOiAxMDAsXG4gIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ05vbWUgZG8gYmFuY28gZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1heExlbmd0aCgxMDAsIHtcbiAgICBtZXNzYWdlOiAnTm9tZSBkbyBiYW5jbyBkZXZlIHRlciBubyBtw6F4aW1vIDEwMCBjYXJhY3RlcmVzJyxcbiAgfSlcbiAgbm9tZV9iYW5jbz86IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnTsO6bWVybyBkYSBhZ8OqbmNpYScsXG4gICAgZXhhbXBsZTogJzEyMzQtNScsXG4gICAgbWF4TGVuZ3RoOiAxMCxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnQWfDqm5jaWEgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1hdGNoZXMoL15cXGR7NCw1fSgtXFxkKT8kLywge1xuICAgIG1lc3NhZ2U6ICdBZ8OqbmNpYSBkZXZlIHRlciBmb3JtYXRvIHbDoWxpZG8gKGV4OiAxMjM0IG91IDEyMzQtNSknLFxuICB9KVxuICBhZ2VuY2lhPzogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdOw7ptZXJvIGRhIGNvbnRhJyxcbiAgICBleGFtcGxlOiAnMTIzNDU2NzgtOScsXG4gICAgbWF4TGVuZ3RoOiAyMCxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnQ29udGEgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1hdGNoZXMoL15cXGR7MSwxNX0oLVxcZCk/JC8sIHsgbWVzc2FnZTogJ0NvbnRhIGRldmUgdGVyIGZvcm1hdG8gdsOhbGlkbycgfSlcbiAgY29udGE/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ1RpcG8gZGEgY29udGEgYmFuY8OhcmlhJyxcbiAgICBlbnVtOiBUaXBvQ29udGEsXG4gICAgZXhhbXBsZTogVGlwb0NvbnRhLlBPVVBBTkNBX1NPQ0lBTCxcbiAgfSlcbiAgQElzRW51bShUaXBvQ29udGEsIHsgbWVzc2FnZTogJ1RpcG8gZGUgY29udGEgaW52w6FsaWRvJyB9KVxuICBASXNPcHRpb25hbCgpXG4gIHRpcG9fY29udGE/OiBUaXBvQ29udGE7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOiAnQ2hhdmUgUElYJyxcbiAgICBleGFtcGxlOiAnMTIzNDU2Nzg5MDEnLFxuICAgIG1heExlbmd0aDogMjU1LFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdDaGF2ZSBQSVggw6kgb2JyaWdhdMOzcmlhJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnQ2hhdmUgUElYIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBNYXhMZW5ndGgoMjU1LCB7IG1lc3NhZ2U6ICdDaGF2ZSBQSVggZGV2ZSB0ZXIgbm8gbcOheGltbyAyNTUgY2FyYWN0ZXJlcycgfSlcbiAgY2hhdmVfcGl4OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOiAnVGlwbyBkYSBjaGF2ZSBQSVgnLFxuICAgIGVudW06IFRpcG9DaGF2ZVBpeCxcbiAgICBleGFtcGxlOiBUaXBvQ2hhdmVQaXguQ1BGLFxuICB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdUaXBvIGRhIGNoYXZlIFBJWCDDqSBvYnJpZ2F0w7NyaW8nIH0pXG4gIEBJc0VudW0oVGlwb0NoYXZlUGl4LCB7IG1lc3NhZ2U6ICdUaXBvIGRlIGNoYXZlIFBJWCBpbnbDoWxpZG8nIH0pXG4gIHRpcG9fY2hhdmVfcGl4PzogVGlwb0NoYXZlUGl4O1xuXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHtcbiAgICBkZXNjcmlwdGlvbjogJ09ic2VydmHDp8O1ZXMgc29icmUgYSBjb250YSBiYW5jw6FyaWEnLFxuICAgIGV4YW1wbGU6ICdDb250YSBwb3VwYW7Dp2Egc29jaWFsIHBhcmEgcmVjZWJpbWVudG8gZGUgYmVuZWbDrWNpb3MnLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdPYnNlcnZhw6fDtWVzIGRldmVtIHNlciB1bWEgc3RyaW5nJyB9KVxuICBvYnNlcnZhY29lcz86IHN0cmluZztcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==