{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\services\\dados-funeral.service.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\services\\dados-funeral.service.ts"],"sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { DadosFuneral } from '../../../entities/dados-funeral.entity';\nimport {\n  CreateDadosFuneralDto,\n  UpdateDadosFuneralDto,\n} from '../dto/create-dados-funeral.dto';\n\n/**\n * Serviço para gerenciar dados específicos de Auxílio Funeral\n */\n@Injectable()\nexport class DadosFuneralService {\n  constructor(\n    @InjectRepository(DadosFuneral)\n    private readonly dadosFuneralRepository: Repository<DadosFuneral>,\n  ) {}\n\n  /**\n   * Criar dados de funeral para uma solicitação\n   */\n  async create(createDto: CreateDadosFuneralDto): Promise<DadosFuneral> {\n    // Verificar se já existem dados para esta solicitação\n    const existingData = await this.dadosFuneralRepository.findOne({\n      where: { solicitacao_id: createDto.solicitacao_id },\n    });\n\n    if (existingData) {\n      throw new Error('Já existem dados de funeral para esta solicitação');\n    }\n\n    const dadosFuneral = this.dadosFuneralRepository.create(createDto);\n    return this.dadosFuneralRepository.save(dadosFuneral);\n  }\n\n  /**\n   * Buscar dados de funeral por ID\n   */\n  async findOne(id: string): Promise<DadosFuneral> {\n    const dadosFuneral = await this.dadosFuneralRepository.findOne({\n      where: { id },\n      relations: ['solicitacao'],\n    });\n\n    if (!dadosFuneral) {\n      throw new NotFoundException('Dados de funeral não encontrados');\n    }\n\n    return dadosFuneral;\n  }\n\n  /**\n   * Buscar dados de funeral por solicitação\n   */\n  async findBySolicitacao(solicitacaoId: string): Promise<DadosFuneral> {\n    const dadosFuneral = await this.dadosFuneralRepository.findOne({\n      where: { solicitacao_id: solicitacaoId },\n      relations: ['solicitacao'],\n    });\n\n    if (!dadosFuneral) {\n      throw new NotFoundException(\n        'Dados de funeral não encontrados para esta solicitação',\n      );\n    }\n\n    return dadosFuneral;\n  }\n\n  /**\n   * Atualizar dados de funeral\n   */\n  async update(\n    id: string,\n    updateDto: UpdateDadosFuneralDto,\n  ): Promise<DadosFuneral> {\n    const dadosFuneral = await this.findOne(id);\n\n    // Atualizar apenas os campos fornecidos\n    Object.assign(dadosFuneral, updateDto);\n\n    return this.dadosFuneralRepository.save(dadosFuneral);\n  }\n\n  /**\n   * Remover dados de funeral\n   */\n  async remove(id: string): Promise<void> {\n    const dadosFuneral = await this.findOne(id);\n    await this.dadosFuneralRepository.remove(dadosFuneral);\n  }\n\n  /**\n   * Verificar se existem dados de funeral para uma solicitação\n   */\n  async existsBySolicitacao(solicitacaoId: string): Promise<boolean> {\n    const count = await this.dadosFuneralRepository.count({\n      where: { solicitacao_id: solicitacaoId },\n    });\n    return count > 0;\n  }\n\n  /**\n   * Buscar todos os dados de funeral com paginação\n   */\n  async findAll(\n    page: number = 1,\n    limit: number = 10,\n  ): Promise<{\n    data: DadosFuneral[];\n    total: number;\n    page: number;\n    limit: number;\n  }> {\n    const [data, total] = await this.dadosFuneralRepository.findAndCount({\n      relations: ['solicitacao'],\n      skip: (page - 1) * limit,\n      take: limit,\n      order: { created_at: 'DESC' },\n    });\n\n    return {\n      data,\n      total,\n      page,\n      limit,\n    };\n  }\n\n  /**\n   * Buscar dados por grau de parentesco\n   */\n  async findByGrauParentesco(\n    grauParentesco: string,\n    page: number = 1,\n    limit: number = 10,\n  ): Promise<{\n    data: DadosFuneral[];\n    total: number;\n    page: number;\n    limit: number;\n  }> {\n    const [data, total] = await this.dadosFuneralRepository.findAndCount({\n      where: { grau_parentesco_requerente: grauParentesco as any },\n      relations: ['solicitacao'],\n      skip: (page - 1) * limit,\n      take: limit,\n      order: { created_at: 'DESC' },\n    });\n\n    return {\n      data,\n      total,\n      page,\n      limit,\n    };\n  }\n\n  /**\n   * Buscar dados por período de óbito\n   */\n  async findByPeriodoObito(\n    dataInicio: Date,\n    dataFim: Date,\n    page: number = 1,\n    limit: number = 10,\n  ): Promise<{\n    data: DadosFuneral[];\n    total: number;\n    page: number;\n    limit: number;\n  }> {\n    const [data, total] = await this.dadosFuneralRepository.findAndCount({\n      where: {\n        data_obito: {\n          gte: dataInicio,\n          lte: dataFim,\n        } as any,\n      },\n      relations: ['solicitacao'],\n      skip: (page - 1) * limit,\n      take: limit,\n      order: { data_obito: 'DESC' },\n    });\n\n    return {\n      data,\n      total,\n      page,\n      limit,\n    };\n  }\n}\n"],"version":3}