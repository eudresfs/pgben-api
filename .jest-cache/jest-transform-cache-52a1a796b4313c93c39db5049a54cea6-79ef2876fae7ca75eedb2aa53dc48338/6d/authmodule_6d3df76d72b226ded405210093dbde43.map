{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\auth.module.ts","mappings":";;;;;;;;;;;;;AAAA,0BAA0B;AAC1B,2CAAwC;AACxC,6CAAgD;AAChD,qCAAwC;AACxC,2CAA6D;AAC7D,yDAAoD;AACpD,+CAAkD;AAElD,cAAc;AACd,mEAA+D;AAC/D,uFAAkF;AAClF,qFAAgF;AAEhF,WAAW;AACX,0DAAsD;AACtD,4EAAuE;AACvE,8EAAyE;AACzE,4EAAuE;AACvE,sEAAkE;AAElE,WAAW;AACX,2EAAgE;AAChE,yFAA6E;AAC7E,2EAAgE;AAEhE,aAAa;AACb,sEAAiE;AACjE,4EAAuE;AACvE,gEAA4D;AAE5D,SAAS;AACT,4DAAuD;AACvD,sDAAkD;AAClD,gEAA4D;AAE5D,SAAS;AACT,qDAAuD;AAEvD,UAAU;AACV,sEAAkE;AAClE,2CAA4C;AAC5C,wDAAoD;AACpD,kEAAiE;AACjE,2DAAuD;AAEvD;;;;;;;;;GASG;AA6FI,IAAM,UAAU,GAAhB,MAAM,UAAU;IAKQ;IAJ7B;;;OAGG;IACH,YAA6B,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QACvD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,YAAY,CAAC;QAE1E,IAAI,aAAa,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;CACF,CAAA;AAdY,gCAAU;qBAAV,UAAU;IA5FtB,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,2BAA2B;YAC3B,yBAAc,CAAC,QAAQ,CAAC;gBACtB,eAAe,EAAE,KAAK;gBACtB,QAAQ,EAAE,MAAM;gBAChB,OAAO,EAAE,KAAK;aACf,CAAC;YAEF,uBAAuB;YACvB,uBAAa,CAAC,UAAU,CAAC;gBACvB,mCAAY;gBACZ,gDAAkB;gBAClB,mCAAY;aACb,CAAC;YAEF,iCAAiC;YACjC,eAAS,CAAC,aAAa,CAAC;gBACtB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,MAAM,EAAE,CAAC,sBAAa,CAAC;gBACvB,UAAU,EAAE,4BAAe;gBAC3B,MAAM,EAAE,IAAI,EAAE,yCAAyC;aACxD,CAAC;YAEF,qDAAqD;YACrD,2BAAW,CAAC,aAAa,CAAC;gBACxB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,MAAM,EAAE,CAAC,sBAAa,CAAC;gBACvB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,CAAC;oBAC7C,QAAQ,EAAE,IAAI;oBACd,GAAG,EAAE,aAAa,CAAC,GAAG,CAAS,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,mBAAmB;oBAC/E,GAAG,EAAE,aAAa,CAAC,GAAG,CAAS,iBAAiB,EAAE,IAAI,CAAC,EAAE,oBAAoB;oBAC7E,KAAK,EAAE,QAAQ,EAAE,uCAAuC;iBACzD,CAAC;aACH,CAAC;YAEF,uBAAuB;YACvB,qBAAY;YACZ,IAAA,mBAAU,EAAC,GAAG,EAAE,CAAC,8BAAa,CAAC;YAC/B,IAAA,mBAAU,EAAC,GAAG,EAAE,CAAC,0BAAW,CAAC;YAC7B,+BAAe;YACf,oCAAgB;SACjB;QAED,WAAW,EAAE;YACX,gCAAc;YACd,mDAAuB;YACvB,iDAAsB;SACvB;QAED,SAAS,EAAE;YACT,kEAAkE;YAClE,8BAAa;YACb,mCAAe;YACf,yCAAkB;YAElB,SAAS;YACT,6BAAY;YACZ,wBAAU;YACV,kCAAe;YAEf,sBAAsB;YACtB,0BAAW;YACX,2CAAmB;YACnB,6CAAoB;YACpB,2CAAmB;YACnB,sCAAiB;SAClB;QAED,OAAO,EAAE;YACP,0CAA0C;YAC1C,0BAAW;YACX,sCAAiB;YACjB,2CAAmB;YAEnB,oCAAoC;YACpC,6BAAY;YACZ,wBAAU;YACV,kCAAe;YAEf,mCAAmC;YACnC,mCAAe;YACf,yCAAkB;YAClB,8BAAa;YAEb,8BAA8B;YAC9B,eAAS;YAET,wCAAwC;YACxC,yBAAc;SACf;KACF,CAAC;yDAM4C,sBAAa,oBAAb,sBAAa;GAL9C,UAAU,CActB","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\auth.module.ts"],"sourcesContent":["// src/auth/auth.module.ts\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { PassportModule } from '@nestjs/passport';\n\n// Controllers\nimport { AuthController } from './controllers/auth.controller';\nimport { PasswordResetController } from './controllers/password-reset.controller';\nimport { JwtBlacklistController } from './controllers/jwt-blacklist.controller';\n\n// Services\nimport { AuthService } from './services/auth.service';\nimport { RefreshTokenService } from './services/refresh-token.service';\nimport { PasswordResetService } from './services/password-reset.service';\nimport { JwtBlacklistService } from './services/jwt-blacklist.service';\nimport { PermissionService } from './services/permission.service';\n\n// Entities\nimport { RefreshToken } from '../entities/refresh-token.entity';\nimport { PasswordResetToken } from '../entities/password-reset-token.entity';\nimport { JwtBlacklist } from '../entities/jwt-blacklist.entity';\n\n// Strategies\nimport { JwtAuthStrategy } from './strategies/jwt-auth.strategy';\nimport { JwtRefreshStrategy } from './strategies/jwt-refresh.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\n\n// Guards\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\nimport { RolesGuard } from './guards/roles.guard';\nimport { PermissionGuard } from './guards/permission.guard';\n\n// Config\nimport { createJwtConfig } from '../config/jwt.config';\n\n// Modules\nimport { UsuarioModule } from '../modules/usuario/usuario.module';\nimport { forwardRef } from '@nestjs/common';\nimport { AuditModule } from '../audit/audit.module';\nimport { AppLoggerModule } from '../shared/logger/logger.module';\nimport { PermissionModule } from './permission.module';\n\n/**\n * Módulo de Autenticação e Autorização\n * \n * Responsável por:\n * - Autenticação JWT e local\n * - Gerenciamento de tokens de refresh\n * - Recuperação e reset de senhas\n * - Controle de permissões e roles\n * - Blacklist de tokens JWT\n */\n@Module({\n  imports: [\n    // Configuração do Passport\n    PassportModule.register({ \n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false \n    }),\n\n    // Entidades do TypeORM\n    TypeOrmModule.forFeature([\n      RefreshToken,\n      PasswordResetToken,\n      JwtBlacklist,\n    ]),\n\n    // Configuração assíncrona do JWT\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: createJwtConfig,\n      global: true, // Disponibiliza o JwtService globalmente\n    }),\n\n    // Configuração do Cache com configurações otimizadas\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        isGlobal: true,\n        ttl: configService.get<number>('CACHE_TTL', 5 * 60 * 1000), // 5 minutos padrão\n        max: configService.get<number>('CACHE_MAX_ITEMS', 1000), // 1000 itens padrão\n        store: 'memory', // Explicitamente definido para clareza\n      }),\n    }),\n\n    // Módulos da aplicação\n    ConfigModule,\n    forwardRef(() => UsuarioModule),\n    forwardRef(() => AuditModule),\n    AppLoggerModule,\n    PermissionModule,\n  ],\n\n  controllers: [\n    AuthController,\n    PasswordResetController,\n    JwtBlacklistController,\n  ],\n\n  providers: [\n    // Estratégias (o NestJS gerencia automaticamente com @Injectable)\n    LocalStrategy,\n    JwtAuthStrategy,\n    JwtRefreshStrategy,\n\n    // Guards\n    JwtAuthGuard,\n    RolesGuard,\n    PermissionGuard,\n\n    // Serviços principais\n    AuthService,\n    RefreshTokenService,\n    PasswordResetService,\n    JwtBlacklistService,\n    PermissionService,\n  ],\n\n  exports: [\n    // Serviços essenciais para outros módulos\n    AuthService,\n    PermissionService,\n    JwtBlacklistService,\n\n    // Guards para uso em outros módulos\n    JwtAuthGuard,\n    RolesGuard,\n    PermissionGuard,\n\n    // Estratégias para extensibilidade\n    JwtAuthStrategy,\n    JwtRefreshStrategy,\n    LocalStrategy,\n\n    // Módulo JWT para uso externo\n    JwtModule,\n\n    // Passport para configurações avançadas\n    PassportModule,\n  ],\n})\nexport class AuthModule {\n  /**\n   * Configuração opcional para desenvolvimento\n   * Remove logs sensíveis em produção\n   */\n  constructor(private readonly configService: ConfigService) {\n    const isDevelopment = this.configService.get('NODE_ENV') !== 'production';\n    \n    if (isDevelopment) {\n      console.log('AuthModule initialized');\n      console.log('Available guards: JWT, Roles, Permission');\n      console.log('Available strategies: Local, JWT, Refresh');\n    }\n  }\n}"],"version":3}