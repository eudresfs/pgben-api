{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\controllers\\composicao-familiar.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\controllers\\composicao-familiar.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  ParseUUIDPipe,\n  UseGuards,\n  Request,\n  Logger,\n  Query,\n  DefaultValuePipe,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiParam,\n  ApiOkResponse,\n  ApiNotFoundResponse,\n  ApiBadRequestResponse,\n  ApiConflictResponse,\n  ApiQuery,\n  ApiExtraModels,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { ScopeType } from '../../../entities/user-permission.entity';\nimport { ApiErrorResponse } from '../../../shared/dtos/api-error-response.dto';\nimport { CreateComposicaoFamiliarDto } from '../dto/create-composicao-familiar.dto';\nimport { UpdateComposicaoFamiliarDto } from '../dto/update-composicao-familiar.dto';\nimport {\n  ComposicaoFamiliarResponseDto,\n  ComposicaoFamiliarPaginatedResponseDto,\n} from '../dto/composicao-familiar-response.dto';\nimport { ComposicaoFamiliarService } from '../services/composicao-familiar.service';\nimport { CidadaoAuditInterceptor } from '../interceptors/cidadao-audit.interceptor';\nimport { UseInterceptors } from '@nestjs/common';\n\n/**\n * Controlador de Composição Familiar\n *\n * Responsável por gerenciar as rotas relacionadas aos membros da composição familiar dos cidadãos\n */\n@ApiTags('Cidadão')\n@ApiExtraModels(\n  ComposicaoFamiliarResponseDto,\n  ComposicaoFamiliarPaginatedResponseDto,\n)\n@Controller('composicao-familiar')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\n@UseInterceptors(CidadaoAuditInterceptor)\nexport class ComposicaoFamiliarController {\n  private readonly logger = new Logger(ComposicaoFamiliarController.name);\n\n  constructor(\n    private readonly composicaoFamiliarService: ComposicaoFamiliarService,\n  ) {}\n\n  /**\n   * Cria um novo membro da composição familiar\n   */\n  @Post()\n  @RequiresPermission({\n    permissionName: 'cidadao.editar',\n    scopeType: ScopeType.UNIT,\n    scopeIdExpression: 'cidadao.unidadeId',\n  })\n  @ApiOperation({\n    summary: 'Criar membro da composição familiar',\n    description: 'Adiciona um novo membro à composição familiar de um cidadão.',\n  })\n  @ApiOkResponse({\n    description: 'Membro da composição familiar criado com sucesso',\n    type: ComposicaoFamiliarResponseDto,\n  })\n  @ApiBadRequestResponse({\n    description: 'Dados inválidos fornecidos',\n    type: ApiErrorResponse,\n  })\n  @ApiConflictResponse({\n    description: 'CPF já cadastrado na composição familiar',\n    type: ApiErrorResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Cidadão não encontrado',\n    type: ApiErrorResponse,\n  })\n  async create(\n    @Body() createComposicaoFamiliarDto: CreateComposicaoFamiliarDto,\n    @Request() req,\n  ): Promise<ComposicaoFamiliarResponseDto> {\n    const startTime = Date.now();\n    const requestId = `CF-CREATE-${Date.now()}`;\n    this.logger.log(\n      `[${requestId}] Início da criação de membro da composição familiar`,\n    );\n\n    try {\n      const result = await this.composicaoFamiliarService.create(\n        createComposicaoFamiliarDto,\n        req?.user?.id,\n      );\n\n      const totalTime = Date.now() - startTime;\n      if (totalTime > 500) {\n        this.logger.warn(\n          `[${requestId}] Operação lenta (create): ${totalTime}ms`,\n        );\n      } else {\n        this.logger.log(`[${requestId}] Operação concluída em ${totalTime}ms`);\n      }\n\n      return result;\n    } catch (error) {\n      const totalTime = Date.now() - startTime;\n      this.logger.error(\n        `[${requestId}] Erro em ${totalTime}ms: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Lista membros da composição familiar por cidadão\n   */\n  @Get('cidadao/:cidadaoId')\n  @RequiresPermission({\n    permissionName: 'cidadao.visualizar',\n    scopeType: ScopeType.UNIT,\n    scopeIdExpression: 'cidadao.unidadeId',\n  })\n  @ApiOperation({\n    summary: 'Listar membros da composição familiar',\n    description:\n      'Retorna uma lista paginada dos membros da composição familiar de um cidadão.',\n  })\n  @ApiParam({\n    name: 'cidadaoId',\n    description: 'ID do cidadão',\n    type: 'string',\n    format: 'uuid',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Número da página (padrão: 1)',\n    example: 1,\n  })\n  @ApiQuery({\n    name: 'limit',\n    required: false,\n    type: Number,\n    description: 'Itens por página (padrão: 10, máximo: 100)',\n    example: 10,\n  })\n  @ApiOkResponse({\n    description:\n      'Lista de membros da composição familiar retornada com sucesso',\n    type: ComposicaoFamiliarPaginatedResponseDto,\n  })\n  @ApiNotFoundResponse({\n    description: 'Cidadão não encontrado',\n    type: ApiErrorResponse,\n  })\n  async findByCidadao(\n    @Param('cidadaoId', ParseUUIDPipe) cidadaoId: string,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n  ): Promise<ComposicaoFamiliarPaginatedResponseDto> {\n    const startTime = Date.now();\n    const requestId = `CF-LIST-${cidadaoId.substring(0, 8)}-${Date.now()}`;\n    this.logger.log(`[${requestId}] Início da listagem de composição familiar`);\n\n    try {\n      const result = await this.composicaoFamiliarService.findByCidadao(\n        cidadaoId,\n        { page, limit },\n      );\n\n      const totalTime = Date.now() - startTime;\n      if (totalTime > 300) {\n        this.logger.warn(\n          `[${requestId}] Operação lenta (findByCidadao): ${totalTime}ms`,\n        );\n      } else {\n        this.logger.log(`[${requestId}] Operação concluída em ${totalTime}ms`);\n      }\n\n      return result;\n    } catch (error) {\n      const totalTime = Date.now() - startTime;\n      this.logger.error(\n        `[${requestId}] Erro em ${totalTime}ms: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Busca um membro específico da composição familiar\n   */\n  @Get(':id')\n  @RequiresPermission({\n    permissionName: 'cidadao.visualizar',\n    scopeType: ScopeType.UNIT,\n    scopeIdExpression: 'composicaoFamiliar.cidadao.unidadeId',\n  })\n  @ApiOperation({\n    summary: 'Buscar membro da composição familiar',\n    description:\n      'Retorna os dados de um membro específico da composição familiar.',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'ID do membro da composição familiar',\n    type: 'string',\n    format: 'uuid',\n  })\n  @ApiOkResponse({\n    description: 'Membro da composição familiar encontrado',\n    type: ComposicaoFamiliarResponseDto,\n  })\n  @ApiNotFoundResponse({\n    description: 'Membro da composição familiar não encontrado',\n    type: ApiErrorResponse,\n  })\n  async findOne(\n    @Param('id', ParseUUIDPipe) id: string,\n  ): Promise<ComposicaoFamiliarResponseDto> {\n    const startTime = Date.now();\n    const requestId = `CF-GET-${id.substring(0, 8)}-${Date.now()}`;\n    this.logger.log(\n      `[${requestId}] Início da busca de membro da composição familiar`,\n    );\n\n    try {\n      const result = await this.composicaoFamiliarService.findOne(id);\n\n      const totalTime = Date.now() - startTime;\n      if (totalTime > 200) {\n        this.logger.warn(\n          `[${requestId}] Operação lenta (findOne): ${totalTime}ms`,\n        );\n      } else {\n        this.logger.log(`[${requestId}] Operação concluída em ${totalTime}ms`);\n      }\n\n      return result;\n    } catch (error) {\n      const totalTime = Date.now() - startTime;\n      this.logger.error(\n        `[${requestId}] Erro em ${totalTime}ms: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Atualiza um membro da composição familiar\n   */\n  @Put(':id')\n  @RequiresPermission({\n    permissionName: 'cidadao.editar',\n    scopeType: ScopeType.UNIT,\n    scopeIdExpression: 'composicaoFamiliar.cidadao.unidadeId',\n  })\n  @ApiOperation({\n    summary: 'Atualizar membro da composição familiar',\n    description: 'Atualiza os dados de um membro da composição familiar.',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'ID do membro da composição familiar',\n    type: 'string',\n    format: 'uuid',\n  })\n  @ApiOkResponse({\n    description: 'Membro da composição familiar atualizado com sucesso',\n    type: ComposicaoFamiliarResponseDto,\n  })\n  @ApiBadRequestResponse({\n    description: 'Dados inválidos fornecidos',\n    type: ApiErrorResponse,\n  })\n  @ApiConflictResponse({\n    description: 'CPF já cadastrado na composição familiar',\n    type: ApiErrorResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Membro da composição familiar não encontrado',\n    type: ApiErrorResponse,\n  })\n  async update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateComposicaoFamiliarDto: UpdateComposicaoFamiliarDto,\n    @Request() req,\n  ): Promise<ComposicaoFamiliarResponseDto> {\n    const startTime = Date.now();\n    const requestId = `CF-UPDATE-${id.substring(0, 8)}-${Date.now()}`;\n    this.logger.log(\n      `[${requestId}] Início da atualização de membro da composição familiar`,\n    );\n\n    try {\n      const result = await this.composicaoFamiliarService.update(\n        id,\n        updateComposicaoFamiliarDto,\n        req?.user?.id,\n      );\n\n      const totalTime = Date.now() - startTime;\n      if (totalTime > 500) {\n        this.logger.warn(\n          `[${requestId}] Operação lenta (update): ${totalTime}ms`,\n        );\n      } else {\n        this.logger.log(`[${requestId}] Operação concluída em ${totalTime}ms`);\n      }\n\n      return result;\n    } catch (error) {\n      const totalTime = Date.now() - startTime;\n      this.logger.error(\n        `[${requestId}] Erro em ${totalTime}ms: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Remove um membro da composição familiar\n   */\n  @Delete(':id')\n  @RequiresPermission({\n    permissionName: 'cidadao.editar',\n    scopeType: ScopeType.UNIT,\n    scopeIdExpression: 'composicaoFamiliar.cidadao.unidadeId',\n  })\n  @ApiOperation({\n    summary: 'Remover membro da composição familiar',\n    description: 'Remove um membro da composição familiar (soft delete).',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'ID do membro da composição familiar',\n    type: 'string',\n    format: 'uuid',\n  })\n  @ApiOkResponse({\n    description: 'Membro da composição familiar removido com sucesso',\n  })\n  @ApiNotFoundResponse({\n    description: 'Membro da composição familiar não encontrado',\n    type: ApiErrorResponse,\n  })\n  async remove(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Request() req,\n  ): Promise<{ message: string }> {\n    const startTime = Date.now();\n    const requestId = `CF-DELETE-${id.substring(0, 8)}-${Date.now()}`;\n    this.logger.log(\n      `[${requestId}] Início da remoção de membro da composição familiar`,\n    );\n\n    try {\n      await this.composicaoFamiliarService.remove(id, req?.user?.id);\n\n      const totalTime = Date.now() - startTime;\n      if (totalTime > 300) {\n        this.logger.warn(\n          `[${requestId}] Operação lenta (remove): ${totalTime}ms`,\n        );\n      } else {\n        this.logger.log(`[${requestId}] Operação concluída em ${totalTime}ms`);\n      }\n\n      return { message: 'Membro da composição familiar removido com sucesso' };\n    } catch (error) {\n      const totalTime = Date.now() - startTime;\n      this.logger.error(\n        `[${requestId}] Erro em ${totalTime}ms: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Busca membros da composição familiar por CPF\n   */\n  @Get('buscar/cpf/:cpf')\n  @RequiresPermission({\n    permissionName: 'cidadao.visualizar',\n    scopeType: ScopeType.UNIT,\n    scopeIdExpression: 'user.unidadeId',\n  })\n  @ApiOperation({\n    summary: 'Buscar membro por CPF',\n    description: 'Busca membros da composição familiar pelo CPF.',\n  })\n  @ApiParam({\n    name: 'cpf',\n    description: 'CPF do membro (apenas números)',\n    type: 'string',\n    example: '12345678901',\n  })\n  @ApiOkResponse({\n    description: 'Membros encontrados',\n    type: [ComposicaoFamiliarResponseDto],\n  })\n  async findByCpf(\n    @Param('cpf') cpf: string,\n  ): Promise<ComposicaoFamiliarResponseDto[]> {\n    const startTime = Date.now();\n    const requestId = `CF-CPF-${cpf.substring(0, 4)}-${Date.now()}`;\n    this.logger.log(`[${requestId}] Início da busca por CPF`);\n\n    try {\n      const result = await this.composicaoFamiliarService.findByCpf(cpf);\n\n      const totalTime = Date.now() - startTime;\n      if (totalTime > 200) {\n        this.logger.warn(\n          `[${requestId}] Operação lenta (findByCpf): ${totalTime}ms`,\n        );\n      } else {\n        this.logger.log(`[${requestId}] Operação concluída em ${totalTime}ms`);\n      }\n\n      return result;\n    } catch (error) {\n      const totalTime = Date.now() - startTime;\n      this.logger.error(\n        `[${requestId}] Erro em ${totalTime}ms: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n}\n"],"version":3}