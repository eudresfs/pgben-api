8107919abe1fe05c41a69247ee4ff03c
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateSetorDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
/**
 * DTO para atualização de setor
 */
class UpdateSetorDto {
    nome;
    descricao;
    sigla;
    unidade_id;
    status;
}
exports.UpdateSetorDto = UpdateSetorDto;
__decorate([
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: 'Setor de Atendimento',
        description: 'Nome do setor',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateSetorDto.prototype, "nome", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: 'Responsável pelo atendimento inicial aos cidadãos',
        description: 'Descrição das atividades do setor',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateSetorDto.prototype, "descricao", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Sigla deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: 'SA',
        description: 'Sigla do setor',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateSetorDto.prototype, "sigla", void 0);
__decorate([
    (0, class_validator_1.IsUUID)(undefined, { message: 'ID da unidade inválido' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: '123e4567-e89b-12d3-a456-426614174000',
        description: 'ID da unidade à qual o setor pertence',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateSetorDto.prototype, "unidade_id", void 0);
__decorate([
    (0, class_validator_1.IsBoolean)({ message: 'Status deve ser um booleano' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: true,
        description: 'Status do setor (ativo/inativo)',
        required: false,
    }),
    __metadata("design:type", Boolean)
], UpdateSetorDto.prototype, "status", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXHVuaWRhZGVcXGR0b1xcdXBkYXRlLXNldG9yLmR0by50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSw2Q0FBOEM7QUFDOUMscURBQTBFO0FBRTFFOztHQUVHO0FBQ0gsTUFBYSxjQUFjO0lBUXpCLElBQUksQ0FBVTtJQVNkLFNBQVMsQ0FBVTtJQVNuQixLQUFLLENBQVU7SUFTZixVQUFVLENBQVU7SUFTcEIsTUFBTSxDQUFXO0NBQ2xCO0FBN0NELHdDQTZDQztBQXJDQztJQVBDLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxDQUFDO0lBQ2pELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEscUJBQVcsRUFBQztRQUNYLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsV0FBVyxFQUFFLGVBQWU7UUFDNUIsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQzs7NENBQ1k7QUFTZDtJQVBDLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxDQUFDO0lBQ3RELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEscUJBQVcsRUFBQztRQUNYLE9BQU8sRUFBRSxtREFBbUQ7UUFDNUQsV0FBVyxFQUFFLG1DQUFtQztRQUNoRCxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDOztpREFDaUI7QUFTbkI7SUFQQyxJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsQ0FBQztJQUNsRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHFCQUFXLEVBQUM7UUFDWCxPQUFPLEVBQUUsSUFBSTtRQUNiLFdBQVcsRUFBRSxnQkFBZ0I7UUFDN0IsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQzs7NkNBQ2E7QUFTZjtJQVBDLElBQUEsd0JBQU0sRUFBQyxTQUFTLEVBQUUsRUFBRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQztJQUN4RCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHFCQUFXLEVBQUM7UUFDWCxPQUFPLEVBQUUsc0NBQXNDO1FBQy9DLFdBQVcsRUFBRSx1Q0FBdUM7UUFDcEQsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQzs7a0RBQ2tCO0FBU3BCO0lBUEMsSUFBQSwyQkFBUyxFQUFDLEVBQUUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLENBQUM7SUFDckQsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSxxQkFBVyxFQUFDO1FBQ1gsT0FBTyxFQUFFLElBQUk7UUFDYixXQUFXLEVBQUUsaUNBQWlDO1FBQzlDLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7OzhDQUNlIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFx1bmlkYWRlXFxkdG9cXHVwZGF0ZS1zZXRvci5kdG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBpUHJvcGVydHkgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuaW1wb3J0IHsgSXNTdHJpbmcsIElzT3B0aW9uYWwsIElzVVVJRCwgSXNCb29sZWFuIH0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcblxuLyoqXG4gKiBEVE8gcGFyYSBhdHVhbGl6YcOnw6NvIGRlIHNldG9yXG4gKi9cbmV4cG9ydCBjbGFzcyBVcGRhdGVTZXRvckR0byB7XG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdOb21lIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQEFwaVByb3BlcnR5KHtcbiAgICBleGFtcGxlOiAnU2V0b3IgZGUgQXRlbmRpbWVudG8nLFxuICAgIGRlc2NyaXB0aW9uOiAnTm9tZSBkbyBzZXRvcicsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBub21lPzogc3RyaW5nO1xuXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdEZXNjcmnDp8OjbyBkZXZlIHNlciB1bWEgc3RyaW5nJyB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZXhhbXBsZTogJ1Jlc3BvbnPDoXZlbCBwZWxvIGF0ZW5kaW1lbnRvIGluaWNpYWwgYW9zIGNpZGFkw6NvcycsXG4gICAgZGVzY3JpcHRpb246ICdEZXNjcmnDp8OjbyBkYXMgYXRpdmlkYWRlcyBkbyBzZXRvcicsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBkZXNjcmljYW8/OiBzdHJpbmc7XG5cbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ1NpZ2xhIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQEFwaVByb3BlcnR5KHtcbiAgICBleGFtcGxlOiAnU0EnLFxuICAgIGRlc2NyaXB0aW9uOiAnU2lnbGEgZG8gc2V0b3InLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgc2lnbGE/OiBzdHJpbmc7XG5cbiAgQElzVVVJRCh1bmRlZmluZWQsIHsgbWVzc2FnZTogJ0lEIGRhIHVuaWRhZGUgaW52w6FsaWRvJyB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZXhhbXBsZTogJzEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCcsXG4gICAgZGVzY3JpcHRpb246ICdJRCBkYSB1bmlkYWRlIMOgIHF1YWwgbyBzZXRvciBwZXJ0ZW5jZScsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICB1bmlkYWRlX2lkPzogc3RyaW5nO1xuXG4gIEBJc0Jvb2xlYW4oeyBtZXNzYWdlOiAnU3RhdHVzIGRldmUgc2VyIHVtIGJvb2xlYW5vJyB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZXhhbXBsZTogdHJ1ZSxcbiAgICBkZXNjcmlwdGlvbjogJ1N0YXR1cyBkbyBzZXRvciAoYXRpdm8vaW5hdGl2byknLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgc3RhdHVzPzogYm9vbGVhbjtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==