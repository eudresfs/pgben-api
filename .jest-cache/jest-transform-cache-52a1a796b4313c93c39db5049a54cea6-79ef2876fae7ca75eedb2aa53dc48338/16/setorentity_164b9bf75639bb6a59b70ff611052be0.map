{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\setor.entity.ts","mappings":";;;;;;;;;;;;;AAAA,sCAAsC;AACtC,qCAWiB;AACjB,qDAA6E;AAC7E,qDAA2C;AAC3C,qDAA2C;AAMpC,IAAM,KAAK,GAAX,MAAM,KAAK;IAEhB,EAAE,CAAS;IAOX,IAAI,CAAS;IAGb,KAAK,CAAS;IAGd,SAAS,CAAS;IAGlB,UAAU,CAAS;IAInB,OAAO,CAAU;IAGjB,MAAM,CAAU;IAGhB,UAAU,CAAO;IAGjB,UAAU,CAAO;IAGjB,UAAU,CAAO;IAEjB;;OAEG;IAEH,QAAQ,CAAY;CACrB,CAAA;AAzCY,sBAAK;AAEhB;IADC,IAAA,gCAAsB,EAAC,MAAM,CAAC;;iCACpB;AAOX;IALC,IAAA,gBAAM,GAAE;IACR,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC;IAC7C,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;IACjD,IAAA,2BAAS,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC;IACjE,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,wCAAwC,EAAE,CAAC;;mCACzD;AAGb;IADC,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;;oCAC7B;AAGd;IADC,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;wCACT;AAGlB;IADC,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;yCACT;AAInB;IAFC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,wBAAO,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;IACtD,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;kDAC1B,wBAAO,oBAAP,wBAAO;sCAAC;AAGjB;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;qCAC3B;AAGhB;IADC,IAAA,0BAAgB,GAAE;kDACP,IAAI,oBAAJ,IAAI;yCAAC;AAGjB;IADC,IAAA,0BAAgB,GAAE;kDACP,IAAI,oBAAJ,IAAI;yCAAC;AAGjB;IADC,IAAA,0BAAgB,GAAE;kDACP,IAAI,oBAAJ,IAAI;yCAAC;AAMjB;IADC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,wBAAO,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;;uCACjC;gBAxCT,KAAK;IAJjB,IAAA,gBAAM,EAAC,OAAO,CAAC;IACf,IAAA,eAAK,EAAC,CAAC,MAAM,CAAC,CAAC;IACf,IAAA,eAAK,EAAC,CAAC,YAAY,CAAC,CAAC;IACrB,IAAA,eAAK,EAAC,CAAC,QAAQ,CAAC,CAAC;GACL,KAAK,CAyCjB","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\setor.entity.ts"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  OneToMany,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { IsNotEmpty, IsString, MinLength, MaxLength } from 'class-validator';\nimport { Unidade } from './unidade.entity';\nimport { Usuario } from './usuario.entity';\n\n@Entity('setor')\n@Index(['nome'])\n@Index(['unidade_id'])\n@Index(['status'])\nexport class Setor {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  @IsString({ message: 'Nome deve ser uma string' })\n  @MinLength(3, { message: 'Nome deve ter no mínimo 3 caracteres' })\n  @MaxLength(100, { message: 'Nome deve ter no máximo 100 caracteres' })\n  nome: string;\n\n  @Column({ nullable: true, default: 'N/A' })\n  sigla: string;\n\n  @Column({ nullable: true })\n  descricao: string;\n\n  @Column({ nullable: false })\n  unidade_id: string;\n\n  @ManyToOne(() => Unidade, (unidade) => unidade.setores)\n  @JoinColumn({ name: 'unidade_id' })\n  unidade: Unidade;\n\n  @Column({ type: 'boolean', default: true })\n  status: boolean;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  /**\n   * Relacionamento com os usuários do setor\n   */\n  @OneToMany(() => Usuario, (usuario) => usuario.setor)\n  usuarios: Usuario[];\n}\n"],"version":3}