{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\logs\\controllers\\logs.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\logs\\controllers\\logs.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Param,\n  Query,\n  UseGuards,\n  Res,\n  NotFoundException,\n  Header,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiQuery,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { TipoEscopo } from '../../../entities/user-permission.entity';\nimport { LogsService } from '../services/logs.service';\nimport { LogsFilterDto, CriticidadeLog } from '../dto/logs-filter.dto';\nimport { LogResponseDto } from '../dto/log-response.dto';\n\n/**\n * Controlador para gerenciamento de logs de auditoria\n */\n@ApiTags('Logs')\n@Controller('logs')\n@UseGuards(JwtAuthGuard, PermissionGuard)\n@ApiBearerAuth()\nexport class LogsController {\n  constructor(private readonly logsService: LogsService) {}\n\n  /**\n   * Lista logs com filtros e paginação\n   */\n  @Get()\n  @RequiresPermission(\n    { permissionName: '*.*' },\n    {\n      permissionName: 'log.ler',\n      scopeType: TipoEscopo.GLOBAL,\n    }\n  )\n  @ApiOperation({ summary: 'Listar logs de auditoria' })\n  @ApiResponse({\n    status: 200,\n    description: 'Logs listados com sucesso',\n    type: LogResponseDto,\n    isArray: true,\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Página atual',\n  })\n  @ApiQuery({\n    name: 'limit',\n    required: false,\n    type: Number,\n    description: 'Itens por página',\n  })\n  @ApiQuery({\n    name: 'entidade',\n    required: false,\n    type: String,\n    description: 'Filtro por entidade',\n  })\n  @ApiQuery({\n    name: 'entidade_id',\n    required: false,\n    type: String,\n    description: 'Filtro por ID da entidade',\n  })\n  @ApiQuery({\n    name: 'usuario_id',\n    required: false,\n    type: String,\n    description: 'Filtro por usuário',\n  })\n  @ApiQuery({\n    name: 'acao',\n    required: false,\n    type: String,\n    description: 'Filtro por ação',\n  })\n  @ApiQuery({\n    name: 'modulo',\n    required: false,\n    type: String,\n    description: 'Filtro por módulo',\n  })\n  @ApiQuery({\n    name: 'criticidade',\n    required: false,\n    enum: CriticidadeLog,\n    description: 'Filtro por criticidade',\n  })\n  @ApiQuery({\n    name: 'data_inicio',\n    required: false,\n    type: String,\n    description: 'Data inicial (formato: YYYY-MM-DD)',\n  })\n  @ApiQuery({\n    name: 'data_fim',\n    required: false,\n    type: String,\n    description: 'Data final (formato: YYYY-MM-DD)',\n  })\n  async findAll(@Query() filter: LogsFilterDto) {\n    return this.logsService.findAll(filter);\n  }\n\n  /**\n   * Obtém detalhes de um log específico\n   */\n  @Get(':id')\n  @RequiresPermission(\n    { permissionName: '*.*' },\n    {\n      permissionName: 'log.ler',\n      scopeType: TipoEscopo.GLOBAL,\n    }\n  )\n  @ApiOperation({ summary: 'Obter detalhes de um log' })\n  @ApiResponse({\n    status: 200,\n    description: 'Log encontrado com sucesso',\n    type: LogResponseDto,\n  })\n  @ApiResponse({ status: 404, description: 'Log não encontrado' })\n  async findOne(@Param('id') id: string) {\n    return this.logsService.findById(id);\n  }\n\n  /**\n   * Lista entidades disponíveis para filtro\n   */\n  @Get('entidades/listar')\n  @RequiresPermission({\n    permissionName: 'log.ler',\n    scopeType: TipoEscopo.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Listar entidades disponíveis para filtro' })\n  @ApiResponse({\n    status: 200,\n    description: 'Entidades listadas com sucesso',\n    type: String,\n    isArray: true,\n  })\n  async listarEntidades() {\n    return this.logsService.listarEntidades();\n  }\n\n  /**\n   * Lista módulos disponíveis para filtro\n   */\n  @Get('modulos/listar')\n  @RequiresPermission(\n    { permissionName: '*.*' },\n    {\n      permissionName: 'log.ler',\n      scopeType: TipoEscopo.GLOBAL,\n    }\n  )\n  @ApiOperation({ summary: 'Listar módulos disponíveis para filtro' })\n  @ApiResponse({\n    status: 200,\n    description: 'Módulos listados com sucesso',\n    type: String,\n    isArray: true,\n  })\n  async listarModulos() {\n    return this.logsService.listarModulos();\n  }\n\n  /**\n   * Lista ações disponíveis para filtro\n   */\n  @Get('acoes/listar')\n  @RequiresPermission(\n    { permissionName: '*.*' },\n    {\n      permissionName: 'log.ler',\n      scopeType: TipoEscopo.GLOBAL,\n    }\n  )\n  @ApiOperation({ summary: 'Listar ações disponíveis para filtro' })\n  @ApiResponse({\n    status: 200,\n    description: 'Ações listadas com sucesso',\n    type: String,\n    isArray: true,\n  })\n  async listarAcoes() {\n    return this.logsService.listarAcoes();\n  }\n\n  /**\n   * Lista criticidades disponíveis para filtro\n   */\n  @Get('criticidades/listar')\n  @RequiresPermission(\n    { permissionName: '*.*' },\n    {\n      permissionName: 'log.ler',\n      scopeType: TipoEscopo.GLOBAL,\n    }\n  )\n  @ApiOperation({ summary: 'Listar criticidades disponíveis para filtro' })\n  @ApiResponse({\n    status: 200,\n    description: 'Criticidades listadas com sucesso',\n    type: String,\n    isArray: true,\n  })\n  async listarCriticidades() {\n    return this.logsService.listarCriticidades();\n  }\n\n  /**\n   * Exporta logs para CSV\n   */\n  @Get('exportar/csv')\n  @RequiresPermission(\n    { permissionName: '*.*' },\n    {\n      permissionName: 'log.exportar',\n      scopeType: TipoEscopo.GLOBAL,\n    }\n  )\n  @ApiOperation({ summary: 'Exportar logs para CSV' })\n  @ApiResponse({\n    status: 200,\n    description: 'Logs exportados com sucesso',\n  })\n  @Header('Content-Type', 'text/csv')\n  @Header('Content-Disposition', 'attachment; filename=logs.csv')\n  async exportarCsv(@Query() filter: LogsFilterDto, @Res() res: Response) {\n    const buffer = await this.logsService.exportarCsv(filter);\n    res.send(buffer);\n  }\n}\n"],"version":3}