565cf4f633df01c445a3c4daaf832edf
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelefoneValidator = void 0;
const class_validator_1 = require("class-validator");
/**
 * Validador personalizado para telefones brasileiros
 *
 * Aceita formatos:
 * - (00) 00000-0000 (celular)
 * - (00) 0000-0000 (fixo)
 * - 00000000000 (celular sem formatação)
 * - 0000000000 (fixo sem formatação)
 */
let TelefoneValidator = class TelefoneValidator {
    validate(text, args) {
        if (!text) {
            return true;
        } // Permite valores vazios (use @IsNotEmpty se quiser tornar obrigatório)
        // Remove todos os caracteres não numéricos
        const numeroLimpo = text.replace(/\D/g, '');
        // Verifica se o número tem 10 (fixo) ou 11 (celular) dígitos
        if (numeroLimpo.length !== 10 && numeroLimpo.length !== 11) {
            return false;
        }
        // Verifica se o DDD é válido (entre 11 e 99)
        const ddd = parseInt(numeroLimpo.substring(0, 2));
        if (ddd < 11 || ddd > 99) {
            return false;
        }
        // Verifica se o primeiro dígito do número de celular é 9 (para números de 11 dígitos)
        if (numeroLimpo.length === 11 && numeroLimpo.charAt(2) !== '9') {
            return false;
        }
        return true;
    }
    defaultMessage(args) {
        return 'Telefone inválido. Formatos aceitos: (00) 00000-0000, (00) 0000-0000, 00000000000 ou 0000000000';
    }
};
exports.TelefoneValidator = TelefoneValidator;
exports.TelefoneValidator = TelefoneValidator = __decorate([
    (0, class_validator_1.ValidatorConstraint)({ name: 'telefoneValidator', async: false })
], TelefoneValidator);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNpZGFkYW9cXHZhbGlkYXRvcnNcXHRlbGVmb25lLXZhbGlkYXRvci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxxREFJeUI7QUFFekI7Ozs7Ozs7O0dBUUc7QUFFSSxJQUFNLGlCQUFpQixHQUF2QixNQUFNLGlCQUFpQjtJQUM1QixRQUFRLENBQUMsSUFBWSxFQUFFLElBQXlCO1FBQzlDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNWLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLHdFQUF3RTtRQUUxRSwyQ0FBMkM7UUFDM0MsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFNUMsNkRBQTZEO1FBQzdELElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxFQUFFLElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxFQUFFLEVBQUUsQ0FBQztZQUMzRCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7UUFFRCw2Q0FBNkM7UUFDN0MsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEQsSUFBSSxHQUFHLEdBQUcsRUFBRSxJQUFJLEdBQUcsR0FBRyxFQUFFLEVBQUUsQ0FBQztZQUN6QixPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7UUFFRCxzRkFBc0Y7UUFDdEYsSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLEVBQUUsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1lBQy9ELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELGNBQWMsQ0FBQyxJQUF5QjtRQUN0QyxPQUFPLGlHQUFpRyxDQUFDO0lBQzNHLENBQUM7Q0FDRixDQUFBO0FBL0JZLDhDQUFpQjs0QkFBakIsaUJBQWlCO0lBRDdCLElBQUEscUNBQW1CLEVBQUMsRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDO0dBQ3BELGlCQUFpQixDQStCN0IiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNpZGFkYW9cXHZhbGlkYXRvcnNcXHRlbGVmb25lLXZhbGlkYXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBWYWxpZGF0b3JDb25zdHJhaW50LFxuICBWYWxpZGF0b3JDb25zdHJhaW50SW50ZXJmYWNlLFxuICBWYWxpZGF0aW9uQXJndW1lbnRzLFxufSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuXG4vKipcbiAqIFZhbGlkYWRvciBwZXJzb25hbGl6YWRvIHBhcmEgdGVsZWZvbmVzIGJyYXNpbGVpcm9zXG4gKlxuICogQWNlaXRhIGZvcm1hdG9zOlxuICogLSAoMDApIDAwMDAwLTAwMDAgKGNlbHVsYXIpXG4gKiAtICgwMCkgMDAwMC0wMDAwIChmaXhvKVxuICogLSAwMDAwMDAwMDAwMCAoY2VsdWxhciBzZW0gZm9ybWF0YcOnw6NvKVxuICogLSAwMDAwMDAwMDAwIChmaXhvIHNlbSBmb3JtYXRhw6fDo28pXG4gKi9cbkBWYWxpZGF0b3JDb25zdHJhaW50KHsgbmFtZTogJ3RlbGVmb25lVmFsaWRhdG9yJywgYXN5bmM6IGZhbHNlIH0pXG5leHBvcnQgY2xhc3MgVGVsZWZvbmVWYWxpZGF0b3IgaW1wbGVtZW50cyBWYWxpZGF0b3JDb25zdHJhaW50SW50ZXJmYWNlIHtcbiAgdmFsaWRhdGUodGV4dDogc3RyaW5nLCBhcmdzOiBWYWxpZGF0aW9uQXJndW1lbnRzKSB7XG4gICAgaWYgKCF0ZXh0KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IC8vIFBlcm1pdGUgdmFsb3JlcyB2YXppb3MgKHVzZSBASXNOb3RFbXB0eSBzZSBxdWlzZXIgdG9ybmFyIG9icmlnYXTDs3JpbylcblxuICAgIC8vIFJlbW92ZSB0b2RvcyBvcyBjYXJhY3RlcmVzIG7Do28gbnVtw6lyaWNvc1xuICAgIGNvbnN0IG51bWVyb0xpbXBvID0gdGV4dC5yZXBsYWNlKC9cXEQvZywgJycpO1xuXG4gICAgLy8gVmVyaWZpY2Egc2UgbyBuw7ptZXJvIHRlbSAxMCAoZml4bykgb3UgMTEgKGNlbHVsYXIpIGTDrWdpdG9zXG4gICAgaWYgKG51bWVyb0xpbXBvLmxlbmd0aCAhPT0gMTAgJiYgbnVtZXJvTGltcG8ubGVuZ3RoICE9PSAxMSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhIHNlIG8gREREIMOpIHbDoWxpZG8gKGVudHJlIDExIGUgOTkpXG4gICAgY29uc3QgZGRkID0gcGFyc2VJbnQobnVtZXJvTGltcG8uc3Vic3RyaW5nKDAsIDIpKTtcbiAgICBpZiAoZGRkIDwgMTEgfHwgZGRkID4gOTkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYSBzZSBvIHByaW1laXJvIGTDrWdpdG8gZG8gbsO6bWVybyBkZSBjZWx1bGFyIMOpIDkgKHBhcmEgbsO6bWVyb3MgZGUgMTEgZMOtZ2l0b3MpXG4gICAgaWYgKG51bWVyb0xpbXBvLmxlbmd0aCA9PT0gMTEgJiYgbnVtZXJvTGltcG8uY2hhckF0KDIpICE9PSAnOScpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGRlZmF1bHRNZXNzYWdlKGFyZ3M6IFZhbGlkYXRpb25Bcmd1bWVudHMpIHtcbiAgICByZXR1cm4gJ1RlbGVmb25lIGludsOhbGlkby4gRm9ybWF0b3MgYWNlaXRvczogKDAwKSAwMDAwMC0wMDAwLCAoMDApIDAwMDAtMDAwMCwgMDAwMDAwMDAwMDAgb3UgMDAwMDAwMDAwMCc7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==