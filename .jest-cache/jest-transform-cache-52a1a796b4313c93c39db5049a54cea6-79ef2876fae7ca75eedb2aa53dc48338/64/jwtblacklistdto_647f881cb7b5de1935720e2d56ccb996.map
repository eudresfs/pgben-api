{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\dtos\\jwt-blacklist.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\dtos\\jwt-blacklist.dto.ts"],"sourcesContent":["import {\n  IsString,\n  IsUUID,\n  IsEnum,\n  IsOptional,\n  IsDateString,\n  IsIP,\n  Length,\n  IsObject,\n} from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\n\n/**\n * DTO para adicionar token à blacklist\n */\nexport class AddToBlacklistDto {\n  @ApiProperty({\n    description: 'JWT ID (jti) do token a ser invalidado',\n    example: 'jti-uuid-v4',\n  })\n  @IsString()\n  @Length(1, 255)\n  jti: string;\n\n  @ApiProperty({\n    description: 'ID do usuário proprietário do token',\n    example: 'user-uuid-v4',\n  })\n  @IsUUID()\n  usuario_id: string;\n\n  @ApiProperty({\n    description: 'Tipo do token',\n    enum: ['access', 'refresh'],\n    example: 'access',\n  })\n  @IsEnum(['access', 'refresh'])\n  token_type: 'access' | 'refresh';\n\n  @ApiProperty({\n    description: 'Data de expiração do token (ISO 8601)',\n    example: '2024-01-15T10:30:00Z',\n  })\n  @IsDateString()\n  expires_at: string;\n\n  @ApiProperty({\n    description: 'Motivo da invalidação',\n    example: 'user_logout',\n  })\n  @IsString()\n  @Length(1, 100)\n  reason: string;\n\n  @ApiPropertyOptional({\n    description: 'IP do cliente',\n    example: '192.168.1.100',\n  })\n  @IsOptional()\n  @IsIP()\n  client_ip?: string;\n\n  @ApiPropertyOptional({\n    description: 'User Agent do cliente',\n  })\n  @IsOptional()\n  @IsString()\n  @Length(1, 1000)\n  user_agent?: string;\n\n  @ApiPropertyOptional({\n    description: 'Metadados adicionais',\n  })\n  @IsOptional()\n  @IsObject()\n  metadata?: Record<string, any>;\n}\n\n/**\n * DTO para verificar se token está na blacklist\n */\nexport class CheckBlacklistDto {\n  @ApiProperty({\n    description: 'JWT ID (jti) do token a ser verificado',\n    example: 'jti-uuid-v4',\n  })\n  @IsString()\n  @Length(1, 255)\n  jti: string;\n}\n\n/**\n * DTO para invalidar todos os tokens de um usuário\n */\nexport class InvalidateUserTokensDto {\n  @ApiProperty({\n    description: 'ID do usuário',\n    example: 'user-uuid-v4',\n  })\n  @IsUUID()\n  usuario_id: string;\n\n  @ApiProperty({\n    description: 'Motivo da invalidação',\n    example: 'security_breach',\n  })\n  @IsString()\n  @Length(1, 100)\n  reason: string;\n\n  @ApiPropertyOptional({\n    description: 'Tipo específico de token a invalidar',\n    enum: ['access', 'refresh', 'all'],\n    example: 'all',\n  })\n  @IsOptional()\n  @IsEnum(['access', 'refresh', 'all'])\n  token_type?: 'access' | 'refresh' | 'all';\n\n  @ApiPropertyOptional({\n    description: 'IP do cliente',\n    example: '192.168.1.100',\n  })\n  @IsOptional()\n  @IsIP()\n  client_ip?: string;\n\n  @ApiPropertyOptional({\n    description: 'User Agent do cliente',\n  })\n  @IsOptional()\n  @IsString()\n  @Length(1, 1000)\n  user_agent?: string;\n\n  @ApiPropertyOptional({\n    description: 'Metadados adicionais',\n  })\n  @IsOptional()\n  @IsObject()\n  metadata?: Record<string, any>;\n}\n\n/**\n * DTO de resposta para operações de blacklist\n */\nexport class BlacklistResponseDto {\n  @ApiProperty({\n    description: 'Mensagem de sucesso',\n    example: 'Token adicionado à blacklist com sucesso',\n  })\n  message: string;\n\n  @ApiProperty({\n    description: 'Indica se a operação foi bem-sucedida',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiPropertyOptional({\n    description: 'Número de tokens afetados',\n    example: 1,\n  })\n  affected_count?: number;\n}\n\n/**\n * DTO de resposta para verificação de blacklist\n */\nexport class CheckBlacklistResponseDto {\n  @ApiProperty({\n    description: 'Indica se o token está na blacklist',\n    example: true,\n  })\n  is_blacklisted: boolean;\n\n  @ApiPropertyOptional({\n    description: 'Motivo da invalidação (se blacklisted)',\n    example: 'user_logout',\n  })\n  reason?: string;\n\n  @ApiPropertyOptional({\n    description: 'Data de expiração do token',\n    example: '2024-01-15T10:30:00Z',\n  })\n  expires_at?: string;\n\n  @ApiPropertyOptional({\n    description: 'Minutos até a expiração',\n    example: 15,\n  })\n  minutes_until_expiration?: number;\n}\n\n/**\n * DTO para filtros de consulta da blacklist\n */\nexport class BlacklistQueryDto {\n  @ApiPropertyOptional({\n    description: 'ID do usuário para filtrar',\n    example: 'user-uuid-v4',\n  })\n  @IsOptional()\n  @IsUUID()\n  usuario_id?: string;\n\n  @ApiPropertyOptional({\n    description: 'Tipo de token para filtrar',\n    enum: ['access', 'refresh'],\n    example: 'access',\n  })\n  @IsOptional()\n  @IsEnum(['access', 'refresh'])\n  token_type?: 'access' | 'refresh';\n\n  @ApiPropertyOptional({\n    description: 'Motivo da invalidação para filtrar',\n    example: 'user_logout',\n  })\n  @IsOptional()\n  @IsString()\n  @Length(1, 100)\n  reason?: string;\n\n  @ApiPropertyOptional({\n    description: 'Incluir apenas tokens ainda válidos',\n    example: true,\n  })\n  @IsOptional()\n  @Transform(({ value }) => value === 'true' || value === true)\n  only_active?: boolean;\n\n  @ApiPropertyOptional({\n    description: 'Página para paginação',\n    example: 1,\n    minimum: 1,\n  })\n  @IsOptional()\n  @Transform(({ value }) => parseInt(value))\n  page?: number;\n\n  @ApiPropertyOptional({\n    description: 'Itens por página',\n    example: 10,\n    minimum: 1,\n    maximum: 100,\n  })\n  @IsOptional()\n  @Transform(({ value }) => parseInt(value))\n  limit?: number;\n}\n\n/**\n * DTO de resposta para estatísticas da blacklist\n */\nexport class BlacklistStatsDto {\n  @ApiProperty({\n    description: 'Total de tokens na blacklist',\n    example: 150,\n  })\n  total: number;\n\n  @ApiProperty({\n    description: 'Tokens ainda ativos (não expirados)',\n    example: 45,\n  })\n  active: number;\n\n  @ApiProperty({\n    description: 'Tokens expirados',\n    example: 105,\n  })\n  expired: number;\n\n  @ApiProperty({\n    description: 'Tokens de acesso',\n    example: 120,\n  })\n  access_tokens: number;\n\n  @ApiProperty({\n    description: 'Tokens de refresh',\n    example: 30,\n  })\n  refresh_tokens: number;\n\n  @ApiProperty({\n    description: 'Estatísticas por motivo',\n    example: {\n      user_logout: 80,\n      security_breach: 20,\n      token_expired: 50,\n    },\n  })\n  by_reason: Record<string, number>;\n\n  @ApiProperty({\n    description: 'Data da última limpeza',\n    example: '2024-01-01T10:00:00Z',\n  })\n  last_cleanup?: string;\n}\n"],"version":3}