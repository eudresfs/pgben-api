{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\dados-cesta-basica.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\dados-cesta-basica.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsEnum,\n  IsOptional,\n  Min,\n  Max,\n} from 'class-validator';\nimport { Solicitacao } from './solicitacao.entity';\nimport { PeriodicidadeEnum, OrigemAtendimentoEnum } from '../enums';\n\n\n/**\n * Entidade para armazenar dados específicos do cidadão para Cesta Básica\n *\n * Armazena informações específicas necessárias para a solicitação do benefício\n * de Cesta Básica, como quantidade, período de concessão, origem do atendimento, etc.\n */\n@Entity('dados_cesta_basica')\n@Index(['solicitacao_id'], { unique: true })\nexport class DadosCestaBasica {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'ID da solicitação é obrigatório' })\n  solicitacao_id: string;\n\n  @ManyToOne(() => Solicitacao, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'solicitacao_id' })\n  solicitacao: Solicitacao;\n\n  @Column({ type: 'integer' })\n  @IsNotEmpty({ message: 'Quantidade de cestas é obrigatória' })\n  @IsNumber({}, { message: 'Quantidade de cestas deve ser um número' })\n  @Min(1, { message: 'Quantidade mínima é 1 cesta' })\n  @Max(12, { message: 'Quantidade máxima é 12 cestas' })\n  quantidade_cestas_solicitadas: number;\n\n  @Column({\n    type: 'enum',\n    enum: PeriodicidadeEnum,\n    enumName: 'periodo_concessao_cesta',\n  })\n  @IsNotEmpty({ message: 'Período de concessão é obrigatório' })\n  @IsEnum(PeriodicidadeEnum, { message: 'Período de concessão inválido' })\n  periodo_concessao: PeriodicidadeEnum;\n\n  @Column({\n    type: 'enum',\n    enum: OrigemAtendimentoEnum,\n    enumName: 'origem_atendimento',\n  })\n  @IsNotEmpty({ message: 'Origem do atendimento é obrigatória' })\n  @IsEnum(OrigemAtendimentoEnum, { message: 'Origem do atendimento inválida' })\n  origem_atendimento: OrigemAtendimentoEnum;\n\n  @Column({ type: 'integer', nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Número de pessoas na família deve ser um número' })\n  @Min(1, { message: 'Número mínimo de pessoas na família é 1' })\n  numero_pessoas_familia?: number;\n\n  @Column('text', { nullable: true })\n  @IsOptional()\n  justificativa_quantidade?: string;\n\n  @Column('text', { nullable: true })\n  @IsOptional()\n  observacoes_especiais?: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  tecnico_responsavel?: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  unidade_solicitante?: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Calcula quantidade recomendada baseada no número de pessoas na família\n   */\n  calcularQuantidadeRecomendada(): number {\n    if (!this.numero_pessoas_familia) return 1;\n    \n    // Regra: 1 cesta para até 3 pessoas, +1 cesta a cada 3 pessoas adicionais\n    return Math.ceil(this.numero_pessoas_familia / 3);\n  }\n\n  /**\n   * Verifica se a quantidade solicitada está dentro do recomendado\n   */\n  isQuantidadeDentroRecomendacao(): boolean {\n    const recomendada = this.calcularQuantidadeRecomendada();\n    return this.quantidade_cestas_solicitadas <= recomendada + 1; // Tolerância de +1\n  }\n\n  /**\n   * Verifica se é atendimento prioritário\n   */\n  isAtendimentoPrioritario(): boolean {\n    const origemPrioritaria = [\n      OrigemAtendimentoEnum.CREAS,\n      OrigemAtendimentoEnum.BUSCA_ATIVA,\n    ];\n    \n    return origemPrioritaria.includes(this.origem_atendimento);\n  }\n\n  /**\n   * Calcula duração total do benefício em meses\n   */\n  calcularDuracaoTotalMeses(): number {\n    let multiplicador = 1;\n    \n    switch (this.periodo_concessao) {\n      case PeriodicidadeEnum.MENSAL:\n        multiplicador = 1;\n        break;\n      case PeriodicidadeEnum.BIMESTRAL:\n        multiplicador = 2;\n        break;\n      case PeriodicidadeEnum.TRIMESTRAL:\n        multiplicador = 3;\n        break;\n      case PeriodicidadeEnum.SEMESTRAL:\n        multiplicador = 6;\n        break;\n      case PeriodicidadeEnum.UNICO:\n        multiplicador = 0; // Entrega única\n        break;\n    }\n    \n    return multiplicador;\n  }\n\n  /**\n   * Calcula total de cestas que serão entregues no período\n   */\n  calcularTotalCestasNoPeriodo(): number {\n    const duracaoMeses = this.calcularDuracaoTotalMeses();\n    \n    if (this.periodo_concessao === PeriodicidadeEnum.UNICO) {\n      return this.quantidade_cestas_solicitadas;\n    }\n    \n    // Para períodos recorrentes, considera entrega mensal\n    return this.quantidade_cestas_solicitadas * duracaoMeses;\n  }\n\n  /**\n   * Verifica se precisa de justificativa para quantidade\n   */\n  precisaJustificativaQuantidade(): boolean {\n    const recomendada = this.calcularQuantidadeRecomendada();\n    return this.quantidade_cestas_solicitadas > recomendada + 1;\n  }\n\n  /**\n   * Calcula pontuação de prioridade\n   */\n  calcularPontuacaoPrioridade(): number {\n    let pontuacao = 0;\n    \n    // Pontuação por origem do atendimento\n    switch (this.origem_atendimento) {\n      case OrigemAtendimentoEnum.CREAS:\n        pontuacao += 100;\n        break;\n      case OrigemAtendimentoEnum.BUSCA_ATIVA:\n        pontuacao += 90;\n        break;\n      case OrigemAtendimentoEnum.CRAS:\n        pontuacao += 80;\n        break;\n      case OrigemAtendimentoEnum.ENCAMINHAMENTO_EXTERNO:\n        pontuacao += 70;\n        break;\n      case OrigemAtendimentoEnum.UNIDADE_BASICA:\n        pontuacao += 60;\n        break;\n      case OrigemAtendimentoEnum.DEMANDA_ESPONTANEA:\n        pontuacao += 50;\n        break;\n    }\n    \n    // Pontuação por tamanho da família\n    if (this.numero_pessoas_familia) {\n      if (this.numero_pessoas_familia >= 6) pontuacao += 30;\n      else if (this.numero_pessoas_familia >= 4) pontuacao += 20;\n      else if (this.numero_pessoas_familia >= 2) pontuacao += 10;\n    }\n    \n    return pontuacao;\n  }\n\n  /**\n   * Valida se os dados estão completos para submissão\n   */\n  validarDadosCompletos(): { valido: boolean; erros: string[] } {\n    const erros: string[] = [];\n\n    if (!this.quantidade_cestas_solicitadas || this.quantidade_cestas_solicitadas < 1) {\n      erros.push('Quantidade de cestas deve ser maior que zero');\n    }\n\n    if (!this.periodo_concessao) {\n      erros.push('Período de concessão é obrigatório');\n    }\n\n    if (!this.origem_atendimento) {\n      erros.push('Origem do atendimento é obrigatória');\n    }\n\n    if (this.precisaJustificativaQuantidade() && \n        (!this.justificativa_quantidade || this.justificativa_quantidade.trim().length === 0)) {\n      erros.push('Justificativa é obrigatória para quantidade acima do recomendado');\n    }\n\n    if (this.origem_atendimento === OrigemAtendimentoEnum.ENCAMINHAMENTO_EXTERNO && \n        (!this.unidade_solicitante || this.unidade_solicitante.trim().length === 0)) {\n      erros.push('Unidade solicitante é obrigatória para encaminhamentos externos');\n    }\n\n    return {\n      valido: erros.length === 0,\n      erros\n    };\n  }\n}"],"version":3}