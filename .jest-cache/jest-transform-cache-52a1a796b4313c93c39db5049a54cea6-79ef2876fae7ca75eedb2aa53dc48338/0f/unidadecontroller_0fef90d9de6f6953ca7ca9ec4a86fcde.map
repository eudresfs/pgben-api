{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\unidade\\controllers\\unidade.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\unidade\\controllers\\unidade.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Patch,\n  Param,\n  ParseUUIDPipe,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiQuery,\n} from '@nestjs/swagger';\nimport { UnidadeService } from '../services/unidade.service';\nimport { CreateUnidadeDto } from '../dto/create-unidade.dto';\nimport { UpdateUnidadeDto } from '../dto/update-unidade.dto';\nimport { UpdateStatusUnidadeDto } from '../dto/update-status-unidade.dto';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { ScopeType } from '../../../entities/user-permission.entity';\n\n/**\n * Controlador de unidades\n *\n * Responsável por gerenciar as rotas relacionadas a unidades (CRAS, CREAS, etc.)\n */\n@ApiTags('Unidades')\n@Controller('unidade')\n@UseGuards(JwtAuthGuard, PermissionGuard)\n@ApiBearerAuth()\nexport class UnidadeController {\n  constructor(private readonly unidadeService: UnidadeService) {}\n\n  /**\n   * Lista todas as unidades com filtros e paginação\n   */\n  @Get()\n  @RequiresPermission({\n    permissionName: 'unidade.listar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Listar unidades' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de unidades retornada com sucesso',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Página atual',\n  })\n  @ApiQuery({\n    name: 'limit',\n    required: false,\n    type: Number,\n    description: 'Itens por página',\n  })\n  @ApiQuery({\n    name: 'search',\n    required: false,\n    type: String,\n    description: 'Termo de busca',\n  })\n  @ApiQuery({\n    name: 'tipo',\n    required: false,\n    type: String,\n    description: 'Filtro por tipo de unidade',\n  })\n  @ApiQuery({\n    name: 'status',\n    required: false,\n    type: String,\n    description: 'Filtro por status',\n  })\n  async findAll(\n    @Query('page') page?: number,\n    @Query('limit') limit?: number,\n    @Query('search') search?: string,\n    @Query('tipo') tipo?: string,\n    @Query('status') status?: string,\n  ) {\n    return this.unidadeService.findAll({\n      page: page ? +page : undefined,\n      limit: limit ? +limit : undefined,\n      search,\n      tipo,\n      status,\n    });\n  }\n\n  /**\n   * Obtém detalhes de uma unidade específica\n   */\n  @Get(':id')\n  @RequiresPermission({\n    permissionName: 'unidade.visualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Obter detalhes de uma unidade' })\n  @ApiResponse({ status: 200, description: 'Unidade encontrada com sucesso' })\n  @ApiResponse({ status: 404, description: 'Unidade não encontrada' })\n  async findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.unidadeService.findById(id);\n  }\n\n  /**\n   * Cria uma nova unidade\n   */\n  @Post()\n  @RequiresPermission({\n    permissionName: 'unidade.criar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Criar nova unidade' })\n  @ApiResponse({ status: 201, description: 'Unidade criada com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 409, description: 'Código já em uso' })\n  async create(@Body() createUnidadeDto: CreateUnidadeDto) {\n    return this.unidadeService.create(createUnidadeDto);\n  }\n\n  /**\n   * Atualiza uma unidade existente\n   */\n  @Put(':id')\n  @RequiresPermission({\n    permissionName: 'unidade.editar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Atualizar unidade existente' })\n  @ApiResponse({ status: 200, description: 'Unidade atualizada com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 404, description: 'Unidade não encontrada' })\n  @ApiResponse({ status: 409, description: 'Código já em uso' })\n  async update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateUnidadeDto: UpdateUnidadeDto,\n  ) {\n    return this.unidadeService.update(id, updateUnidadeDto);\n  }\n\n  /**\n   * Atualiza o status de uma unidade\n   */\n  @Patch(':id/status')\n  @RequiresPermission({\n    permissionName: 'unidade.status.alterar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Ativar/inativar unidade' })\n  @ApiResponse({ status: 200, description: 'Status atualizado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Unidade não encontrada' })\n  async updateStatus(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateStatusUnidadeDto: UpdateStatusUnidadeDto,\n  ) {\n    return this.unidadeService.updateStatus(id, updateStatusUnidadeDto);\n  }\n\n  /**\n   * Lista os setores de uma unidade específica\n   */\n  @Get(':id/setor')\n  @RequiresPermission({\n    permissionName: 'unidade.setor.listar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Listar setores de uma unidade' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de setores retornada com sucesso',\n  })\n  @ApiResponse({ status: 404, description: 'Unidade não encontrada' })\n  async findSetores(@Param('id', ParseUUIDPipe) id: string) {\n    return this.unidadeService.findSetoresByUnidadeId(id);\n  }\n}\n"],"version":3}