{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\helpers.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\helpers.spec.ts"],"sourcesContent":["/**\n * Testes para as funções helper do catálogo de erros\n * \n * Valida a funcionalidade das funções auxiliares\n * para lançar erros padronizados.\n */\n\nimport {\n  throwInvalidCpf,\n  throwDuplicateCpf,\n  throwInvalidNis,\n  throwDuplicateNis,\n  throwInvalidAge,\n  throwInvalidIncome,\n  throwIncomeExceedsLimit,\n  throwNatalidadeAlreadyReceived,\n  throwInvalidBirthDateForNatalidade,\n  throwAluguelAlreadyActive,\n  throwInvalidPropertyForAluguel,\n  throwBenefitNotFound,\n  throwInvalidWorkflowTransition,\n  throwAzureBlobUploadFailed,\n  throwEmailSendFailed,\n  throwDatabaseConnectionFailed,\n  throwPermissionDenied,\n  throwDocumentRequired,\n  throwApprovalDeadlineExceeded,\n  throwForeignKeyViolation,\n  throwUniqueConstraintViolation,\n  throwRateLimitExceeded,\n  throwMaintenanceMode,\n  throwFromPostgresError,\n} from './helpers';\nimport { AppError } from './AppError';\n\ndescribe('Error Helpers', () => {\n  describe('Validation Helpers', () => {\n    describe('throwInvalidCpf', () => {\n      it('should throw AppError with VAL_CPF_001 code', () => {\n        expect(() => throwInvalidCpf('12345678901')).toThrow(AppError);\n        \n        try {\n          throwInvalidCpf('12345678901');\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_CPF_001');\n          expect(error.context.cpf).toBe('12345678901');\n        }\n      });\n    });\n\n    describe('throwDuplicateCpf', () => {\n      it('should throw AppError with VAL_CPF_002 code', () => {\n        expect(() => throwDuplicateCpf('12345678901')).toThrow(AppError);\n        \n        try {\n          throwDuplicateCpf('12345678901');\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_CPF_002');\n          expect(error.context.cpf).toBe('12345678901');\n          expect(error.message).toContain('12345678901');\n        }\n      });\n    });\n\n    describe('throwInvalidNis', () => {\n      it('should throw AppError with VAL_NIS_001 code', () => {\n        expect(() => throwInvalidNis('12345678901')).toThrow(AppError);\n        \n        try {\n          throwInvalidNis('12345678901');\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_NIS_001');\n          expect(error.context.nis).toBe('12345678901');\n        }\n      });\n    });\n\n    describe('throwDuplicateNis', () => {\n      it('should throw AppError with VAL_NIS_002 code', () => {\n        expect(() => throwDuplicateNis('12345678901')).toThrow(AppError);\n        \n        try {\n          throwDuplicateNis('12345678901');\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_NIS_002');\n          expect(error.context.nis).toBe('12345678901');\n          expect(error.message).toContain('12345678901');\n        }\n      });\n    });\n\n    describe('throwInvalidAge', () => {\n      it('should throw AppError with VAL_AGE_001 code', () => {\n        expect(() => throwInvalidAge(17, 18, 65)).toThrow(AppError);\n        \n        try {\n          throwInvalidAge(17, 18, 65);\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_AGE_001');\n          expect(error.context.age).toBe(17);\n          expect(error.context.minAge).toBe(18);\n          expect(error.context.maxAge).toBe(65);\n          expect(error.message).toContain('18');\n          expect(error.message).toContain('65');\n        }\n      });\n    });\n\n    describe('throwInvalidIncome', () => {\n      it('should throw AppError with VAL_INCOME_001 code', () => {\n        expect(() => throwInvalidIncome(-100)).toThrow(AppError);\n        \n        try {\n          throwInvalidIncome(-100);\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_INCOME_001');\n          expect(error.context.income).toBe(-100);\n        }\n      });\n    });\n\n    describe('throwIncomeExceedsLimit', () => {\n      it('should throw AppError with VAL_INCOME_002 code', () => {\n        expect(() => throwIncomeExceedsLimit(1000, 500, 'Auxílio Natalidade')).toThrow(AppError);\n        \n        try {\n          throwIncomeExceedsLimit(1000, 500, 'Auxílio Natalidade');\n        } catch (error) {\n          expect(error.errorCode).toBe('VAL_INCOME_002');\n          expect(error.context.income).toBe(1000);\n          expect(error.context.limit).toBe(500);\n          expect(error.context.benefitType).toBe('Auxílio Natalidade');\n          expect(error.message).toContain('1000');\n          expect(error.message).toContain('500');\n        }\n      });\n    });\n  });\n\n  describe('Benefit Helpers', () => {\n    describe('throwNatalidadeAlreadyReceived', () => {\n      it('should throw AppError with BEN_NAT_001 code', () => {\n        expect(() => throwNatalidadeAlreadyReceived('123', 12)).toThrow(AppError);\n        \n        try {\n          throwNatalidadeAlreadyReceived('123', 12);\n        } catch (error) {\n          expect(error.errorCode).toBe('BEN_NAT_001');\n          expect(error.context.citizenId).toBe('123');\n          expect(error.context.months).toBe(12);\n          expect(error.message).toContain('12');\n        }\n      });\n    });\n\n    describe('throwInvalidBirthDateForNatalidade', () => {\n      it('should throw AppError with BEN_NAT_002 code', () => {\n        const birthDate = new Date('2024-01-01');\n        const minDate = new Date('2023-12-01');\n        \n        expect(() => throwInvalidBirthDateForNatalidade(birthDate, minDate)).toThrow(AppError);\n        \n        try {\n          throwInvalidBirthDateForNatalidade(birthDate, minDate);\n        } catch (error) {\n          expect(error.errorCode).toBe('BEN_NAT_002');\n          expect(error.context.birthDate).toBe(birthDate);\n          expect(error.context.minDate).toBe(minDate);\n        }\n      });\n    });\n\n    describe('throwAluguelAlreadyActive', () => {\n      it('should throw AppError with BEN_ALU_001 code', () => {\n        expect(() => throwAluguelAlreadyActive('123', 'benefit-456')).toThrow(AppError);\n        \n        try {\n          throwAluguelAlreadyActive('123', 'benefit-456');\n        } catch (error) {\n          expect(error.errorCode).toBe('BEN_ALU_001');\n          expect(error.context.citizenId).toBe('123');\n          expect(error.context.activeBenefitId).toBe('benefit-456');\n        }\n      });\n    });\n\n    describe('throwInvalidPropertyForAluguel', () => {\n      it('should throw AppError with BEN_ALU_002 code', () => {\n        expect(() => throwInvalidPropertyForAluguel('123', 'property-789')).toThrow(AppError);\n        \n        try {\n          throwInvalidPropertyForAluguel('123', 'property-789');\n        } catch (error) {\n          expect(error.errorCode).toBe('BEN_ALU_002');\n          expect(error.context.citizenId).toBe('123');\n          expect(error.context.propertyId).toBe('property-789');\n        }\n      });\n    });\n\n    describe('throwBenefitNotFound', () => {\n      it('should throw AppError with BEN_GEN_001 code', () => {\n        expect(() => throwBenefitNotFound('benefit-123')).toThrow(AppError);\n        \n        try {\n          throwBenefitNotFound('benefit-123');\n        } catch (error) {\n          expect(error.errorCode).toBe('BEN_GEN_001');\n          expect(error.context.benefitId).toBe('benefit-123');\n          expect(error.message).toContain('benefit-123');\n        }\n      });\n    });\n\n    describe('throwInvalidWorkflowTransition', () => {\n      it('should throw AppError with BEN_WF_001 code', () => {\n        expect(() => throwInvalidWorkflowTransition('PENDING', 'CANCELLED', 'benefit-123')).toThrow(AppError);\n        \n        try {\n          throwInvalidWorkflowTransition('PENDING', 'CANCELLED', 'benefit-123');\n        } catch (error) {\n          expect(error.errorCode).toBe('BEN_WF_001');\n          expect(error.context.currentStatus).toBe('PENDING');\n          expect(error.context.targetStatus).toBe('CANCELLED');\n          expect(error.context.benefitId).toBe('benefit-123');\n          expect(error.message).toContain('PENDING');\n          expect(error.message).toContain('CANCELLED');\n        }\n      });\n    });\n  });\n\n  describe('Integration Helpers', () => {\n    describe('throwAzureBlobUploadFailed', () => {\n      it('should throw AppError with INT_AZURE_001 code', () => {\n        const originalError = new Error('Connection timeout');\n        \n        expect(() => throwAzureBlobUploadFailed('document.pdf', originalError)).toThrow(AppError);\n        \n        try {\n          throwAzureBlobUploadFailed('document.pdf', originalError);\n        } catch (error) {\n          expect(error.errorCode).toBe('INT_AZURE_001');\n          expect(error.context.filename).toBe('document.pdf');\n          expect(error.context.originalError).toBe(originalError);\n          expect(error.message).toContain('document.pdf');\n        }\n      });\n    });\n\n    describe('throwEmailSendFailed', () => {\n      it('should throw AppError with INT_EMAIL_001 code', () => {\n        const originalError = new Error('SMTP error');\n        \n        expect(() => throwEmailSendFailed('user@example.com', originalError)).toThrow(AppError);\n        \n        try {\n          throwEmailSendFailed('user@example.com', originalError);\n        } catch (error) {\n          expect(error.errorCode).toBe('INT_EMAIL_001');\n          expect(error.context.email).toBe('user@example.com');\n          expect(error.context.originalError).toBe(originalError);\n          expect(error.message).toContain('user@example.com');\n        }\n      });\n    });\n\n    describe('throwDatabaseConnectionFailed', () => {\n      it('should throw AppError with INT_DB_001 code', () => {\n        const originalError = new Error('Connection refused');\n        \n        expect(() => throwDatabaseConnectionFailed(originalError)).toThrow(AppError);\n        \n        try {\n          throwDatabaseConnectionFailed(originalError);\n        } catch (error) {\n          expect(error.errorCode).toBe('INT_DB_001');\n          expect(error.context.originalError).toBe(originalError);\n        }\n      });\n    });\n  });\n\n  describe('Operational Flow Helpers', () => {\n    describe('throwPermissionDenied', () => {\n      it('should throw AppError with FLO_PERM_001 code', () => {\n        expect(() => throwPermissionDenied('user-123', 'DELETE_CITIZEN')).toThrow(AppError);\n        \n        try {\n          throwPermissionDenied('user-123', 'DELETE_CITIZEN');\n        } catch (error) {\n          expect(error.errorCode).toBe('FLO_PERM_001');\n          expect(error.context.userId).toBe('user-123');\n          expect(error.context.requiredPermission).toBe('DELETE_CITIZEN');\n        }\n      });\n    });\n\n    describe('throwDocumentRequired', () => {\n      it('should throw AppError with FLO_DOC_001 code', () => {\n        expect(() => throwDocumentRequired('RG', 'benefit-123')).toThrow(AppError);\n        \n        try {\n          throwDocumentRequired('RG', 'benefit-123');\n        } catch (error) {\n          expect(error.errorCode).toBe('FLO_DOC_001');\n          expect(error.context.documentType).toBe('RG');\n          expect(error.context.benefitId).toBe('benefit-123');\n          expect(error.message).toContain('RG');\n        }\n      });\n    });\n\n    describe('throwApprovalDeadlineExceeded', () => {\n      it('should throw AppError with FLO_DEADLINE_001 code', () => {\n        expect(() => throwApprovalDeadlineExceeded('benefit-123', 30)).toThrow(AppError);\n        \n        try {\n          throwApprovalDeadlineExceeded('benefit-123', 30);\n        } catch (error) {\n          expect(error.errorCode).toBe('FLO_DEADLINE_001');\n          expect(error.context.benefitId).toBe('benefit-123');\n          expect(error.context.days).toBe(30);\n          expect(error.message).toContain('30');\n        }\n      });\n    });\n  });\n\n  describe('System Helpers', () => {\n    describe('throwForeignKeyViolation', () => {\n      it('should throw AppError with SYS_FK_001 code', () => {\n        expect(() => throwForeignKeyViolation('fk_cidadao_unidade', 'cidadao')).toThrow(AppError);\n        \n        try {\n          throwForeignKeyViolation('fk_cidadao_unidade', 'cidadao');\n        } catch (error) {\n          expect(error.errorCode).toBe('SYS_FK_001');\n          expect(error.context.constraint).toBe('fk_cidadao_unidade');\n          expect(error.context.table).toBe('cidadao');\n        }\n      });\n    });\n\n    describe('throwUniqueConstraintViolation', () => {\n      it('should throw AppError with SYS_UNIQUE_001 code', () => {\n        expect(() => throwUniqueConstraintViolation('uk_cidadao_cpf', 'cidadao')).toThrow(AppError);\n        \n        try {\n          throwUniqueConstraintViolation('uk_cidadao_cpf', 'cidadao');\n        } catch (error) {\n          expect(error.errorCode).toBe('SYS_UNIQUE_001');\n          expect(error.context.constraint).toBe('uk_cidadao_cpf');\n          expect(error.context.table).toBe('cidadao');\n        }\n      });\n    });\n\n    describe('throwRateLimitExceeded', () => {\n      it('should throw AppError with SYS_RATE_001 code', () => {\n        expect(() => throwRateLimitExceeded('user-123', 60)).toThrow(AppError);\n        \n        try {\n          throwRateLimitExceeded('user-123', 60);\n        } catch (error) {\n          expect(error.errorCode).toBe('SYS_RATE_001');\n          expect(error.context.userId).toBe('user-123');\n          expect(error.context.retryAfter).toBe(60);\n          expect(error.message).toContain('60');\n        }\n      });\n    });\n\n    describe('throwMaintenanceMode', () => {\n      it('should throw AppError with SYS_MAINT_001 code', () => {\n        const estimatedTime = new Date('2024-01-15T12:00:00Z');\n        \n        expect(() => throwMaintenanceMode(estimatedTime)).toThrow(AppError);\n        \n        try {\n          throwMaintenanceMode(estimatedTime);\n        } catch (error) {\n          expect(error.errorCode).toBe('SYS_MAINT_001');\n          expect(error.context.estimatedTime).toBe(estimatedTime);\n        }\n      });\n    });\n  });\n\n  describe('Generic Helper', () => {\n    describe('throwFromPostgresError', () => {\n      it('should throw mapped AppError for known PostgreSQL codes', () => {\n        const pgError = {\n          code: '23505',\n          message: 'duplicate key value violates unique constraint',\n          constraint: 'uk_cidadao_cpf',\n          table: 'cidadao',\n        };\n        \n        const context = {\n          operationalContext: {\n            module: 'cidadao',\n            operation: 'create',\n          },\n        };\n        \n        expect(() => throwFromPostgresError('23505', pgError, context)).toThrow(AppError);\n        \n        try {\n          throwFromPostgresError('23505', pgError, context);\n        } catch (error) {\n          expect(error.errorCode).toBe('SYS_UNIQUE_001');\n          expect(error.context.operationalContext).toEqual(context.operationalContext);\n          expect(error.context.metadata).toEqual({\n            constraint: 'uk_cidadao_cpf',\n            table: 'cidadao',\n            originalError: pgError,\n          });\n        }\n      });\n\n      it('should throw error for unmapped PostgreSQL codes', () => {\n        const pgError = {\n          code: '99999',\n          message: 'unknown error',\n        };\n        \n        expect(() => throwFromPostgresError('99999', pgError, {})).toThrow(\n          'Código PostgreSQL 99999 não mapeado no catálogo'\n        );\n      });\n\n      it('should handle optional parameters', () => {\n        const pgError = {\n          code: '23503',\n          message: 'foreign key violation',\n        };\n        \n        expect(() => throwFromPostgresError('23503', pgError)).toThrow(AppError);\n        \n        try {\n          throwFromPostgresError('23503', pgError);\n        } catch (error) {\n          expect(error.errorCode).toBe('SYS_FK_001');\n          expect(error.context).toBeDefined();\n        }\n      });\n    });\n  });\n\n  describe('Context Handling', () => {\n    it('should merge additional context with helper context', () => {\n      const additionalContext = {\n        operationalContext: {\n          module: 'cidadao',\n          operation: 'create',\n        },\n        requestId: 'req-123',\n      };\n      \n      try {\n        throwDuplicateCpf('12345678901', additionalContext);\n      } catch (error) {\n        expect(error.context.cpf).toBe('12345678901');\n        expect(error.context.operationalContext).toEqual(additionalContext.operationalContext);\n        expect(error.context.requestId).toBe('req-123');\n      }\n    });\n\n    it('should handle empty additional context', () => {\n      try {\n        throwInvalidCpf('12345678901', {});\n      } catch (error) {\n        expect(error.context.cpf).toBe('12345678901');\n      }\n    });\n\n    it('should handle undefined additional context', () => {\n      try {\n        throwInvalidCpf('12345678901');\n      } catch (error) {\n        expect(error.context.cpf).toBe('12345678901');\n      }\n    });\n  });\n});"],"version":3}