613baeda484e41575952a4a11e9f0dac
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Usuario = void 0;
const typeorm_1 = require("typeorm");
const class_transformer_1 = require("class-transformer");
const refresh_token_entity_1 = require("./refresh-token.entity");
const unidade_entity_1 = require("./unidade.entity");
const setor_entity_1 = require("./setor.entity");
const br_validators_1 = require("../shared/validators/br-validators");
const class_validator_1 = require("class-validator");
const strong_password_validator_1 = require("../shared/validators/strong-password.validator");
const role_entity_1 = require("./role.entity");
const status_enum_1 = require("../enums/status.enum");
/**
 * Entidade de Usuário
 *
 * Representa um usuário do sistema com suas informações básicas,
 * credenciais de acesso e relacionamentos com outras entidades.
 */
let Usuario = class Usuario {
    id;
    nome;
    email;
    senhaHash;
    cpf;
    telefone;
    matricula;
    role_id;
    role;
    unidade_id;
    unidade;
    setor_id;
    setor;
    status;
    primeiro_acesso;
    tentativas_login;
    ultimo_login;
    refreshTokens;
    created_at;
    updated_at;
    removed_at;
    /**
     * Verifica se o usuário está ativo
     * @returns true se o usuário estiver ativo
     */
    isAtivo() {
        return this.status === status_enum_1.Status.ATIVO;
    }
    /**
     * Ativa o usuário
     */
    ativar() {
        this.status = status_enum_1.Status.ATIVO;
    }
    /**
     * Desativa o usuário
     */
    desativar() {
        this.status = status_enum_1.Status.INATIVO;
    }
    /**
     * Verifica se é o primeiro acesso do usuário
     * @returns true se for o primeiro acesso
     */
    isPrimeiroAcesso() {
        return this.primeiro_acesso;
    }
    /**
     * Marca que o usuário já fez o primeiro acesso
     */
    marcarPrimeiroAcessoRealizado() {
        this.primeiro_acesso = false;
    }
    /**
     * Obtém o nome completo formatado
     * @returns nome formatado
     */
    getNomeFormatado() {
        return this.nome.trim();
    }
    /**
     * Verifica se o usuário pode ser deletado
     * @returns true se pode ser deletado
     */
    podeSerDeletado() {
        return this.status === status_enum_1.Status.INATIVO;
    }
};
exports.Usuario = Usuario;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Usuario.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 255 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    (0, class_validator_1.MinLength)(2, { message: 'Nome deve ter no mínimo 2 caracteres' }),
    (0, class_validator_1.MaxLength)(255, { message: 'Nome deve ter no máximo 255 caracteres' }),
    __metadata("design:type", String)
], Usuario.prototype, "nome", void 0);
__decorate([
    (0, typeorm_1.Column)({ unique: true, length: 255 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Email é obrigatório' }),
    (0, class_validator_1.IsEmail)({}, { message: 'Email deve ter um formato válido' }),
    (0, class_validator_1.MaxLength)(255, { message: 'Email deve ter no máximo 255 caracteres' }),
    __metadata("design:type", String)
], Usuario.prototype, "email", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'senha_hash' }),
    (0, class_transformer_1.Exclude)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Senha é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Senha deve ser uma string' }),
    (0, class_validator_1.Validate)(strong_password_validator_1.IsStrongPassword, {
        message: 'Senha deve ter no mínimo 8 caracteres, incluindo maiúscula, minúscula, número e caractere especial'
    }),
    __metadata("design:type", String)
], Usuario.prototype, "senhaHash", void 0);
__decorate([
    (0, typeorm_1.Column)({ unique: true, length: 11 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'CPF é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'CPF deve ser uma string' }),
    (0, class_validator_1.Length)(11, 11, { message: 'CPF deve ter exatamente 11 caracteres' }),
    (0, class_validator_1.Validate)(br_validators_1.IsCPF, { message: 'CPF inválido' }),
    __metadata("design:type", String)
], Usuario.prototype, "cpf", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true, length: 15 }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Telefone deve ser uma string' }),
    (0, class_validator_1.MaxLength)(15, { message: 'Telefone deve ter no máximo 15 caracteres' }),
    (0, class_validator_1.Validate)(br_validators_1.IsTelefone, { message: 'Telefone inválido' }),
    __metadata("design:type", String)
], Usuario.prototype, "telefone", void 0);
__decorate([
    (0, typeorm_1.Column)({ unique: true, length: 20 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Matrícula é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Matrícula deve ser uma string' }),
    (0, class_validator_1.MinLength)(3, { message: 'Matrícula deve ter no mínimo 3 caracteres' }),
    (0, class_validator_1.MaxLength)(20, { message: 'Matrícula deve ter no máximo 20 caracteres' }),
    __metadata("design:type", String)
], Usuario.prototype, "matricula", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'role_id', nullable: true }),
    __metadata("design:type", String)
], Usuario.prototype, "role_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => role_entity_1.Role, (role) => role.usuarios, {
        nullable: false,
        eager: false
    }),
    (0, typeorm_1.JoinColumn)({ name: 'role_id' }),
    __metadata("design:type", typeof (_a = typeof role_entity_1.Role !== "undefined" && role_entity_1.Role) === "function" ? _a : Object)
], Usuario.prototype, "role", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'unidade_id', nullable: true }),
    __metadata("design:type", String)
], Usuario.prototype, "unidade_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => unidade_entity_1.Unidade, (unidade) => unidade.usuarios, {
        nullable: true,
        eager: false
    }),
    (0, typeorm_1.JoinColumn)({ name: 'unidade_id' }),
    __metadata("design:type", typeof (_b = typeof unidade_entity_1.Unidade !== "undefined" && unidade_entity_1.Unidade) === "function" ? _b : Object)
], Usuario.prototype, "unidade", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'setor_id', nullable: true }),
    __metadata("design:type", String)
], Usuario.prototype, "setor_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => setor_entity_1.Setor, (setor) => setor.usuarios, {
        nullable: true,
        eager: false
    }),
    (0, typeorm_1.JoinColumn)({ name: 'setor_id' }),
    __metadata("design:type", typeof (_c = typeof setor_entity_1.Setor !== "undefined" && setor_entity_1.Setor) === "function" ? _c : Object)
], Usuario.prototype, "setor", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: status_enum_1.Status,
        default: status_enum_1.Status.ATIVO,
        enumName: 'status_usuario'
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsEnum)(status_enum_1.Status, { message: 'Status deve ser ATIVO ou INATIVO' }),
    __metadata("design:type", typeof (_d = typeof status_enum_1.Status !== "undefined" && status_enum_1.Status) === "function" ? _d : Object)
], Usuario.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'primeiro_acesso', default: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Primeiro acesso deve ser um valor booleano' }),
    __metadata("design:type", Boolean)
], Usuario.prototype, "primeiro_acesso", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'tentativas_login', default: 0 }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], Usuario.prototype, "tentativas_login", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'ultimo_login', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], Usuario.prototype, "ultimo_login", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => refresh_token_entity_1.RefreshToken, (refreshToken) => refreshToken.usuario, {
        cascade: ['remove'],
        lazy: true
    }),
    __metadata("design:type", Array)
], Usuario.prototype, "refreshTokens", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ name: 'created_at' }),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], Usuario.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({ name: 'updated_at' }),
    __metadata("design:type", typeof (_g = typeof Date !== "undefined" && Date) === "function" ? _g : Object)
], Usuario.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)({ name: 'removed_at' }),
    __metadata("design:type", typeof (_h = typeof Date !== "undefined" && Date) === "function" ? _h : Object)
], Usuario.prototype, "removed_at", void 0);
exports.Usuario = Usuario = __decorate([
    (0, typeorm_1.Entity)('usuario'),
    (0, typeorm_1.Index)(['email'], { unique: true }),
    (0, typeorm_1.Index)(['cpf'], { unique: true }),
    (0, typeorm_1.Index)(['matricula'], { unique: true }),
    (0, typeorm_1.Index)(['status']),
    (0, typeorm_1.Index)(['role_id']),
    (0, typeorm_1.Index)(['unidade_id'])
], Usuario);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,