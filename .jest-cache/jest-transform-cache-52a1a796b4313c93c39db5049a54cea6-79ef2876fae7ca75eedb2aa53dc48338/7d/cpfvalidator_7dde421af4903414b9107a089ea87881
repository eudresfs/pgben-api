4c093fdf75aee37d91f6dbaeb49ef8c0
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CPFValidator = void 0;
const class_validator_1 = require("class-validator");
let CPFValidator = class CPFValidator {
    validate(cpf, args) {
        if (!cpf) {
            return false;
        }
        // Remove caracteres especiais
        cpf = cpf.replace(/[^\d]/g, '');
        // Verifica se tem 11 dígitos
        if (cpf.length !== 11) {
            return false;
        }
        // Verifica se todos os dígitos são iguais
        if (/^(\d)\1+$/.test(cpf)) {
            return false;
        }
        // Validação do primeiro dígito verificador
        let soma = 0;
        for (let i = 0; i < 9; i++) {
            soma += parseInt(cpf.charAt(i)) * (10 - i);
        }
        let resto = soma % 11;
        const digitoVerificador1 = resto < 2 ? 0 : 11 - resto;
        if (digitoVerificador1 !== parseInt(cpf.charAt(9))) {
            return false;
        }
        // Validação do segundo dígito verificador
        soma = 0;
        for (let i = 0; i < 10; i++) {
            soma += parseInt(cpf.charAt(i)) * (11 - i);
        }
        resto = soma % 11;
        const digitoVerificador2 = resto < 2 ? 0 : 11 - resto;
        if (digitoVerificador2 !== parseInt(cpf.charAt(10))) {
            return false;
        }
        return true;
    }
    defaultMessage(args) {
        return 'CPF inválido';
    }
};
exports.CPFValidator = CPFValidator;
exports.CPFValidator = CPFValidator = __decorate([
    (0, class_validator_1.ValidatorConstraint)({ name: 'cpfValidator', async: false })
], CPFValidator);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNpZGFkYW9cXHZhbGlkYXRvcnNcXGNwZi12YWxpZGF0b3IudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEscURBSXlCO0FBR2xCLElBQU0sWUFBWSxHQUFsQixNQUFNLFlBQVk7SUFDdkIsUUFBUSxDQUFDLEdBQVcsRUFBRSxJQUF5QjtRQUM3QyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDVCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7UUFFRCw4QkFBOEI7UUFDOUIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWhDLDZCQUE2QjtRQUM3QixJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssRUFBRSxFQUFFLENBQUM7WUFDdEIsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO1FBRUQsMENBQTBDO1FBQzFDLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQzFCLE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztRQUVELDJDQUEyQztRQUMzQyxJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7UUFDYixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDM0IsSUFBSSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDN0MsQ0FBQztRQUNELElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7UUFDdEIsTUFBTSxrQkFBa0IsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFDdEQsSUFBSSxrQkFBa0IsS0FBSyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDbkQsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO1FBRUQsMENBQTBDO1FBQzFDLElBQUksR0FBRyxDQUFDLENBQUM7UUFDVCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDNUIsSUFBSSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDN0MsQ0FBQztRQUNELEtBQUssR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDO1FBQ3RELElBQUksa0JBQWtCLEtBQUssUUFBUSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ3BELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELGNBQWMsQ0FBQyxJQUF5QjtRQUN0QyxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0NBQ0YsQ0FBQTtBQS9DWSxvQ0FBWTt1QkFBWixZQUFZO0lBRHhCLElBQUEscUNBQW1CLEVBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQztHQUMvQyxZQUFZLENBK0N4QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcbW9kdWxlc1xcY2lkYWRhb1xcdmFsaWRhdG9yc1xcY3BmLXZhbGlkYXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBWYWxpZGF0b3JDb25zdHJhaW50LFxuICBWYWxpZGF0b3JDb25zdHJhaW50SW50ZXJmYWNlLFxuICBWYWxpZGF0aW9uQXJndW1lbnRzLFxufSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuXG5AVmFsaWRhdG9yQ29uc3RyYWludCh7IG5hbWU6ICdjcGZWYWxpZGF0b3InLCBhc3luYzogZmFsc2UgfSlcbmV4cG9ydCBjbGFzcyBDUEZWYWxpZGF0b3IgaW1wbGVtZW50cyBWYWxpZGF0b3JDb25zdHJhaW50SW50ZXJmYWNlIHtcbiAgdmFsaWRhdGUoY3BmOiBzdHJpbmcsIGFyZ3M6IFZhbGlkYXRpb25Bcmd1bWVudHMpIHtcbiAgICBpZiAoIWNwZikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIFJlbW92ZSBjYXJhY3RlcmVzIGVzcGVjaWFpc1xuICAgIGNwZiA9IGNwZi5yZXBsYWNlKC9bXlxcZF0vZywgJycpO1xuXG4gICAgLy8gVmVyaWZpY2Egc2UgdGVtIDExIGTDrWdpdG9zXG4gICAgaWYgKGNwZi5sZW5ndGggIT09IDExKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gVmVyaWZpY2Egc2UgdG9kb3Mgb3MgZMOtZ2l0b3Mgc8OjbyBpZ3VhaXNcbiAgICBpZiAoL14oXFxkKVxcMSskLy50ZXN0KGNwZikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGHDp8OjbyBkbyBwcmltZWlybyBkw61naXRvIHZlcmlmaWNhZG9yXG4gICAgbGV0IHNvbWEgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgOTsgaSsrKSB7XG4gICAgICBzb21hICs9IHBhcnNlSW50KGNwZi5jaGFyQXQoaSkpICogKDEwIC0gaSk7XG4gICAgfVxuICAgIGxldCByZXN0byA9IHNvbWEgJSAxMTtcbiAgICBjb25zdCBkaWdpdG9WZXJpZmljYWRvcjEgPSByZXN0byA8IDIgPyAwIDogMTEgLSByZXN0bztcbiAgICBpZiAoZGlnaXRvVmVyaWZpY2Fkb3IxICE9PSBwYXJzZUludChjcGYuY2hhckF0KDkpKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYcOnw6NvIGRvIHNlZ3VuZG8gZMOtZ2l0byB2ZXJpZmljYWRvclxuICAgIHNvbWEgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgc29tYSArPSBwYXJzZUludChjcGYuY2hhckF0KGkpKSAqICgxMSAtIGkpO1xuICAgIH1cbiAgICByZXN0byA9IHNvbWEgJSAxMTtcbiAgICBjb25zdCBkaWdpdG9WZXJpZmljYWRvcjIgPSByZXN0byA8IDIgPyAwIDogMTEgLSByZXN0bztcbiAgICBpZiAoZGlnaXRvVmVyaWZpY2Fkb3IyICE9PSBwYXJzZUludChjcGYuY2hhckF0KDEwKSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGRlZmF1bHRNZXNzYWdlKGFyZ3M6IFZhbGlkYXRpb25Bcmd1bWVudHMpIHtcbiAgICByZXR1cm4gJ0NQRiBpbnbDoWxpZG8nO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=