{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\create-configuracao-renovacao.dto.ts","mappings":";;;;;;;;;;;;AAAA,qDAQyB;AAEzB;;GAEG;AACH,MAAa,8BAA8B;IAGzC,iBAAiB,CAAS;IAG1B,oBAAoB,CAAU;IAI9B,2BAA2B,CAAS;IAKpC,wBAAwB,CAAU;IAGlC,0BAA0B,CAAU;IAIpC,WAAW,CAAU;CACtB;AAvBD,wEAuBC;AApBC;IAFC,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC;IAChE,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC;;yEACnC;AAG1B;IADC,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC;;4EACtC;AAI9B;IAFC,IAAA,0BAAQ,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC;IACpE,IAAA,qBAAG,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC;;mFAC7B;AAKpC;IAHC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,gDAAgD,EAAE,CAAC;IAC3E,IAAA,qBAAG,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,mDAAmD,EAAE,CAAC;;gFACvC;AAGlC;IADC,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,oDAAoD,EAAE,CAAC;;kFACzC;AAIpC;IAFC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC;;mEACrC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\create-configuracao-renovacao.dto.ts"],"sourcesContent":["import {\n  IsNotEmpty,\n  IsOptional,\n  IsBoolean,\n  IsNumber,\n  Min,\n  IsUUID,\n  IsString,\n} from 'class-validator';\n\n/**\n * DTO para criação de configuração de renovação automática\n */\nexport class CreateConfiguracaoRenovacaoDto {\n  @IsNotEmpty({ message: 'ID do tipo de benefício é obrigatório' })\n  @IsUUID('4', { message: 'ID do tipo de benefício inválido' })\n  tipo_beneficio_id: string;\n\n  @IsBoolean({ message: 'Renovação automática deve ser um booleano' })\n  renovacao_automatica: boolean;\n\n  @IsNumber({}, { message: 'Dias de antecedência deve ser um número' })\n  @Min(1, { message: 'Dias de antecedência deve ser no mínimo 1' })\n  dias_antecedencia_renovacao: number;\n\n  @IsOptional()\n  @IsNumber({}, { message: 'Número máximo de renovações deve ser um número' })\n  @Min(0, { message: 'Número máximo de renovações não pode ser negativo' })\n  numero_maximo_renovacoes?: number;\n\n  @IsBoolean({ message: 'Requer aprovação de renovação deve ser um booleano' })\n  requer_aprovacao_renovacao: boolean;\n\n  @IsOptional()\n  @IsString({ message: 'Observações devem ser uma string' })\n  observacoes?: string;\n}\n"],"version":3}