a7005fd351feba202a18c18bd6af744b
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegisterInput = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const br_validators_1 = require("../../shared/validators/br-validators");
const role_enum_1 = require("../../enums/role.enum");
/**
 * DTO para registro de novo usuário
 */
class RegisterInput {
    name;
    username;
    password;
    email;
    roles = [role_enum_1.Role.TECNICO];
    isAccountDisabled = false;
    cpf;
    telefone;
    matricula;
}
exports.RegisterInput = RegisterInput;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome completo do usuário',
        example: 'João da Silva',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O nome é obrigatório' }),
    (0, class_validator_1.MaxLength)(100, { message: 'O nome deve ter no máximo 100 caracteres' }),
    (0, class_validator_1.IsString)({ message: 'O nome deve ser uma string' }),
    __metadata("design:type", String)
], RegisterInput.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome de usuário único para login',
        example: 'joao.silva',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O nome de usuário é obrigatório' }),
    (0, class_validator_1.MaxLength)(200, {
        message: 'O nome de usuário deve ter no máximo 200 caracteres',
    }),
    (0, class_validator_1.IsString)({ message: 'O nome de usuário deve ser uma string' }),
    __metadata("design:type", String)
], RegisterInput.prototype, "username", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Senha do usuário (mínimo 6 caracteres)',
        example: 'Senha@123',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'A senha é obrigatória' }),
    (0, class_validator_1.Length)(6, 100, {
        message: 'A senha deve ter entre 6 e 100 caracteres',
    }),
    (0, class_validator_1.IsString)({ message: 'A senha deve ser uma string' }),
    __metadata("design:type", String)
], RegisterInput.prototype, "password", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'E-mail do usuário',
        example: 'joao.silva@example.com',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O e-mail é obrigatório' }),
    (0, class_validator_1.IsEmail)({}, { message: 'Informe um endereço de e-mail válido' }),
    (0, class_validator_1.MaxLength)(100, { message: 'O e-mail deve ter no máximo 100 caracteres' }),
    __metadata("design:type", String)
], RegisterInput.prototype, "email", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Lista de papéis (roles) do usuário',
        example: [role_enum_1.Role.TECNICO],
        default: [role_enum_1.Role.TECNICO],
    }),
    (0, class_validator_1.IsArray)({ message: 'Os papéis devem ser fornecidos como um array' }),
    (0, class_validator_1.ArrayMinSize)(1, { message: 'Pelo menos um papel deve ser fornecido' }),
    (0, class_validator_1.ArrayMaxSize)(5, { message: 'Máximo de 5 papéis permitidos' }),
    __metadata("design:type", Array)
], RegisterInput.prototype, "roles", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se a conta está desativada',
        example: false,
        default: false,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'O status da conta deve ser um valor booleano' }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], RegisterInput.prototype, "isAccountDisabled", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        example: '123.456.789-00',
        description: 'CPF do usuário (formato: 123.456.789-00)',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O CPF é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'O CPF deve ser uma string' }),
    (0, class_validator_1.Matches)(/^\d{3}\.\d{3}\.\d{3}\-\d{2}$/, {
        message: 'Formato de CPF inválido. Use o formato: 123.456.789-00',
    }),
    (0, class_validator_1.Validate)(br_validators_1.IsCPF, {
        message: 'CPF inválido ou não existe',
    }),
    __metadata("design:type", String)
], RegisterInput.prototype, "cpf", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        example: '(84) 98765-4321',
        description: 'Telefone do usuário com DDD (formato: (XX) XXXXX-XXXX)',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O telefone é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'O telefone deve ser uma string' }),
    (0, class_validator_1.Matches)(/\(\d{2}\)\s\d{4,5}-\d{4}$/, {
        message: 'Formato de telefone inválido. Use: (XX) XXXX-XXXX para fixo ou (XX) XXXXX-XXXX para celular',
    }),
    (0, class_validator_1.Validate)(br_validators_1.IsTelefone, { message: '' }),
    __metadata("design:type", String)
], RegisterInput.prototype, "telefone", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        example: '12345',
        description: 'Número de matrícula do usuário (5 a 10 dígitos)',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'O número de matrícula é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'A matrícula deve ser uma string' }),
    (0, class_validator_1.Matches)(/^[0-9]{5,10}$/, {
        message: 'A matrícula deve conter apenas números e ter entre 5 e 10 dígitos',
    }),
    __metadata("design:type", String)
], RegisterInput.prototype, "matricula", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,