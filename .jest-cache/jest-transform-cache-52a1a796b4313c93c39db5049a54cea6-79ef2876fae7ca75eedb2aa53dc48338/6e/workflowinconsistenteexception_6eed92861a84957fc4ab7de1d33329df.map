{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\exceptions\\workflow-inconsistente.exception.ts","mappings":";;;AAAA,2CAAqD;AAErD;;;GAGG;AACH,MAAa,8BAA+B,SAAQ,4BAAmB;IACrE;;;;OAIG;IACH,YAAY,eAAuB,EAAE,MAAc;QACjD,KAAK,CACH,oCAAoC,eAAe,oBAAoB,MAAM,EAAE,CAChF,CAAC;IACJ,CAAC;CACF;AAXD,wEAWC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\exceptions\\workflow-inconsistente.exception.ts"],"sourcesContent":["import { BadRequestException } from '@nestjs/common';\n\n/**\n * Exceção lançada quando um workflow possui inconsistências em sua definição.\n * Estende a BadRequestException padrão do NestJS com mensagem personalizada.\n */\nexport class WorkflowInconsistenteException extends BadRequestException {\n  /**\n   * Cria uma nova instância da exceção.\n   * @param tipoBeneficioId - ID do tipo de benefício\n   * @param motivo - Motivo da inconsistência\n   */\n  constructor(tipoBeneficioId: string, motivo: string) {\n    super(\n      `Workflow para tipo de benefício '${tipoBeneficioId}' inconsistente: ${motivo}`,\n    );\n  }\n}\n"],"version":3}