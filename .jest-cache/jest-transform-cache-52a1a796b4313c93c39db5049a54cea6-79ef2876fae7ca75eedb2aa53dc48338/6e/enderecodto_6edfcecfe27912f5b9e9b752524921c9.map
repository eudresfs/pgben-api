{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\dtos\\endereco.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\dtos\\endereco.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString, ValidateIf } from 'class-validator';\nimport { IsCEP } from '../validators/br-validators';\nimport { BaseDto } from './base.dto';\nimport { CREATE, UPDATE } from '../validators/validation-groups';\n\n/**\n * DTO para endereço\n *\n * Contém todos os campos necessários para registrar um endereço completo,\n * com validações específicas para o formato brasileiro.\n */\nexport class EnderecoDto extends BaseDto {\n  @IsString({\n    message: 'Logradouro deve ser uma string',\n    groups: [CREATE, UPDATE],\n  })\n  @IsNotEmpty({ message: 'Logradouro é obrigatório', groups: [CREATE] })\n  @ApiProperty({\n    example: 'Rua das Flores',\n    description: 'Logradouro do endereço',\n  })\n  logradouro: string;\n\n  @IsString({ message: 'Número deve ser uma string', groups: [CREATE, UPDATE] })\n  @IsNotEmpty({ message: 'Número é obrigatório', groups: [CREATE] })\n  @ApiProperty({\n    example: '123',\n    description: 'Número do endereço',\n  })\n  numero: string;\n\n  @IsString({\n    message: 'Complemento deve ser uma string',\n    groups: [CREATE, UPDATE],\n  })\n  @IsOptional()\n  @ApiPropertyOptional({\n    example: 'Apto 101',\n    description: 'Complemento do endereço',\n    required: false,\n  })\n  complemento?: string;\n\n  @IsString({ message: 'Bairro deve ser uma string', groups: [CREATE, UPDATE] })\n  @IsNotEmpty({ message: 'Bairro é obrigatório', groups: [CREATE] })\n  @ApiProperty({\n    example: 'Centro',\n    description: 'Bairro do endereço',\n  })\n  bairro: string;\n\n  @IsString({ message: 'Cidade deve ser uma string', groups: [CREATE, UPDATE] })\n  @IsNotEmpty({ message: 'Cidade é obrigatória', groups: [CREATE] })\n  @ApiProperty({\n    example: 'Natal',\n    description: 'Cidade do endereço',\n  })\n  cidade: string;\n\n  @IsString({ message: 'Estado deve ser uma string', groups: [CREATE, UPDATE] })\n  @IsNotEmpty({ message: 'Estado é obrigatório', groups: [CREATE] })\n  @ApiProperty({\n    example: 'RN',\n    description: 'Estado do endereço (sigla)',\n  })\n  estado: string;\n\n  @IsCEP({ message: 'CEP inválido', groups: [CREATE, UPDATE] })\n  @IsString({ message: 'CEP deve ser uma string', groups: [CREATE, UPDATE] })\n  @IsNotEmpty({ message: 'CEP é obrigatório', groups: [CREATE] })\n  @ApiProperty({\n    example: '59000-000',\n    description: 'CEP do endereço',\n  })\n  cep: string;\n\n  /**\n   * Verifica se o endereço está completo\n   *\n   * @returns true se todos os campos obrigatórios estão preenchidos\n   */\n  isCompleto(): boolean {\n    return !!(\n      this.logradouro &&\n      this.numero &&\n      this.bairro &&\n      this.cidade &&\n      this.estado &&\n      this.cep\n    );\n  }\n\n  /**\n   * Retorna o endereço formatado como string\n   *\n   * @returns Endereço formatado\n   */\n  toString(): string {\n    let endereco = `${this.logradouro}, ${this.numero}`;\n\n    if (this.complemento) {\n      endereco += ` - ${this.complemento}`;\n    }\n\n    endereco += ` - ${this.bairro}, ${this.cidade} - ${this.estado}, ${this.cep}`;\n\n    return endereco;\n  }\n}\n"],"version":3}