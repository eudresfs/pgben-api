{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\pagamento\\validators\\status-transition-validator.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\pagamento\\validators\\status-transition-validator.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { StatusPagamentoEnum } from '../../../enums/status-pagamento.enum';\n\n/**\n * Interface que define uma transição de status\n */\ninterface StatusTransition {\n  from: StatusPagamentoEnum;\n  to: StatusPagamentoEnum;\n  allowed: boolean;\n  reasonIfBlocked?: string;\n}\n\n/**\n * Serviço para validação de transições de status de pagamento\n * \n * Implementa a lógica de máquina de estados para controlar\n * as transições válidas entre os diferentes status de pagamento.\n * \n * @author Equipe PGBen\n */\n@Injectable()\nexport class StatusTransitionValidator {\n  // Matriz de transições permitidas\n  private readonly transitions: StatusTransition[] = [\n    // De AGENDADO para...\n    { \n      from: StatusPagamentoEnum.AGENDADO, \n      to: StatusPagamentoEnum.LIBERADO, \n      allowed: true \n    },\n    { \n      from: StatusPagamentoEnum.AGENDADO, \n      to: StatusPagamentoEnum.CANCELADO, \n      allowed: true \n    },\n    { \n      from: StatusPagamentoEnum.AGENDADO, \n      to: StatusPagamentoEnum.CONFIRMADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível confirmar um pagamento que ainda não foi liberado'\n    },\n    \n    // De LIBERADO para...\n    { \n      from: StatusPagamentoEnum.LIBERADO, \n      to: StatusPagamentoEnum.CONFIRMADO, \n      allowed: true \n    },\n    { \n      from: StatusPagamentoEnum.LIBERADO, \n      to: StatusPagamentoEnum.CANCELADO, \n      allowed: true \n    },\n    { \n      from: StatusPagamentoEnum.LIBERADO, \n      to: StatusPagamentoEnum.AGENDADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível retornar um pagamento liberado para o status agendado'\n    },\n    \n    // De CONFIRMADO para...\n    { \n      from: StatusPagamentoEnum.CONFIRMADO, \n      to: StatusPagamentoEnum.AGENDADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível retornar um pagamento confirmado para o status agendado'\n    },\n    { \n      from: StatusPagamentoEnum.CONFIRMADO, \n      to: StatusPagamentoEnum.LIBERADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível retornar um pagamento confirmado para o status liberado'\n    },\n    { \n      from: StatusPagamentoEnum.CONFIRMADO, \n      to: StatusPagamentoEnum.CANCELADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível cancelar um pagamento que já foi confirmado'\n    },\n    \n    // De CANCELADO para...\n    { \n      from: StatusPagamentoEnum.CANCELADO, \n      to: StatusPagamentoEnum.AGENDADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível reativar um pagamento cancelado'\n    },\n    { \n      from: StatusPagamentoEnum.CANCELADO, \n      to: StatusPagamentoEnum.LIBERADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível liberar um pagamento cancelado'\n    },\n    { \n      from: StatusPagamentoEnum.CANCELADO, \n      to: StatusPagamentoEnum.CONFIRMADO, \n      allowed: false,\n      reasonIfBlocked: 'Não é possível confirmar um pagamento cancelado'\n    }\n  ];\n\n  /**\n   * Verifica se uma transição de status é permitida\n   * \n   * @param fromStatus Status atual do pagamento\n   * @param toStatus Status desejado\n   * @returns Um objeto contendo o resultado da validação e a razão se bloqueado\n   */\n  canTransition(fromStatus: StatusPagamentoEnum, toStatus: StatusPagamentoEnum): { \n    allowed: boolean; \n    reason?: string \n  } {\n    // Se não há mudança de status, é permitido\n    if (fromStatus === toStatus) {\n      return { allowed: true };\n    }\n\n    // Busca a transição correspondente\n    const transition = this.transitions.find(\n      t => t.from === fromStatus && t.to === toStatus\n    );\n\n    // Se a transição não está definida, não é permitida\n    if (!transition) {\n      return { \n        allowed: false, \n        reason: `Transição de ${fromStatus} para ${toStatus} não está definida` \n      };\n    }\n\n    // Retorna o resultado da validação\n    return { \n      allowed: transition.allowed, \n      reason: transition.allowed ? undefined : transition.reasonIfBlocked \n    };\n  }\n\n  /**\n   * Obtém todas as transições possíveis a partir de um status\n   * \n   * @param fromStatus Status atual\n   * @returns Lista de status para os quais é possível transicionar\n   */\n  getPossibleTransitions(fromStatus: StatusPagamentoEnum): StatusPagamentoEnum[] {\n    return this.transitions\n      .filter(t => t.from === fromStatus && t.allowed)\n      .map(t => t.to);\n  }\n\n  /**\n   * Verifica se um pagamento pode ser cancelado\n   * \n   * @param currentStatus Status atual do pagamento\n   * @returns true se o pagamento pode ser cancelado, false caso contrário\n   */\n  canBeCanceled(currentStatus: StatusPagamentoEnum): boolean {\n    return this.canTransition(\n      currentStatus, \n      StatusPagamentoEnum.CANCELADO\n    ).allowed;\n  }\n\n  /**\n   * Verifica se um pagamento pode ser confirmado\n   * \n   * @param currentStatus Status atual do pagamento\n   * @returns true se o pagamento pode ser confirmado, false caso contrário\n   */\n  canBeConfirmed(currentStatus: StatusPagamentoEnum): boolean {\n    return this.canTransition(\n      currentStatus, \n      StatusPagamentoEnum.CONFIRMADO\n    ).allowed;\n  }\n}\n"],"version":3}