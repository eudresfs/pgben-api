b3a9f47e401ae58e3f97448928bd2579
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditModule = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const schedule_1 = require("@nestjs/schedule");
const audit_log_entity_1 = require("../entities/audit-log.entity");
const audit_service_1 = require("./services/audit.service");
const audit_controller_1 = require("./controllers/audit.controller");
const common_2 = require("@nestjs/common");
const auth_module_1 = require("../auth/auth.module");
let AuditModule = class AuditModule {
};
exports.AuditModule = AuditModule;
exports.AuditModule = AuditModule = __decorate([
    (0, common_1.Module)({
        imports: [
            typeorm_1.TypeOrmModule.forFeature([audit_log_entity_1.AuditLog]),
            schedule_1.ScheduleModule.forRoot(), // Para tarefas agendadas (cleanup automático)
            (0, common_2.forwardRef)(() => auth_module_1.AuthModule),
        ],
        controllers: [audit_controller_1.AuditController],
        providers: [audit_service_1.AuditService],
        exports: [audit_service_1.AuditService], // Exporta para uso em outros módulos
    })
], AuditModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGF1ZGl0XFxhdWRpdC5tb2R1bGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMkNBQXdDO0FBQ3hDLDZDQUFnRDtBQUNoRCwrQ0FBa0Q7QUFDbEQsbUVBQXdEO0FBQ3hELDREQUF3RDtBQUN4RCxxRUFBaUU7QUFFakUsMkNBQTRDO0FBQzVDLHFEQUFpRDtBQVkxQyxJQUFNLFdBQVcsR0FBakIsTUFBTSxXQUFXO0NBQUcsQ0FBQTtBQUFkLGtDQUFXO3NCQUFYLFdBQVc7SUFWdkIsSUFBQSxlQUFNLEVBQUM7UUFDTixPQUFPLEVBQUU7WUFDUCx1QkFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLDJCQUFRLENBQUMsQ0FBQztZQUNwQyx5QkFBYyxDQUFDLE9BQU8sRUFBRSxFQUFFLDhDQUE4QztZQUN4RSxJQUFBLG1CQUFVLEVBQUMsR0FBRyxFQUFFLENBQUMsd0JBQVUsQ0FBQztTQUM3QjtRQUNELFdBQVcsRUFBRSxDQUFDLGtDQUFlLENBQUM7UUFDOUIsU0FBUyxFQUFFLENBQUMsNEJBQVksQ0FBQztRQUN6QixPQUFPLEVBQUUsQ0FBQyw0QkFBWSxDQUFDLEVBQUUscUNBQXFDO0tBQy9ELENBQUM7R0FDVyxXQUFXLENBQUciLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGF1ZGl0XFxhdWRpdC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgVHlwZU9ybU1vZHVsZSB9IGZyb20gJ0BuZXN0anMvdHlwZW9ybSc7XG5pbXBvcnQgeyBTY2hlZHVsZU1vZHVsZSB9IGZyb20gJ0BuZXN0anMvc2NoZWR1bGUnO1xuaW1wb3J0IHsgQXVkaXRMb2cgfSBmcm9tICcuLi9lbnRpdGllcy9hdWRpdC1sb2cuZW50aXR5JztcbmltcG9ydCB7IEF1ZGl0U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYXVkaXQuc2VydmljZSc7XG5pbXBvcnQgeyBBdWRpdENvbnRyb2xsZXIgfSBmcm9tICcuL2NvbnRyb2xsZXJzL2F1ZGl0LmNvbnRyb2xsZXInO1xuXG5pbXBvcnQgeyBmb3J3YXJkUmVmIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgQXV0aE1vZHVsZSB9IGZyb20gJy4uL2F1dGgvYXV0aC5tb2R1bGUnO1xuXG5ATW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIFR5cGVPcm1Nb2R1bGUuZm9yRmVhdHVyZShbQXVkaXRMb2ddKSxcbiAgICBTY2hlZHVsZU1vZHVsZS5mb3JSb290KCksIC8vIFBhcmEgdGFyZWZhcyBhZ2VuZGFkYXMgKGNsZWFudXAgYXV0b23DoXRpY28pXG4gICAgZm9yd2FyZFJlZigoKSA9PiBBdXRoTW9kdWxlKSxcbiAgXSxcbiAgY29udHJvbGxlcnM6IFtBdWRpdENvbnRyb2xsZXJdLFxuICBwcm92aWRlcnM6IFtBdWRpdFNlcnZpY2VdLFxuICBleHBvcnRzOiBbQXVkaXRTZXJ2aWNlXSwgLy8gRXhwb3J0YSBwYXJhIHVzbyBlbSBvdXRyb3MgbcOzZHVsb3Ncbn0pXG5leHBvcnQgY2xhc3MgQXVkaXRNb2R1bGUge31cbiJdLCJ2ZXJzaW9uIjozfQ==