{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\permission-group.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\permission-group.entity.ts"],"sourcesContent":["import { Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn, Index } from 'typeorm';\nimport { IsNotEmpty, IsString, Length, IsOptional, IsUUID, IsEnum } from 'class-validator';\nimport { Status } from '../enums/status.enum';\nimport { Usuario } from './usuario.entity';\n\n/**\n * Entidade que representa um grupo de permissões no sistema.\n * \n * Os grupos permitem organizar permissões logicamente (ex: \"Gerenciamento de Cidadãos\")\n * e facilitar a atribuição de múltiplas permissões relacionadas.\n */\n@Entity('grupo_permissao')\n@Index(['nome'], { unique: true })\n@Index(['status'])\n@Index(['criado_por'])\nexport class PermissionGroup {\n  /**\n   * Identificador único do grupo\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Nome do grupo\n   */\n  @Column({ type: 'varchar', length: 100, unique: true, name: 'nome' })\n  @IsNotEmpty({ message: 'Nome do grupo é obrigatório' })\n  @IsString({ message: 'Nome deve ser uma string' })\n  @Length(3, 100, { message: 'Nome deve ter entre 3 e 100 caracteres' })\n  nome: string;\n\n  /**\n   * Descrição do grupo\n   */\n  @Column({ type: 'varchar', length: 255, name: 'descricao' })\n  @IsNotEmpty({ message: 'Descrição do grupo é obrigatória' })\n  @IsString({ message: 'Descrição deve ser uma string' })\n  @Length(5, 255, { message: 'Descrição deve ter entre 5 e 255 caracteres' })\n  descricao: string;\n\n  /**\n   * Status do grupo (ativo/inativo)\n   */\n  @Column({ \n    type: 'enum', \n    enum: Status, \n    default: Status.ATIVO,\n    name: 'status'\n  })\n  @IsEnum(Status, { message: 'Status deve ser ATIVO ou INATIVO' })\n  status: Status;\n\n  /**\n   * Data de criação\n   */\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n\n  /**\n   * Data de última atualização\n   */\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n\n  /**\n   * Usuário que criou o grupo\n   */\n  @Column({ type: 'uuid', nullable: true, name: 'criado_por' })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do usuário criador inválido' })\n  criado_por: string | null;\n\n  /**\n   * Relação com o usuário que criou o grupo\n   */\n  @ManyToOne(() => Usuario, { nullable: true })\n  @JoinColumn({ name: 'criado_por' })\n  usuario_criador: Usuario | null;\n\n  /**\n   * Usuário que atualizou o grupo por último\n   */\n  @Column({ type: 'uuid', nullable: true, name: 'atualizado_por' })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do usuário atualizador inválido' })\n  atualizado_por: string | null;\n\n  /**\n   * Relação com o usuário que atualizou o grupo por último\n   */\n  @ManyToOne(() => Usuario, { nullable: true })\n  @JoinColumn({ name: 'atualizado_por' })\n  usuario_atualizador: Usuario | null;\n\n  // Getters e setters para compatibilidade com código existente\n  get name(): string {\n    return this.nome;\n  }\n\n  set name(value: string) {\n    this.nome = value;\n  }\n\n  get description(): string {\n    return this.descricao;\n  }\n\n  set description(value: string) {\n    this.descricao = value;\n  }\n\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get createdBy(): string | null {\n    return this.criado_por;\n  }\n\n  set createdBy(value: string | null) {\n    this.criado_por = value;\n  }\n\n  get creator(): Usuario | null {\n    return this.usuario_criador;\n  }\n\n  set creator(value: Usuario | null) {\n    this.usuario_criador = value;\n  }\n\n  get updatedBy(): string | null {\n    return this.atualizado_por;\n  }\n\n  set updatedBy(value: string | null) {\n    this.atualizado_por = value;\n  }\n\n  get updater(): Usuario | null {\n    return this.usuario_atualizador;\n  }\n\n  set updater(value: Usuario | null) {\n    this.usuario_atualizador = value;\n  }\n\n  // Métodos utilitários para gerenciar status\n  /**\n   * Verifica se o grupo está ativo\n   */\n  isAtivo(): boolean {\n    return this.status === Status.ATIVO;\n  }\n\n  /**\n   * Ativa o grupo\n   */\n  ativar(): void {\n    this.status = Status.ATIVO;\n  }\n\n  /**\n   * Desativa o grupo\n   */\n  desativar(): void {\n    this.status = Status.INATIVO;\n  }\n\n  /**\n   * Verifica se o grupo pode ser deletado\n   * (implementar lógica específica conforme regras de negócio)\n   */\n  podeSerDeletado(): boolean {\n    // Por enquanto, permite deletar apenas grupos inativos\n    return this.status === Status.INATIVO;\n  }\n\n  /**\n   * Atualiza o usuário que modificou o grupo\n   */\n  atualizarPor(usuarioId: string): void {\n    this.atualizado_por = usuarioId;\n  }\n\n  /**\n   * Verifica se o grupo foi criado por um usuário específico\n   */\n  foiCriadoPor(usuarioId: string): boolean {\n    return this.criado_por === usuarioId;\n  }\n\n  /**\n   * Verifica se o grupo foi atualizado por um usuário específico\n   */\n  foiAtualizadoPor(usuarioId: string): boolean {\n    return this.atualizado_por === usuarioId;\n  }\n\n  /**\n   * Gera uma chave única para o grupo\n   */\n  getUniqueKey(): string {\n    return `permission_group_${this.nome}_${this.id}`;\n  }\n\n  /**\n   * Verifica se o grupo tem um nome válido\n   */\n  hasValidName(): boolean {\n    return !!this.nome && this.nome.trim().length >= 3;\n  }\n\n  /**\n   * Verifica se o grupo está em um estado válido\n   */\n  isValid(): boolean {\n    return (\n      this.hasValidName() &&\n      !!this.descricao &&\n      this.descricao.trim().length >= 5 &&\n      Object.values(Status).includes(this.status)\n    );\n  }\n\n  /**\n   * Obtém informações resumidas do grupo\n   */\n  getSummary(): { id: string; nome: string; descricao: string; status: Status; ativo: boolean } {\n    return {\n      id: this.id,\n      nome: this.nome,\n      descricao: this.descricao,\n      status: this.status,\n      ativo: this.isAtivo()\n    };\n  }\n\n  /**\n   * Verifica se o grupo foi criado recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    if (!this.created_at) return false;\n    \n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    \n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Verifica se o grupo foi atualizado recentemente (últimas 24 horas)\n   */\n  isAtualizadoRecentemente(): boolean {\n    if (!this.updated_at) return false;\n    \n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    \n    return this.updated_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do grupo em dias\n   */\n  getIdadeEmDias(): number {\n    if (!this.created_at) return 0;\n    \n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    return diffDays;\n  }\n\n  /**\n   * Verifica se o grupo tem criador definido\n   */\n  temCriador(): boolean {\n    return !!this.criado_por;\n  }\n\n  /**\n   * Verifica se o grupo tem atualizador definido\n   */\n  temAtualizador(): boolean {\n    return !!this.atualizado_por;\n  }\n\n  /**\n   * Define o criador do grupo\n   */\n  definirCriador(usuarioId: string): void {\n    this.criado_por = usuarioId;\n  }\n\n  /**\n   * Obtém uma descrição formatada do grupo\n   */\n  getDescricaoFormatada(): string {\n    const statusText = this.isAtivo() ? 'Ativo' : 'Inativo';\n    return `${this.nome} (${statusText}) - ${this.descricao}`;\n  }\n\n  /**\n   * Verifica se o grupo pode ser editado\n   */\n  podeSerEditado(): boolean {\n    // Grupos ativos podem ser editados\n    return this.isAtivo();\n  }\n\n  /**\n   * Verifica se o nome do grupo é único (para validação)\n   */\n  isNomeUnico(outrosGrupos: PermissionGroup[]): boolean {\n    return !outrosGrupos.some(grupo => \n      grupo.id !== this.id && \n      grupo.nome.toLowerCase() === this.nome.toLowerCase()\n    );\n  }\n\n  /**\n   * Clona o grupo (sem ID e datas)\n   */\n  clone(): Partial<PermissionGroup> {\n    return {\n      nome: `${this.nome} (Cópia)`,\n      descricao: this.descricao,\n      status: this.status,\n      criado_por: this.criado_por\n    };\n  }\n}\n"],"version":3}