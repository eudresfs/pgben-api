{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\monitoring\\tests\\monitoring.module.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\monitoring\\tests\\monitoring.module.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { MonitoringModule } from '../monitoring.module';\nimport { HealthController } from '../health.controller';\nimport { MetricsController } from '../metrics.controller';\nimport { EnhancedMetricsController } from '../enhanced-metrics.controller';\nimport { MetricsService } from '../metrics.service';\nimport { EnhancedMetricsService } from '../enhanced-metrics.service';\nimport { MetricsInterceptor } from '../metrics.interceptor';\nimport { EnhancedMetricsInterceptor } from '../enhanced-metrics.interceptor';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { HttpModule } from '@nestjs/axios';\n\n/**\n * Testes para o MonitoringModule\n *\n * Verifica se o módulo está configurado corretamente com todos os providers,\n * controladores e exportações necessárias.\n */\ndescribe('MonitoringModule', () => {\n  let module: TestingModule;\n\n  beforeEach(async () => {\n    module = await Test.createTestingModule({\n      imports: [\n        ConfigModule.forRoot({\n          isGlobal: true,\n          envFilePath: '.env.test',\n        }),\n        MonitoringModule,\n      ],\n    }).compile();\n  });\n\n  afterEach(async () => {\n    await module.close();\n  });\n\n  it('deve ser definido', () => {\n    expect(module).toBeDefined();\n  });\n\n  it('deve fornecer o HealthController', () => {\n    const controller = module.get<HealthController>(HealthController);\n    expect(controller).toBeDefined();\n    expect(controller).toBeInstanceOf(HealthController);\n  });\n\n  it('deve fornecer o MetricsController', () => {\n    const controller = module.get<MetricsController>(MetricsController);\n    expect(controller).toBeDefined();\n    expect(controller).toBeInstanceOf(MetricsController);\n  });\n\n  it('deve fornecer o EnhancedMetricsController', () => {\n    const controller = module.get<EnhancedMetricsController>(\n      EnhancedMetricsController,\n    );\n    expect(controller).toBeDefined();\n    expect(controller).toBeInstanceOf(EnhancedMetricsController);\n  });\n\n  it('deve fornecer o MetricsService', () => {\n    const service = module.get<MetricsService>(MetricsService);\n    expect(service).toBeDefined();\n    expect(service).toBeInstanceOf(MetricsService);\n  });\n\n  it('deve fornecer o EnhancedMetricsService', () => {\n    const service = module.get<EnhancedMetricsService>(EnhancedMetricsService);\n    expect(service).toBeDefined();\n    expect(service).toBeInstanceOf(EnhancedMetricsService);\n  });\n\n  it('deve exportar os serviços de métricas', () => {\n    const exportedProviders = module.get('METRICS_SERVICES');\n    expect(exportedProviders).toBeDefined();\n    expect(Array.isArray(exportedProviders)).toBe(true);\n    expect(exportedProviders.length).toBeGreaterThan(0);\n  });\n\n  it('deve importar o TerminusModule', () => {\n    const terminusModule = module.get(TerminusModule);\n    expect(terminusModule).toBeDefined();\n  });\n\n  it('deve importar o HttpModule', () => {\n    const httpModule = module.get(HttpModule);\n    expect(httpModule).toBeDefined();\n  });\n\n  it('deve configurar corretamente o ConfigModule', () => {\n    const configService = module.get(ConfigService);\n    expect(configService).toBeDefined();\n    expect(configService).toBeInstanceOf(ConfigService);\n  });\n\n  it('deve fornecer o MetricsInterceptor', () => {\n    const interceptor = module.get(MetricsInterceptor);\n    expect(interceptor).toBeDefined();\n    expect(interceptor).toBeInstanceOf(MetricsInterceptor);\n  });\n\n  it('deve fornecer o EnhancedMetricsInterceptor', () => {\n    const interceptor = module.get(EnhancedMetricsInterceptor);\n    expect(interceptor).toBeDefined();\n    expect(interceptor).toBeInstanceOf(EnhancedMetricsInterceptor);\n  });\n});\n"],"version":3}