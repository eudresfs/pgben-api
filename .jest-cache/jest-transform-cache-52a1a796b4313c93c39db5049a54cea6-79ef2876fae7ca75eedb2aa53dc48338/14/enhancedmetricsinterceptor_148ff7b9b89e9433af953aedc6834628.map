{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\monitoring\\enhanced-metrics.interceptor.ts","mappings":";;;;;;;;;;;;;AAAA,2CAMwB;AAExB,8CAAqC;AACrC,yEAAoE;AAEpE;;;;;;;;GAQG;AAEI,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAGR;IAFZ,MAAM,GAAG,IAAI,eAAM,CAAC,4BAA4B,CAAC,CAAC;IAEnE,YAA6B,cAAsC;QAAtC,mBAAc,GAAd,cAAc,CAAwB;IAAG,CAAC;IAEvE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,4DAA4D;QAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,iDAAiD,OAAO,CAAC,OAAO,EAAE,EAAE,CACrE,CAAC;QAEF,qCAAqC;QACrC,IAAI,OAAO,CAAC,OAAO,EAAE,KAAK,MAAM,EAAE,CAAC;YACjC,oCAAoC;YACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,CAAC;QAED,kCAAkC;QAClC,MAAM,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;QACnC,MAAM,OAAO,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACjC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC;QAEpC,kCAAkC;QAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC;QAEnD,sDAAsD;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE3C,mDAAmD;QACnD,IAAI,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,+BAA+B,CACjD,MAAM,EACN,KAAK,EACL,QAAQ,CACT,CAAC;QACJ,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sCAAsC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YACvE,wCAAwC;QAC1C,CAAC;QAED,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAEnC,kEAAkE;QAClE,uEAAuE;QACvE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CACvB,IAAA,eAAG,EAAC;YACF,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE;gBACb,IAAI,CAAC;oBACH,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;oBACnC,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBAEvC,iCAAiC;oBACjC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBACzD,MAAM,eAAe,GAAG,OAAO,GAAG,WAAW,GAAG,GAAG,CAAC;oBAEpD,0BAA0B;oBAC1B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnC,MAAM,EACN,KAAK,EACL,UAAU,EACV,QAAQ,CACT,CAAC;oBACF,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAC3C,MAAM,EACN,KAAK,EACL,UAAU,EACV,eAAe,EACf,QAAQ,CACT,CAAC;oBAEF,uCAAuC;oBACvC,IACE,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;wBACzB,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC;wBAC9B,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC3B,CAAC;wBACD,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;oBAC1D,CAAC;oBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,4BAA4B,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAC5D,CAAC;gBACJ,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,sCAAsC,GAAG,CAAC,OAAO,EAAE,CACpD,CAAC;oBACF,wCAAwC;gBAC1C,CAAC;wBAAS,CAAC;oBACT,kEAAkE;oBAClE,IAAI,CAAC;wBACH,IAAI,CAAC,cAAc,CAAC,+BAA+B,CACjD,MAAM,EACN,KAAK,EACL,QAAQ,CACT,CAAC;oBACJ,CAAC;oBAAC,OAAO,GAAG,EAAE,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;oBACpE,CAAC;gBACH,CAAC;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC;oBACH,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC;oBAEvC,iCAAiC;oBACjC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBACzD,MAAM,eAAe,GAAG,OAAO,GAAG,WAAW,GAAG,GAAG,CAAC;oBAEpD,0BAA0B;oBAC1B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnC,MAAM,EACN,KAAK,EACL,UAAU,EACV,QAAQ,CACT,CAAC;oBACF,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAC3C,MAAM,EACN,KAAK,EACL,UAAU,EACV,eAAe,EACf,QAAQ,CACT,CAAC;oBAEF,8DAA8D;oBAC9D,IAAI,UAAU,KAAK,GAAG,IAAI,UAAU,KAAK,GAAG,EAAE,CAAC;wBAC7C,IAAI,CAAC,cAAc,CAAC,mBAAmB,CACrC,uBAAuB,EACvB,SAAS,EACT,KAAK,CACN,CAAC;oBACJ,CAAC;yBAAM,IAAI,UAAU,IAAI,GAAG,EAAE,CAAC;wBAC7B,IAAI,CAAC,cAAc,CAAC,mBAAmB,CACrC,cAAc,EACd,OAAO,EACP,KAAK,CACN,CAAC;oBACJ,CAAC;oBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,wBAAwB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CACxD,CAAC;gBACJ,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,8CAA8C,GAAG,CAAC,OAAO,EAAE,CAC5D,CAAC;oBACF,wCAAwC;gBAC1C,CAAC;wBAAS,CAAC;oBACT,kEAAkE;oBAClE,IAAI,CAAC;wBACH,IAAI,CAAC,cAAc,CAAC,+BAA+B,CACjD,MAAM,EACN,KAAK,EACL,QAAQ,CACT,CAAC;oBACJ,CAAC;oBAAC,OAAO,GAAG,EAAE,CAAC;wBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;oBACpE,CAAC;gBACH,CAAC;YACH,CAAC;SACF,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;OAGG;IACK,cAAc,CAAC,GAAW;QAChC,uBAAuB;QACvB,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/B,4EAA4E;QAC5E,OAAO,IAAI;aACR,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;aACzB,OAAO,CACN,kEAAkE,EAClE,QAAQ,CACT;aACA,OAAO,CAAC,yCAAyC,EAAE,SAAS,CAAC,CAAC;IACnE,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,OAAY;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,WAAW,CAAC;QACrB,CAAC;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvE,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,2CAA2C;QAC3E,CAAC;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACtB,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,CAAC;QAED,OAAO,eAAe,CAAC;IACzB,CAAC;IAED;;OAEG;IACK,4BAA4B,CAClC,OAAY,EACZ,IAAS,EACT,KAAa;QAEb,wDAAwD;QACxD,MAAM,UAAU,GAAG;YACjB,eAAe;YACf,oBAAoB;YACpB,iBAAiB;SAClB,CAAC;QAEF,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAChD,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAC5B,CAAC;QAEF,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QAED,kCAAkC;QAClC,IAAI,QAAQ,GAAG,SAAS,CAAC;QACzB,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YAC/B,QAAQ,GAAG,gBAAgB,CAAC;QAC9B,CAAC;aAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC;YAC3C,QAAQ,GAAG,iBAAiB,CAAC;QAC/B,CAAC;aAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YACxC,QAAQ,GAAG,YAAY,CAAC;QAC1B,CAAC;QAED,wBAAwB;QACxB,IAAI,SAAS,GAAG,SAAS,CAAC;QAC1B,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE,CAAC;YAC7B,SAAS,GAAG,SAAS,CAAC;QACxB,CAAC;aAAM,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;YACrC,SAAS,GAAG,SAAS,CAAC;QACxB,CAAC;aAAM,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE,CAAC;YAClE,SAAS,GAAG,aAAa,CAAC;QAC5B,CAAC;aAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE,CAAC;YACvC,SAAS,GAAG,UAAU,CAAC;QACzB,CAAC;QAED,iFAAiF;QACjF,MAAM,UAAU,GAAG,IAAI,CAAC;QAExB,qBAAqB;QACrB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CACtC,QAAQ,EACR,SAAS,EACT,UAAU,EACV,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAC1B,CAAC;IACJ,CAAC;CACF,CAAA;AAlQY,gEAA0B;qCAA1B,0BAA0B;IADtC,IAAA,mBAAU,GAAE;yDAIkC,iDAAsB,oBAAtB,iDAAsB;GAHxD,0BAA0B,CAkQtC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\monitoring\\enhanced-metrics.interceptor.ts"],"sourcesContent":["import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { EnhancedMetricsService } from './enhanced-metrics.service';\n\n/**\n * Interceptor de M√©tricas Aprimorado\n *\n * Intercepta todas as requisi√ß√µes HTTP e registra m√©tricas avan√ßadas como:\n * - Contador de requisi√ß√µes com informa√ß√µes de perfil de usu√°rio\n * - Dura√ß√£o das requisi√ß√µes\n * - Requisi√ß√µes em andamento\n * - Eventos de seguran√ßa e compliance LGPD\n */\n@Injectable()\nexport class EnhancedMetricsInterceptor implements NestInterceptor {\n  private readonly logger = new Logger('EnhancedMetricsInterceptor');\n\n  constructor(private readonly metricsService: EnhancedMetricsService) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    // CORRIGIDO: Redu√ß√£o de logs e simplifica√ß√£o do interceptor\n    this.logger.debug(\n      `üî• EnhancedMetricsInterceptor: Iniciando para ${context.getType()}`,\n    );\n\n    // Verificar se √© uma requisi√ß√£o HTTP\n    if (context.getType() !== 'http') {\n      // N√£o √© HTTP, apenas passar adiante\n      this.logger.debug(`üî• EnhancedMetricsInterceptor: N√£o √© HTTP, ignorando`);\n      return next.handle();\n    }\n\n    // Obter informa√ß√µes da requisi√ß√£o\n    const ctx = context.switchToHttp();\n    const request = ctx.getRequest();\n    const { method, url, ip } = request;\n\n    // Log simplificado para debugging\n    this.logger.debug(`üî• M√©tricas: ${method} ${url}`);\n\n    // Extrair a rota normalizada e informa√ß√µes do usu√°rio\n    const route = this.normalizeRoute(url);\n    const userRole = this.getUserRole(request);\n\n    // Incrementar contador de requisi√ß√µes em andamento\n    try {\n      this.metricsService.incrementHttpRequestsInProgress(\n        method,\n        route,\n        userRole,\n      );\n    } catch (err) {\n      this.logger.error(`Erro ao registrar m√©trica inicial: ${err.message}`);\n      // N√£o deixar o erro interromper o fluxo\n    }\n\n    const startTime = process.hrtime();\n\n    // IMPORTANTE: Primeiro, garantir que o request continue seu fluxo\n    // Usar finalize para garantir que as m√©tricas sejam sempre processadas\n    return next.handle().pipe(\n      tap({\n        next: (data) => {\n          try {\n            const response = ctx.getResponse();\n            const statusCode = response.statusCode;\n\n            // Calcular dura√ß√£o da requisi√ß√£o\n            const [seconds, nanoseconds] = process.hrtime(startTime);\n            const durationSeconds = seconds + nanoseconds / 1e9;\n\n            // Registrar m√©tricas HTTP\n            this.metricsService.recordHttpRequest(\n              method,\n              route,\n              statusCode,\n              userRole,\n            );\n            this.metricsService.recordHttpRequestDuration(\n              method,\n              route,\n              statusCode,\n              durationSeconds,\n              userRole,\n            );\n\n            // Verificar LGPD somente se necess√°rio\n            if (\n              route.includes('cidadao') ||\n              route.includes('beneficiario') ||\n              route.includes('documento')\n            ) {\n              this.checkAndRecordLgpdDataAccess(request, data, route);\n            }\n\n            this.logger.debug(\n              `üî• M√©tricas finalizadas: ${method} ${url} - ${statusCode}`,\n            );\n          } catch (err) {\n            this.logger.error(\n              `Erro no processamento de m√©tricas: ${err.message}`,\n            );\n            // N√£o deixar o erro interromper o fluxo\n          } finally {\n            // Garantir que o contador seja decrementado mesmo em caso de erro\n            try {\n              this.metricsService.decrementHttpRequestsInProgress(\n                method,\n                route,\n                userRole,\n              );\n            } catch (err) {\n              this.logger.error(`Erro ao decrementar contador: ${err.message}`);\n            }\n          }\n        },\n        error: (error) => {\n          try {\n            const statusCode = error.status || 500;\n\n            // Calcular dura√ß√£o da requisi√ß√£o\n            const [seconds, nanoseconds] = process.hrtime(startTime);\n            const durationSeconds = seconds + nanoseconds / 1e9;\n\n            // Registrar m√©tricas HTTP\n            this.metricsService.recordHttpRequest(\n              method,\n              route,\n              statusCode,\n              userRole,\n            );\n            this.metricsService.recordHttpRequestDuration(\n              method,\n              route,\n              statusCode,\n              durationSeconds,\n              userRole,\n            );\n\n            // Registrar eventos de seguran√ßa apenas para erros relevantes\n            if (statusCode === 401 || statusCode === 403) {\n              this.metricsService.recordSecurityEvent(\n                'authorization_failure',\n                'warning',\n                'api',\n              );\n            } else if (statusCode >= 500) {\n              this.metricsService.recordSecurityEvent(\n                'server_error',\n                'error',\n                'api',\n              );\n            }\n\n            this.logger.debug(\n              `üî• M√©tricas de erro: ${method} ${url} - ${statusCode}`,\n            );\n          } catch (err) {\n            this.logger.error(\n              `Erro no processamento de m√©tricas de erro: ${err.message}`,\n            );\n            // N√£o deixar o erro interromper o fluxo\n          } finally {\n            // Garantir que o contador seja decrementado mesmo em caso de erro\n            try {\n              this.metricsService.decrementHttpRequestsInProgress(\n                method,\n                route,\n                userRole,\n              );\n            } catch (err) {\n              this.logger.error(`Erro ao decrementar contador: ${err.message}`);\n            }\n          }\n        },\n      }),\n    );\n  }\n\n  /**\n   * Normaliza a rota para evitar cardinalidade alta nas m√©tricas\n   * Exemplo: /users/123 -> /users/:id\n   */\n  private normalizeRoute(url: string): string {\n    // Remover query string\n    const path = url.split('?')[0];\n\n    // Substituir IDs num√©ricos, UUIDs e outros identificadores por placeholders\n    return path\n      .replace(/\\/\\d+/g, '/:id')\n      .replace(\n        /\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/gi,\n        '/:uuid',\n      )\n      .replace(/\\/[^\\/]+\\.(pdf|doc|docx|jpg|png|xlsx)$/i, '/:.file');\n  }\n\n  /**\n   * Obt√©m o papel do usu√°rio a partir da requisi√ß√£o\n   */\n  private getUserRole(request: any): string {\n    if (!request.user) {\n      return 'anonymous';\n    }\n\n    if (Array.isArray(request.user.roles) && request.user.roles.length > 0) {\n      return request.user.roles[0]; // Usar o primeiro papel como identificador\n    }\n\n    if (request.user.role) {\n      return request.user.role;\n    }\n\n    return 'authenticated';\n  }\n\n  /**\n   * Verifica e registra acesso a dados protegidos pela LGPD\n   */\n  private checkAndRecordLgpdDataAccess(\n    request: any,\n    data: any,\n    route: string,\n  ): void {\n    // Verificar se a rota est√° relacionada a dados pessoais\n    const lgpdRoutes = [\n      '/api/cidadaos',\n      '/api/beneficiarios',\n      '/api/documentos',\n    ];\n\n    const isLgpdRoute = lgpdRoutes.some((lgpdRoute) =>\n      route.startsWith(lgpdRoute),\n    );\n\n    if (!isLgpdRoute) {\n      return;\n    }\n\n    // Determinar o tipo de dados LGPD\n    let dataType = 'unknown';\n    if (route.includes('cidadaos')) {\n      dataType = 'dados_pessoais';\n    } else if (route.includes('beneficiarios')) {\n      dataType = 'dados_beneficio';\n    } else if (route.includes('documentos')) {\n      dataType = 'documentos';\n    }\n\n    // Determinar a opera√ß√£o\n    let operation = 'unknown';\n    if (request.method === 'GET') {\n      operation = 'leitura';\n    } else if (request.method === 'POST') {\n      operation = 'criacao';\n    } else if (request.method === 'PUT' || request.method === 'PATCH') {\n      operation = 'atualizacao';\n    } else if (request.method === 'DELETE') {\n      operation = 'exclusao';\n    }\n\n    // Verificar se o acesso foi autorizado (assumimos que sim, j√° que chegamos aqui)\n    const authorized = true;\n\n    // Registrar o acesso\n    this.metricsService.recordLgpdDataAccess(\n      dataType,\n      operation,\n      authorized,\n      this.getUserRole(request),\n    );\n  }\n}\n"],"version":3}