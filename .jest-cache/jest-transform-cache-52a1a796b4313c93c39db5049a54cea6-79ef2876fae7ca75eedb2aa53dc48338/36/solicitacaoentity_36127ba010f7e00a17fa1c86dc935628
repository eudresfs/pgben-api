a4be8dbea31db01b0580b6b04b055d1c
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusSolicitacao = exports.Solicitacao = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const cidadao_entity_1 = require("./cidadao.entity");
const tipo_beneficio_entity_1 = require("./tipo-beneficio.entity");
const usuario_entity_1 = require("./usuario.entity");
const unidade_entity_1 = require("./unidade.entity");
const documento_entity_1 = require("./documento.entity");
const historico_solicitacao_entity_1 = require("./historico-solicitacao.entity");
const pendencia_entity_1 = require("./pendencia.entity");
const processo_judicial_entity_1 = require("./processo-judicial.entity");
const determinacao_judicial_entity_1 = require("./determinacao-judicial.entity");
const status_solicitacao_enum_1 = require("../enums/status-solicitacao.enum");
Object.defineProperty(exports, "StatusSolicitacao", { enumerable: true, get: function () { return status_solicitacao_enum_1.StatusSolicitacao; } });
let Solicitacao = class Solicitacao {
    id;
    protocolo;
    generateProtocol() {
        const date = new Date();
        const random = Math.floor(Math.random() * 10000)
            .toString()
            .padStart(4, '0');
        this.protocolo = `SOL${date.getFullYear()}${(date.getMonth() + 1).toString().padStart(2, '0')}${random}`;
    }
    statusAnterior;
    usuarioAlteracao;
    observacaoAlteracao;
    ipUsuario;
    /**
     * Prepara a alteração de status para posterior registro no histórico
     * @param novoStatus Novo status da solicitação
     * @param usuario ID do usuário que realizou a alteração
     * @param observacao Observação sobre a alteração
     * @param ip IP do usuário que realizou a alteração
     */
    prepararAlteracaoStatus(novoStatus, usuario, observacao, ip) {
        this.statusAnterior = this.status;
        this.status = novoStatus;
        this.usuarioAlteracao = usuario;
        this.observacaoAlteracao = observacao;
        this.ipUsuario = ip;
    }
    // REMOVIDO: @AfterUpdate logStatusChange()
    // O logging de histórico agora é feito diretamente nos serviços
    // que têm acesso ao DataSource e repositórios adequados.
    // Isso evita o erro ConnectionNotFoundError que ocorria quando
    // o método tentava usar getRepository() sem contexto de conexão.
    beneficiario_id;
    beneficiario;
    tipo_beneficio_id;
    tipo_beneficio;
    unidade_id;
    unidade;
    tecnico_id;
    tecnico;
    data_abertura;
    status;
    parecer_semtas;
    aprovador_id;
    aprovador;
    data_aprovacao;
    data_liberacao;
    liberador_id;
    liberador;
    observacoes;
    dados_complementares;
    documentos;
    /**
     * Relação com histórico de status da solicitação
     */
    historico;
    /**
   * Relação com histórico de status da solicitação
   */
    pendencias;
    /**
     * Controle de versão para detectar e prevenir atualizações concorrentes
     * Este campo é incrementado automaticamente a cada atualização
     */
    version;
    /**
     * Relação com processo judicial
     * Esta relação é gerenciada pelo módulo de solicitação, não pelo módulo judicial
     */
    processo_judicial_id;
    processo_judicial;
    /**
     * Relação com determinação judicial
     * Esta relação é gerenciada pelo módulo de solicitação, não pelo módulo judicial
     */
    determinacao_judicial_id;
    determinacao_judicial;
    /**
     * Flag que indica se a solicitação tem determinação judicial
     */
    determinacao_judicial_flag;
    /**
     * Relação com solicitação original (auto-relacionamento)
     * Usado para renovações, revisões ou outras solicitações derivadas
     */
    solicitacao_original_id;
    solicitacao_original;
    /**
     * Campos para suporte a renovação automática
     */
    renovacao_automatica;
    contador_renovacoes;
    data_proxima_renovacao;
    /**
     * Dados dinâmicos específicos para cada tipo de benefício
     */
    dados_dinamicos;
    /**
     * Data limite para conclusão da análise da solicitação
     * Utilizado para controle de SLA do processo de análise
     */
    prazo_analise;
    /**
     * Data limite para envio de documentos pelo cidadão
     * Utilizado quando a solicitação está no estado AGUARDANDO_DOCUMENTOS
     */
    prazo_documentos;
    /**
     * Data limite para conclusão do processamento da solicitação
     * Utilizado quando a solicitação está no estado EM_PROCESSAMENTO
     */
    prazo_processamento;
    created_at;
    updated_at;
    removed_at;
};
exports.Solicitacao = Solicitacao;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Solicitacao.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ unique: true }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Protocolo é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "protocolo", void 0);
__decorate([
    (0, typeorm_1.BeforeInsert)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], Solicitacao.prototype, "generateProtocol", null);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", typeof (_a = typeof status_solicitacao_enum_1.StatusSolicitacao !== "undefined" && status_solicitacao_enum_1.StatusSolicitacao) === "function" ? _a : Object)
], Solicitacao.prototype, "statusAnterior", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Solicitacao.prototype, "usuarioAlteracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Solicitacao.prototype, "observacaoAlteracao", void 0);
__decorate([
    (0, typeorm_1.Column)({ select: false, insert: false, update: false }),
    __metadata("design:type", String)
], Solicitacao.prototype, "ipUsuario", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Beneficiário é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "beneficiario_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => cidadao_entity_1.Cidadao, { eager: false }),
    (0, typeorm_1.JoinColumn)({ name: 'beneficiario_id' }),
    __metadata("design:type", typeof (_b = typeof cidadao_entity_1.Cidadao !== "undefined" && cidadao_entity_1.Cidadao) === "function" ? _b : Object)
], Solicitacao.prototype, "beneficiario", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de benefício é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "tipo_beneficio_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => tipo_beneficio_entity_1.TipoBeneficio),
    (0, typeorm_1.JoinColumn)({ name: 'tipo_beneficio_id' }),
    __metadata("design:type", typeof (_c = typeof tipo_beneficio_entity_1.TipoBeneficio !== "undefined" && tipo_beneficio_entity_1.TipoBeneficio) === "function" ? _c : Object)
], Solicitacao.prototype, "tipo_beneficio", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Unidade é obrigatória' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "unidade_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => unidade_entity_1.Unidade),
    (0, typeorm_1.JoinColumn)({ name: 'unidade_id' }),
    __metadata("design:type", typeof (_d = typeof unidade_entity_1.Unidade !== "undefined" && unidade_entity_1.Unidade) === "function" ? _d : Object)
], Solicitacao.prototype, "unidade", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    (0, class_validator_1.IsNotEmpty)({ message: 'Técnico responsável é obrigatório' }),
    __metadata("design:type", String)
], Solicitacao.prototype, "tecnico_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'tecnico_id' }),
    __metadata("design:type", typeof (_e = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _e : Object)
], Solicitacao.prototype, "tecnico", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Data de abertura é obrigatória' }),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], Solicitacao.prototype, "data_abertura", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: status_solicitacao_enum_1.StatusSolicitacao,
        enumName: 'status_solicitacao',
        default: status_solicitacao_enum_1.StatusSolicitacao.RASCUNHO,
    }),
    __metadata("design:type", typeof (_g = typeof status_solicitacao_enum_1.StatusSolicitacao !== "undefined" && status_solicitacao_enum_1.StatusSolicitacao) === "function" ? _g : Object)
], Solicitacao.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Solicitacao.prototype, "parecer_semtas", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "aprovador_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'aprovador_id' }),
    __metadata("design:type", typeof (_h = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _h : Object)
], Solicitacao.prototype, "aprovador", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_j = typeof Date !== "undefined" && Date) === "function" ? _j : Object)
], Solicitacao.prototype, "data_aprovacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_k = typeof Date !== "undefined" && Date) === "function" ? _k : Object)
], Solicitacao.prototype, "data_liberacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "liberador_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'liberador_id' }),
    __metadata("design:type", typeof (_l = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _l : Object)
], Solicitacao.prototype, "liberador", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Solicitacao.prototype, "observacoes", void 0);
__decorate([
    (0, typeorm_1.Column)('jsonb', { nullable: true }),
    __metadata("design:type", typeof (_m = typeof Record !== "undefined" && Record) === "function" ? _m : Object)
], Solicitacao.prototype, "dados_complementares", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => documento_entity_1.Documento, (documento) => documento.solicitacao, {
        cascade: ['insert', 'update'],
        onDelete: 'RESTRICT',
    }),
    __metadata("design:type", Array)
], Solicitacao.prototype, "documentos", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => historico_solicitacao_entity_1.HistoricoSolicitacao, (historico) => historico.solicitacao, {
        cascade: ['insert'],
        onDelete: 'CASCADE',
    }),
    __metadata("design:type", Array)
], Solicitacao.prototype, "historico", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => pendencia_entity_1.Pendencia, (pendencia) => pendencia.solicitacao, {
        cascade: ['insert'],
        onDelete: 'CASCADE',
    }),
    __metadata("design:type", Array)
], Solicitacao.prototype, "pendencias", void 0);
__decorate([
    (0, typeorm_1.VersionColumn)(),
    __metadata("design:type", Number)
], Solicitacao.prototype, "version", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "processo_judicial_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => processo_judicial_entity_1.ProcessoJudicial, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'processo_judicial_id' }),
    __metadata("design:type", typeof (_o = typeof processo_judicial_entity_1.ProcessoJudicial !== "undefined" && processo_judicial_entity_1.ProcessoJudicial) === "function" ? _o : Object)
], Solicitacao.prototype, "processo_judicial", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "determinacao_judicial_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => determinacao_judicial_entity_1.DeterminacaoJudicial, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'determinacao_judicial_id' }),
    __metadata("design:type", typeof (_p = typeof determinacao_judicial_entity_1.DeterminacaoJudicial !== "undefined" && determinacao_judicial_entity_1.DeterminacaoJudicial) === "function" ? _p : Object)
], Solicitacao.prototype, "determinacao_judicial", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'determinacao_judicial_flag', type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], Solicitacao.prototype, "determinacao_judicial_flag", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Solicitacao.prototype, "solicitacao_original_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => Solicitacao, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'solicitacao_original_id' }),
    __metadata("design:type", Solicitacao)
], Solicitacao.prototype, "solicitacao_original", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'renovacao_automatica', type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], Solicitacao.prototype, "renovacao_automatica", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'contador_renovacoes', type: 'integer', default: 0 }),
    __metadata("design:type", Number)
], Solicitacao.prototype, "contador_renovacoes", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'data_proxima_renovacao', type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_q = typeof Date !== "undefined" && Date) === "function" ? _q : Object)
], Solicitacao.prototype, "data_proxima_renovacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'dados_dinamicos', type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_r = typeof Record !== "undefined" && Record) === "function" ? _r : Object)
], Solicitacao.prototype, "dados_dinamicos", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'prazo_analise', type: 'timestamp', nullable: true }),
    __metadata("design:type", Object)
], Solicitacao.prototype, "prazo_analise", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'prazo_documentos', type: 'timestamp', nullable: true }),
    __metadata("design:type", Object)
], Solicitacao.prototype, "prazo_documentos", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'prazo_processamento', type: 'timestamp', nullable: true }),
    __metadata("design:type", Object)
], Solicitacao.prototype, "prazo_processamento", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_v = typeof Date !== "undefined" && Date) === "function" ? _v : Object)
], Solicitacao.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_w = typeof Date !== "undefined" && Date) === "function" ? _w : Object)
], Solicitacao.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)(),
    __metadata("design:type", typeof (_x = typeof Date !== "undefined" && Date) === "function" ? _x : Object)
], Solicitacao.prototype, "removed_at", void 0);
exports.Solicitacao = Solicitacao = __decorate([
    (0, typeorm_1.Entity)('solicitacao'),
    (0, typeorm_1.Index)(['protocolo'], { unique: true }),
    (0, typeorm_1.Index)(['status', 'unidade_id']),
    (0, typeorm_1.Index)(['status', 'tipo_beneficio_id']),
    (0, typeorm_1.Index)(['data_abertura', 'status']),
    (0, typeorm_1.Index)(['status'], { where: "status IN ('pendente', 'em_analise')" }),
    (0, typeorm_1.Index)(['processo_judicial_id'], { where: 'processo_judicial_id IS NOT NULL' }),
    (0, typeorm_1.Index)(['determinacao_judicial_id'], { where: 'determinacao_judicial_id IS NOT NULL' })
], Solicitacao);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxzb2xpY2l0YWNhby5lbnRpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFDQWNpQjtBQUNqQixxREFBeUQ7QUFDekQscURBQTJDO0FBQzNDLG1FQUF3RDtBQUN4RCxxREFBMkM7QUFDM0MscURBQTJDO0FBQzNDLHlEQUErQztBQUMvQyxpRkFBc0U7QUFDdEUseURBQStDO0FBQy9DLHlFQUE4RDtBQUM5RCxpRkFBc0U7QUFDdEUsOEVBQXFFO0FBbVE1RCxrR0FuUUEsMkNBQWlCLE9BbVFBO0FBelBuQixJQUFNLFdBQVcsR0FBakIsTUFBTSxXQUFXO0lBRXRCLEVBQUUsQ0FBUztJQUlYLFNBQVMsQ0FBUztJQUdsQixnQkFBZ0I7UUFDZCxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3hCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQzthQUM3QyxRQUFRLEVBQUU7YUFDVixRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxNQUFNLEVBQUUsQ0FBQztJQUMzRyxDQUFDO0lBR08sY0FBYyxDQUFvQjtJQUdsQyxnQkFBZ0IsQ0FBUztJQUd6QixtQkFBbUIsQ0FBUztJQUc1QixTQUFTLENBQVM7SUFFMUI7Ozs7OztPQU1HO0lBQ0gsdUJBQXVCLENBQ3JCLFVBQTZCLEVBQzdCLE9BQWUsRUFDZixVQUFrQixFQUNsQixFQUFVO1FBRVYsSUFBSSxD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QUN0QyxJQUFBLGVBQUssRUFBQyxDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUMvQixJQUFBLGVBQUssRUFBQyxDQUFDLFFBQVEsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3RDLElBQUEsZUFBSyxFQUFDLENBQUMsZUFBZSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLElBQUEsZUFBSyxFQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsc0NBQXNDLEVBQUUsQ0FBQztJQUNwRSxJQUFBLGVBQUssRUFBQyxDQUFDLHNCQUFzQixDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsa0NBQWtDLEVBQUUsQ0FBQztJQUM5RSxJQUFBLGVBQUssRUFBQyxDQUFDLDBCQUEwQixDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsc0NBQXNDLEVBQUUsQ0FBQztHQUMxRSxXQUFXLENBdVB2QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcZW50aXRpZXNcXHNvbGljaXRhY2FvLmVudGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBFbnRpdHksXG4gIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sXG4gIENvbHVtbixcbiAgQ3JlYXRlRGF0ZUNvbHVtbixcbiAgVXBkYXRlRGF0ZUNvbHVtbixcbiAgRGVsZXRlRGF0ZUNvbHVtbixcbiAgTWFueVRvT25lLFxuICBKb2luQ29sdW1uLFxuICBPbmVUb01hbnksXG4gIEluZGV4LFxuICBCZWZvcmVJbnNlcnQsXG4gIEFmdGVyVXBkYXRlLFxuICBWZXJzaW9uQ29sdW1uLFxufSBmcm9tICd0eXBlb3JtJztcbmltcG9ydCB7IElzTm90RW1wdHksIElzT3B0aW9uYWwgfSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuaW1wb3J0IHsgQ2lkYWRhbyB9IGZyb20gJy4vY2lkYWRhby5lbnRpdHknO1xuaW1wb3J0IHsgVGlwb0JlbmVmaWNpbyB9IGZyb20gJy4vdGlwby1iZW5lZmljaW8uZW50aXR5JztcbmltcG9ydCB7IFVzdWFyaW8gfSBmcm9tICcuL3VzdWFyaW8uZW50aXR5JztcbmltcG9ydCB7IFVuaWRhZGUgfSBmcm9tICcuL3VuaWRhZGUuZW50aXR5JztcbmltcG9ydCB7IERvY3VtZW50byB9IGZyb20gJy4vZG9jdW1lbnRvLmVudGl0eSc7XG5pbXBvcnQgeyBIaXN0b3JpY29Tb2xpY2l0YWNhbyB9IGZyb20gJy4vaGlzdG9yaWNvLXNvbGljaXRhY2FvLmVudGl0eSc7XG5pbXBvcnQgeyBQZW5kZW5jaWEgfSBmcm9tICcuL3BlbmRlbmNpYS5lbnRpdHknO1xuaW1wb3J0IHsgUHJvY2Vzc29KdWRpY2lhbCB9IGZyb20gJy4vcHJvY2Vzc28tanVkaWNpYWwuZW50aXR5JztcbmltcG9ydCB7IERldGVybWluYWNhb0p1ZGljaWFsIH0gZnJvbSAnLi9kZXRlcm1pbmFjYW8tanVkaWNpYWwuZW50aXR5JztcbmltcG9ydCB7IFN0YXR1c1NvbGljaXRhY2FvIH0gZnJvbSAnLi4vZW51bXMvc3RhdHVzLXNvbGljaXRhY2FvLmVudW0nO1xuXG5ARW50aXR5KCdzb2xpY2l0YWNhbycpXG5ASW5kZXgoWydwcm90b2NvbG8nXSwgeyB1bmlxdWU6IHRydWUgfSlcbkBJbmRleChbJ3N0YXR1cycsICd1bmlkYWRlX2lkJ10pXG5ASW5kZXgoWydzdGF0dXMnLCAndGlwb19iZW5lZmljaW9faWQnXSlcbkBJbmRleChbJ2RhdGFfYWJlcnR1cmEnLCAnc3RhdHVzJ10pXG5ASW5kZXgoWydzdGF0dXMnXSwgeyB3aGVyZTogXCJzdGF0dXMgSU4gKCdwZW5kZW50ZScsICdlbV9hbmFsaXNlJylcIiB9KVxuQEluZGV4KFsncHJvY2Vzc29fanVkaWNpYWxfaWQnXSwgeyB3aGVyZTogJ3Byb2Nlc3NvX2p1ZGljaWFsX2lkIElTIE5PVCBOVUxMJyB9KVxuQEluZGV4KFsnZGV0ZXJtaW5hY2FvX2p1ZGljaWFsX2lkJ10sIHsgd2hlcmU6ICdkZXRlcm1pbmFjYW9fanVkaWNpYWxfaWQgSVMgTk9UIE5VTEwnIH0pXG5leHBvcnQgY2xhc3MgU29saWNpdGFjYW8ge1xuICBAUHJpbWFyeUdlbmVyYXRlZENvbHVtbigndXVpZCcpXG4gIGlkOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7IHVuaXF1ZTogdHJ1ZSB9KVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdQcm90b2NvbG8gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBwcm90b2NvbG86IHN0cmluZztcblxuICBAQmVmb3JlSW5zZXJ0KClcbiAgZ2VuZXJhdGVQcm90b2NvbCgpIHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCByYW5kb20gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMClcbiAgICAgIC50b1N0cmluZygpXG4gICAgICAucGFkU3RhcnQoNCwgJzAnKTtcbiAgICB0aGlzLnByb3RvY29sbyA9IGBTT0wke2RhdGUuZ2V0RnVsbFllYXIoKX0keyhkYXRlLmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9JHtyYW5kb219YDtcbiAgfVxuXG4gIEBDb2x1bW4oeyBzZWxlY3Q6IGZhbHNlLCBpbnNlcnQ6IGZhbHNlLCB1cGRhdGU6IGZhbHNlIH0pXG4gIHByaXZhdGUgc3RhdHVzQW50ZXJpb3I6IFN0YXR1c1NvbGljaXRhY2FvO1xuXG4gIEBDb2x1bW4oeyBzZWxlY3Q6IGZhbHNlLCBpbnNlcnQ6IGZhbHNlLCB1cGRhdGU6IGZhbHNlIH0pXG4gIHByaXZhdGUgdXN1YXJpb0FsdGVyYWNhbzogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyBzZWxlY3Q6IGZhbHNlLCBpbnNlcnQ6IGZhbHNlLCB1cGRhdGU6IGZhbHNlIH0pXG4gIHByaXZhdGUgb2JzZXJ2YWNhb0FsdGVyYWNhbzogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyBzZWxlY3Q6IGZhbHNlLCBpbnNlcnQ6IGZhbHNlLCB1cGRhdGU6IGZhbHNlIH0pXG4gIHByaXZhdGUgaXBVc3VhcmlvOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFByZXBhcmEgYSBhbHRlcmHDp8OjbyBkZSBzdGF0dXMgcGFyYSBwb3N0ZXJpb3IgcmVnaXN0cm8gbm8gaGlzdMOzcmljb1xuICAgKiBAcGFyYW0gbm92b1N0YXR1cyBOb3ZvIHN0YXR1cyBkYSBzb2xpY2l0YcOnw6NvXG4gICAqIEBwYXJhbSB1c3VhcmlvIElEIGRvIHVzdcOhcmlvIHF1ZSByZWFsaXpvdSBhIGFsdGVyYcOnw6NvXG4gICAqIEBwYXJhbSBvYnNlcnZhY2FvIE9ic2VydmHDp8OjbyBzb2JyZSBhIGFsdGVyYcOnw6NvXG4gICAqIEBwYXJhbSBpcCBJUCBkbyB1c3XDoXJpbyBxdWUgcmVhbGl6b3UgYSBhbHRlcmHDp8Ojb1xuICAgKi9cbiAgcHJlcGFyYXJBbHRlcmFjYW9TdGF0dXMoXG4gICAgbm92b1N0YXR1czogU3RhdHVzU29saWNpdGFjYW8sXG4gICAgdXN1YXJpbzogc3RyaW5nLFxuICAgIG9ic2VydmFjYW86IHN0cmluZyxcbiAgICBpcDogc3RyaW5nLFxuICApIHtcbiAgICB0aGlzLnN0YXR1c0FudGVyaW9yID0gdGhpcy5zdGF0dXM7XG4gICAgdGhpcy5zdGF0dXMgPSBub3ZvU3RhdHVzO1xuICAgIHRoaXMudXN1YXJpb0FsdGVyYWNhbyA9IHVzdWFyaW87XG4gICAgdGhpcy5vYnNlcnZhY2FvQWx0ZXJhY2FvID0gb2JzZXJ2YWNhbztcbiAgICB0aGlzLmlwVXN1YXJpbyA9IGlwO1xuICB9XG5cbiAgLy8gUkVNT1ZJRE86IEBBZnRlclVwZGF0ZSBsb2dTdGF0dXNDaGFuZ2UoKVxuICAvLyBPIGxvZ2dpbmcgZGUgaGlzdMOzcmljbyBhZ29yYSDDqSBmZWl0byBkaXJldGFtZW50ZSBub3Mgc2VydmnDp29zXG4gIC8vIHF1ZSB0w6ptIGFjZXNzbyBhbyBEYXRhU291cmNlIGUgcmVwb3NpdMOzcmlvcyBhZGVxdWFkb3MuXG4gIC8vIElzc28gZXZpdGEgbyBlcnJvIENvbm5lY3Rpb25Ob3RGb3VuZEVycm9yIHF1ZSBvY29ycmlhIHF1YW5kb1xuICAvLyBvIG3DqXRvZG8gdGVudGF2YSB1c2FyIGdldFJlcG9zaXRvcnkoKSBzZW0gY29udGV4dG8gZGUgY29uZXjDo28uXG5cbiAgQENvbHVtbigpXG4gIEBJc05vdEVtcHR5KHsgbWVzc2FnZTogJ0JlbmVmaWNpw6FyaW8gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBiZW5lZmljaWFyaW9faWQ6IHN0cmluZztcblxuICBATWFueVRvT25lKCgpID0+IENpZGFkYW8sIHsgZWFnZXI6IGZhbHNlIH0pXG4gIEBKb2luQ29sdW1uKHsgbmFtZTogJ2JlbmVmaWNpYXJpb19pZCcgfSlcbiAgYmVuZWZpY2lhcmlvOiBDaWRhZGFvO1xuXG4gIEBDb2x1bW4oKVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdUaXBvIGRlIGJlbmVmw61jaW8gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICB0aXBvX2JlbmVmaWNpb19pZDogc3RyaW5nO1xuXG4gIEBNYW55VG9PbmUoKCkgPT4gVGlwb0JlbmVmaWNpbylcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAndGlwb19iZW5lZmljaW9faWQnIH0pXG4gIHRpcG9fYmVuZWZpY2lvOiBUaXBvQmVuZWZpY2lvO1xuXG4gIEBDb2x1bW4oKVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdVbmlkYWRlIMOpIG9icmlnYXTDs3JpYScgfSlcbiAgdW5pZGFkZV9pZDogc3RyaW5nO1xuXG4gIEBNYW55VG9PbmUoKCkgPT4gVW5pZGFkZSlcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAndW5pZGFkZV9pZCcgfSlcbiAgdW5pZGFkZTogVW5pZGFkZTtcblxuICBAQ29sdW1uKClcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnVMOpY25pY28gcmVzcG9uc8OhdmVsIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgdGVjbmljb19pZDogc3RyaW5nO1xuXG4gIEBNYW55VG9PbmUoKCkgPT4gVXN1YXJpbylcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAndGVjbmljb19pZCcgfSlcbiAgdGVjbmljbzogVXN1YXJpbztcblxuICBAQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcCcgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnRGF0YSBkZSBhYmVydHVyYSDDqSBvYnJpZ2F0w7NyaWEnIH0pXG4gIGRhdGFfYWJlcnR1cmE6IERhdGU7XG5cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ2VudW0nLFxuICAgIGVudW06IFN0YXR1c1NvbGljaXRhY2FvLFxuICAgIGVudW1OYW1lOiAnc3RhdHVzX3NvbGljaXRhY2FvJyxcbiAgICBkZWZhdWx0OiBTdGF0dXNTb2xpY2l0YWNhby5SQVNDVU5ITyxcbiAgfSlcbiAgc3RhdHVzOiBTdGF0dXNTb2xpY2l0YWNhbztcblxuICBAQ29sdW1uKCd0ZXh0JywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBASXNPcHRpb25hbCgpXG4gIHBhcmVjZXJfc2VtdGFzOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGFwcm92YWRvcl9pZDogc3RyaW5nO1xuXG4gIEBNYW55VG9PbmUoKCkgPT4gVXN1YXJpbylcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAnYXByb3ZhZG9yX2lkJyB9KVxuICBhcHJvdmFkb3I6IFVzdWFyaW87XG5cbiAgQENvbHVtbih7IHR5cGU6ICd0aW1lc3RhbXAnLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkYXRhX2Fwcm92YWNhbzogRGF0ZTtcblxuICBAQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcCcsIG51bGxhYmxlOiB0cnVlIH0pXG4gIGRhdGFfbGliZXJhY2FvOiBEYXRlO1xuXG4gIEBDb2x1bW4oeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBsaWJlcmFkb3JfaWQ6IHN0cmluZztcblxuICBATWFueVRvT25lKCgpID0+IFVzdWFyaW8pXG4gIEBKb2luQ29sdW1uKHsgbmFtZTogJ2xpYmVyYWRvcl9pZCcgfSlcbiAgbGliZXJhZG9yOiBVc3VhcmlvO1xuXG4gIEBDb2x1bW4oJ3RleHQnLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgb2JzZXJ2YWNvZXM6IHN0cmluZztcblxuICBAQ29sdW1uKCdqc29uYicsIHsgbnVsbGFibGU6IHRydWUgfSlcbiAgZGFkb3NfY29tcGxlbWVudGFyZXM6IFJlY29yZDxzdHJpbmcsIGFueT47XG5cbiAgQE9uZVRvTWFueSgoKSA9PiBEb2N1bWVudG8sIChkb2N1bWVudG8pID0+IGRvY3VtZW50by5zb2xpY2l0YWNhbywge1xuICAgIGNhc2NhZGU6IFsnaW5zZXJ0JywgJ3VwZGF0ZSddLFxuICAgIG9uRGVsZXRlOiAnUkVTVFJJQ1QnLFxuICB9KVxuICBkb2N1bWVudG9zOiBEb2N1bWVudG9bXTtcblxuICAvKipcbiAgICogUmVsYcOnw6NvIGNvbSBoaXN0w7NyaWNvIGRlIHN0YXR1cyBkYSBzb2xpY2l0YcOnw6NvXG4gICAqL1xuICBAT25lVG9NYW55KCgpID0+IEhpc3Rvcmljb1NvbGljaXRhY2FvLCAoaGlzdG9yaWNvKSA9PiBoaXN0b3JpY28uc29saWNpdGFjYW8sIHtcbiAgICBjYXNjYWRlOiBbJ2luc2VydCddLFxuICAgIG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gIH0pXG4gIGhpc3RvcmljbzogSGlzdG9yaWNvU29saWNpdGFjYW9bXTtcblxuICAgIC8qKlxuICAgKiBSZWxhw6fDo28gY29tIGhpc3TDs3JpY28gZGUgc3RhdHVzIGRhIHNvbGljaXRhw6fDo29cbiAgICovXG4gIEBPbmVUb01hbnkoKCkgPT4gUGVuZGVuY2lhLCAocGVuZGVuY2lhKSA9PiBwZW5kZW5jaWEuc29saWNpdGFjYW8sIHtcbiAgICBjYXNjYWRlOiBbJ2luc2VydCddLFxuICAgIG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gIH0pXG4gIHBlbmRlbmNpYXM6IFBlbmRlbmNpYVtdO1xuXG4gIC8qKlxuICAgKiBDb250cm9sZSBkZSB2ZXJzw6NvIHBhcmEgZGV0ZWN0YXIgZSBwcmV2ZW5pciBhdHVhbGl6YcOnw7VlcyBjb25jb3JyZW50ZXNcbiAgICogRXN0ZSBjYW1wbyDDqSBpbmNyZW1lbnRhZG8gYXV0b21hdGljYW1lbnRlIGEgY2FkYSBhdHVhbGl6YcOnw6NvXG4gICAqL1xuICBAVmVyc2lvbkNvbHVtbigpXG4gIHZlcnNpb246IG51bWJlcjtcblxuICAvKipcbiAgICogUmVsYcOnw6NvIGNvbSBwcm9jZXNzbyBqdWRpY2lhbFxuICAgKiBFc3RhIHJlbGHDp8OjbyDDqSBnZXJlbmNpYWRhIHBlbG8gbcOzZHVsbyBkZSBzb2xpY2l0YcOnw6NvLCBuw6NvIHBlbG8gbcOzZHVsbyBqdWRpY2lhbFxuICAgKi9cbiAgQENvbHVtbih7IG51bGxhYmxlOiB0cnVlIH0pXG4gIHByb2Nlc3NvX2p1ZGljaWFsX2lkOiBzdHJpbmc7XG5cbiAgQE1hbnlUb09uZSgoKSA9PiBQcm9jZXNzb0p1ZGljaWFsLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIEBKb2luQ29sdW1uKHsgbmFtZTogJ3Byb2Nlc3NvX2p1ZGljaWFsX2lkJyB9KVxuICBwcm9jZXNzb19qdWRpY2lhbDogUHJvY2Vzc29KdWRpY2lhbDtcblxuICAvKipcbiAgICogUmVsYcOnw6NvIGNvbSBkZXRlcm1pbmHDp8OjbyBqdWRpY2lhbFxuICAgKiBFc3RhIHJlbGHDp8OjbyDDqSBnZXJlbmNpYWRhIHBlbG8gbcOzZHVsbyBkZSBzb2xpY2l0YcOnw6NvLCBuw6NvIHBlbG8gbcOzZHVsbyBqdWRpY2lhbFxuICAgKi9cbiAgQENvbHVtbih7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGRldGVybWluYWNhb19qdWRpY2lhbF9pZDogc3RyaW5nO1xuXG4gIEBNYW55VG9PbmUoKCkgPT4gRGV0ZXJtaW5hY2FvSnVkaWNpYWwsIHsgbnVsbGFibGU6IHRydWUgfSlcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAnZGV0ZXJtaW5hY2FvX2p1ZGljaWFsX2lkJyB9KVxuICBkZXRlcm1pbmFjYW9fanVkaWNpYWw6IERldGVybWluYWNhb0p1ZGljaWFsO1xuICBcbiAgLyoqXG4gICAqIEZsYWcgcXVlIGluZGljYSBzZSBhIHNvbGljaXRhw6fDo28gdGVtIGRldGVybWluYcOnw6NvIGp1ZGljaWFsXG4gICAqL1xuICBAQ29sdW1uKHsgbmFtZTogJ2RldGVybWluYWNhb19qdWRpY2lhbF9mbGFnJywgdHlwZTogJ2Jvb2xlYW4nLCBkZWZhdWx0OiBmYWxzZSB9KVxuICBkZXRlcm1pbmFjYW9fanVkaWNpYWxfZmxhZzogYm9vbGVhbjtcblxuICAvKipcbiAgICogUmVsYcOnw6NvIGNvbSBzb2xpY2l0YcOnw6NvIG9yaWdpbmFsIChhdXRvLXJlbGFjaW9uYW1lbnRvKVxuICAgKiBVc2FkbyBwYXJhIHJlbm92YcOnw7VlcywgcmV2aXPDtWVzIG91IG91dHJhcyBzb2xpY2l0YcOnw7VlcyBkZXJpdmFkYXNcbiAgICovXG4gIEBDb2x1bW4oeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBzb2xpY2l0YWNhb19vcmlnaW5hbF9pZDogc3RyaW5nO1xuXG4gIEBNYW55VG9PbmUoKCkgPT4gU29saWNpdGFjYW8sIHsgbnVsbGFibGU6IHRydWUgfSlcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAnc29saWNpdGFjYW9fb3JpZ2luYWxfaWQnIH0pXG4gIHNvbGljaXRhY2FvX29yaWdpbmFsOiBTb2xpY2l0YWNhbztcbiAgXG4gIC8qKlxuICAgKiBDYW1wb3MgcGFyYSBzdXBvcnRlIGEgcmVub3Zhw6fDo28gYXV0b23DoXRpY2FcbiAgICovXG4gIEBDb2x1bW4oeyBuYW1lOiAncmVub3ZhY2FvX2F1dG9tYXRpY2EnLCB0eXBlOiAnYm9vbGVhbicsIGRlZmF1bHQ6IGZhbHNlIH0pXG4gIHJlbm92YWNhb19hdXRvbWF0aWNhOiBib29sZWFuO1xuXG4gIEBDb2x1bW4oeyBuYW1lOiAnY29udGFkb3JfcmVub3ZhY29lcycsIHR5cGU6ICdpbnRlZ2VyJywgZGVmYXVsdDogMCB9KVxuICBjb250YWRvcl9yZW5vdmFjb2VzOiBudW1iZXI7XG5cbiAgQENvbHVtbih7IG5hbWU6ICdkYXRhX3Byb3hpbWFfcmVub3ZhY2FvJywgdHlwZTogJ3RpbWVzdGFtcCcsIG51bGxhYmxlOiB0cnVlIH0pXG4gIGRhdGFfcHJveGltYV9yZW5vdmFjYW86IERhdGU7XG4gIFxuICAvKipcbiAgICogRGFkb3MgZGluw6JtaWNvcyBlc3BlY8OtZmljb3MgcGFyYSBjYWRhIHRpcG8gZGUgYmVuZWbDrWNpb1xuICAgKi9cbiAgQENvbHVtbih7IG5hbWU6ICdkYWRvc19kaW5hbWljb3MnLCB0eXBlOiAnanNvbmInLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkYWRvc19kaW5hbWljb3M6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIFxuICAvKipcbiAgICogRGF0YSBsaW1pdGUgcGFyYSBjb25jbHVzw6NvIGRhIGFuw6FsaXNlIGRhIHNvbGljaXRhw6fDo29cbiAgICogVXRpbGl6YWRvIHBhcmEgY29udHJvbGUgZGUgU0xBIGRvIHByb2Nlc3NvIGRlIGFuw6FsaXNlXG4gICAqL1xuICBAQ29sdW1uKHsgbmFtZTogJ3ByYXpvX2FuYWxpc2UnLCB0eXBlOiAndGltZXN0YW1wJywgbnVsbGFibGU6IHRydWUgfSlcbiAgcHJhem9fYW5hbGlzZTogRGF0ZSB8IG51bGw7XG4gIFxuICAvKipcbiAgICogRGF0YSBsaW1pdGUgcGFyYSBlbnZpbyBkZSBkb2N1bWVudG9zIHBlbG8gY2lkYWTDo29cbiAgICogVXRpbGl6YWRvIHF1YW5kbyBhIHNvbGljaXRhw6fDo28gZXN0w6Egbm8gZXN0YWRvIEFHVUFSREFORE9fRE9DVU1FTlRPU1xuICAgKi9cbiAgQENvbHVtbih7IG5hbWU6ICdwcmF6b19kb2N1bWVudG9zJywgdHlwZTogJ3RpbWVzdGFtcCcsIG51bGxhYmxlOiB0cnVlIH0pXG4gIHByYXpvX2RvY3VtZW50b3M6IERhdGUgfCBudWxsO1xuICBcbiAgLyoqXG4gICAqIERhdGEgbGltaXRlIHBhcmEgY29uY2x1c8OjbyBkbyBwcm9jZXNzYW1lbnRvIGRhIHNvbGljaXRhw6fDo29cbiAgICogVXRpbGl6YWRvIHF1YW5kbyBhIHNvbGljaXRhw6fDo28gZXN0w6Egbm8gZXN0YWRvIEVNX1BST0NFU1NBTUVOVE9cbiAgICovXG4gIEBDb2x1bW4oeyBuYW1lOiAncHJhem9fcHJvY2Vzc2FtZW50bycsIHR5cGU6ICd0aW1lc3RhbXAnLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBwcmF6b19wcm9jZXNzYW1lbnRvOiBEYXRlIHwgbnVsbDtcblxuICBAQ3JlYXRlRGF0ZUNvbHVtbigpXG4gIGNyZWF0ZWRfYXQ6IERhdGU7XG5cbiAgQFVwZGF0ZURhdGVDb2x1bW4oKVxuICB1cGRhdGVkX2F0OiBEYXRlO1xuXG4gIEBEZWxldGVEYXRlQ29sdW1uKClcbiAgcmVtb3ZlZF9hdDogRGF0ZTtcbn1cblxuZXhwb3J0IHsgU3RhdHVzU29saWNpdGFjYW8gfTtcbiJdLCJ2ZXJzaW9uIjozfQ==