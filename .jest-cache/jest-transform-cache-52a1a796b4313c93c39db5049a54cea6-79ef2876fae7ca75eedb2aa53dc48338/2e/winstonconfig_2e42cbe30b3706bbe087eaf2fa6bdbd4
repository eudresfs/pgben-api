966c2ec97afc86dcd58ab267e808c4d9
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.winstonConfig = void 0;
const winston = __importStar(require("winston"));
require("winston-daily-rotate-file");
const nest_winston_1 = require("nest-winston");
const path = __importStar(require("path"));
/**
 * Configuração do Winston para logging
 *
 * Define os formatos, níveis e destinos dos logs da aplicação
 */
exports.winstonConfig = {
    transports: [
        // Console transport para desenvolvimento
        new winston.transports.Console({
            format: winston.format.combine(winston.format.timestamp(), winston.format.ms(), nest_winston_1.utilities.format.nestLike('PGBEN', {
                colors: true,
                prettyPrint: true,
            })),
            level: process.env.NODE_ENV === 'production' ? 'warn' : 'info',
        }),
        // Arquivo de log para todos os níveis
        new winston.transports.DailyRotateFile({
            dirname: path.join(process.cwd(), 'logs'),
            filename: 'application-%DATE%.log',
            datePattern: 'YYYY-MM-DD',
            zippedArchive: true,
            maxSize: '20m',
            maxFiles: '14d',
            format: winston.format.combine(winston.format.timestamp(), winston.format.json()),
            level: 'warn',
        }),
        // Arquivo de log específico para erros
        new winston.transports.DailyRotateFile({
            dirname: path.join(process.cwd(), 'logs'),
            filename: 'error-%DATE%.log',
            datePattern: 'YYYY-MM-DD',
            zippedArchive: true,
            maxSize: '20m',
            maxFiles: '30d',
            format: winston.format.combine(winston.format.timestamp(), winston.format.json()),
            level: 'error',
        }),
    ],
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXHNoYXJlZFxcbG9nZ2luZ1xcd2luc3Rvbi5jb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaURBQW1DO0FBQ25DLHFDQUFtQztBQUNuQywrQ0FBdUU7QUFDdkUsMkNBQTZCO0FBRTdCOzs7O0dBSUc7QUFDVSxRQUFBLGFBQWEsR0FBeUI7SUFDakQsVUFBVSxFQUFFO1FBQ1YseUNBQXlDO1FBQ3pDLElBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7WUFDN0IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUM1QixPQUFPLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUMxQixPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUNuQix3QkFBMEIsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRTtnQkFDbEQsTUFBTSxFQUFFLElBQUk7Z0JBQ1osV0FBVyxFQUFFLElBQUk7YUFDbEIsQ0FBQyxDQUNIO1lBQ0QsS0FBSyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLFlBQVksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNO1NBQy9ELENBQUM7UUFFRixzQ0FBc0M7UUFDdEMsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQztZQUNyQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFDO1lBQ3pDLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsV0FBVyxFQUFFLFlBQVk7WUFDekIsYUFBYSxFQUFFLElBQUk7WUFDbkIsT0FBTyxFQUFFLEtBQUs7WUFDZCxRQUFRLEVBQUUsS0FBSztZQUNmLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FDNUIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFDMUIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FDdEI7WUFDRCxLQUFLLEVBQUUsTUFBTTtTQUNkLENBQUM7UUFFRix1Q0FBdUM7UUFDdkMsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQztZQUNyQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFDO1lBQ3pDLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsV0FBVyxFQUFFLFlBQVk7WUFDekIsYUFBYSxFQUFFLElBQUk7WUFDbkIsT0FBTyxFQUFFLEtBQUs7WUFDZCxRQUFRLEVBQUUsS0FBSztZQUNmLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FDNUIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFDMUIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FDdEI7WUFDRCxLQUFLLEVBQUUsT0FBTztTQUNmLENBQUM7S0FDSDtDQUNGLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXHNoYXJlZFxcbG9nZ2luZ1xcd2luc3Rvbi5jb25maWcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2luc3Rvbk1vZHVsZU9wdGlvbnMgfSBmcm9tICduZXN0LXdpbnN0b24nO1xuaW1wb3J0ICogYXMgd2luc3RvbiBmcm9tICd3aW5zdG9uJztcbmltcG9ydCAnd2luc3Rvbi1kYWlseS1yb3RhdGUtZmlsZSc7XG5pbXBvcnQgeyB1dGlsaXRpZXMgYXMgbmVzdFdpbnN0b25Nb2R1bGVVdGlsaXRpZXMgfSBmcm9tICduZXN0LXdpbnN0b24nO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcblxuLyoqXG4gKiBDb25maWd1cmHDp8OjbyBkbyBXaW5zdG9uIHBhcmEgbG9nZ2luZ1xuICpcbiAqIERlZmluZSBvcyBmb3JtYXRvcywgbsOtdmVpcyBlIGRlc3Rpbm9zIGRvcyBsb2dzIGRhIGFwbGljYcOnw6NvXG4gKi9cbmV4cG9ydCBjb25zdCB3aW5zdG9uQ29uZmlnOiBXaW5zdG9uTW9kdWxlT3B0aW9ucyA9IHtcbiAgdHJhbnNwb3J0czogW1xuICAgIC8vIENvbnNvbGUgdHJhbnNwb3J0IHBhcmEgZGVzZW52b2x2aW1lbnRvXG4gICAgbmV3IHdpbnN0b24udHJhbnNwb3J0cy5Db25zb2xlKHtcbiAgICAgIGZvcm1hdDogd2luc3Rvbi5mb3JtYXQuY29tYmluZShcbiAgICAgICAgd2luc3Rvbi5mb3JtYXQudGltZXN0YW1wKCksXG4gICAgICAgIHdpbnN0b24uZm9ybWF0Lm1zKCksXG4gICAgICAgIG5lc3RXaW5zdG9uTW9kdWxlVXRpbGl0aWVzLmZvcm1hdC5uZXN0TGlrZSgnUEdCRU4nLCB7XG4gICAgICAgICAgY29sb3JzOiB0cnVlLFxuICAgICAgICAgIHByZXR0eVByaW50OiB0cnVlLFxuICAgICAgICB9KSxcbiAgICAgICksXG4gICAgICBsZXZlbDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICd3YXJuJyA6ICdpbmZvJyxcbiAgICB9KSxcblxuICAgIC8vIEFycXVpdm8gZGUgbG9nIHBhcmEgdG9kb3Mgb3MgbsOtdmVpc1xuICAgIG5ldyB3aW5zdG9uLnRyYW5zcG9ydHMuRGFpbHlSb3RhdGVGaWxlKHtcbiAgICAgIGRpcm5hbWU6IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnbG9ncycpLFxuICAgICAgZmlsZW5hbWU6ICdhcHBsaWNhdGlvbi0lREFURSUubG9nJyxcbiAgICAgIGRhdGVQYXR0ZXJuOiAnWVlZWS1NTS1ERCcsXG4gICAgICB6aXBwZWRBcmNoaXZlOiB0cnVlLFxuICAgICAgbWF4U2l6ZTogJzIwbScsXG4gICAgICBtYXhGaWxlczogJzE0ZCcsXG4gICAgICBmb3JtYXQ6IHdpbnN0b24uZm9ybWF0LmNvbWJpbmUoXG4gICAgICAgIHdpbnN0b24uZm9ybWF0LnRpbWVzdGFtcCgpLFxuICAgICAgICB3aW5zdG9uLmZvcm1hdC5qc29uKCksXG4gICAgICApLFxuICAgICAgbGV2ZWw6ICd3YXJuJyxcbiAgICB9KSxcblxuICAgIC8vIEFycXVpdm8gZGUgbG9nIGVzcGVjw61maWNvIHBhcmEgZXJyb3NcbiAgICBuZXcgd2luc3Rvbi50cmFuc3BvcnRzLkRhaWx5Um90YXRlRmlsZSh7XG4gICAgICBkaXJuYW1lOiBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2xvZ3MnKSxcbiAgICAgIGZpbGVuYW1lOiAnZXJyb3ItJURBVEUlLmxvZycsXG4gICAgICBkYXRlUGF0dGVybjogJ1lZWVktTU0tREQnLFxuICAgICAgemlwcGVkQXJjaGl2ZTogdHJ1ZSxcbiAgICAgIG1heFNpemU6ICcyMG0nLFxuICAgICAgbWF4RmlsZXM6ICczMGQnLFxuICAgICAgZm9ybWF0OiB3aW5zdG9uLmZvcm1hdC5jb21iaW5lKFxuICAgICAgICB3aW5zdG9uLmZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICAgICAgd2luc3Rvbi5mb3JtYXQuanNvbigpLFxuICAgICAgKSxcbiAgICAgIGxldmVsOiAnZXJyb3InLFxuICAgIH0pLFxuICBdLFxufTtcbiJdLCJ2ZXJzaW9uIjozfQ==