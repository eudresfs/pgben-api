94004cbf8f1c50558b4311a427c9b9ac
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenRevogado = void 0;
const typeorm_1 = require("typeorm");
/**
 * Entidade que armazena tokens revogados para consulta rápida durante a validação.
 * Esta tabela é utilizada para manter um registro de tokens que foram invalidados
 * antes de sua expiração natural, servindo como uma "lista negra" que é consultada
 * a cada validação de token.
 */
let TokenRevogado = class TokenRevogado {
    id;
    tokenHash;
    integradorId;
    motivoRevogacao;
    dataExpiracao;
    dataCriacao;
    // Data em que este registro pode ser removido do banco (limpeza)
    dataLimpeza;
};
exports.TokenRevogado = TokenRevogado;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], TokenRevogado.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 64 }),
    (0, typeorm_1.Index)() // Índice para consulta rápida
    ,
    __metadata("design:type", String)
], TokenRevogado.prototype, "tokenHash", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: false }),
    __metadata("design:type", String)
], TokenRevogado.prototype, "integradorId", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], TokenRevogado.prototype, "motivoRevogacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], TokenRevogado.prototype, "dataExpiracao", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], TokenRevogado.prototype, "dataCriacao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamptz', nullable: true }),
    (0, typeorm_1.Index)() // Índice para facilitar limpeza periódica
    ,
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], TokenRevogado.prototype, "dataLimpeza", void 0);
exports.TokenRevogado = TokenRevogado = __decorate([
    (0, typeorm_1.Entity)('tokens_revogados')
], TokenRevogado);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFx0b2tlbi1yZXZvZ2Fkby5lbnRpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFDQU1pQjtBQUVqQjs7Ozs7R0FLRztBQUVJLElBQU0sYUFBYSxHQUFuQixNQUFNLGFBQWE7SUFFeEIsRUFBRSxDQUFTO0lBSVgsU0FBUyxDQUFTO0lBR2xCLFlBQVksQ0FBUztJQUdyQixlQUFlLENBQVM7SUFHeEIsYUFBYSxDQUFPO0lBR3BCLFdBQVcsQ0FBTztJQUVsQixpRUFBaUU7SUFHakUsV0FBVyxDQUFPO0NBQ25CLENBQUE7QUF4Qlksc0NBQWE7QUFFeEI7SUFEQyxJQUFBLGdDQUFzQixFQUFDLE1BQU0sQ0FBQzs7eUNBQ3BCO0FBSVg7SUFGQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUM7SUFDdEIsSUFBQSxlQUFLLEdBQUUsQ0FBQyw4QkFBOEI7OztnREFDckI7QUFHbEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7O21EQUNQO0FBR3JCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOztzREFDSDtBQUd4QjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNqQyxJQUFJLG9CQUFKLElBQUk7b0RBQUM7QUFHcEI7SUFEQyxJQUFBLDBCQUFnQixFQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxDQUFDO2tEQUM3QixJQUFJLG9CQUFKLElBQUk7a0RBQUM7QUFLbEI7SUFGQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUMvQyxJQUFBLGVBQUssR0FBRSxDQUFDLDBDQUEwQzs7a0RBQ3RDLElBQUksb0JBQUosSUFBSTtrREFBQzt3QkF2QlAsYUFBYTtJQUR6QixJQUFBLGdCQUFNLEVBQUMsa0JBQWtCLENBQUM7R0FDZCxhQUFhLENBd0J6QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcZW50aXRpZXNcXHRva2VuLXJldm9nYWRvLmVudGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBFbnRpdHksXG4gIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sXG4gIENvbHVtbixcbiAgQ3JlYXRlRGF0ZUNvbHVtbixcbiAgSW5kZXgsXG59IGZyb20gJ3R5cGVvcm0nO1xuXG4vKipcbiAqIEVudGlkYWRlIHF1ZSBhcm1hemVuYSB0b2tlbnMgcmV2b2dhZG9zIHBhcmEgY29uc3VsdGEgcsOhcGlkYSBkdXJhbnRlIGEgdmFsaWRhw6fDo28uXG4gKiBFc3RhIHRhYmVsYSDDqSB1dGlsaXphZGEgcGFyYSBtYW50ZXIgdW0gcmVnaXN0cm8gZGUgdG9rZW5zIHF1ZSBmb3JhbSBpbnZhbGlkYWRvc1xuICogYW50ZXMgZGUgc3VhIGV4cGlyYcOnw6NvIG5hdHVyYWwsIHNlcnZpbmRvIGNvbW8gdW1hIFwibGlzdGEgbmVncmFcIiBxdWUgw6kgY29uc3VsdGFkYVxuICogYSBjYWRhIHZhbGlkYcOnw6NvIGRlIHRva2VuLlxuICovXG5ARW50aXR5KCd0b2tlbnNfcmV2b2dhZG9zJylcbmV4cG9ydCBjbGFzcyBUb2tlblJldm9nYWRvIHtcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oJ3V1aWQnKVxuICBpZDogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyBsZW5ndGg6IDY0IH0pXG4gIEBJbmRleCgpIC8vIMONbmRpY2UgcGFyYSBjb25zdWx0YSByw6FwaWRhXG4gIHRva2VuSGFzaDogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyBudWxsYWJsZTogZmFsc2UgfSlcbiAgaW50ZWdyYWRvcklkOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7IG51bGxhYmxlOiB0cnVlIH0pXG4gIG1vdGl2b1Jldm9nYWNhbzogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAndGltZXN0YW1wdHonLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkYXRhRXhwaXJhY2FvOiBEYXRlO1xuXG4gIEBDcmVhdGVEYXRlQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcHR6JyB9KVxuICBkYXRhQ3JpYWNhbzogRGF0ZTtcblxuICAvLyBEYXRhIGVtIHF1ZSBlc3RlIHJlZ2lzdHJvIHBvZGUgc2VyIHJlbW92aWRvIGRvIGJhbmNvIChsaW1wZXphKVxuICBAQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcHR6JywgbnVsbGFibGU6IHRydWUgfSlcbiAgQEluZGV4KCkgLy8gw41uZGljZSBwYXJhIGZhY2lsaXRhciBsaW1wZXphIHBlcmnDs2RpY2FcbiAgZGF0YUxpbXBlemE6IERhdGU7XG59XG4iXSwidmVyc2lvbiI6M30=