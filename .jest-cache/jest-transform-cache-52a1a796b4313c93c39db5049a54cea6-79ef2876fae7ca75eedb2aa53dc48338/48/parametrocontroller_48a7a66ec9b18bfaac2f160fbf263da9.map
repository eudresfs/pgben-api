{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\controllers\\parametro.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\controllers\\parametro.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiParam,\n  ApiQuery,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { ScopeType } from '../../../entities/user-permission.entity';\nimport { ParametroService } from '../services/parametro.service';\nimport { ParametroCreateDto } from '../dtos/parametro/parametro-create.dto';\nimport { ParametroUpdateDto } from '../dtos/parametro/parametro-update.dto';\nimport { ParametroResponseDto } from '../dtos/parametro/parametro-response.dto';\n\n/**\n * Controlador responsável pelas operações de parâmetros do sistema\n */\n@ApiTags('Configuração')\n@ApiBearerAuth()\n@Controller('configuracao/parametros')\n@UseGuards(JwtAuthGuard, PermissionGuard)\nexport class ParametroController {\n  constructor(private readonly parametroService: ParametroService) {}\n\n  /**\n   * Busca todos os parâmetros do sistema\n   * @param categoria Categoria opcional para filtrar\n   * @returns Lista de parâmetros\n   */\n  @Get()\n  @RequiresPermission({\n    permissionName: 'configuracao.parametro.listar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Buscar todos os parâmetros do sistema' })\n  @ApiQuery({\n    name: 'categoria',\n    required: false,\n    description: 'Filtrar por categoria',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de parâmetros encontrados',\n    type: [ParametroResponseDto],\n  })\n  async buscarTodos(\n    @Query('categoria') categoria?: string,\n  ): Promise<ParametroResponseDto[]> {\n    return this.parametroService.buscarTodos(categoria);\n  }\n\n  /**\n   * Busca um parâmetro específico por sua chave\n   * @param chave Chave do parâmetro\n   * @returns Parâmetro encontrado\n   */\n  @Get(':chave')\n  @RequiresPermission({\n    permissionName: 'configuracao.parametro.visualizar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Buscar parâmetro por chave' })\n  @ApiParam({\n    name: 'chave',\n    description: 'Chave única do parâmetro',\n    example: 'sistema.nome',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Parâmetro encontrado',\n    type: ParametroResponseDto,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Parâmetro não encontrado',\n  })\n  async buscarPorChave(\n    @Param('chave') chave: string,\n  ): Promise<ParametroResponseDto> {\n    return this.parametroService.buscarPorChave(chave);\n  }\n\n  /**\n   * Cria um novo parâmetro no sistema\n   * @param dto Dados do parâmetro a ser criado\n   * @returns Parâmetro criado\n   */\n  @Post()\n  @RequiresPermission({\n    permissionName: 'configuracao.parametro.criar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Criar novo parâmetro' })\n  @ApiResponse({\n    status: 201,\n    description: 'Parâmetro criado com sucesso',\n    type: ParametroResponseDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos ou parâmetro já existe',\n  })\n  async criar(@Body() dto: ParametroCreateDto): Promise<ParametroResponseDto> {\n    return this.parametroService.criar(dto);\n  }\n\n  /**\n   * Atualiza um parâmetro existente\n   * @param chave Chave do parâmetro\n   * @param dto Dados para atualização\n   * @returns Parâmetro atualizado\n   */\n  @Put(':chave')\n  @RequiresPermission({\n    permissionName: 'configuracao.parametro.editar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Atualizar parâmetro existente' })\n  @ApiParam({\n    name: 'chave',\n    description: 'Chave única do parâmetro',\n    example: 'sistema.nome',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Parâmetro atualizado com sucesso',\n    type: ParametroResponseDto,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Parâmetro não encontrado',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos ou parâmetro não editável',\n  })\n  async atualizar(\n    @Param('chave') chave: string,\n    @Body() dto: ParametroUpdateDto,\n  ): Promise<ParametroResponseDto> {\n    return this.parametroService.atualizar(chave, dto);\n  }\n\n  /**\n   * Remove um parâmetro do sistema\n   * @param chave Chave do parâmetro\n   */\n  @Delete(':chave')\n  @RequiresPermission({\n    permissionName: 'configuracao.parametro.remover',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Remover parâmetro' })\n  @ApiParam({\n    name: 'chave',\n    description: 'Chave única do parâmetro',\n    example: 'sistema.nome',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'Parâmetro removido com sucesso',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Parâmetro não encontrado',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Parâmetro não pode ser removido',\n  })\n  async remover(@Param('chave') chave: string): Promise<void> {\n    await this.parametroService.remover(chave);\n  }\n\n  /**\n   * Limpa o cache de parâmetros\n   */\n  @Post('cache/limpar')\n  @RequiresPermission({\n    permissionName: 'configuracao.parametro.cache.limpar',\n    scopeType: ScopeType.GLOBAL,\n  })\n  @ApiOperation({ summary: 'Limpar cache de parâmetros' })\n  @ApiResponse({\n    status: 200,\n    description: 'Cache limpo com sucesso',\n  })\n  async limparCache(): Promise<{ mensagem: string }> {\n    this.parametroService.limparCache();\n    return { mensagem: 'Cache de parâmetros limpo com sucesso' };\n  }\n}\n"],"version":3}