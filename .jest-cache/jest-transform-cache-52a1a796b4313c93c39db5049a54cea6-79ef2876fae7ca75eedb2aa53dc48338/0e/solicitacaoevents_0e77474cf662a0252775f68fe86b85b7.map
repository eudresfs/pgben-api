{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\events\\solicitacao-events.ts","mappings":";AAAA;;;;;GAKG;;;AAIH;;GAEG;AACH,IAAY,oBAiBX;AAjBD,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,uDAA+B,CAAA;IAC/B,qEAA6C,CAAA;IAC7C,iFAAyD,CAAA;IACzD,yEAAiD,CAAA;IACjD,yDAAiC,CAAA;IACjC,yDAAiC,CAAA;IACjC,yDAAiC,CAAA;IACjC,yDAAiC,CAAA;IACjC,2DAAmC,CAAA;IACnC,yDAAiC,CAAA;IACjC,yDAAiC,CAAA;IACjC,uGAA+E,CAAA;IAC/E,qGAA6E,CAAA;IAC7E,yEAAiD,CAAA;IACjD,2EAAmD,CAAA;AACrD,CAAC,EAjBW,oBAAoB,oCAApB,oBAAoB,QAiB/B","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\events\\solicitacao-events.ts"],"sourcesContent":["/**\n * Definição dos eventos relacionados a solicitações\n *\n * Este arquivo contém as interfaces e tipos para os eventos emitidos pelo módulo de solicitação.\n * Estes eventos são utilizados para comunicação assíncrona entre os diferentes componentes do sistema.\n */\n\nimport { StatusSolicitacao } from '../../../entities/solicitacao.entity';\n\n/**\n * Tipos de eventos disponíveis no módulo de solicitação\n */\nexport enum SolicitacaoEventType {\n  CREATED = 'solicitacao.created',\n  UPDATED = 'solicitacao.updated',\n  STATUS_CHANGED = 'solicitacao.status_changed',\n  DEADLINE_APPROACHING = 'solicitacao.deadline_approaching',\n  DEADLINE_EXPIRED = 'solicitacao.deadline_expired',\n  ASSIGNED = 'solicitacao.assigned',\n  APPROVED = 'solicitacao.approved',\n  REJECTED = 'solicitacao.rejected',\n  RELEASED = 'solicitacao.released',\n  COMPLETED = 'solicitacao.completed',\n  CANCELED = 'solicitacao.canceled',\n  ARCHIVED = 'solicitacao.archived',\n  JUDICIAL_DETERMINATION_ATTACHED = 'solicitacao.judicial_determination_attached',\n  JUDICIAL_DETERMINATION_REMOVED = 'solicitacao.judicial_determination_removed',\n  PENDENCY_CREATED = 'solicitacao.pendency_created',\n  PENDENCY_RESOLVED = 'solicitacao.pendency_resolved',\n}\n\n/**\n * Interface base para eventos de solicitação\n */\nexport interface SolicitacaoEvent {\n  type: SolicitacaoEventType;\n  solicitacaoId: string;\n  timestamp: Date;\n  data?: any;\n}\n\n/**\n * Evento emitido quando uma solicitação é criada\n */\nexport interface SolicitacaoCreatedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.CREATED;\n  data: {\n    protocolo: string;\n    tipoBeneficioId: string;\n    cidadaoId: string;\n    tecnicoId: string;\n    unidadeId: string;\n  };\n}\n\n/**\n * Evento emitido quando o status de uma solicitação é alterado\n */\nexport interface SolicitacaoStatusChangedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.STATUS_CHANGED;\n  data: {\n    statusAnterior: StatusSolicitacao;\n    statusAtual: StatusSolicitacao;\n    usuarioId: string;\n    observacao?: string;\n  };\n}\n\n/**\n * Evento emitido quando um prazo está próximo de expirar\n */\nexport interface SolicitacaoDeadlineApproachingEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.DEADLINE_APPROACHING;\n  data: {\n    tipoPrazo: 'analise' | 'documentos' | 'processamento';\n    dataPrazo: Date;\n    diasRestantes: number;\n    determinacaoJudicial: boolean;\n  };\n}\n\n/**\n * Evento emitido quando um prazo expirou\n */\nexport interface SolicitacaoDeadlineExpiredEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.DEADLINE_EXPIRED;\n  data: {\n    tipoPrazo: 'analise' | 'documentos' | 'processamento';\n    dataPrazo: Date;\n    diasAtraso: number;\n    determinacaoJudicial: boolean;\n  };\n}\n\n/**\n * Evento emitido quando uma solicitação é atribuída a um técnico\n */\nexport interface SolicitacaoAssignedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.ASSIGNED;\n  data: {\n    tecnicoAnteriorId?: string;\n    tecnicoAtualId: string;\n    usuarioAtribuicaoId: string;\n    motivoAtribuicao?: string;\n  };\n}\n\n/**\n * Evento emitido quando uma solicitação é aprovada\n */\nexport interface SolicitacaoApprovedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.APPROVED;\n  data: {\n    aprovadorId: string;\n    observacao?: string;\n    dataAprovacao: Date;\n  };\n}\n\n/**\n * Evento emitido quando uma solicitação é reprovada\n */\nexport interface SolicitacaoRejectedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.REJECTED;\n  data: {\n    reprovadorId: string;\n    motivoReprovacao: string;\n    dataReprovacao: Date;\n  };\n}\n\n/**\n * Evento emitido quando uma solicitação é liberada\n */\nexport interface SolicitacaoReleasedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.RELEASED;\n  data: {\n    liberadorId: string;\n    dataLiberacao: Date;\n    observacao?: string;\n  };\n}\n\n/**\n * Evento emitido quando uma determinação judicial é anexada à solicitação\n */\nexport interface SolicitacaoJudicialDeterminationAttachedEvent\n  extends SolicitacaoEvent {\n  type: SolicitacaoEventType.JUDICIAL_DETERMINATION_ATTACHED;\n  data: {\n    determinacaoJudicialId: string;\n    usuarioId: string;\n    observacao?: string;\n  };\n}\n\n/**\n * Evento emitido quando uma pendência é criada\n */\nexport interface SolicitacaoPendencyCreatedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.PENDENCY_CREATED;\n  data: {\n    pendenciaId: string;\n    descricao: string;\n    prazo?: Date;\n    usuarioId: string;\n  };\n}\n\n/**\n * Evento emitido quando uma pendência é resolvida\n */\nexport interface SolicitacaoPendencyResolvedEvent extends SolicitacaoEvent {\n  type: SolicitacaoEventType.PENDENCY_RESOLVED;\n  data: {\n    pendenciaId: string;\n    resolucao: string;\n    usuarioId: string;\n    dataResolucao: Date;\n  };\n}\n\n/**\n * Tipo união que representa todos os possíveis eventos de solicitação\n */\nexport type SolicitacaoEventUnion =\n  | SolicitacaoCreatedEvent\n  | SolicitacaoStatusChangedEvent\n  | SolicitacaoDeadlineApproachingEvent\n  | SolicitacaoDeadlineExpiredEvent\n  | SolicitacaoAssignedEvent\n  | SolicitacaoApprovedEvent\n  | SolicitacaoRejectedEvent\n  | SolicitacaoReleasedEvent\n  | SolicitacaoJudicialDeterminationAttachedEvent\n  | SolicitacaoPendencyCreatedEvent\n  | SolicitacaoPendencyResolvedEvent;\n"],"version":3}