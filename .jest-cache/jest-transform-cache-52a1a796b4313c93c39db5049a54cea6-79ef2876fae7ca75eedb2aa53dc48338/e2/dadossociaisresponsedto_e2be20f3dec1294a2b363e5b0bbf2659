9e3e4a0ae79d07e418720fdee74ce9e5
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DadosSociaisResponseDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_transformer_1 = require("class-transformer");
const escolaridade_enum_1 = require("../../../enums/escolaridade.enum");
const situacao_trabalho_enum_1 = require("../../../enums/situacao-trabalho.enum");
/**
 * DTO de resposta para dados sociais de um cidadão
 *
 * Padroniza o formato de retorno dos dados sociais, incluindo
 * campos calculados e formatação adequada para o frontend.
 */
class DadosSociaisResponseDto {
    id;
    cidadao_id;
    escolaridade;
    publico_prioritario;
    renda;
    ocupacao;
    recebe_pbf;
    valor_pbf;
    recebe_bpc;
    tipo_bpc;
    valor_bpc;
    curso_profissionalizante;
    interesse_curso_profissionalizante;
    situacao_trabalho;
    area_trabalho;
    familiar_apto_trabalho;
    area_interesse_familiar;
    observacoes;
    renda_per_capita;
    total_beneficios;
    renda_total;
    created_at;
    updated_at;
    constructor(dadosSociais) {
        if (dadosSociais) {
            this.id = dadosSociais.id;
            this.cidadao_id = dadosSociais.cidadao_id;
            this.escolaridade = dadosSociais.escolaridade;
            this.publico_prioritario = dadosSociais.publico_prioritario;
            this.renda = dadosSociais.renda ? parseFloat(dadosSociais.renda.toString()) : null;
            this.ocupacao = dadosSociais.ocupacao;
            this.recebe_pbf = dadosSociais.recebe_pbf;
            this.valor_pbf = dadosSociais.valor_pbf ? parseFloat(dadosSociais.valor_pbf.toString()) : null;
            this.recebe_bpc = dadosSociais.recebe_bpc;
            this.tipo_bpc = dadosSociais.tipo_bpc;
            this.valor_bpc = dadosSociais.valor_bpc ? parseFloat(dadosSociais.valor_bpc.toString()) : null;
            this.curso_profissionalizante = dadosSociais.curso_profissionalizante;
            this.interesse_curso_profissionalizante = dadosSociais.interesse_curso_profissionalizante;
            this.situacao_trabalho = dadosSociais.situacao_trabalho;
            this.area_trabalho = dadosSociais.area_trabalho;
            this.familiar_apto_trabalho = dadosSociais.familiar_apto_trabalho;
            this.area_interesse_familiar = dadosSociais.area_interesse_familiar;
            this.observacoes = dadosSociais.observacoes;
            this.created_at = dadosSociais.created_at;
            this.updated_at = dadosSociais.updated_at;
            // Cálculos derivados
            this.total_beneficios = this.calculateTotalBeneficios();
            this.renda_total = this.calculateRendaTotal();
        }
    }
    /**
     * Calcula o total de benefícios recebidos
     */
    calculateTotalBeneficios() {
        let total = 0;
        if (this.valor_pbf)
            total += this.valor_pbf;
        if (this.valor_bpc)
            total += this.valor_bpc;
        return total > 0 ? total : null;
    }
    /**
     * Calcula a renda total (renda + benefícios)
     */
    calculateRendaTotal() {
        let total = 0;
        if (this.renda)
            total += this.renda;
        if (this.valor_pbf)
            total += this.valor_pbf;
        if (this.valor_bpc)
            total += this.valor_bpc;
        return total > 0 ? total : null;
    }
}
exports.DadosSociaisResponseDto = DadosSociaisResponseDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID único dos dados sociais',
        example: '123e4567-e89b-12d3-a456-426614174000',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do cidadão proprietário dos dados sociais',
        example: '123e4567-e89b-12d3-a456-426614174001',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "cidadao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nível de escolaridade do cidadão',
        enum: escolaridade_enum_1.EscolaridadeEnum,
        example: escolaridade_enum_1.EscolaridadeEnum.MEDIO_COMPLETO,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_a = typeof escolaridade_enum_1.EscolaridadeEnum !== "undefined" && escolaridade_enum_1.EscolaridadeEnum) === "function" ? _a : Object)
], DadosSociaisResponseDto.prototype, "escolaridade", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se o cidadão faz parte de público prioritário',
        example: true,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Boolean)
], DadosSociaisResponseDto.prototype, "publico_prioritario", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Renda mensal do cidadão em reais',
        example: 1500.50,
        type: 'number',
        format: 'decimal',
        nullable: true,
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => value ? parseFloat(value) : null),
    __metadata("design:type", Object)
], DadosSociaisResponseDto.prototype, "renda", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Ocupação ou profissão do cidadão',
        example: 'Auxiliar de limpeza',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "ocupacao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se o cidadão recebe Programa Bolsa Família',
        example: false,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Boolean)
], DadosSociaisResponseDto.prototype, "recebe_pbf", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Valor mensal recebido do Programa Bolsa Família',
        example: 400.00,
        type: 'number',
        format: 'decimal',
        nullable: true,
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => value ? parseFloat(value) : null),
    __metadata("design:type", Object)
], DadosSociaisResponseDto.prototype, "valor_pbf", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se o cidadão recebe Benefício de Prestação Continuada',
        example: false,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Boolean)
], DadosSociaisResponseDto.prototype, "recebe_bpc", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo do BPC recebido',
        example: 'Pessoa com deficiência',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "tipo_bpc", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Valor mensal recebido do BPC',
        example: 1320.00,
        type: 'number',
        format: 'decimal',
        nullable: true,
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => value ? parseFloat(value) : null),
    __metadata("design:type", Object)
], DadosSociaisResponseDto.prototype, "valor_bpc", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Curso profissionalizante que o cidadão possui ou está cursando',
        example: 'Técnico em Informática',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "curso_profissionalizante", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se o cidadão tem interesse em fazer curso profissionalizante',
        example: true,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Boolean)
], DadosSociaisResponseDto.prototype, "interesse_curso_profissionalizante", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Situação atual de trabalho do cidadão',
        enum: situacao_trabalho_enum_1.SituacaoTrabalhoEnum,
        example: situacao_trabalho_enum_1.SituacaoTrabalhoEnum.DESEMPREGADO,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_b = typeof situacao_trabalho_enum_1.SituacaoTrabalhoEnum !== "undefined" && situacao_trabalho_enum_1.SituacaoTrabalhoEnum) === "function" ? _b : Object)
], DadosSociaisResponseDto.prototype, "situacao_trabalho", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Área de trabalho ou interesse profissional',
        example: 'Serviços gerais',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "area_trabalho", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se há familiar apto para trabalhar na composição familiar',
        example: true,
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Boolean)
], DadosSociaisResponseDto.prototype, "familiar_apto_trabalho", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Área de interesse profissional de familiares',
        example: 'Construção civil',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "area_interesse_familiar", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Observações adicionais sobre a situação social',
        example: 'Família em situação de vulnerabilidade social',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", String)
], DadosSociaisResponseDto.prototype, "observacoes", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Renda per capita calculada automaticamente',
        example: 375.12,
        type: 'number',
        format: 'decimal',
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ obj }) => {
        // Calcula renda per capita baseada na composição familiar
        // Este cálculo será implementado no service
        return obj.renda_per_capita || null;
    }),
    __metadata("design:type", Number)
], DadosSociaisResponseDto.prototype, "renda_per_capita", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Total de benefícios recebidos (PBF + BPC)',
        example: 1720.00,
        type: 'number',
        format: 'decimal',
        nullable: true,
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ obj }) => {
        let total = 0;
        if (obj.valor_pbf)
            total += parseFloat(obj.valor_pbf);
        if (obj.valor_bpc)
            total += parseFloat(obj.valor_bpc);
        return total > 0 ? total : null;
    }),
    __metadata("design:type", Object)
], DadosSociaisResponseDto.prototype, "total_beneficios", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Renda total (renda + benefícios)',
        example: 3220.00,
        type: 'number',
        format: 'decimal',
        nullable: true,
    }),
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ obj }) => {
        let total = 0;
        if (obj.renda)
            total += parseFloat(obj.renda);
        if (obj.valor_pbf)
            total += parseFloat(obj.valor_pbf);
        if (obj.valor_bpc)
            total += parseFloat(obj.valor_bpc);
        return total > 0 ? total : null;
    }),
    __metadata("design:type", Object)
], DadosSociaisResponseDto.prototype, "renda_total", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Data de criação do registro',
        example: '2024-01-15T10:30:00Z',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], DadosSociaisResponseDto.prototype, "created_at", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Data da última atualização',
        example: '2024-01-20T14:45:00Z',
    }),
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], DadosSociaisResponseDto.prototype, "updated_at", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,