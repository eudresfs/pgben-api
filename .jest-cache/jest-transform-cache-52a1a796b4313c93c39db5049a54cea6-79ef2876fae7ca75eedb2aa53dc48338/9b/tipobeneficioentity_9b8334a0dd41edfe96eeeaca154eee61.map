{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\tipo-beneficio.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\tipo-beneficio.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  OneToMany,\n  Index,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, Min } from 'class-validator';\nimport { Solicitacao } from './solicitacao.entity';\nimport { RequisitoDocumento } from './requisito-documento.entity';\nimport { CampoDinamicoBeneficio } from './campo-dinamico-beneficio.entity';\nimport { PeriodicidadeEnum, Status } from '../enums';\n\n@Entity('tipo_beneficio')\n@Index(['nome'], { unique: true })\n@Index(['codigo'], { unique: true })\nexport class TipoBeneficio {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  @IsNotEmpty({ message: 'Código é obrigatório' })\n  codigo: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  nome: string;\n\n  @Column('text')\n  @IsNotEmpty({ message: 'Descrição é obrigatória' })\n  descricao: string;\n\n  @Column({\n    type: 'enum',\n    enum: PeriodicidadeEnum,\n    enumName: 'periodicidade',\n    default: PeriodicidadeEnum.UNICO,\n  })\n  periodicidade: PeriodicidadeEnum;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  @IsNumber({}, { message: 'Valor deve ser um número' })\n  @Min(0, { message: 'Valor não pode ser negativo' })\n  valor: number;\n\n  @Column({\n    type: 'enum',\n    enum: Status,\n    enumName: 'status_enum',\n    default: Status.ATIVO,\n  })\n  status: Status;\n\n  @Column('jsonb', { nullable: true })\n  criterios_elegibilidade: {\n    idade_minima?: number;\n    idade_maxima?: number;\n    renda_maxima?: number;\n    tempo_minimo_residencia?: number;\n    outros?: string[];\n  };\n\n  @Column('jsonb', { nullable: true })\n  especificacoes: {\n    // Especificações para Auxílio Natalidade\n    tempo_gestacao_minimo?: number;\n    prazo_maximo_apos_nascimento?: number;\n    requer_pre_natal?: boolean;\n    requer_comprovante_residencia?: boolean;\n    numero_maximo_filhos?: number;\n    valor_complementar?: number;\n\n    // Especificações para Aluguel Social\n    duracao_maxima_meses?: number;\n    permite_prorrogacao?: boolean;\n    tempo_maximo_prorrogacao_meses?: number;\n    motivos_validos?: string[];\n    valor_maximo_aluguel?: number;\n    requer_visita_tecnica?: boolean;\n\n    // Especificações para Auxílio Funeral\n    valor_maximo_urna?: number;\n    tipos_urna_permitidos?: string[];\n    prazo_maximo_solicitacao_dias?: number;\n    requer_certidao_obito?: boolean;\n    permite_parcelamento?: boolean;\n\n    // Especificações para Cesta Básica\n    quantidade_maxima_cestas?: number;\n    periodicidade_entrega?: string;\n    tipos_entrega?: string[];\n    itens_cesta?: string[];\n    peso_total_kg?: number;\n    permite_substituicao_itens?: boolean;\n  };\n\n  @OneToMany(() => RequisitoDocumento, (requisito) => requisito.tipo_beneficio)\n  requisito_documento: RequisitoDocumento[];\n\n  @OneToMany(() => CampoDinamicoBeneficio, (campo) => campo.tipo_beneficio)\n  campos_dinamicos: CampoDinamicoBeneficio[];\n\n  @OneToMany(() => Solicitacao, (solicitacao) => solicitacao.tipo_beneficio)\n  solicitacao: Solicitacao[];\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters e Setters\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se o benefício foi criado recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se o benefício foi removido\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se o benefício está ativo\n   */\n  isAtivo(): boolean {\n    return this.status === 'ativo' && !this.removed_at;\n  }\n\n  /**\n   * Verifica se é benefício único\n   */\n  isBeneficioUnico(): boolean {\n    return this.periodicidade === PeriodicidadeEnum.UNICO;\n  }\n\n  /**\n   * Verifica se é benefício recorrente\n   */\n  isBeneficioRecorrente(): boolean {\n    return !this.isBeneficioUnico();\n  }\n\n  /**\n   * Verifica se é benefício mensal\n   */\n  isBeneficioMensal(): boolean {\n    return this.periodicidade === PeriodicidadeEnum.MENSAL;\n  }\n\n  /**\n   * Verifica se tem valor definido\n   */\n  temValor(): boolean {\n    return this.valor !== null && this.valor !== undefined && this.valor > 0;\n  }\n\n  /**\n   * Obtém o valor formatado em moeda brasileira\n   */\n  getValorFormatado(): string {\n    if (!this.temValor()) return 'Valor não definido';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(this.valor);\n  }\n\n  /**\n   * Obtém a descrição da periodicidade\n   */\n  getDescricaoPeriodicidade(): string {\n    const descricoes = {\n      [PeriodicidadeEnum.UNICO]: 'Único',\n      [PeriodicidadeEnum.MENSAL]: 'Mensal',\n      [PeriodicidadeEnum.BIMESTRAL]: 'Bimestral',\n      [PeriodicidadeEnum.TRIMESTRAL]: 'Trimestral',\n      [PeriodicidadeEnum.SEMESTRAL]: 'Semestral',\n      [PeriodicidadeEnum.ANUAL]: 'Anual',\n    };\n    return descricoes[this.periodicidade] || 'Não definido';\n  }\n\n  /**\n   * Verifica se tem critérios de elegibilidade definidos\n   */\n  temCriteriosElegibilidade(): boolean {\n    return (\n      !!this.criterios_elegibilidade &&\n      Object.keys(this.criterios_elegibilidade).length > 0\n    );\n  }\n\n  /**\n   * Verifica se tem critério de idade mínima\n   */\n  temIdadeMinima(): boolean {\n    return (\n      this.temCriteriosElegibilidade() &&\n      this.criterios_elegibilidade.idade_minima !== undefined &&\n      this.criterios_elegibilidade.idade_minima !== null\n    );\n  }\n\n  /**\n   * Verifica se tem critério de idade máxima\n   */\n  temIdadeMaxima(): boolean {\n    return (\n      this.temCriteriosElegibilidade() &&\n      this.criterios_elegibilidade.idade_maxima !== undefined &&\n      this.criterios_elegibilidade.idade_maxima !== null\n    );\n  }\n\n  /**\n   * Verifica se tem critério de renda máxima\n   */\n  temRendaMaxima(): boolean {\n    return (\n      this.temCriteriosElegibilidade() &&\n      this.criterios_elegibilidade.renda_maxima !== undefined &&\n      this.criterios_elegibilidade.renda_maxima !== null\n    );\n  }\n\n  /**\n   * Verifica se tem critério de tempo mínimo de residência\n   */\n  temTempoMinimoResidencia(): boolean {\n    return (\n      this.temCriteriosElegibilidade() &&\n      this.criterios_elegibilidade.tempo_minimo_residencia !== undefined &&\n      this.criterios_elegibilidade.tempo_minimo_residencia !== null\n    );\n  }\n\n  /**\n   * Verifica se uma idade atende aos critérios\n   */\n  idadeAtendeAosCriterios(idade: number): boolean {\n    if (!this.temCriteriosElegibilidade()) return true;\n\n    if (\n      this.temIdadeMinima() &&\n      idade < (this.criterios_elegibilidade?.idade_minima ?? 0)\n    ) {\n      return false;\n    }\n\n    if (\n      this.temIdadeMaxima() &&\n      idade > (this.criterios_elegibilidade?.idade_maxima ?? 0)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Verifica se uma renda atende aos critérios\n   */\n  rendaAtendeAosCriterios(renda: number): boolean {\n    if (!this.temRendaMaxima()) return true;\n    return (\n      this.criterios_elegibilidade.renda_maxima !== undefined &&\n      renda <= this.criterios_elegibilidade.renda_maxima\n    );\n  }\n\n  /**\n   * Verifica se o tempo de residência atende aos critérios\n   */\n  tempoResidenciaAtendeAosCriterios(tempoMeses: number): boolean {\n    if (!this.temTempoMinimoResidencia()) return true;\n    return (\n      this.criterios_elegibilidade.tempo_minimo_residencia !== undefined &&\n      tempoMeses >= this.criterios_elegibilidade.tempo_minimo_residencia\n    );\n  }\n\n  /**\n   * Obtém a faixa etária permitida\n   */\n  getFaixaEtaria(): string {\n    if (!this.temIdadeMinima() && !this.temIdadeMaxima()) {\n      return 'Qualquer idade';\n    }\n\n    if (this.temIdadeMinima() && !this.temIdadeMaxima()) {\n      return `A partir de ${this.criterios_elegibilidade.idade_minima} anos`;\n    }\n\n    if (!this.temIdadeMinima() && this.temIdadeMaxima()) {\n      return `Até ${this.criterios_elegibilidade.idade_maxima} anos`;\n    }\n\n    return `De ${this.criterios_elegibilidade.idade_minima} a ${this.criterios_elegibilidade.idade_maxima} anos`;\n  }\n\n  /**\n   * Obtém a renda máxima formatada\n   */\n  getRendaMaximaFormatada(): string {\n    if (\n      !this.temRendaMaxima() ||\n      this.criterios_elegibilidade.renda_maxima === undefined\n    )\n      return 'Sem limite de renda';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(this.criterios_elegibilidade.renda_maxima);\n  }\n\n  /**\n   * Obtém o tempo mínimo de residência formatado\n   */\n  getTempoMinimoResidenciaFormatado(): string {\n    if (!this.temTempoMinimoResidencia()) return 'Sem exigência de tempo';\n\n    const meses = this.criterios_elegibilidade.tempo_minimo_residencia;\n    if (meses === undefined || meses < 12) {\n      return `${meses ?? 0} mês(es)`;\n    } else {\n      const anos = Math.floor(meses / 12);\n      const mesesRestantes = meses % 12;\n      if (mesesRestantes === 0) {\n        return `${anos} ano(s)`;\n      } else {\n        return `${anos} ano(s) e ${mesesRestantes} mês(es)`;\n      }\n    }\n  }\n\n  /**\n   * Obtém lista de outros critérios\n   */\n  getOutrosCriterios(): string[] {\n    if (\n      !this.temCriteriosElegibilidade() ||\n      !this.criterios_elegibilidade.outros\n    ) {\n      return [];\n    }\n    return this.criterios_elegibilidade.outros;\n  }\n\n  /**\n   * Verifica se tem requisitos de documentos\n   */\n  temRequisitosDocumentos(): boolean {\n    return this.requisito_documento && this.requisito_documento.length > 0;\n  }\n\n  /**\n   * Obtém número de requisitos obrigatórios\n   */\n  getNumeroRequisitosObrigatorios(): number {\n    if (!this.temRequisitosDocumentos()) return 0;\n    return this.requisito_documento.filter((req) => req.obrigatorio).length;\n  }\n\n  /**\n   * Verifica se tem campos dinâmicos\n   */\n  temCamposDinamicos(): boolean {\n    return this.campos_dinamicos && this.campos_dinamicos.length > 0;\n  }\n\n  /**\n   * Obtém número de campos dinâmicos obrigatórios\n   */\n  getNumeroCamposDinamicosObrigatorios(): number {\n    if (!this.temCamposDinamicos()) return 0;\n    return this.campos_dinamicos.filter((campo) => campo.obrigatorio).length;\n  }\n\n  /**\n   * Verifica se pode ser solicitado (ativo e não removido)\n   */\n  podeSerSolicitado(): boolean {\n    return this.isAtivo();\n  }\n\n  /**\n   * Obtém um resumo do benefício\n   */\n  getSummary(): string {\n    const valor = this.getValorFormatado();\n    const periodicidade = this.getDescricaoPeriodicidade();\n    const status = this.isAtivo() ? 'Ativo' : 'Inativo';\n    return `${this.nome} - ${valor} (${periodicidade}) - ${status}`;\n  }\n\n  /**\n   * Gera uma chave única para o benefício\n   */\n  getUniqueKey(): string {\n    return `tipo_beneficio_${this.nome.toLowerCase().replace(/\\s+/g, '_')}`;\n  }\n\n  /**\n   * Verifica se o benefício é consistente\n   */\n  isConsistente(): boolean {\n    // Verifica se tem nome\n    if (!this.nome || this.nome.trim().length === 0) return false;\n\n    // Verifica se tem descrição\n    if (!this.descricao || this.descricao.trim().length === 0) return false;\n\n    // Verifica se tem valor válido\n    if (!this.temValor()) return false;\n\n    // Verifica critérios de elegibilidade\n    if (this.temCriteriosElegibilidade()) {\n      if (this.temIdadeMinima() && this.temIdadeMaxima()) {\n        if (\n          this.criterios_elegibilidade.idade_minima !== undefined &&\n          this.criterios_elegibilidade.idade_maxima !== undefined &&\n          this.criterios_elegibilidade.idade_minima >\n            this.criterios_elegibilidade.idade_maxima\n        ) {\n          return false;\n        }\n      }\n\n      if (\n        this.temRendaMaxima() &&\n        this.criterios_elegibilidade.renda_maxima !== undefined &&\n        this.criterios_elegibilidade.renda_maxima < 0\n      ) {\n        return false;\n      }\n\n      if (\n        this.temTempoMinimoResidencia() &&\n        this.criterios_elegibilidade.tempo_minimo_residencia !== undefined &&\n        this.criterios_elegibilidade.tempo_minimo_residencia < 0\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removido\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n\n    // Pode implementar lógica adicional aqui\n    // Por exemplo, verificar se tem solicitações ativas\n\n    return true;\n  }\n\n  /**\n   * Clona o tipo de benefício (sem ID)\n   */\n  clone(): Partial<TipoBeneficio> {\n    return {\n      nome: this.nome,\n      descricao: this.descricao,\n      periodicidade: this.periodicidade,\n      valor: this.valor,\n      status: Status.ATIVO,\n      criterios_elegibilidade: this.criterios_elegibilidade\n        ? JSON.parse(JSON.stringify(this.criterios_elegibilidade))\n        : null,\n    };\n  }\n\n  /**\n   * Verifica se é um benefício de alto valor\n   */\n  isAltoValor(): boolean {\n    // Considera alto valor acima de R$ 1000\n    return this.temValor() && this.valor > 1000;\n  }\n\n  /**\n   * Obtém a complexidade do benefício baseada em critérios e requisitos\n   */\n  getComplexidade(): 'BAIXA' | 'MEDIA' | 'ALTA' {\n    let pontos = 0;\n\n    // Critérios de elegibilidade\n    if (this.temCriteriosElegibilidade()) {\n      pontos += Object.keys(this.criterios_elegibilidade).length;\n    }\n\n    // Requisitos de documentos\n    if (this.temRequisitosDocumentos()) {\n      pontos += this.requisito_documento.length;\n    }\n\n    // Campos dinâmicos\n    if (this.temCamposDinamicos()) {\n      pontos += this.campos_dinamicos.length;\n    }\n\n    if (pontos <= 3) return 'BAIXA';\n    if (pontos <= 7) return 'MEDIA';\n    return 'ALTA';\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<TipoBeneficio> {\n    return {\n      id: this.id,\n      nome: this.nome,\n      periodicidade: this.periodicidade,\n      status: Status.ATIVO,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Obtém sugestões de melhoria para o benefício\n   */\n  getSugestoesMelhoria(): string[] {\n    const sugestoes: string[] = [];\n\n    if (!this.temCriteriosElegibilidade()) {\n      sugestoes.push('Definir critérios de elegibilidade');\n    }\n\n    if (!this.temRequisitosDocumentos()) {\n      sugestoes.push('Adicionar requisitos de documentos');\n    }\n\n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar e corrigir inconsistências nos dados');\n    }\n\n    if (this.status === Status.INATIVO) {\n      sugestoes.push('Considerar reativar o benefício se necessário');\n    }\n\n    return sugestoes;\n  }\n\n  /**\n   * Verifica se precisa de atualização (dados muito antigos)\n   */\n  precisaAtualizacao(): boolean {\n    // Dados com mais de 1 ano podem precisar de revisão\n    const umAnoAtras = new Date();\n    umAnoAtras.setFullYear(umAnoAtras.getFullYear() - 1);\n    return this.updated_at < umAnoAtras;\n  }\n\n  /**\n   * Obtém estatísticas do benefício\n   */\n  getEstatisticas(): {\n    valor: string;\n    periodicidade: string;\n    complexidade: string;\n    criteriosElegibilidade: number;\n    requisitosDocumentos: number;\n    camposDinamicos: number;\n  } {\n    return {\n      valor: this.getValorFormatado(),\n      periodicidade: this.getDescricaoPeriodicidade(),\n      complexidade: this.getComplexidade(),\n      criteriosElegibilidade: this.temCriteriosElegibilidade()\n        ? Object.keys(this.criterios_elegibilidade).length\n        : 0,\n      requisitosDocumentos: this.temRequisitosDocumentos()\n        ? this.requisito_documento.length\n        : 0,\n      camposDinamicos: this.temCamposDinamicos()\n        ? this.campos_dinamicos.length\n        : 0,\n    };\n  }\n}\n"],"version":3}