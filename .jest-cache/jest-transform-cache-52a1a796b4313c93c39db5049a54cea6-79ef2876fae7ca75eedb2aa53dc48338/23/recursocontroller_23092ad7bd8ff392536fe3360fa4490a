31aff56bb1948c485f8d40d5f8883d85
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecursoController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const recurso_service_1 = require("../services/recurso.service");
const create_recurso_dto_1 = require("../dto/create-recurso.dto");
const analisar_recurso_dto_1 = require("../dto/analisar-recurso.dto");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const permission_guard_1 = require("../../../auth/guards/permission.guard");
const requires_permission_decorator_1 = require("../../../auth/decorators/requires-permission.decorator");
const user_permission_entity_1 = require("../../../entities/user-permission.entity");
const recurso_entity_1 = require("../../../entities/recurso.entity");
const express_1 = require("express");
/**
 * Controlador de Recursos de Primeira Instância
 *
 * Responsável por gerenciar as rotas relacionadas aos recursos de primeira instância
 * para solicitações de benefícios indeferidas
 */
let RecursoController = class RecursoController {
    recursoService;
    constructor(recursoService) {
        this.recursoService = recursoService;
    }
    /**
     * Lista todos os recursos com filtros e paginação
     */
    async findAll(req, page, limit, status, solicitacao_id, setor_id, data_inicio, data_fim) {
        const user = req.user;
        return this.recursoService.findAll({
            page: page ? +page : undefined,
            limit: limit ? +limit : undefined,
            status,
            solicitacao_id,
            setor_id,
            data_inicio,
            data_fim,
            user,
        });
    }
    /**
     * Obtém detalhes de um recurso específico
     */
    async findOne(id) {
        return this.recursoService.findById(id);
    }
    /**
     * Cria um novo recurso
     */
    async create(createRecursoDto, req) {
        const user = req.user;
        return this.recursoService.create(createRecursoDto, user);
    }
    /**
     * Lista recursos de uma solicitação específica
     */
    async findBySolicitacao(solicitacaoId, req) {
        const user = req.user;
        return this.recursoService.findAll({
            solicitacao_id: solicitacaoId,
            user,
        });
    }
    /**
     * Inicia a análise de um recurso
     */
    async iniciarAnalise(id, req) {
        const user = req.user;
        return this.recursoService.iniciarAnalise(id, user);
    }
    /**
     * Analisa um recurso (deferir/indeferir)
     */
    async analisarRecurso(id, analisarRecursoDto, req) {
        const user = req.user;
        return this.recursoService.analisarRecurso(id, analisarRecursoDto, user);
    }
    /**
     * Cancela um recurso
     */
    async cancelarRecurso(id, req) {
        const user = req.user;
        return this.recursoService.cancelarRecurso(id, user);
    }
    /**
     * Lista o histórico de um recurso
     */
    async getHistorico(id) {
        return this.recursoService.getHistorico(id);
    }
};
exports.RecursoController = RecursoController;
__decorate([
    (0, common_1.Get)(),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.listar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'query.setor_id',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Listar recursos' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de recursos retornada com sucesso',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'page',
        required: false,
        type: Number,
        description: 'Página atual',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'limit',
        required: false,
        type: Number,
        description: 'Itens por página',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'status',
        required: false,
        enum: recurso_entity_1.StatusRecurso,
        description: 'Filtro por status',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'solicitacao_id',
        required: false,
        type: String,
        description: 'Filtro por solicitação',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'setor_id',
        required: false,
        type: String,
        description: 'Filtro por setor responsável',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'data_inicio',
        required: false,
        type: String,
        description: 'Data inicial (formato: YYYY-MM-DD)',
    }),
    (0, swagger_1.ApiQuery)({
        name: 'data_fim',
        required: false,
        type: String,
        description: 'Data final (formato: YYYY-MM-DD)',
    }),
    __param(0, (0, common_1.Req)()),
    __param(1, (0, common_1.Query)('page')),
    __param(2, (0, common_1.Query)('limit')),
    __param(3, (0, common_1.Query)('status')),
    __param(4, (0, common_1.Query)('solicitacao_id')),
    __param(5, (0, common_1.Query)('setor_id')),
    __param(6, (0, common_1.Query)('data_inicio')),
    __param(7, (0, common_1.Query)('data_fim')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof express_1.Request !== "undefined" && express_1.Request) === "function" ? _b : Object, Number, Number, typeof (_c = typeof recurso_entity_1.StatusRecurso !== "undefined" && recurso_entity_1.StatusRecurso) === "function" ? _c : Object, String, String, String, String]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "findAll", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.visualizar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'recurso.setorResponsavelId',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Obter detalhes de um recurso' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Recurso encontrado com sucesso',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Recurso não encontrado' }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "findOne", null);
__decorate([
    (0, common_1.Post)(),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.criar',
        scopeType: user_permission_entity_1.ScopeType.GLOBAL,
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Criar novo recurso' }),
    (0, swagger_1.ApiResponse)({ status: 201, description: 'Recurso criado com sucesso' }),
    (0, swagger_1.ApiResponse)({
        status: 400,
        description: 'Dados inválidos para criação do recurso',
    }),
    (0, swagger_1.ApiBody)({ type: create_recurso_dto_1.CreateRecursoDto }),
    __param(0, (0, common_1.Body)()),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_d = typeof create_recurso_dto_1.CreateRecursoDto !== "undefined" && create_recurso_dto_1.CreateRecursoDto) === "function" ? _d : Object, typeof (_e = typeof express_1.Request !== "undefined" && express_1.Request) === "function" ? _e : Object]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "create", null);
__decorate([
    (0, common_1.Get)('solicitacao/:solicitacaoId'),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.listar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'solicitacao.unidadeId',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Listar recursos de uma solicitação' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de recursos retornada com sucesso',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Solicitação não encontrada' }),
    __param(0, (0, common_1.Param)('solicitacaoId')),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_f = typeof express_1.Request !== "undefined" && express_1.Request) === "function" ? _f : Object]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "findBySolicitacao", null);
__decorate([
    (0, common_1.Put)(':id/iniciar-analise'),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.analisar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'recurso.setorResponsavelId',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Iniciar análise de um recurso' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Análise iniciada com sucesso',
    }),
    (0, swagger_1.ApiResponse)({
        status: 400,
        description: 'Recurso não pode ser analisado',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Recurso não encontrado' }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_g = typeof express_1.Request !== "undefined" && express_1.Request) === "function" ? _g : Object]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "iniciarAnalise", null);
__decorate([
    (0, common_1.Put)(':id/analisar'),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.analisar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'recurso.setorResponsavelId',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Analisar um recurso' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Recurso analisado com sucesso' }),
    (0, swagger_1.ApiResponse)({
        status: 400,
        description: 'Recurso não pode ser analisado',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Recurso não encontrado' }),
    (0, swagger_1.ApiBody)({ type: analisar_recurso_dto_1.AnalisarRecursoDto }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __param(2, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_h = typeof analisar_recurso_dto_1.AnalisarRecursoDto !== "undefined" && analisar_recurso_dto_1.AnalisarRecursoDto) === "function" ? _h : Object, typeof (_j = typeof express_1.Request !== "undefined" && express_1.Request) === "function" ? _j : Object]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "analisarRecurso", null);
__decorate([
    (0, common_1.Put)(':id/cancelar'),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.cancelar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'recurso.setorResponsavelId',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Cancelar recurso' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Recurso cancelado com sucesso' }),
    (0, swagger_1.ApiResponse)({
        status: 400,
        description: 'Recurso não pode ser cancelado',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Recurso não encontrado' }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_k = typeof express_1.Request !== "undefined" && express_1.Request) === "function" ? _k : Object]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "cancelarRecurso", null);
__decorate([
    (0, common_1.Get)(':id/historico'),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.visualizar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'recurso.setorResponsavelId',
    }),
    (0, requires_permission_decorator_1.RequiresPermission)({
        permissionName: 'recurso.historico.visualizar',
        scopeType: user_permission_entity_1.ScopeType.UNIT,
        scopeIdExpression: 'recurso.setorResponsavelId',
    }),
    (0, swagger_1.ApiOperation)({ summary: 'Listar histórico de um recurso' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Histórico retornado com sucesso' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Recurso não encontrado' }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], RecursoController.prototype, "getHistorico", null);
exports.RecursoController = RecursoController = __decorate([
    (0, swagger_1.ApiTags)('Recursos'),
    (0, common_1.Controller)('recursos'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, permission_guard_1.PermissionGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof recurso_service_1.RecursoService !== "undefined" && recurso_service_1.RecursoService) === "function" ? _a : Object])
], RecursoController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,