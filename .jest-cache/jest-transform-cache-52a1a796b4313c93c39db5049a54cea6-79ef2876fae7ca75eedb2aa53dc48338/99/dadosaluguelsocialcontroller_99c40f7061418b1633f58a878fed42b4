5db67156dc1e9ac83679b66bc941dc91
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DadosAluguelSocialController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../../auth/guards/roles.guard");
const dados_aluguel_social_service_1 = require("../services/dados-aluguel-social.service");
const create_dados_aluguel_social_dto_1 = require("../dto/create-dados-aluguel-social.dto");
const dados_aluguel_social_entity_1 = require("../../../entities/dados-aluguel-social.entity");
/**
 * Controlador para gerenciar dados específicos do Aluguel Social
 */
let DadosAluguelSocialController = class DadosAluguelSocialController {
    dadosAluguelSocialService;
    constructor(dadosAluguelSocialService) {
        this.dadosAluguelSocialService = dadosAluguelSocialService;
    }
    /**
     * Criar dados de aluguel social para uma solicitação
     */
    async create(createDto) {
        return this.dadosAluguelSocialService.create(createDto);
    }
    /**
     * Buscar dados de aluguel social por ID
     */
    async findOne(id) {
        return this.dadosAluguelSocialService.findOne(id);
    }
    /**
     * Buscar dados de aluguel social por solicitação
     */
    async findBySolicitacao(solicitacaoId) {
        return this.dadosAluguelSocialService.findBySolicitacao(solicitacaoId);
    }
    /**
     * Atualizar dados de aluguel social
     */
    async update(id, updateDto) {
        return this.dadosAluguelSocialService.update(id, updateDto);
    }
    /**
     * Remover dados de aluguel social
     */
    async remove(id) {
        return this.dadosAluguelSocialService.remove(id);
    }
};
exports.DadosAluguelSocialController = DadosAluguelSocialController;
__decorate([
    (0, common_1.Post)(),
    (0, swagger_1.ApiOperation)({
        summary: 'Criar dados de aluguel social',
        description: 'Cria dados específicos para solicitação de Aluguel Social',
    }),
    (0, swagger_1.ApiBody)({ type: create_dados_aluguel_social_dto_1.CreateDadosAluguelSocialDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.CREATED,
        description: 'Dados de aluguel social criados com sucesso',
        type: dados_aluguel_social_entity_1.DadosAluguelSocial,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof create_dados_aluguel_social_dto_1.CreateDadosAluguelSocialDto !== "undefined" && create_dados_aluguel_social_dto_1.CreateDadosAluguelSocialDto) === "function" ? _b : Object]),
    __metadata("design:returntype", typeof (_c = typeof Promise !== "undefined" && Promise) === "function" ? _c : Object)
], DadosAluguelSocialController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de aluguel social por ID',
        description: 'Retorna os dados de aluguel social específicos pelo ID',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de aluguel social' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de aluguel social encontrados',
        type: dados_aluguel_social_entity_1.DadosAluguelSocial,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de aluguel social não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], DadosAluguelSocialController.prototype, "findOne", null);
__decorate([
    (0, common_1.Get)('solicitacao/:solicitacaoId'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de aluguel social por solicitação',
        description: 'Retorna os dados de aluguel social de uma solicitação específica',
    }),
    (0, swagger_1.ApiParam)({ name: 'solicitacaoId', description: 'ID da solicitação' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de aluguel social encontrados',
        type: dados_aluguel_social_entity_1.DadosAluguelSocial,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de aluguel social não encontrados para esta solicitação',
    }),
    __param(0, (0, common_1.Param)('solicitacaoId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], DadosAluguelSocialController.prototype, "findBySolicitacao", null);
__decorate([
    (0, common_1.Patch)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Atualizar dados de aluguel social',
        description: 'Atualiza dados específicos de uma solicitação de Aluguel Social',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de aluguel social' }),
    (0, swagger_1.ApiBody)({ type: create_dados_aluguel_social_dto_1.UpdateDadosAluguelSocialDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de aluguel social atualizados com sucesso',
        type: dados_aluguel_social_entity_1.DadosAluguelSocial,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de aluguel social não encontrados',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_f = typeof create_dados_aluguel_social_dto_1.UpdateDadosAluguelSocialDto !== "undefined" && create_dados_aluguel_social_dto_1.UpdateDadosAluguelSocialDto) === "function" ? _f : Object]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], DadosAluguelSocialController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Remover dados de aluguel social',
        description: 'Remove dados específicos de aluguel social (apenas administradores)',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de aluguel social' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NO_CONTENT,
        description: 'Dados de aluguel social removidos com sucesso',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de aluguel social não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_h = typeof Promise !== "undefined" && Promise) === "function" ? _h : Object)
], DadosAluguelSocialController.prototype, "remove", null);
exports.DadosAluguelSocialController = DadosAluguelSocialController = __decorate([
    (0, swagger_1.ApiTags)('Benefícios'),
    (0, common_1.Controller)('dados-aluguel-social'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof dados_aluguel_social_service_1.DadosAluguelSocialService !== "undefined" && dados_aluguel_social_service_1.DadosAluguelSocialService) === "function" ? _a : Object])
], DadosAluguelSocialController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,