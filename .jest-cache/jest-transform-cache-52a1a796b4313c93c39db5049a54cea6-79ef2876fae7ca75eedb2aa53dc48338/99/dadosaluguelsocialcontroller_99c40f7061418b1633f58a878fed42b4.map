{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\controllers\\dados-aluguel-social.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAWwB;AACxB,6CAOyB;AACzB,wEAAmE;AACnE,kEAA8D;AAG9D,2FAAqF;AACrF,4FAGgD;AAChD,+FAAmF;AAEnF;;GAEG;AAKI,IAAM,4BAA4B,GAAlC,MAAM,4BAA4B;IAEpB;IADnB,YACmB,yBAAoD;QAApD,8BAAyB,GAAzB,yBAAyB,CAA2B;IACpE,CAAC;IAEJ;;OAEG;IAgBG,AAAN,KAAK,CAAC,MAAM,CACF,SAAsC;QAE9C,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IAgBG,AAAN,KAAK,CAAC,OAAO,CACiB,EAAU;QAEtC,OAAO,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IAkBG,AAAN,KAAK,CAAC,iBAAiB,CACkB,aAAqB;QAE5D,OAAO,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IAED;;OAEG;IAsBG,AAAN,KAAK,CAAC,MAAM,CACkB,EAAU,EAC9B,SAAsC;QAE9C,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAC9D,CAAC;IAED;;OAEG;IAgBG,AAAN,KAAK,CAAC,MAAM,CAA6B,EAAU;QACjD,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;CACF,CAAA;AAnIY,oEAA4B;AAuBjC;IAfL,IAAA,aAAI,GAAE;IACN,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,+BAA+B;QACxC,WAAW,EAAE,2DAA2D;KACzE,CAAC;IACD,IAAA,iBAAO,EAAC,EAAE,IAAI,EAAE,6DAA2B,EAAE,CAAC;IAC9C,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,OAAO;QAC1B,WAAW,EAAE,6CAA6C;QAC1D,IAAI,EAAE,gDAAkB;KACzB,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,WAAW;QAC9B,WAAW,EAAE,4BAA4B;KAC1C,CAAC;IAEC,WAAA,IAAA,aAAI,GAAE,CAAA;;yDAAY,6DAA2B,oBAA3B,6DAA2B;wDAC7C,OAAO,oBAAP,OAAO;0DAET;AAoBK;IAfL,IAAA,YAAG,EAAC,KAAK,CAAC;IACV,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,uCAAuC;QAChD,WAAW,EAAE,wDAAwD;KACtE,CAAC;IACD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,gCAAgC,EAAE,CAAC;IACvE,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,EAAE;QACrB,WAAW,EAAE,qCAAqC;QAClD,IAAI,EAAE,gDAAkB;KACzB,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,SAAS;QAC5B,WAAW,EAAE,yCAAyC;KACvD,CAAC;IAEC,WAAA,IAAA,cAAK,EAAC,IAAI,EAAE,sBAAa,CAAC,CAAA;;;wDAC1B,OAAO,oBAAP,OAAO;2DAET;AAsBK;IAjBL,IAAA,YAAG,EAAC,4BAA4B,CAAC;IACjC,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,gDAAgD;QACzD,WAAW,EACT,kEAAkE;KACrE,CAAC;IACD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,mBAAmB,EAAE,CAAC;IACrE,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,EAAE;QACrB,WAAW,EAAE,qCAAqC;QAClD,IAAI,EAAE,gDAAkB;KACzB,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,SAAS;QAC5B,WAAW,EACT,+DAA+D;KAClE,CAAC;IAEC,WAAA,IAAA,cAAK,EAAC,eAAe,EAAE,sBAAa,CAAC,CAAA;;;wDACrC,OAAO,oBAAP,OAAO;qEAET;AA0BK;IArBL,IAAA,cAAK,EAAC,KAAK,CAAC;IACZ,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,mCAAmC;QAC5C,WAAW,EACT,iEAAiE;KACpE,CAAC;IACD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,gCAAgC,EAAE,CAAC;IACvE,IAAA,iBAAO,EAAC,EAAE,IAAI,EAAE,6DAA2B,EAAE,CAAC;IAC9C,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,EAAE;QACrB,WAAW,EAAE,iDAAiD;QAC9D,IAAI,EAAE,gDAAkB;KACzB,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,SAAS;QAC5B,WAAW,EAAE,yCAAyC;KACvD,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,WAAW;QAC9B,WAAW,EAAE,4BAA4B;KAC1C,CAAC;IAEC,WAAA,IAAA,cAAK,EAAC,IAAI,EAAE,sBAAa,CAAC,CAAA;IAC1B,WAAA,IAAA,aAAI,GAAE,CAAA;;iEAAY,6DAA2B,oBAA3B,6DAA2B;wDAC7C,OAAO,oBAAP,OAAO;0DAET;AAoBK;IAfL,IAAA,eAAM,EAAC,KAAK,CAAC;IACb,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,iCAAiC;QAC1C,WAAW,EACT,qEAAqE;KACxE,CAAC;IACD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,gCAAgC,EAAE,CAAC;IACvE,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,UAAU;QAC7B,WAAW,EAAE,+CAA+C;KAC7D,CAAC;IACD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,mBAAU,CAAC,SAAS;QAC5B,WAAW,EAAE,yCAAyC;KACvD,CAAC;IACY,WAAA,IAAA,cAAK,EAAC,IAAI,EAAE,sBAAa,CAAC,CAAA;;;wDAAc,OAAO,oBAAP,OAAO;0DAE5D;uCAlIU,4BAA4B;IAJxC,IAAA,iBAAO,EAAC,YAAY,CAAC;IACrB,IAAA,mBAAU,EAAC,sBAAsB,CAAC;IAClC,IAAA,kBAAS,EAAC,6BAAY,EAAE,wBAAU,CAAC;IACnC,IAAA,uBAAa,GAAE;yDAGgC,wDAAyB,oBAAzB,wDAAyB;GAF5D,4BAA4B,CAmIxC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\controllers\\dados-aluguel-social.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseUUIDPipe,\n  UseGuards,\n  HttpStatus,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiParam,\n  ApiBody,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../../../auth/guards/roles.guard';\nimport { Roles } from '../../../auth/decorators/role.decorator';\nimport { UserRole } from '../../../enums';\nimport { DadosAluguelSocialService } from '../services/dados-aluguel-social.service';\nimport {\n  CreateDadosAluguelSocialDto,\n  UpdateDadosAluguelSocialDto,\n} from '../dto/create-dados-aluguel-social.dto';\nimport { DadosAluguelSocial } from '../../../entities/dados-aluguel-social.entity';\n\n/**\n * Controlador para gerenciar dados específicos do Aluguel Social\n */\n@ApiTags('Benefícios')\n@Controller('dados-aluguel-social')\n@UseGuards(JwtAuthGuard, RolesGuard)\n@ApiBearerAuth()\nexport class DadosAluguelSocialController {\n  constructor(\n    private readonly dadosAluguelSocialService: DadosAluguelSocialService,\n  ) {}\n\n  /**\n   * Criar dados de aluguel social para uma solicitação\n   */\n  @Post()\n  @ApiOperation({\n    summary: 'Criar dados de aluguel social',\n    description: 'Cria dados específicos para solicitação de Aluguel Social',\n  })\n  @ApiBody({ type: CreateDadosAluguelSocialDto })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Dados de aluguel social criados com sucesso',\n    type: DadosAluguelSocial,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos fornecidos',\n  })\n  async create(\n    @Body() createDto: CreateDadosAluguelSocialDto,\n  ): Promise<DadosAluguelSocial> {\n    return this.dadosAluguelSocialService.create(createDto);\n  }\n\n  /**\n   * Buscar dados de aluguel social por ID\n   */\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Buscar dados de aluguel social por ID',\n    description: 'Retorna os dados de aluguel social específicos pelo ID',\n  })\n  @ApiParam({ name: 'id', description: 'ID dos dados de aluguel social' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Dados de aluguel social encontrados',\n    type: DadosAluguelSocial,\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de aluguel social não encontrados',\n  })\n  async findOne(\n    @Param('id', ParseUUIDPipe) id: string,\n  ): Promise<DadosAluguelSocial> {\n    return this.dadosAluguelSocialService.findOne(id);\n  }\n\n  /**\n   * Buscar dados de aluguel social por solicitação\n   */\n  @Get('solicitacao/:solicitacaoId')\n  @ApiOperation({\n    summary: 'Buscar dados de aluguel social por solicitação',\n    description:\n      'Retorna os dados de aluguel social de uma solicitação específica',\n  })\n  @ApiParam({ name: 'solicitacaoId', description: 'ID da solicitação' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Dados de aluguel social encontrados',\n    type: DadosAluguelSocial,\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description:\n      'Dados de aluguel social não encontrados para esta solicitação',\n  })\n  async findBySolicitacao(\n    @Param('solicitacaoId', ParseUUIDPipe) solicitacaoId: string,\n  ): Promise<DadosAluguelSocial> {\n    return this.dadosAluguelSocialService.findBySolicitacao(solicitacaoId);\n  }\n\n  /**\n   * Atualizar dados de aluguel social\n   */\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Atualizar dados de aluguel social',\n    description:\n      'Atualiza dados específicos de uma solicitação de Aluguel Social',\n  })\n  @ApiParam({ name: 'id', description: 'ID dos dados de aluguel social' })\n  @ApiBody({ type: UpdateDadosAluguelSocialDto })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Dados de aluguel social atualizados com sucesso',\n    type: DadosAluguelSocial,\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de aluguel social não encontrados',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos fornecidos',\n  })\n  async update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateDto: UpdateDadosAluguelSocialDto,\n  ): Promise<DadosAluguelSocial> {\n    return this.dadosAluguelSocialService.update(id, updateDto);\n  }\n\n  /**\n   * Remover dados de aluguel social\n   */\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Remover dados de aluguel social',\n    description:\n      'Remove dados específicos de aluguel social (apenas administradores)',\n  })\n  @ApiParam({ name: 'id', description: 'ID dos dados de aluguel social' })\n  @ApiResponse({\n    status: HttpStatus.NO_CONTENT,\n    description: 'Dados de aluguel social removidos com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de aluguel social não encontrados',\n  })\n  async remove(@Param('id', ParseUUIDPipe) id: string): Promise<void> {\n    return this.dadosAluguelSocialService.remove(id);\n  }\n}\n"],"version":3}