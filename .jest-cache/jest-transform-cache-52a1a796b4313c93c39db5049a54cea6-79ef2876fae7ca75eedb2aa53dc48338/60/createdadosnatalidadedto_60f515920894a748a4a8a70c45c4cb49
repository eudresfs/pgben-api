8b724ca314ac914d72451c1bfb3cf649
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateDadosNatalidadeDto = exports.CreateDadosNatalidadeDto = void 0;
const class_validator_1 = require("class-validator");
const swagger_1 = require("@nestjs/swagger");
const class_transformer_1 = require("class-transformer");
/**
 * DTO para criação de dados específicos do cidadão para Auxílio Natalidade
 */
class CreateDadosNatalidadeDto {
    solicitacao_id;
    realiza_pre_natal;
    atendida_psf_ubs;
    gravidez_risco;
    data_provavel_parto;
    gemeos_trigemeos;
    ja_tem_filhos;
    quantidade_filhos;
    telefone_cadastrado_cpf;
    chave_pix;
}
exports.CreateDadosNatalidadeDto = CreateDadosNatalidadeDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID da solicitação de benefício',
        example: '550e8400-e29b-41d4-a716-446655440000',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID da solicitação é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID da solicitação inválido' }),
    __metadata("design:type", String)
], CreateDadosNatalidadeDto.prototype, "solicitacao_id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se a gestante realiza pré-natal',
        example: true,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'Realiza pré-natal deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], CreateDadosNatalidadeDto.prototype, "realiza_pre_natal", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se é atendida pelo PSF/UBS',
        example: true,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'Atendida pelo PSF/UBS deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], CreateDadosNatalidadeDto.prototype, "atendida_psf_ubs", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se é uma gravidez de risco',
        example: false,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'Gravidez de risco deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], CreateDadosNatalidadeDto.prototype, "gravidez_risco", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Data provável do parto',
        example: '2024-06-15',
        type: 'string',
        format: 'date',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDateString)({}, { message: 'Data provável do parto deve ser uma data válida' }),
    __metadata("design:type", String)
], CreateDadosNatalidadeDto.prototype, "data_provavel_parto", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se é uma gravidez múltipla (gêmeos/trigêmeos)',
        example: false,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'Gêmeos/Trigêmeos deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], CreateDadosNatalidadeDto.prototype, "gemeos_trigemeos", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se a gestante já tem outros filhos',
        example: false,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'Já tem filhos deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], CreateDadosNatalidadeDto.prototype, "ja_tem_filhos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Quantidade de filhos que já possui (obrigatório se já_tem_filhos = true)',
        example: 2,
        minimum: 0,
    }),
    (0, class_validator_1.ValidateIf)((o) => o.ja_tem_filhos === true),
    (0, class_validator_1.IsNotEmpty)({
        message: 'Quantidade de filhos é obrigatória quando já tem filhos',
    }),
    (0, class_validator_1.IsNumber)({}, { message: 'Quantidade de filhos deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Quantidade de filhos não pode ser negativa' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            const num = parseInt(value, 10);
            return isNaN(num) ? value : num;
        }
        return value;
    }),
    __metadata("design:type", Number)
], CreateDadosNatalidadeDto.prototype, "quantidade_filhos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Telefone cadastrado no CPF (para critério de pecúnia)',
        example: '(85) 99999-9999',
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], CreateDadosNatalidadeDto.prototype, "telefone_cadastrado_cpf", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Chave PIX igual ao CPF (para critério de pecúnia)',
        example: '123.456.789-00',
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], CreateDadosNatalidadeDto.prototype, "chave_pix", void 0);
/**
 * DTO para atualização de dados específicos do cidadão para Auxílio Natalidade
 */
class UpdateDadosNatalidadeDto {
    realiza_pre_natal;
    atendida_psf_ubs;
    gravidez_risco;
    data_provavel_parto;
    gemeos_trigemeos;
    ja_tem_filhos;
    quantidade_filhos;
    telefone_cadastrado_cpf;
    chave_pix;
}
exports.UpdateDadosNatalidadeDto = UpdateDadosNatalidadeDto;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se a gestante realiza pré-natal',
        example: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Realiza pré-natal deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], UpdateDadosNatalidadeDto.prototype, "realiza_pre_natal", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se é atendida pelo PSF/UBS',
        example: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Atendida pelo PSF/UBS deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], UpdateDadosNatalidadeDto.prototype, "atendida_psf_ubs", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se é uma gravidez de risco',
        example: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Gravidez de risco deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], UpdateDadosNatalidadeDto.prototype, "gravidez_risco", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Data provável do parto',
        example: '2024-06-15',
        type: 'string',
        format: 'date',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDateString)({}, { message: 'Data provável do parto deve ser uma data válida' }),
    __metadata("design:type", String)
], UpdateDadosNatalidadeDto.prototype, "data_provavel_parto", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se é uma gravidez múltipla (gêmeos/trigêmeos)',
        example: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Gêmeos/Trigêmeos deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], UpdateDadosNatalidadeDto.prototype, "gemeos_trigemeos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Indica se a gestante já tem outros filhos',
        example: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)({ message: 'Já tem filhos deve ser um booleano' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            return value.toLowerCase() === 'true';
        }
        return value;
    }),
    __metadata("design:type", Boolean)
], UpdateDadosNatalidadeDto.prototype, "ja_tem_filhos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Quantidade de filhos que já possui',
        example: 2,
        minimum: 0,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Quantidade de filhos deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Quantidade de filhos não pode ser negativa' }),
    (0, class_transformer_1.Transform)(({ value }) => {
        if (typeof value === 'string') {
            const num = parseInt(value, 10);
            return isNaN(num) ? value : num;
        }
        return value;
    }),
    __metadata("design:type", Number)
], UpdateDadosNatalidadeDto.prototype, "quantidade_filhos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Telefone cadastrado no CPF (para critério de pecúnia)',
        example: '(85) 99999-9999',
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], UpdateDadosNatalidadeDto.prototype, "telefone_cadastrado_cpf", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Chave PIX igual ao CPF (para critério de pecúnia)',
        example: '123.456.789-00',
    }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], UpdateDadosNatalidadeDto.prototype, "chave_pix", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,