{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\usuario\\controllers\\usuario.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\usuario\\controllers\\usuario.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Patch,\n  Delete,\n  Param,\n  ParseUUIDPipe,\n  Query,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiQuery,\n} from '@nestjs/swagger';\nimport { UsuarioService } from '../services/usuario.service';\nimport { CreateUsuarioDto } from '../dto/create-usuario.dto';\nimport { UpdateUsuarioDto } from '../dto/update-usuario.dto';\nimport { UpdateStatusUsuarioDto } from '../dto/update-status-usuario.dto';\nimport { UpdateSenhaDto } from '../dto/update-senha.dto';\nimport { AlterarSenhaPrimeiroAcessoDto } from '../dto/alterar-senha-primeiro-acesso.dto';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { PrimeiroAcessoGuard } from '../../../auth/guards/primeiro-acesso.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { AllowPrimeiroAcesso } from '../../../auth/decorators/allow-primeiro-acesso.decorator';\nimport { ScopeType } from '../../../entities/user-permission.entity';\n\n/**\n * Controlador de usuários\n *\n * Responsável por gerenciar as rotas relacionadas a usuários\n */\n@ApiTags('Usuários')\n@Controller('usuario')\n@UseGuards(JwtAuthGuard, PrimeiroAcessoGuard) // PermissionGuard removido temporariamente para teste 1.1\n@ApiBearerAuth()\nexport class UsuarioController {\n  constructor(private readonly usuarioService: UsuarioService) {}\n\n  /**\n   * Lista todos os usuários com filtros e paginação\n   */\n  @Get()\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.listar',\n      scopeType: ScopeType.UNIT,\n      scopeIdExpression: 'query.unidade_id'\n    }\n  )\n  @ApiOperation({ summary: 'Listar usuários' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de usuários retornada com sucesso',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Página atual',\n  })\n  @ApiQuery({\n    name: 'limit',\n    required: false,\n    type: Number,\n    description: 'Itens por página',\n  })\n  @ApiQuery({\n    name: 'search',\n    required: false,\n    type: String,\n    description: 'Termo de busca',\n  })\n  @ApiQuery({\n    name: 'role',\n    required: false,\n    type: String,\n    description: 'Filtro por papel',\n  })\n  @ApiQuery({\n    name: 'status',\n    required: false,\n    type: String,\n    description: 'Filtro por status',\n  })\n  @ApiQuery({\n    name: 'unidade_id',\n    required: false,\n    type: String,\n    description: 'Filtro por unidade',\n  })\n  async findAll(\n    @Query('page') page?: number,\n    @Query('limit') limit?: number,\n    @Query('search') search?: string,\n    @Query('role') role?: string,\n    @Query('status') status?: string,\n    @Query('unidade_id') unidade_id?: string,\n  ) {\n    return this.usuarioService.findAll({\n      page: page ? +page : undefined,\n      limit: limit ? +limit : undefined,\n      search,\n      role,\n      status,\n      unidade_id,\n    });\n  }\n\n  /**\n   * Retorna todas as roles (papéis) disponíveis no sistema\n   */\n  @Get('roles')\n  @RequiresPermission(\n    {\n      permissionName: 'usuario.listar',\n      scopeType: ScopeType.GLOBAL\n    }\n  )\n  @ApiOperation({ summary: 'Listar todas as roles disponíveis' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de roles retornada com sucesso',\n  })\n  async findAllRoles() {\n    return this.usuarioService.findAllRoles();\n  }\n\n  /**\n   * Obtém o perfil do usuário atual\n   */\n  @Get('me')\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.perfil.visualizar',\n      scopeType: ScopeType.SELF\n    }\n  )\n  @ApiOperation({ summary: 'Obter perfil do usuário atual' })\n  @ApiResponse({ status: 200, description: 'Perfil obtido com sucesso' })\n  async getProfile(@Request() req) {\n    return this.usuarioService.getProfile(req.user.id);\n  }\n\n  /**\n   * Obtém detalhes de um usuário específico\n   */\n  @Get(':id')\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.visualizar',\n      scopeType: ScopeType.UNIT,\n      scopeIdExpression: 'usuario.unidade_id'\n    }\n  )\n  @ApiOperation({ summary: 'Obter detalhes de um usuário' })\n  @ApiResponse({ status: 200, description: 'Usuário encontrado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  async findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.usuarioService.findById(id);\n  }\n\n  /**\n   * Cria um novo usuário\n   */\n  @Post()\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.criar',\n      scopeType: ScopeType.UNIT,\n      scopeIdExpression: 'body.unidade_id'\n    }\n  )\n  @ApiOperation({ summary: 'Criar novo usuário' })\n  @ApiResponse({ status: 201, description: 'Usuário criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({\n    status: 409,\n    description: 'Email, CPF ou matrícula já em uso',\n  })\n  async create(@Body() createUsuarioDto: CreateUsuarioDto) {\n    return this.usuarioService.create(createUsuarioDto);\n  }\n\n  /**\n   * Atualiza um usuário existente\n   */\n  @Put(':id')\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.editar',\n      scopeType: ScopeType.UNIT,\n      scopeIdExpression: 'usuario.unidade_id'\n    }\n  )\n  @ApiOperation({ summary: 'Atualizar usuário existente' })\n  @ApiResponse({ status: 200, description: 'Usuário atualizado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  @ApiResponse({\n    status: 409,\n    description: 'Email, CPF ou matrícula já em uso',\n  })\n  async update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateUsuarioDto: UpdateUsuarioDto,\n  ) {\n    return this.usuarioService.update(id, updateUsuarioDto);\n  }\n\n  /**\n   * Atualiza o status de um usuário\n   */\n  @Patch(':id/status')\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.status.alterar',\n      scopeType: ScopeType.UNIT,\n      scopeIdExpression: 'usuario.unidade_id'\n    }\n  )\n  @ApiOperation({ summary: 'Ativar/inativar usuário' })\n  @ApiResponse({ status: 200, description: 'Status atualizado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  async updateStatus(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateStatusUsuarioDto: UpdateStatusUsuarioDto,\n  ) {\n    return this.usuarioService.updateStatus(id, updateStatusUsuarioDto);\n  }\n\n  /**\n   * Altera a senha do usuário\n   */\n  @Put(':id/senha')\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.senha.alterar',\n      scopeType: ScopeType.SELF,\n      scopeIdExpression: 'params.id'\n    }\n  )\n  @ApiOperation({ summary: 'Alterar senha' })\n  @ApiResponse({ status: 200, description: 'Senha alterada com sucesso' })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos ou senha atual incorreta',\n  })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  async updateSenha(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateSenhaDto: UpdateSenhaDto,\n    @Request() req,\n  ) {\n    // A verificação agora é feita pelo sistema de permissões granulares\n\n    return this.usuarioService.updateSenha(id, updateSenhaDto);\n  }\n\n  /**\n   * Altera a senha no primeiro acesso\n   */\n  @Put('/primeiro-acesso/alterar-senha')\n  @AllowPrimeiroAcesso()\n  @ApiOperation({ summary: 'Alterar senha no primeiro acesso' })\n  @ApiResponse({ status: 200, description: 'Senha alterada com sucesso' })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos ou usuário não está em primeiro acesso',\n  })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  async alterarSenhaPrimeiroAcesso(\n    @Body() alterarSenhaDto: AlterarSenhaPrimeiroAcessoDto,\n    @Request() req,\n  ) {\n    const userId = req.user.sub;\n    return this.usuarioService.alterarSenhaPrimeiroAcesso(userId, alterarSenhaDto);\n  }\n\n  /**\n   * Remove um usuário (soft delete)\n   */\n  @Delete(':id')\n  @RequiresPermission(\n    \n    {\n      permissionName: 'usuario.remover',\n      scopeType: ScopeType.UNIT,\n      scopeIdExpression: 'usuario.unidade_id'\n    }\n  )\n  @ApiOperation({ summary: 'Remover usuário (soft delete)' })\n  @ApiResponse({ status: 200, description: 'Usuário removido com sucesso' })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  async remove(@Param('id', ParseUUIDPipe) id: string) {\n    return this.usuarioService.remove(id);\n  }\n}\n"],"version":3}