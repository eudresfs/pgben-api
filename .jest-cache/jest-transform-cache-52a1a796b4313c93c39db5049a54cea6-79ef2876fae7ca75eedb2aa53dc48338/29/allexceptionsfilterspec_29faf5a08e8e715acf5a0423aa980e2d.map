{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\filters\\all-exceptions.filter.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\filters\\all-exceptions.filter.spec.ts"],"sourcesContent":["import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { REQUEST_ID_TOKEN_HEADER } from '../constants';\nimport { AppLogger } from '../logger/logger.service';\nimport { AllExceptionsFilter } from './all-exceptions.filter';\n\nconst mockMessage1 = 'mock exception string';\nconst mockMessage2 = { hello: 'world', hi: 'joe' };\nconst mockMessage3 = 'Something is very wrong';\n\nconst mockException1 = new HttpException(mockMessage1, HttpStatus.NOT_FOUND);\nconst mockException2 = new HttpException(mockMessage2, HttpStatus.BAD_REQUEST);\nconst mockError = new Error(mockMessage3);\n\ndescribe('AllExceptionsFilter', () => {\n  let mockContext: any;\n  let mockRequest: any;\n  let mockResponse: any;\n\n  const mockConfigService = {\n    get: () => 'development',\n  };\n  const mockedLogger = {\n    warn: jest.fn().mockReturnThis(),\n    setContext: jest.fn().mockReturnThis(),\n  };\n  let filter: AllExceptionsFilter<any>;\n\n  beforeEach(async () => {\n    /** mock request object */\n    mockRequest = {\n      headers: {},\n      url: 'mock-url',\n      header: jest.fn(),\n    };\n    mockRequest.headers[REQUEST_ID_TOKEN_HEADER] = uuidv4();\n\n    /** mock response object */\n    mockResponse = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn().mockReturnThis(),\n    };\n\n    /** mock execution context */\n    mockContext = {\n      switchToHttp: () => ({\n        getRequest: () => mockRequest,\n        getResponse: () => mockResponse,\n      }),\n    };\n\n    const moduleRef: TestingModule = await Test.createTestingModule({\n      providers: [\n        AllExceptionsFilter,\n        { provide: ConfigService, useValue: mockConfigService },\n        { provide: AppLogger, useValue: mockedLogger },\n      ],\n    }).compile();\n\n    // config = moduleRef.get<ConfigService>(ConfigService);\n    filter = moduleRef.get<AllExceptionsFilter<any>>(AllExceptionsFilter);\n  });\n\n  it('should be defined', async () => {\n    expect(filter).toBeDefined();\n  });\n\n  it('should handle both HttpException and unhandled Error', async () => {\n    filter.catch(mockException1, mockContext);\n    expect(mockResponse.status).toBeCalled();\n    expect(mockResponse.json).toBeCalled();\n\n    filter.catch(mockError, mockContext);\n    expect(mockResponse.status).toBeCalled();\n    expect(mockResponse.json).toBeCalled();\n  });\n\n  it('should handle HttpException with right status code', async () => {\n    filter.catch(mockException1, mockContext);\n    expect(mockResponse.status).toBeCalledWith(HttpStatus.NOT_FOUND);\n\n    filter.catch(mockException2, mockContext);\n    expect(mockResponse.status).toBeCalledWith(HttpStatus.BAD_REQUEST);\n  });\n\n  it('should handle unhandled error with status code 500', async () => {\n    filter.catch(mockError, mockContext);\n    expect(mockResponse.status).toBeCalledWith(\n      HttpStatus.INTERNAL_SERVER_ERROR,\n    );\n  });\n\n  it('should handle exception with plain string message', async () => {\n    filter.catch(mockException1, mockContext);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          statusCode: HttpStatus.NOT_FOUND,\n          message: mockMessage1,\n        }),\n      }),\n    );\n  });\n\n  it('should handle exception with object type message', async () => {\n    filter.catch(mockException2, mockContext);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          statusCode: HttpStatus.BAD_REQUEST,\n          details: mockMessage2,\n        }),\n      }),\n    );\n  });\n\n  it('should respond with Error message in development mode', async () => {\n    // const configSpy = jest\n    //   .spyOn(config, 'get')\n    //   .mockImplementation(() => 'development');\n\n    filter.catch(mockError, mockContext);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: mockMessage3,\n        }),\n      }),\n    );\n\n    // configSpy.mockClear();\n  });\n\n  it('should suppress Error message in production mode', async () => {\n    const configSpy = jest\n      .spyOn(mockConfigService, 'get')\n      .mockImplementation(() => 'production');\n\n    filter.catch(mockError, mockContext);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: 'Internal server error',\n        }),\n      }),\n    );\n\n    configSpy.mockClear();\n  });\n\n  it('should contain request id in response', async () => {\n    filter.catch(mockMessage1, mockContext);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          requestId: mockRequest.headers[REQUEST_ID_TOKEN_HEADER],\n        }),\n      }),\n    );\n  });\n\n  it('should contain request path in response', async () => {\n    filter.catch(mockMessage1, mockContext);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          path: mockRequest.url,\n        }),\n      }),\n    );\n  });\n\n  it('should contain timestamp in response', async () => {\n    const mockDate = new Date();\n\n    const dateSpy = jest\n      .spyOn(global, 'Date')\n      .mockImplementation(() => mockDate);\n\n    filter.catch(mockException1, mockContext);\n    expect(mockResponse.status).toBeCalledWith(HttpStatus.NOT_FOUND);\n    expect(mockResponse.json).toBeCalledWith(\n      expect.objectContaining({\n        error: expect.objectContaining({\n          timestamp: mockDate.toISOString(),\n        }),\n      }),\n    );\n    dateSpy.mockClear();\n  });\n});\n"],"version":3}