{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\comprovante-pagamento.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\comprovante-pagamento.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsUUID, IsOptional, IsString, MaxLength, IsNumber, Min, IsDateString, IsMimeType } from 'class-validator';\nimport { Pagamento } from './pagamento.entity';\nimport { Usuario } from './usuario.entity';\n\n/**\n * Entidade que representa um comprovante de pagamento no sistema.\n * \n * Esta entidade armazena informações sobre documentos comprobatórios\n * anexados para comprovar a realização de pagamentos.\n * \n * @author Equipe PGBen\n */\n@Entity('comprovante_pagamento')\nexport class ComprovantePagamento {\n  /**\n   * Identificador único do comprovante\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Referência ao pagamento relacionado a este comprovante\n   */\n  @Column({ name: 'pagamento_id' })\n  @IsNotEmpty({ message: 'ID do pagamento é obrigatório' })\n  @IsUUID('4', { message: 'ID do pagamento deve ser um UUID válido' })\n  pagamento_id: string;\n\n  /**\n   * Tipo de documento (ex: \"comprovante_transferencia\", \"recibo\", etc.)\n   */\n  @Column({ name: 'tipo_documento' })\n  @IsNotEmpty({ message: 'Tipo de documento é obrigatório' })\n  @IsString({ message: 'Tipo de documento deve ser uma string' })\n  @MaxLength(100, { message: 'Tipo de documento deve ter no máximo 100 caracteres' })\n  tipo_documento: string;\n\n  /**\n   * Nome original do arquivo enviado\n   */\n  @Column({ name: 'nome_arquivo' })\n  @IsNotEmpty({ message: 'Nome do arquivo é obrigatório' })\n  @IsString({ message: 'Nome do arquivo deve ser uma string' })\n  @MaxLength(255, { message: 'Nome do arquivo deve ter no máximo 255 caracteres' })\n  nome_arquivo: string;\n\n  /**\n   * Caminho/identificador do arquivo no sistema de armazenamento\n   */\n  @Column({ name: 'caminho_arquivo' })\n  @IsNotEmpty({ message: 'Caminho do arquivo é obrigatório' })\n  @IsString({ message: 'Caminho do arquivo deve ser uma string' })\n  @MaxLength(500, { message: 'Caminho do arquivo deve ter no máximo 500 caracteres' })\n  caminho_arquivo: string;\n\n  /**\n   * Tamanho do arquivo em bytes\n   */\n  @Column()\n  @IsNotEmpty({ message: 'Tamanho do arquivo é obrigatório' })\n  @IsNumber({}, { message: 'Tamanho deve ser um número' })\n  @Min(1, { message: 'Tamanho deve ser maior que zero' })\n  tamanho: number;\n\n  /**\n   * Tipo MIME do arquivo\n   */\n  @Column({ name: 'mime_type' })\n  @IsNotEmpty({ message: 'Tipo MIME é obrigatório' })\n  @IsString({ message: 'Tipo MIME deve ser uma string' })\n  @MaxLength(100, { message: 'Tipo MIME deve ter no máximo 100 caracteres' })\n  mime_type: string;\n\n  /**\n   * Data de upload do comprovante\n   */\n  @Column({ name: 'data_upload', type: 'timestamp' })\n  @IsNotEmpty({ message: 'Data de upload é obrigatória' })\n  data_upload: Date;\n\n  /**\n   * Referência ao usuário que fez o upload do comprovante\n   */\n  @Column({ name: 'uploaded_por' })\n  @IsNotEmpty({ message: 'ID do usuário responsável pelo upload é obrigatório' })\n  @IsUUID('4', { message: 'ID do usuário deve ser um UUID válido' })\n  uploaded_por: string;\n\n  /**\n   * Data de criação do registro\n   */\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n\n  /**\n   * Data da última atualização do registro\n   */\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n\n  /**\n   * Relacionamento com a entidade Pagamento\n   */\n  @ManyToOne(() => Pagamento, pagamento => pagamento.id)\n  @JoinColumn({ name: 'pagamento_id' })\n  pagamento: Pagamento;\n\n  /**\n   * Relacionamento com a entidade Usuario\n   */\n  @ManyToOne(() => Usuario, usuario => usuario.id)\n  @JoinColumn({ name: 'uploaded_por' })\n  responsavel_upload: Usuario;\n}\n"],"version":3}