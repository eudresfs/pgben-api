{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\controllers\\auth.controller.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\controllers\\auth.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\n\nimport { AppLogger } from '../../shared/logger/logger.service';\nimport { RequestContext } from '../../shared/request-context/request-context.dto';\nimport { LoginInput } from '../dtos/auth-login-input.dto';\nimport { RefreshTokenInput } from '../dtos/auth-refresh-token-input.dto';\nimport { RegisterInput } from '../dtos/auth-register-input.dto';\nimport { AuthTokenOutput } from '../dtos/auth-token-output.dto';\nimport { AuthService } from '../services/auth.service';\nimport { AuthController } from './auth.controller';\n\ndescribe('AuthController', () => {\n  let moduleRef: TestingModule;\n  let authController: AuthController;\n\n  const mockedAuthService = {\n    register: jest.fn(),\n    login: jest.fn(),\n    refreshToken: jest.fn(),\n  };\n\n  const mockedLogger = { setContext: jest.fn(), log: jest.fn() };\n\n  beforeEach(async () => {\n    moduleRef = await Test.createTestingModule({\n      controllers: [AuthController],\n      providers: [\n        { provide: AuthService, useValue: mockedAuthService },\n        { provide: AppLogger, useValue: mockedLogger },\n      ],\n    }).compile();\n\n    authController = moduleRef.get<AuthController>(AuthController);\n  });\n\n  it('should be defined', () => {\n    expect(authController).toBeDefined();\n  });\n\n  const ctx = new RequestContext();\n\n  describe('registerLocal', () => {\n    it('should register new user', async () => {\n      const registerInputDto = new RegisterInput();\n      registerInputDto.name = 'John Doe';\n      registerInputDto.username = 'john@example.com';\n      registerInputDto.password = '123123';\n\n      jest\n        .spyOn(mockedAuthService, 'register')\n        .mockImplementation(async () => null);\n\n      expect(await authController.registerLocal(ctx, registerInputDto)).toEqual(\n        {\n          data: null,\n          meta: {},\n        },\n      );\n    });\n  });\n\n  describe('login', () => {\n    it('should login user', async () => {\n      const loginInputDto = new LoginInput();\n      loginInputDto.username = 'john@example.com';\n      loginInputDto.password = '123123';\n\n      jest.spyOn(mockedAuthService, 'login').mockImplementation(() => null);\n\n      expect(await authController.login(ctx, loginInputDto)).toEqual({\n        data: null,\n        meta: {},\n      });\n    });\n  });\n\n  describe('refreshToken', () => {\n    let refreshTokenInputDto: RefreshTokenInput;\n    let authToken: AuthTokenOutput;\n\n    beforeEach(() => {\n      refreshTokenInputDto = {\n        refreshToken: 'refresh_token',\n      };\n      authToken = {\n        accessToken: 'new_access_token',\n        refreshToken: 'new_refresh_token',\n      };\n\n      jest\n        .spyOn(mockedAuthService, 'refreshToken')\n        .mockImplementation(async () => authToken);\n    });\n\n    it('should generate refresh token', async () => {\n      const response = await authController.refreshToken(\n        ctx,\n        refreshTokenInputDto,\n      );\n\n      expect(mockedAuthService.refreshToken).toBeCalledWith(ctx);\n      expect(response.data).toEqual(authToken);\n    });\n\n    afterEach(() => {\n      jest.resetAllMocks();\n    });\n  });\n});\n"],"version":3}