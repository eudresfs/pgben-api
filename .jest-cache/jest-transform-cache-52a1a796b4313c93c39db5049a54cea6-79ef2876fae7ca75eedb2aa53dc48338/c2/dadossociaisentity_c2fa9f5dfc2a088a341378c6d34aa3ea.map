{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\dados-sociais.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\dados-sociais.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  OneToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { IsNotEmpty, IsOptional, IsNumber, Min, IsEnum, ValidateIf, IsString, IsBoolean } from 'class-validator';\nimport { Cidadao } from './cidadao.entity';\nimport { EscolaridadeEnum } from '../enums/escolaridade.enum';\nimport { SituacaoTrabalhoEnum } from '../enums/situacao-trabalho.enum';\n\n@Entity('dados_sociais')\n@Index(['cidadao_id'], { unique: true })\nexport class DadosSociais {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  cidadao_id: string;\n\n  @OneToOne(() => Cidadao, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'cidadao_id' })\n  cidadao: Cidadao;\n\n  @Column({\n    type: 'enum',\n    enum: EscolaridadeEnum,\n    enumName: 'escolaridade_enum',\n    nullable: false,\n  })\n  @IsNotEmpty({ message: 'Escolaridade é obrigatória' })\n  @IsEnum(EscolaridadeEnum, { message: 'Escolaridade inválida' })\n  escolaridade: EscolaridadeEnum;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo publico_prioritario deve ser um true ou false' })\n  publico_prioritario: boolean;\n\n  @Column('decimal', { precision: 10, scale: 2, nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Renda deve ser um número' })\n  @Min(0, { message: 'Renda não pode ser negativa' })\n  renda: number;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  ocupacao: string;\n\n  @Column({ default: false })\n  @IsBoolean({ message: 'O campo recebe_pbf deve ser um valor booleano' })\n  recebe_pbf: boolean;\n\n  @Column('decimal', { precision: 10, scale: 2, nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Valor PBF deve ser um número' })\n  @Min(0, { message: 'Valor do PBF não pode ser negativa' })\n  valor_pbf: number;\n\n  @Column({ default: false })\n  @IsBoolean({ message: 'O campo recebe_bpc deve ser um valor booleano' })\n  recebe_bpc: boolean;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsString({ message: 'O campo tipo_bpc deve ser um texto' })\n  tipo_bpc: string;\n\n  @Column('decimal', { precision: 10, scale: 2, nullable: true })\n  @IsOptional()\n  @IsNumber({}, { message: 'Valor do BPC deve Rendaser um número' })\n  @Min(0, { message: 'Valor do BPC não pode ser negativa' })\n  valor_bpc: number;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsString({ message: 'O campo curso_profissionalizante deve ser um texto' })\n  curso_profissionalizante: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo interesse_curso_profissionalizante deve ser um true ou false' })\n  interesse_curso_profissionalizante: boolean;\n\n  @Column({\n    type: 'enum',\n    enum: SituacaoTrabalhoEnum,\n    enumName: 'situacao_trabalho_enum',\n    nullable: true,\n  })\n  @IsOptional()\n  @IsEnum(SituacaoTrabalhoEnum, { message: 'Situação de trabalho inválida' })\n  situacao_trabalho: SituacaoTrabalhoEnum;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsString({ message: 'O campo area_trabalho deve ser um texto' })\n  area_trabalho: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo familiar_apto_trabalho deve ser um true ou false' })\n  familiar_apto_trabalho: boolean;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  @IsString({ message: 'O campo area_interesse_familiar deve ser um texto' })\n  area_interesse_familiar: string;\n\n  @Column({ nullable: true })\n  @IsOptional()\n  observacoes: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters e Setters\n  get cidadaoId(): string {\n    return this.cidadao_id;\n  }\n\n  set cidadaoId(value: string) {\n    this.cidadao_id = value;\n  }\n\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se os dados foram criados recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se os dados foram removidos\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se os dados estão ativos\n   */\n  isAtivo(): boolean {\n    return !this.removed_at;\n  }\n\n  /**\n   * Verifica se é público prioritário\n   */\n  isPublicoPrioritario(): boolean {\n    return !!this.publico_prioritario;\n  }\n\n  /**\n   * Verifica se tem renda\n   */\n  temRenda(): boolean {\n    return this.renda !== null && this.renda !== undefined && this.renda > 0;\n  }\n\n  /**\n   * Obtém a renda formatada\n   */\n  getRendaFormatada(): string {\n    if (!this.temRenda()) return 'Sem renda';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(this.renda);\n  }\n\n  /**\n   * Verifica se recebe Programa Bolsa Família\n   */\n  recebePBF(): boolean {\n    return this.recebe_pbf;\n  }\n\n  /**\n   * Obtém o valor do PBF formatado\n   */\n  getValorPBFFormatado(): string {\n    if (!this.recebe_pbf || !this.valor_pbf) return 'Não recebe';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(this.valor_pbf);\n  }\n\n  /**\n   * Verifica se recebe Benefício de Prestação Continuada\n   */\n  recebeBPC(): boolean {\n    return this.recebe_bpc;\n  }\n\n  /**\n   * Obtém o valor do BPC formatado\n   */\n  getValorBPCFormatado(): string {\n    if (!this.recebe_bpc || !this.valor_bpc) return 'Não recebe';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(this.valor_bpc);\n  }\n\n  /**\n   * Verifica se recebe algum benefício social\n   */\n  recebeBeneficioSocial(): boolean {\n    return this.recebePBF() || this.recebeBPC();\n  }\n\n  /**\n   * Calcula o total de benefícios recebidos\n   */\n  getTotalBeneficios(): number {\n    let total = 0;\n    if (this.recebe_pbf && this.valor_pbf) total += this.valor_pbf;\n    if (this.recebe_bpc && this.valor_bpc) total += this.valor_bpc;\n    return total;\n  }\n\n  /**\n   * Obtém o total de benefícios formatado\n   */\n  getTotalBeneficiosFormatado(): string {\n    const total = this.getTotalBeneficios();\n    if (total === 0) return 'Nenhum benefício';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(total);\n  }\n\n  /**\n   * Verifica se tem interesse em curso profissionalizante\n   */\n  temInteresseCursoProfissionalizante(): boolean {\n    return !!this.interesse_curso_profissionalizante;\n  }\n\n  /**\n   * Verifica se já fez curso profissionalizante\n   */\n  jafezCursoProfissionalizante(): boolean {\n    return !!(this.curso_profissionalizante && this.curso_profissionalizante.trim());\n  }\n\n  /**\n   * Verifica se está empregado\n   */\n  isEmpregado(): boolean {\n    return this.situacao_trabalho === SituacaoTrabalhoEnum.EMPREGADO_FORMAL;\n  }\n\n  /**\n   * Verifica se está desempregado\n   */\n  isDesempregado(): boolean {\n    return this.situacao_trabalho === SituacaoTrabalhoEnum.DESEMPREGADO;\n  }\n\n  /**\n   * Verifica se é autônomo\n   */\n  isAutonomo(): boolean {\n    return this.situacao_trabalho === SituacaoTrabalhoEnum.AUTONOMO;\n  }\n\n  /**\n   * Verifica se é aposentado\n   */\n  isAposentado(): boolean {\n    return this.situacao_trabalho === SituacaoTrabalhoEnum.APOSENTADO;\n  }\n\n  /**\n   * Verifica se é pensionista\n   */\n  isPensionista(): boolean {\n    return this.situacao_trabalho === SituacaoTrabalhoEnum.PENSIONISTA;\n  }\n\n  /**\n   * Verifica se tem familiar apto ao trabalho\n   */\n  temFamiliarAptoTrabalho(): boolean {\n    return !!this.familiar_apto_trabalho;\n  }\n\n  /**\n   * Obtém a descrição da escolaridade\n   */\n  getDescricaoEscolaridade(): string {\n    const descricoes = {\n      [EscolaridadeEnum.ANALFABETO]: 'Analfabeto',\n      [EscolaridadeEnum.FUNDAMENTAL_INCOMPLETO]: 'Fundamental Incompleto',\n      [EscolaridadeEnum.FUNDAMENTAL_COMPLETO]: 'Fundamental Completo',\n      [EscolaridadeEnum.MEDIO_INCOMPLETO]: 'Médio Incompleto',\n      [EscolaridadeEnum.MEDIO_COMPLETO]: 'Médio Completo',\n      [EscolaridadeEnum.SUPERIOR_INCOMPLETO]: 'Superior Incompleto',\n      [EscolaridadeEnum.SUPERIOR_COMPLETO]: 'Superior Completo',\n      [EscolaridadeEnum.POS_GRADUACAO]: 'Pós-graduação',\n    };\n    return descricoes[this.escolaridade] || this.escolaridade;\n  }\n\n  /**\n   * Obtém a descrição da situação de trabalho\n   */\n  getDescricaoSituacaoTrabalho(): string {\n    if (!this.situacao_trabalho) return 'Não informado';\n    \n    const descricoes = {\n      [SituacaoTrabalhoEnum.EMPREGADO_FORMAL]: 'Empregado',\n      [SituacaoTrabalhoEnum.DESEMPREGADO]: 'Desempregado',\n      [SituacaoTrabalhoEnum.AUTONOMO]: 'Autônomo',\n      [SituacaoTrabalhoEnum.APOSENTADO]: 'Aposentado',\n      [SituacaoTrabalhoEnum.PENSIONISTA]: 'Pensionista',\n      [SituacaoTrabalhoEnum.ESTUDANTE]: 'Estudante',\n      [SituacaoTrabalhoEnum.DO_LAR]: 'Do lar',\n    };\n    return descricoes[this.situacao_trabalho] || this.situacao_trabalho;\n  }\n\n  /**\n   * Verifica se pertence a um cidadão específico\n   */\n  pertenceAoCidadao(cidadaoId: string): boolean {\n    return this.cidadao_id === cidadaoId;\n  }\n\n  /**\n   * Obtém um resumo dos dados sociais\n   */\n  getSummary(): string {\n    const escolaridade = this.getDescricaoEscolaridade();\n    const situacao = this.getDescricaoSituacaoTrabalho();\n    const renda = this.getRendaFormatada();\n    const beneficios = this.recebeBeneficioSocial() ? ' - Recebe benefícios' : '';\n    return `${escolaridade} - ${situacao} - ${renda}${beneficios}`;\n  }\n\n  /**\n   * Gera uma chave única para os dados\n   */\n  getUniqueKey(): string {\n    return `dados_sociais_${this.cidadao_id}`;\n  }\n\n  /**\n   * Verifica se os dados são consistentes\n   */\n  isConsistente(): boolean {\n    // Verifica se tem cidadão\n    if (!this.cidadao_id) return false;\n    \n    // Verifica se tem escolaridade\n    if (!this.escolaridade) return false;\n    \n    // Se recebe PBF, deve ter valor\n    if (this.recebe_pbf && (!this.valor_pbf || this.valor_pbf <= 0)) {\n      return false;\n    }\n    \n    // Se recebe BPC, deve ter valor e tipo\n    if (this.recebe_bpc && (!this.valor_bpc || this.valor_bpc <= 0 || !this.tipo_bpc)) {\n      return false;\n    }\n    \n    // Se tem renda, deve ser positiva\n    if (this.renda !== null && this.renda !== undefined && this.renda < 0) {\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removido\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n    \n    // Outras validações específicas podem ser adicionadas\n    return true;\n  }\n\n  /**\n   * Clona os dados sociais (sem ID)\n   */\n  clone(): Partial<DadosSociais> {\n    return {\n      cidadao_id: this.cidadao_id,\n      escolaridade: this.escolaridade,\n      publico_prioritario: this.publico_prioritario,\n      renda: this.renda,\n      ocupacao: this.ocupacao,\n      recebe_pbf: this.recebe_pbf,\n      valor_pbf: this.valor_pbf,\n      recebe_bpc: this.recebe_bpc,\n      tipo_bpc: this.tipo_bpc,\n      valor_bpc: this.valor_bpc,\n      curso_profissionalizante: this.curso_profissionalizante,\n      interesse_curso_profissionalizante: this.interesse_curso_profissionalizante,\n      situacao_trabalho: this.situacao_trabalho,\n      area_trabalho: this.area_trabalho,\n      familiar_apto_trabalho: this.familiar_apto_trabalho,\n      area_interesse_familiar: this.area_interesse_familiar,\n      observacoes: this.observacoes,\n    };\n  }\n\n  /**\n   * Verifica se é elegível para programas de capacitação\n   */\n  isElegivelCapacitacao(): boolean {\n    return this.isDesempregado() || this.temInteresseCursoProfissionalizante();\n  }\n\n  /**\n   * Verifica se tem potencial de geração de renda\n   */\n  temPotencialGeracaoRenda(): boolean {\n    return this.temFamiliarAptoTrabalho() || this.temInteresseCursoProfissionalizante() || this.jafezCursoProfissionalizante();\n  }\n\n  /**\n   * Calcula a renda total (própria + benefícios)\n   */\n  getRendaTotal(): number {\n    let total = 0;\n    if (this.renda) total += this.renda;\n    total += this.getTotalBeneficios();\n    return total;\n  }\n\n  /**\n   * Obtém a renda total formatada\n   */\n  getRendaTotalFormatada(): string {\n    const total = this.getRendaTotal();\n    if (total === 0) return 'Sem renda';\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(total);\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<DadosSociais> {\n    return {\n      id: this.id,\n      escolaridade: this.escolaridade,\n      publico_prioritario: this.publico_prioritario,\n      situacao_trabalho: this.situacao_trabalho,\n      recebe_pbf: this.recebe_pbf,\n      recebe_bpc: this.recebe_bpc,\n      interesse_curso_profissionalizante: this.interesse_curso_profissionalizante,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Obtém sugestões de melhoria para os dados sociais\n   */\n  getSugestoesMelhoria(): string[] {\n    const sugestoes: string[] = [];\n    \n    if (!this.ocupacao && this.isEmpregado()) {\n      sugestoes.push('Definir ocupação para pessoa empregada');\n    }\n    \n    if (!this.area_trabalho && (this.isEmpregado() || this.isAutonomo())) {\n      sugestoes.push('Especificar área de trabalho');\n    }\n    \n    if (this.isDesempregado() && !this.temInteresseCursoProfissionalizante()) {\n      sugestoes.push('Verificar interesse em capacitação profissional');\n    }\n    \n    if (this.recebe_pbf && !this.valor_pbf) {\n      sugestoes.push('Informar valor do Programa Bolsa Família');\n    }\n    \n    if (this.recebe_bpc && (!this.valor_bpc || !this.tipo_bpc)) {\n      sugestoes.push('Completar informações do BPC (valor e tipo)');\n    }\n    \n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar consistência dos dados sociais');\n    }\n    \n    return sugestoes;\n  }\n\n  /**\n   * Verifica se precisa de atualização (dados antigos)\n   */\n  precisaAtualizacao(): boolean {\n    const seiseMesesAtras = new Date();\n    seiseMesesAtras.setMonth(seiseMesesAtras.getMonth() - 6);\n    return this.updated_at < seiseMesesAtras;\n  }\n}\n"],"version":3}