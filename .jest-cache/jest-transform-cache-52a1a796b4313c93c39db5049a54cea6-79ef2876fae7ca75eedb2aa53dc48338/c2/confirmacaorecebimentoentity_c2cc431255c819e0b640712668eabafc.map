{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\confirmacao-recebimento.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\confirmacao-recebimento.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport {\n  IsNotEmpty,\n  IsUUID,\n  IsOptional,\n  IsEnum,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport { Pagamento } from './pagamento.entity';\nimport { Usuario } from './usuario.entity';\nimport { MetodoConfirmacaoEnum } from '../enums/metodo-confirmacao.enum';\nimport { Cidadao } from './cidadao.entity';\n\n/**\n * Entidade que representa uma confirmação de recebimento de pagamento.\n *\n * Esta entidade armazena informações sobre as confirmações de recebimento\n * dos benefícios pelos beneficiários, incluindo método de confirmação e dados do destinatário.\n *\n * @author Equipe PGBen\n */\n@Entity('confirmacao_recebimento')\nexport class ConfirmacaoRecebimento {\n  /**\n   * Identificador único da confirmação\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Referência ao pagamento confirmado\n   */\n  @Column({ name: 'pagamento_id' })\n  @IsNotEmpty({ message: 'ID do pagamento é obrigatório' })\n  @IsUUID('4', { message: 'ID do pagamento deve ser um UUID válido' })\n  pagamento_id: string;\n\n  /**\n   * Data em que a confirmação foi registrada\n   */\n  @Column({ name: 'data_confirmacao', type: 'timestamp' })\n  @IsNotEmpty({ message: 'Data de confirmação é obrigatória' })\n  data_confirmacao: Date;\n\n  /**\n   * Método utilizado para confirmar o recebimento\n   */\n  @Column({\n    name: 'metodo_confirmacao',\n    type: 'enum',\n    enum: MetodoConfirmacaoEnum,\n  })\n  @IsNotEmpty({ message: 'Método de confirmação é obrigatório' })\n  @IsEnum(MetodoConfirmacaoEnum, { message: 'Método de confirmação inválido' })\n  metodo_confirmacao: MetodoConfirmacaoEnum;\n\n  /**\n   * Referência ao usuário (técnico ou beneficiário) que registrou a confirmação\n   */\n  @Column({ name: 'confirmado_por' })\n  @IsNotEmpty({ message: 'ID do usuário que confirmou é obrigatório' })\n  @IsUUID('4', { message: 'ID do usuário deve ser um UUID válido' })\n  confirmado_por: string;\n\n  /**\n   * Referência ao cidadão que recebeu o benefício, se diferente do beneficiário original\n   */\n  @Column({ name: 'destinatario_id', nullable: true })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID do destinatário deve ser um UUID válido' })\n  destinatario_id: string;\n\n  /**\n   * Observações adicionais sobre a confirmação\n   */\n  @Column({ type: 'text', nullable: true })\n  @IsOptional()\n  @IsString({ message: 'Observações devem ser uma string' })\n  @MaxLength(1000, {\n    message: 'Observações devem ter no máximo 1000 caracteres',\n  })\n  observacoes: string;\n\n  /**\n   * Data de criação do registro\n   */\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n\n  /**\n   * Data da última atualização do registro\n   */\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n\n  /**\n   * Relacionamento com a entidade Pagamento\n   */\n  @ManyToOne(() => Pagamento, (pagamento) => pagamento.id)\n  @JoinColumn({ name: 'pagamento_id' })\n  pagamento: Pagamento;\n\n  /**\n   * Relacionamentos com outras entidades serão implementados após a criação das entidades relacionadas\n   */\n  @ManyToOne(() => Usuario)\n  @JoinColumn({ name: 'confirmado_por' })\n  @JoinColumn({ name: 'confirmado_por' })\n  responsavel_confirmacao: Usuario;\n\n  @ManyToOne(() => Cidadao)\n  @JoinColumn({ name: 'destinatario_id' })\n  destinatario: Cidadao;\n}\n"],"version":3}