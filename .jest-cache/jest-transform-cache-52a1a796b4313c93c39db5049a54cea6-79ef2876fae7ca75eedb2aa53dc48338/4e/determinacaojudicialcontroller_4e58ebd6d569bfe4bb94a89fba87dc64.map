{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\controllers\\determinacao-judicial.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\controllers\\determinacao-judicial.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Patch,\n  Delete,\n  UseGuards,\n  Req,\n  HttpCode,\n  HttpStatus,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { PermissionGuard } from '../../../auth/guards/permission.guard';\nimport { RequiresPermission } from '../../../auth/decorators/requires-permission.decorator';\nimport { ScopeType } from '../../../entities/user-permission.entity';\nimport { DeterminacaoJudicialAdapterService } from '../services/determinacao-judicial-adapter.service';\nimport { SolicitacaoCreateDeterminacaoJudicialDto } from '../dto/create-determinacao-judicial.dto';\nimport { SolicitacaoUpdateDeterminacaoJudicialDto } from '../dto/update-determinacao-judicial.dto';\nimport { DeterminacaoJudicial } from '../../../entities/determinacao-judicial.entity';\n\n/**\n * Controller de Determinação Judicial\n *\n * Responsável por expor os endpoints de gerenciamento de determinações judiciais\n * relacionadas às solicitações de benefício.\n */\n@Controller('solicitacao/determinacao-judicial')\n@UseGuards(JwtAuthGuard, PermissionGuard)\n@ApiBearerAuth()\nexport class DeterminacaoJudicialController {\n  constructor(\n    private readonly determinacaoService: DeterminacaoJudicialAdapterService,\n  ) {}\n\n  /**\n   * Cria uma nova determinação judicial\n   * @param createDeterminacaoDto Dados da determinação judicial\n   * @param req Requisição\n   * @returns Determinação judicial criada\n   */\n  @Post()\n  @RequiresPermission({\n    permissionName: 'solicitacao.criar-determinacao-judicial',\n  })\n  @ApiOperation({ summary: 'Cria uma nova determinação judicial' })\n  @ApiResponse({\n    status: 201,\n    description: 'Determinação judicial criada com sucesso',\n    type: DeterminacaoJudicial,\n  })\n  async create(\n    @Body() createDeterminacaoDto: SolicitacaoCreateDeterminacaoJudicialDto,\n    @Req() req: any,\n  ): Promise<DeterminacaoJudicial> {\n    const usuarioId = req.user.id;\n    return this.determinacaoService.create(createDeterminacaoDto, usuarioId);\n  }\n\n  /**\n   * Busca todas as determinações judiciais de uma solicitação\n   * @param solicitacaoId ID da solicitação\n   * @returns Lista de determinações judiciais\n   */\n  @Get('solicitacao/:solicitacaoId')\n  @RequiresPermission({\n    permissionName: 'solicitacao.listar-determinacao-judicial',\n  })\n  @ApiOperation({\n    summary: 'Busca todas as determinações judiciais de uma solicitação',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de determinações judiciais',\n    type: [DeterminacaoJudicial],\n  })\n  async findBySolicitacaoId(\n    @Param('solicitacaoId') solicitacaoId: string,\n  ): Promise<DeterminacaoJudicial[]> {\n    return this.determinacaoService.findBySolicitacaoId(solicitacaoId);\n  }\n\n  /**\n   * Busca uma determinação judicial pelo ID\n   * @param id ID da determinação judicial\n   * @returns Determinação judicial\n   */\n  @Get(':id')\n  @RequiresPermission({\n    permissionName: 'solicitacao.visualizar-determinacao-judicial',\n  })\n  @ApiOperation({ summary: 'Busca uma determinação judicial pelo ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'Determinação judicial encontrada',\n    type: DeterminacaoJudicial,\n  })\n  async findById(@Param('id') id: string): Promise<DeterminacaoJudicial> {\n    return this.determinacaoService.findById(id);\n  }\n\n  /**\n   * Atualiza uma determinação judicial\n   * @param id ID da determinação judicial\n   * @param updateDeterminacaoDto Dados para atualização\n   * @returns Determinação judicial atualizada\n   */\n  @Patch(':id')\n  @RequiresPermission({\n    permissionName: 'solicitacao.atualizar-determinacao-judicial',\n  })\n  @ApiOperation({ summary: 'Atualiza uma determinação judicial' })\n  @ApiResponse({\n    status: 200,\n    description: 'Determinação judicial atualizada com sucesso',\n    type: DeterminacaoJudicial,\n  })\n  async update(\n    @Param('id') id: string,\n    @Body() updateDeterminacaoDto: SolicitacaoUpdateDeterminacaoJudicialDto,\n  ): Promise<DeterminacaoJudicial> {\n    return this.determinacaoService.update(id, updateDeterminacaoDto);\n  }\n\n  /**\n   * Registra o cumprimento de uma determinação judicial\n   * @param id ID da determinação judicial\n   * @param body Observações sobre o cumprimento\n   * @returns Determinação judicial atualizada\n   */\n  @Patch(':id/cumprir')\n  @RequiresPermission({\n    permissionName: 'solicitacao.cumprir-determinacao-judicial',\n  })\n  @ApiOperation({\n    summary: 'Registra o cumprimento de uma determinação judicial',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Cumprimento registrado com sucesso',\n    type: DeterminacaoJudicial,\n  })\n  async registrarCumprimento(\n    @Param('id') id: string,\n    @Body() body: { observacoes?: string },\n  ): Promise<DeterminacaoJudicial> {\n    return this.determinacaoService.registrarCumprimento(id, body.observacoes);\n  }\n\n  /**\n   * Remove uma determinação judicial\n   * @param id ID da determinação judicial\n   * @returns Void\n   */\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @RequiresPermission({\n    permissionName: 'solicitacao.remover-determinacao-judicial',\n  })\n  @ApiOperation({ summary: 'Remove uma determinação judicial' })\n  @ApiResponse({\n    status: 204,\n    description: 'Determinação judicial removida com sucesso',\n  })\n  async remove(@Param('id') id: string): Promise<void> {\n    return this.determinacaoService.remove(id);\n  }\n}\n"],"version":3}