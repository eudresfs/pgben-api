1291170db03fc40f7545183e6b95e5cb
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfiguracaoModule = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const auth_module_1 = require("../../auth/auth.module");
const services_1 = require("./services");
const repositories_1 = require("./repositories");
const entities_1 = require("../../entities");
const controllers_1 = require("./controllers");
/**
 * Módulo de Configuração do PGBen
 *
 * Responsável por centralizar a gestão de parâmetros operacionais,
 * templates, workflows e integrações do sistema.
 *
 * Este módulo permite personalizar o comportamento do sistema sem
 * necessidade de alterações no código-fonte, fornecendo uma camada
 * de abstração para configurações dinâmicas.
 */
let ConfiguracaoModule = class ConfiguracaoModule {
};
exports.ConfiguracaoModule = ConfiguracaoModule;
exports.ConfiguracaoModule = ConfiguracaoModule = __decorate([
    (0, common_1.Module)({
        imports: [
            typeorm_1.TypeOrmModule.forFeature([
                entities_1.Parametro,
                entities_1.Template,
                entities_1.WorkflowBeneficio,
                entities_1.ConfiguracaoIntegracao
            ]),
            // Importa o módulo compartilhado de autenticação
            auth_module_1.AuthModule
        ],
        controllers: [
            controllers_1.ParametroController,
            controllers_1.TemplateController,
            controllers_1.WorkflowController,
            controllers_1.IntegracaoController,
            controllers_1.LimitesController
        ],
        providers: [
            // Repositórios
            repositories_1.ParametroRepository,
            repositories_1.TemplateRepository,
            repositories_1.WorkflowBeneficioRepository,
            repositories_1.ConfiguracaoIntegracaoRepository,
            // Serviços
            services_1.ParametroService,
            services_1.TemplateService,
            services_1.WorkflowService,
            services_1.IntegracaoService,
            services_1.LimitesService
        ],
        exports: [
            // Exportamos os serviços para uso em outros módulos
            services_1.ParametroService,
            services_1.TemplateService,
            services_1.WorkflowService,
            services_1.IntegracaoService,
            services_1.LimitesService
        ]
    })
], ConfiguracaoModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNvbmZpZ3VyYWNhb1xcY29uZmlndXJhY2FvLm1vZHVsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwyQ0FBd0M7QUFDeEMsNkNBQWdEO0FBQ2hELHdEQUFtRDtBQUNuRCx5Q0FNb0I7QUFDcEIsaURBS3dCO0FBQ3hCLDZDQUFnRztBQUNoRywrQ0FNdUI7QUFFdkI7Ozs7Ozs7OztHQVNHO0FBMENJLElBQU0sa0JBQWtCLEdBQXhCLE1BQU0sa0JBQWtCO0NBZ0I5QixDQUFBO0FBaEJZLGdEQUFrQjs2QkFBbEIsa0JBQWtCO0lBekM5QixJQUFBLGVBQU0sRUFBQztRQUNOLE9BQU8sRUFBRTtZQUNQLHVCQUFhLENBQUMsVUFBVSxDQUFDO2dCQUN2QixvQkFBUztnQkFDVCxtQkFBUTtnQkFDUiw0QkFBaUI7Z0JBQ2pCLGlDQUFzQjthQUN2QixDQUFDO1lBQ0YsaURBQWlEO1lBQ2pELHdCQUFVO1NBQ1g7UUFDRCxXQUFXLEVBQUU7WUFDWCxpQ0FBbUI7WUFDbkIsZ0NBQWtCO1lBQ2xCLGdDQUFrQjtZQUNsQixrQ0FBb0I7WUFDcEIsK0JBQWlCO1NBQ2xCO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsZUFBZTtZQUNmLGtDQUFtQjtZQUNuQixpQ0FBa0I7WUFDbEIsMENBQTJCO1lBQzNCLCtDQUFnQztZQUVoQyxXQUFXO1lBQ1gsMkJBQWdCO1lBQ2hCLDBCQUFlO1lBQ2YsMEJBQWU7WUFDZiw0QkFBaUI7WUFDakIseUJBQWM7U0FDZjtRQUNELE9BQU8sRUFBRTtZQUNQLG9EQUFvRDtZQUNwRCwyQkFBZ0I7WUFDaEIsMEJBQWU7WUFDZiwwQkFBZTtZQUNmLDRCQUFpQjtZQUNqQix5QkFBYztTQUNmO0tBQ0YsQ0FBQztHQUNXLGtCQUFrQixDQWdCOUIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNvbmZpZ3VyYWNhb1xcY29uZmlndXJhY2FvLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBUeXBlT3JtTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJztcbmltcG9ydCB7IEF1dGhNb2R1bGUgfSBmcm9tICcuLi8uLi9hdXRoL2F1dGgubW9kdWxlJ1xuaW1wb3J0IHsgXG4gIFBhcmFtZXRyb1NlcnZpY2UsIFxuICBUZW1wbGF0ZVNlcnZpY2UsIFxuICBXb3JrZmxvd1NlcnZpY2UsXG4gIEludGVncmFjYW9TZXJ2aWNlLFxuICBMaW1pdGVzU2VydmljZVxufSBmcm9tICcuL3NlcnZpY2VzJztcbmltcG9ydCB7IFxuICBQYXJhbWV0cm9SZXBvc2l0b3J5LCBcbiAgVGVtcGxhdGVSZXBvc2l0b3J5LCBcbiAgV29ya2Zsb3dCZW5lZmljaW9SZXBvc2l0b3J5LFxuICBDb25maWd1cmFjYW9JbnRlZ3JhY2FvUmVwb3NpdG9yeVxufSBmcm9tICcuL3JlcG9zaXRvcmllcyc7XG5pbXBvcnQgeyBQYXJhbWV0cm8sIFRlbXBsYXRlLCBXb3JrZmxvd0JlbmVmaWNpbywgQ29uZmlndXJhY2FvSW50ZWdyYWNhbyB9IGZyb20gJy4uLy4uL2VudGl0aWVzJztcbmltcG9ydCB7XG4gIFBhcmFtZXRyb0NvbnRyb2xsZXIsXG4gIFRlbXBsYXRlQ29udHJvbGxlcixcbiAgV29ya2Zsb3dDb250cm9sbGVyLFxuICBJbnRlZ3JhY2FvQ29udHJvbGxlcixcbiAgTGltaXRlc0NvbnRyb2xsZXJcbn0gZnJvbSAnLi9jb250cm9sbGVycyc7XG5cbi8qKlxuICogTcOzZHVsbyBkZSBDb25maWd1cmHDp8OjbyBkbyBQR0JlblxuICogXG4gKiBSZXNwb25zw6F2ZWwgcG9yIGNlbnRyYWxpemFyIGEgZ2VzdMOjbyBkZSBwYXLDom1ldHJvcyBvcGVyYWNpb25haXMsXG4gKiB0ZW1wbGF0ZXMsIHdvcmtmbG93cyBlIGludGVncmHDp8O1ZXMgZG8gc2lzdGVtYS5cbiAqIFxuICogRXN0ZSBtw7NkdWxvIHBlcm1pdGUgcGVyc29uYWxpemFyIG8gY29tcG9ydGFtZW50byBkbyBzaXN0ZW1hIHNlbVxuICogbmVjZXNzaWRhZGUgZGUgYWx0ZXJhw6fDtWVzIG5vIGPDs2RpZ28tZm9udGUsIGZvcm5lY2VuZG8gdW1hIGNhbWFkYVxuICogZGUgYWJzdHJhw6fDo28gcGFyYSBjb25maWd1cmHDp8O1ZXMgZGluw6JtaWNhcy5cbiAqL1xuQE1vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBUeXBlT3JtTW9kdWxlLmZvckZlYXR1cmUoW1xuICAgICAgUGFyYW1ldHJvLFxuICAgICAgVGVtcGxhdGUsXG4gICAgICBXb3JrZmxvd0JlbmVmaWNpbyxcbiAgICAgIENvbmZpZ3VyYWNhb0ludGVncmFjYW9cbiAgICBdKSxcbiAgICAvLyBJbXBvcnRhIG8gbcOzZHVsbyBjb21wYXJ0aWxoYWRvIGRlIGF1dGVudGljYcOnw6NvXG4gICAgQXV0aE1vZHVsZVxuICBdLFxuICBjb250cm9sbGVyczogW1xuICAgIFBhcmFtZXRyb0NvbnRyb2xsZXIsXG4gICAgVGVtcGxhdGVDb250cm9sbGVyLFxuICAgIFdvcmtmbG93Q29udHJvbGxlcixcbiAgICBJbnRlZ3JhY2FvQ29udHJvbGxlcixcbiAgICBMaW1pdGVzQ29udHJvbGxlclxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICAvLyBSZXBvc2l0w7NyaW9zXG4gICAgUGFyYW1ldHJvUmVwb3NpdG9yeSxcbiAgICBUZW1wbGF0ZVJlcG9zaXRvcnksXG4gICAgV29ya2Zsb3dCZW5lZmljaW9SZXBvc2l0b3J5LFxuICAgIENvbmZpZ3VyYWNhb0ludGVncmFjYW9SZXBvc2l0b3J5LFxuICAgIFxuICAgIC8vIFNlcnZpw6dvc1xuICAgIFBhcmFtZXRyb1NlcnZpY2UsXG4gICAgVGVtcGxhdGVTZXJ2aWNlLFxuICAgIFdvcmtmbG93U2VydmljZSxcbiAgICBJbnRlZ3JhY2FvU2VydmljZSxcbiAgICBMaW1pdGVzU2VydmljZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgLy8gRXhwb3J0YW1vcyBvcyBzZXJ2acOnb3MgcGFyYSB1c28gZW0gb3V0cm9zIG3Ds2R1bG9zXG4gICAgUGFyYW1ldHJvU2VydmljZSxcbiAgICBUZW1wbGF0ZVNlcnZpY2UsXG4gICAgV29ya2Zsb3dTZXJ2aWNlLFxuICAgIEludGVncmFjYW9TZXJ2aWNlLFxuICAgIExpbWl0ZXNTZXJ2aWNlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhY2FvTW9kdWxlIHtcbiAgLyoqXG4gICAqIERvY3VtZW50YcOnw6NvIGRvIG3Ds2R1bG8gZGUgY29uZmlndXJhw6fDo29cbiAgICogXG4gICAqIEVzdGUgbcOzZHVsbyBmb3JuZWNlOlxuICAgKiBcbiAgICogMS4gR2VyZW5jaWFtZW50byBkZSBwYXLDom1ldHJvcyBkbyBzaXN0ZW1hIGNvbSB0aXBhZ2VtIGRpbsOibWljYVxuICAgKiAyLiBTaXN0ZW1hIGRlIHRlbXBsYXRlcyBwYXJhIGVtYWlscywgbm90aWZpY2HDp8O1ZXMgZSBkb2N1bWVudG9zXG4gICAqIDMuIFdvcmtmbG93cyBwZXJzb25hbGl6w6F2ZWlzIHBhcmEgdGlwb3MgZGUgYmVuZWbDrWNpb3NcbiAgICogNC4gQ29uZmlndXJhw6fDtWVzIGRlIGludGVncmHDp8O1ZXMgZXh0ZXJuYXNcbiAgICogNS4gTGltaXRlcyBvcGVyYWNpb25haXMgY29uZmlndXLDoXZlaXNcbiAgICogXG4gICAqIMOJIGltcGxlbWVudGFkbyBzZWd1aW5kbyBvcyBwcmluY8OtcGlvcyBTT0xJRCBlIENsZWFuIEFyY2hpdGVjdHVyZSxcbiAgICogY29tIHNlcnZpw6dvcyBlc3BlY2lhbGl6YWRvcyBwYXJhIGNhZGEgZG9tw61uaW8gZSByZXBvc2l0w7NyaW9zXG4gICAqIHBhcmEgYWJzdHJhw6fDo28gZGEgY2FtYWRhIGRlIHBlcnNpc3TDqm5jaWEuXG4gICAqL1xufVxuIl0sInZlcnNpb24iOjN9