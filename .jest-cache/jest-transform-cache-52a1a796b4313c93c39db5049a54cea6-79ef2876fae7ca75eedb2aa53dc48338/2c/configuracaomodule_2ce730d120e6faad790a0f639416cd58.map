{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\configuracao.module.ts","mappings":";;;;;;;;;AAAA,2CAAwC;AACxC,6CAAgD;AAChD,wDAAmD;AACnD,yCAMoB;AACpB,iDAKwB;AACxB,6CAAgG;AAChG,+CAMuB;AAEvB;;;;;;;;;GASG;AA0CI,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;CAgB9B,CAAA;AAhBY,gDAAkB;6BAAlB,kBAAkB;IAzC9B,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,UAAU,CAAC;gBACvB,oBAAS;gBACT,mBAAQ;gBACR,4BAAiB;gBACjB,iCAAsB;aACvB,CAAC;YACF,iDAAiD;YACjD,wBAAU;SACX;QACD,WAAW,EAAE;YACX,iCAAmB;YACnB,gCAAkB;YAClB,gCAAkB;YAClB,kCAAoB;YACpB,+BAAiB;SAClB;QACD,SAAS,EAAE;YACT,eAAe;YACf,kCAAmB;YACnB,iCAAkB;YAClB,0CAA2B;YAC3B,+CAAgC;YAEhC,WAAW;YACX,2BAAgB;YAChB,0BAAe;YACf,0BAAe;YACf,4BAAiB;YACjB,yBAAc;SACf;QACD,OAAO,EAAE;YACP,oDAAoD;YACpD,2BAAgB;YAChB,0BAAe;YACf,0BAAe;YACf,4BAAiB;YACjB,yBAAc;SACf;KACF,CAAC;GACW,kBAAkB,CAgB9B","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\configuracao.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from '../../auth/auth.module'\nimport { \n  ParametroService, \n  TemplateService, \n  WorkflowService,\n  IntegracaoService,\n  LimitesService\n} from './services';\nimport { \n  ParametroRepository, \n  TemplateRepository, \n  WorkflowBeneficioRepository,\n  ConfiguracaoIntegracaoRepository\n} from './repositories';\nimport { Parametro, Template, WorkflowBeneficio, ConfiguracaoIntegracao } from '../../entities';\nimport {\n  ParametroController,\n  TemplateController,\n  WorkflowController,\n  IntegracaoController,\n  LimitesController\n} from './controllers';\n\n/**\n * Módulo de Configuração do PGBen\n * \n * Responsável por centralizar a gestão de parâmetros operacionais,\n * templates, workflows e integrações do sistema.\n * \n * Este módulo permite personalizar o comportamento do sistema sem\n * necessidade de alterações no código-fonte, fornecendo uma camada\n * de abstração para configurações dinâmicas.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Parametro,\n      Template,\n      WorkflowBeneficio,\n      ConfiguracaoIntegracao\n    ]),\n    // Importa o módulo compartilhado de autenticação\n    AuthModule\n  ],\n  controllers: [\n    ParametroController,\n    TemplateController,\n    WorkflowController,\n    IntegracaoController,\n    LimitesController\n  ],\n  providers: [\n    // Repositórios\n    ParametroRepository,\n    TemplateRepository,\n    WorkflowBeneficioRepository,\n    ConfiguracaoIntegracaoRepository,\n    \n    // Serviços\n    ParametroService,\n    TemplateService,\n    WorkflowService,\n    IntegracaoService,\n    LimitesService\n  ],\n  exports: [\n    // Exportamos os serviços para uso em outros módulos\n    ParametroService,\n    TemplateService,\n    WorkflowService,\n    IntegracaoService,\n    LimitesService\n  ]\n})\nexport class ConfiguracaoModule {\n  /**\n   * Documentação do módulo de configuração\n   * \n   * Este módulo fornece:\n   * \n   * 1. Gerenciamento de parâmetros do sistema com tipagem dinâmica\n   * 2. Sistema de templates para emails, notificações e documentos\n   * 3. Workflows personalizáveis para tipos de benefícios\n   * 4. Configurações de integrações externas\n   * 5. Limites operacionais configuráveis\n   * \n   * É implementado seguindo os princípios SOLID e Clean Architecture,\n   * com serviços especializados para cada domínio e repositórios\n   * para abstração da camada de persistência.\n   */\n}\n"],"version":3}