1d754965925112cb52be444f9041b800
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeterminacaoJudicialController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const permission_guard_1 = require("../../../auth/guards/permission.guard");
const requires_permission_decorator_1 = require("../../../auth/decorators/requires-permission.decorator");
const determinacao_judicial_consolidado_service_1 = require("../services/determinacao-judicial-consolidado.service");
const determinacao_judicial_entity_1 = require("../../../entities/determinacao-judicial.entity");
const determinacao_judicial_dto_1 = require("../dtos/determinacao-judicial.dto");
/**
 * DTO para marcar determinação como cumprida
 */
class CumprimentoDeterminacaoDto {
    observacao;
}
/**
 * Controller de Determinações Judiciais
 *
 * Responsável por expor os endpoints de gerenciamento das determinações judiciais
 * relacionadas a processos e solicitações de benefício.
 */
let DeterminacaoJudicialController = class DeterminacaoJudicialController {
    determinacaoJudicialService;
    constructor(determinacaoJudicialService) {
        this.determinacaoJudicialService = determinacaoJudicialService;
    }
    /**
     * Cria uma nova determinação judicial
     * @param createDeterminacaoDto Dados da determinação
     * @param req Requisição
     * @returns Determinação criada
     */
    async create(createDeterminacaoDto, req) {
        return this.determinacaoJudicialService.create(createDeterminacaoDto, req.user.id);
    }
    /**
     * Busca todas as determinações judiciais
     * @param includeInactive Se deve incluir determinações inativas
     * @returns Lista de determinações
     */
    async findAll(page, limit, processoJudicialId, solicitacaoId, cidadaoId, tipo, cumprida, termo) {
        return this.determinacaoJudicialService.findAll({
            page,
            limit,
            processoJudicialId,
            solicitacaoId,
            cidadaoId,
            tipo: tipo,
            cumprida,
            termo,
        });
    }
    /**
     * Busca uma determinação pelo ID
     * @param id ID da determinação
     * @returns Determinação
     */
    async findById(id) {
        return this.determinacaoJudicialService.findById(id);
    }
    /**
     * Busca determinações por processo judicial
     * @param processoId ID do processo judicial
     * @param includeInactive Se deve incluir determinações inativas
     * @returns Lista de determinações
     */
    async findByProcesso(processoId) {
        return this.determinacaoJudicialService.findByProcessoJudicial(processoId);
    }
    /**
     * Busca determinações por cidadão
     * @param cidadaoId ID do cidadão
     * @param includeInactive Se deve incluir determinações inativas
     * @returns Lista de determinações
     */
    async findByCidadao(cidadaoId) {
        return this.determinacaoJudicialService.findByCidadao(cidadaoId);
    }
    /**
     * Busca determinações por solicitação
     * @param solicitacaoId ID da solicitação
     * @param includeInactive Se deve incluir determinações inativas
     * @returns Lista de determinações
     */
    async findBySolicitacao(solicitacaoId) {
        return this.determinacaoJudicialService.findBySolicitacao(solicitacaoId);
    }
    async findPendentes() {
        return this.determinacaoJudicialService.findPendentes();
    }
    /**
     * Atualiza uma determinação
     * @param id ID da determinação
     * @param updateDeterminacaoDto Dados para atualização
     * @param req Requisição
     * @returns Determinação atualizada
     */
    async update(id, updateDeterminacaoDto, req) {
        return this.determinacaoJudicialService.update(id, updateDeterminacaoDto, req.user.id);
    }
    /**
     * Marca uma determinação como cumprida
     * @param id ID da determinação
     * @param cumprimentoDto Dados do cumprimento
     * @param req Requisição
     * @returns Determinação atualizada
     */
    async marcarComoCumprida(id, body, req) {
        return this.determinacaoJudicialService.marcarComoCumprida(id, body.observacao, req.user.id);
    }
    async toggleAtivo(id, req) {
        return this.determinacaoJudicialService.toggleAtivo(id, req.user.id);
    }
    /**
     * Remove uma determinação
     * @param id ID da determinação
     * @returns void
     */
    async remove(id) {
        return this.determinacaoJudicialService.remove(id);
    }
};
exports.DeterminacaoJudicialController = DeterminacaoJudicialController;
__decorate([
    (0, common_1.Post)(),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.criar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Cria uma nova determinação judicial',
        description: 'Cria uma determinação judicial relacionada a um processo judicial.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 201,
        description: 'Determinação criada com sucesso',
        type: determinacao_judicial_entity_1.DeterminacaoJudicial,
    }),
    __param(0, (0, common_1.Body)()),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof determinacao_judicial_dto_1.CreateDeterminacaoJudicialDto !== "undefined" && determinacao_judicial_dto_1.CreateDeterminacaoJudicialDto) === "function" ? _b : Object, Object]),
    __metadata("design:returntype", typeof (_c = typeof Promise !== "undefined" && Promise) === "function" ? _c : Object)
], DeterminacaoJudicialController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.listar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Busca todas as determinações judiciais',
        description: 'Retorna a lista de todas as determinações judiciais.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de determinações retornada com sucesso',
        type: [determinacao_judicial_entity_1.DeterminacaoJudicial],
    }),
    __param(0, (0, common_1.Query)('page')),
    __param(1, (0, common_1.Query)('limit')),
    __param(2, (0, common_1.Query)('processoJudicialId')),
    __param(3, (0, common_1.Query)('solicitacaoId')),
    __param(4, (0, common_1.Query)('cidadaoId')),
    __param(5, (0, common_1.Query)('tipo')),
    __param(6, (0, common_1.Query)('cumprida')),
    __param(7, (0, common_1.Query)('termo')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number, Number, String, String, String, String, Boolean, String]),
    __metadata("design:returntype", Promise)
], DeterminacaoJudicialController.prototype, "findAll", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.visualizar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Busca uma determinação pelo ID',
        description: 'Retorna os detalhes de uma determinação judicial específica.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Determinação encontrada com sucesso',
        type: determinacao_judicial_entity_1.DeterminacaoJudicial,
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], DeterminacaoJudicialController.prototype, "findById", null);
__decorate([
    (0, common_1.Get)('processo/:processoId'),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.listar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Busca determinações por processo judicial',
        description: 'Retorna a lista de determinações judiciais relacionadas a um processo específico.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de determinações retornada com sucesso',
        type: [determinacao_judicial_entity_1.DeterminacaoJudicial],
    }),
    __param(0, (0, common_1.Param)('processoId')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], DeterminacaoJudicialController.prototype, "findByProcesso", null);
__decorate([
    (0, common_1.Get)('cidadao/:cidadaoId'),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.listar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Busca determinações por cidadão',
        description: 'Retorna a lista de determinações judiciais relacionadas a um cidadão específico.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de determinações retornada com sucesso',
        type: [determinacao_judicial_entity_1.DeterminacaoJudicial],
    }),
    __param(0, (0, common_1.Param)('cidadaoId')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_f = typeof Promise !== "undefined" && Promise) === "function" ? _f : Object)
], DeterminacaoJudicialController.prototype, "findByCidadao", null);
__decorate([
    (0, common_1.Get)('solicitacao/:solicitacaoId'),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.listar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Busca determinações por solicitação',
        description: 'Retorna a lista de determinações judiciais relacionadas a uma solicitação específica.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de determinações retornada com sucesso',
        type: [determinacao_judicial_entity_1.DeterminacaoJudicial],
    }),
    __param(0, (0, common_1.Param)('solicitacaoId')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], DeterminacaoJudicialController.prototype, "findBySolicitacao", null);
__decorate([
    (0, common_1.Get)('pendentes'),
    (0, swagger_1.ApiOperation)({ summary: 'Buscar determinações pendentes de cumprimento' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de determinações pendentes',
        type: [determinacao_judicial_entity_1.DeterminacaoJudicial],
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", typeof (_h = typeof Promise !== "undefined" && Promise) === "function" ? _h : Object)
], DeterminacaoJudicialController.prototype, "findPendentes", null);
__decorate([
    (0, common_1.Patch)(':id'),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.atualizar-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Atualiza uma determinação',
        description: 'Atualiza os dados de uma determinação judicial existente.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Determinação atualizada com sucesso',
        type: determinacao_judicial_entity_1.DeterminacaoJudicial,
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __param(2, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_j = typeof determinacao_judicial_dto_1.UpdateDeterminacaoJudicialDto !== "undefined" && determinacao_judicial_dto_1.UpdateDeterminacaoJudicialDto) === "function" ? _j : Object, Object]),
    __metadata("design:returntype", typeof (_k = typeof Promise !== "undefined" && Promise) === "function" ? _k : Object)
], DeterminacaoJudicialController.prototype, "update", null);
__decorate([
    (0, common_1.Patch)(':id/cumprir'),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.cumprir-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Marca uma determinação como cumprida',
        description: 'Atualiza o status de uma determinação judicial para cumprida.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Determinação marcada como cumprida com sucesso',
        type: determinacao_judicial_entity_1.DeterminacaoJudicial,
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __param(2, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, CumprimentoDeterminacaoDto, Object]),
    __metadata("design:returntype", typeof (_l = typeof Promise !== "undefined" && Promise) === "function" ? _l : Object)
], DeterminacaoJudicialController.prototype, "marcarComoCumprida", null);
__decorate([
    (0, common_1.Patch)(':id/ativar'),
    (0, swagger_1.ApiOperation)({ summary: 'Ativar ou desativar uma determinação judicial' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID da determinação judicial' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Determinação judicial atualizada',
        type: determinacao_judicial_entity_1.DeterminacaoJudicial,
    }),
    (0, swagger_1.ApiResponse)({
        status: 404,
        description: 'Determinação judicial não encontrada',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", typeof (_m = typeof Promise !== "undefined" && Promise) === "function" ? _m : Object)
], DeterminacaoJudicialController.prototype, "toggleAtivo", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, common_1.HttpCode)(common_1.HttpStatus.NO_CONTENT),
    (0, requires_permission_decorator_1.RequiresPermission)({ permissionName: 'judicial.remover-determinacao' }),
    (0, swagger_1.ApiOperation)({
        summary: 'Remove uma determinação',
        description: 'Remove permanentemente uma determinação judicial.',
    }),
    (0, swagger_1.ApiResponse)({
        status: 204,
        description: 'Determinação removida com sucesso',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_o = typeof Promise !== "undefined" && Promise) === "function" ? _o : Object)
], DeterminacaoJudicialController.prototype, "remove", null);
exports.DeterminacaoJudicialController = DeterminacaoJudicialController = __decorate([
    (0, swagger_1.ApiTags)('Solicitação'),
    (0, common_1.Controller)('judicial/determinacoes'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, permission_guard_1.PermissionGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof determinacao_judicial_consolidado_service_1.DeterminacaoJudicialConsolidadoService !== "undefined" && determinacao_judicial_consolidado_service_1.DeterminacaoJudicialConsolidadoService) === "function" ? _a : Object])
], DeterminacaoJudicialController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,