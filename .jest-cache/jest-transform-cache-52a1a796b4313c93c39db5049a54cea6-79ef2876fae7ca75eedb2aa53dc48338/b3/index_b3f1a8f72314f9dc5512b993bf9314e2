0773d7ee6c7caf9cf79418535ee0028f
"use strict";
/**
 * Índice dos Domínios de Erros
 *
 * Exporta todos os domínios de erro específicos do sistema SEMTAS.
 * Cada domínio contém códigos de erro padronizados e funções auxiliares
 * para lançamento de exceções com contexto específico.
 *
 * @see docs/ADRs/catalogo-erros.md
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DOMAIN_COVERAGE = exports.DOMAIN_STATISTICS = exports.DOMAIN_ERROR_CODES = exports.DOMAIN_ERRORS = void 0;
exports.isDomainError = isDomainError;
exports.getDomainErrorDefinition = getDomainErrorDefinition;
// ========================================
// EXPORTAÇÕES DOS DOMÍNIOS
// ========================================
// Domínio USUARIO
__exportStar(require("./usuario.errors"), exports);
// Domínio SOLICITACAO
__exportStar(require("./solicitacao.errors"), exports);
// Domínio CIDADAO
__exportStar(require("./cidadao.errors"), exports);
// Domínio BENEFICIO
__exportStar(require("./beneficio.errors"), exports);
// Domínio DOCUMENTO
__exportStar(require("./documento.errors"), exports);
// Domínio AUDITORIA
__exportStar(require("./auditoria.errors"), exports);
// Domínio NOTIFICACAO
__exportStar(require("./notificacao.errors"), exports);
// Domínio RELATORIO
__exportStar(require("./relatorio.errors"), exports);
// Domínio INTEGRADOR
__exportStar(require("./integrador.errors"), exports);
// ========================================
// CONSOLIDAÇÃO DOS CATÁLOGOS
// ========================================
const usuario_errors_1 = require("./usuario.errors");
const solicitacao_errors_1 = require("./solicitacao.errors");
const cidadao_errors_1 = require("./cidadao.errors");
const beneficio_errors_1 = require("./beneficio.errors");
const documento_errors_1 = require("./documento.errors");
const auditoria_errors_1 = require("./auditoria.errors");
const notificacao_errors_1 = require("./notificacao.errors");
const relatorio_errors_1 = require("./relatorio.errors");
const integrador_errors_1 = require("./integrador.errors");
/**
 * Catálogo consolidado de todos os erros de domínio
 */
exports.DOMAIN_ERRORS = {
    ...usuario_errors_1.USUARIO_ERRORS,
    ...solicitacao_errors_1.SOLICITACAO_ERRORS,
    ...cidadao_errors_1.CIDADAO_ERRORS,
    ...beneficio_errors_1.BENEFICIO_ERRORS,
    ...documento_errors_1.DOCUMENTO_ERRORS,
    ...auditoria_errors_1.AUDITORIA_ERRORS,
    ...notificacao_errors_1.NOTIFICACAO_ERRORS,
    ...relatorio_errors_1.RELATORIO_ERRORS,
    ...integrador_errors_1.INTEGRADOR_ERRORS,
};
/**
 * Lista de todos os códigos de erro de domínio
 */
exports.DOMAIN_ERROR_CODES = Object.keys(exports.DOMAIN_ERRORS);
/**
 * Verifica se um código de erro pertence aos domínios
 */
function isDomainError(code) {
    return code in exports.DOMAIN_ERRORS;
}
/**
 * Obtém a definição de erro de um código de domínio
 */
function getDomainErrorDefinition(code) {
    return exports.DOMAIN_ERRORS[code];
}
// ========================================
// ESTATÍSTICAS DOS DOMÍNIOS
// ========================================
/**
 * Estatísticas dos domínios de erro
 */
exports.DOMAIN_STATISTICS = {
    USUARIO: Object.keys(usuario_errors_1.USUARIO_ERRORS).length,
    SOLICITACAO: Object.keys(solicitacao_errors_1.SOLICITACAO_ERRORS).length,
    CIDADAO: Object.keys(cidadao_errors_1.CIDADAO_ERRORS).length,
    BENEFICIO: Object.keys(beneficio_errors_1.BENEFICIO_ERRORS).length,
    DOCUMENTO: Object.keys(documento_errors_1.DOCUMENTO_ERRORS).length,
    AUDITORIA: Object.keys(auditoria_errors_1.AUDITORIA_ERRORS).length,
    NOTIFICACAO: Object.keys(notificacao_errors_1.NOTIFICACAO_ERRORS).length,
    RELATORIO: Object.keys(relatorio_errors_1.RELATORIO_ERRORS).length,
    INTEGRADOR: Object.keys(integrador_errors_1.INTEGRADOR_ERRORS).length,
    TOTAL: Object.keys(exports.DOMAIN_ERRORS).length,
};
/**
 * Informações sobre a cobertura dos domínios
 */
exports.DOMAIN_COVERAGE = {
    domains: [
        'USUARIO',
        'SOLICITACAO',
        'CIDADAO',
        'BENEFICIO',
        'DOCUMENTO',
        'AUDITORIA',
        'NOTIFICACAO',
        'RELATORIO',
        'INTEGRADOR'
    ],
    totalDomains: 9,
    totalErrors: exports.DOMAIN_STATISTICS.TOTAL,
    averageErrorsPerDomain: Math.round(exports.DOMAIN_STATISTICS.TOTAL / 9),
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXHNoYXJlZFxcZXhjZXB0aW9uc1xcZXJyb3ItY2F0YWxvZ1xcZG9tYWluc1xcaW5kZXgudHMiLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7OztHQVFHOzs7Ozs7Ozs7Ozs7Ozs7OztBQXNFSCxzQ0FFQztBQUtELDREQUVDO0FBN0VELDJDQUEyQztBQUMzQywyQkFBMkI7QUFDM0IsMkNBQTJDO0FBRTNDLGtCQUFrQjtBQUNsQixtREFBaUM7QUFFakMsc0JBQXNCO0FBQ3RCLHVEQUFxQztBQUVyQyxrQkFBa0I7QUFDbEIsbURBQWlDO0FBRWpDLG9CQUFvQjtBQUNwQixxREFBbUM7QUFFbkMsb0JBQW9CO0FBQ3BCLHFEQUFtQztBQUVuQyxvQkFBb0I7QUFDcEIscURBQW1DO0FBRW5DLHNCQUFzQjtBQUN0Qix1REFBcUM7QUFFckMsb0JBQW9CO0FBQ3BCLHFEQUFtQztBQUVuQyxxQkFBcUI7QUFDckIsc0RBQW9DO0FBRXBDLDJDQUEyQztBQUMzQyw2QkFBNkI7QUFDN0IsMkNBQTJDO0FBRTNDLHFEQUFrRDtBQUNsRCw2REFBMEQ7QUFDMUQscURBQWtEO0FBQ2xELHlEQUFzRDtBQUN0RCx5REFBc0Q7QUFDdEQseURBQXNEO0FBQ3RELDZEQUEwRDtBQUMxRCx5REFBc0Q7QUFDdEQsMkRBQXdEO0FBRXhEOztHQUVHO0FBQ1UsUUFBQSxhQUFhLEdBQUc7SUFDM0IsR0FBRywrQkFBYztJQUNqQixHQUFHLHVDQUFrQjtJQUNyQixHQUFHLCtCQUFjO0lBQ2pCLEdBQUcsbUNBQWdCO0lBQ25CLEdBQUcsbUNBQWdCO0lBQ25CLEdBQUcsbUNBQWdCO0lBQ25CLEdBQUcsdUNBQWtCO0lBQ3JCLEdBQUcsbUNBQWdCO0lBQ25CLEdBQUcscUNBQWlCO0NBQ1osQ0FBQztBQUVYOztHQUVHO0FBQ1UsUUFBQSxrQkFBa0IsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFhLENBQXNDLENBQUM7QUFFbEc7O0dBRUc7QUFDSCxTQUFnQixhQUFhLENBQUMsSUFBWTtJQUN4QyxPQUFPLElBQUksSUFBSSxxQkFBYSxDQUFDO0FBQy9CLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLHdCQUF3QixDQUFDLElBQWdDO0lBQ3ZFLE9BQU8scUJBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM3QixDQUFDO0FBRUQsMkNBQTJDO0FBQzNDLDRCQUE0QjtBQUM1QiwyQ0FBMkM7QUFFM0M7O0dBRUc7QUFDVSxRQUFBLGlCQUFpQixHQUFHO0lBQy9CLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLCtCQUFjLENBQUMsQ0FBQyxNQUFNO0lBQzNDLFdBQVcsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLHVDQUFrQixDQUFDLENBQUMsTUFBTTtJQUNuRCxPQUFPLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQywrQkFBYyxDQUFDLENBQUMsTUFBTTtJQUMzQyxTQUFTLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxtQ0FBZ0IsQ0FBQyxDQUFDLE1BQU07SUFDL0MsU0FBUyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsbUNBQWdCLENBQUMsQ0FBQyxNQUFNO0lBQy9DLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLG1DQUFnQixDQUFDLENBQUMsTUFBTTtJQUMvQyxXQUFXLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyx1Q0FBa0IsQ0FBQyxDQUFDLE1BQU07SUFDbkQsU0FBUyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsbUNBQWdCLENBQUMsQ0FBQyxNQUFNO0lBQy9DLFVBQVUsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLHFDQUFpQixDQUFDLENBQUMsTUFBTTtJQUNqRCxLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxxQkFBYSxDQUFDLENBQUMsTUFBTTtDQUNoQyxDQUFDO0FBRVg7O0dBRUc7QUFDVSxRQUFBLGVBQWUsR0FBRztJQUM3QixPQUFPLEVBQUU7UUFDUCxTQUFTO1FBQ1QsYUFBYTtRQUNiLFNBQVM7UUFDVCxXQUFXO1FBQ1gsV0FBVztRQUNYLFdBQVc7UUFDWCxhQUFhO1FBQ2IsV0FBVztRQUNYLFlBQVk7S0FDYjtJQUNELFlBQVksRUFBRSxDQUFDO0lBQ2YsV0FBVyxFQUFFLHlCQUFpQixDQUFDLEtBQUs7SUFDcEMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyx5QkFBaUIsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0NBQ3ZELENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXHNoYXJlZFxcZXhjZXB0aW9uc1xcZXJyb3ItY2F0YWxvZ1xcZG9tYWluc1xcaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiDDjW5kaWNlIGRvcyBEb23DrW5pb3MgZGUgRXJyb3NcbiAqIFxuICogRXhwb3J0YSB0b2RvcyBvcyBkb23DrW5pb3MgZGUgZXJybyBlc3BlY8OtZmljb3MgZG8gc2lzdGVtYSBTRU1UQVMuXG4gKiBDYWRhIGRvbcOtbmlvIGNvbnTDqW0gY8OzZGlnb3MgZGUgZXJybyBwYWRyb25pemFkb3MgZSBmdW7Dp8O1ZXMgYXV4aWxpYXJlc1xuICogcGFyYSBsYW7Dp2FtZW50byBkZSBleGNlw6fDtWVzIGNvbSBjb250ZXh0byBlc3BlY8OtZmljby5cbiAqIFxuICogQHNlZSBkb2NzL0FEUnMvY2F0YWxvZ28tZXJyb3MubWRcbiAqL1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBFWFBPUlRBw4fDlUVTIERPUyBET03DjU5JT1Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gRG9tw61uaW8gVVNVQVJJT1xuZXhwb3J0ICogZnJvbSAnLi91c3VhcmlvLmVycm9ycyc7XG5cbi8vIERvbcOtbmlvIFNPTElDSVRBQ0FPXG5leHBvcnQgKiBmcm9tICcuL3NvbGljaXRhY2FvLmVycm9ycyc7XG5cbi8vIERvbcOtbmlvIENJREFEQU9cbmV4cG9ydCAqIGZyb20gJy4vY2lkYWRhby5lcnJvcnMnO1xuXG4vLyBEb23DrW5pbyBCRU5FRklDSU9cbmV4cG9ydCAqIGZyb20gJy4vYmVuZWZpY2lvLmVycm9ycyc7XG5cbi8vIERvbcOtbmlvIERPQ1VNRU5UT1xuZXhwb3J0ICogZnJvbSAnLi9kb2N1bWVudG8uZXJyb3JzJztcblxuLy8gRG9tw61uaW8gQVVESVRPUklBXG5leHBvcnQgKiBmcm9tICcuL2F1ZGl0b3JpYS5lcnJvcnMnO1xuXG4vLyBEb23DrW5pbyBOT1RJRklDQUNBT1xuZXhwb3J0ICogZnJvbSAnLi9ub3RpZmljYWNhby5lcnJvcnMnO1xuXG4vLyBEb23DrW5pbyBSRUxBVE9SSU9cbmV4cG9ydCAqIGZyb20gJy4vcmVsYXRvcmlvLmVycm9ycyc7XG5cbi8vIERvbcOtbmlvIElOVEVHUkFET1JcbmV4cG9ydCAqIGZyb20gJy4vaW50ZWdyYWRvci5lcnJvcnMnO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBDT05TT0xJREHDh8ODTyBET1MgQ0FUw4FMT0dPU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5pbXBvcnQgeyBVU1VBUklPX0VSUk9SUyB9IGZyb20gJy4vdXN1YXJpby5lcnJvcnMnO1xuaW1wb3J0IHsgU09MSUNJVEFDQU9fRVJST1JTIH0gZnJvbSAnLi9zb2xpY2l0YWNhby5lcnJvcnMnO1xuaW1wb3J0IHsgQ0lEQURBT19FUlJPUlMgfSBmcm9tICcuL2NpZGFkYW8uZXJyb3JzJztcbmltcG9ydCB7IEJFTkVGSUNJT19FUlJPUlMgfSBmcm9tICcuL2JlbmVmaWNpby5lcnJvcnMnO1xuaW1wb3J0IHsgRE9DVU1FTlRPX0VSUk9SUyB9IGZyb20gJy4vZG9jdW1lbnRvLmVycm9ycyc7XG5pbXBvcnQgeyBBVURJVE9SSUFfRVJST1JTIH0gZnJvbSAnLi9hdWRpdG9yaWEuZXJyb3JzJztcbmltcG9ydCB7IE5PVElGSUNBQ0FPX0VSUk9SUyB9IGZyb20gJy4vbm90aWZpY2FjYW8uZXJyb3JzJztcbmltcG9ydCB7IFJFTEFUT1JJT19FUlJPUlMgfSBmcm9tICcuL3JlbGF0b3Jpby5lcnJvcnMnO1xuaW1wb3J0IHsgSU5URUdSQURPUl9FUlJPUlMgfSBmcm9tICcuL2ludGVncmFkb3IuZXJyb3JzJztcblxuLyoqXG4gKiBDYXTDoWxvZ28gY29uc29saWRhZG8gZGUgdG9kb3Mgb3MgZXJyb3MgZGUgZG9tw61uaW9cbiAqL1xuZXhwb3J0IGNvbnN0IERPTUFJTl9FUlJPUlMgPSB7XG4gIC4uLlVTVUFSSU9fRVJST1JTLFxuICAuLi5TT0xJQ0lUQUNBT19FUlJPUlMsXG4gIC4uLkNJREFEQU9fRVJST1JTLFxuICAuLi5CRU5FRklDSU9fRVJST1JTLFxuICAuLi5ET0NVTUVOVE9fRVJST1JTLFxuICAuLi5BVURJVE9SSUFfRVJST1JTLFxuICAuLi5OT1RJRklDQUNBT19FUlJPUlMsXG4gIC4uLlJFTEFUT1JJT19FUlJPUlMsXG4gIC4uLklOVEVHUkFET1JfRVJST1JTLFxufSBhcyBjb25zdDtcblxuLyoqXG4gKiBMaXN0YSBkZSB0b2RvcyBvcyBjw7NkaWdvcyBkZSBlcnJvIGRlIGRvbcOtbmlvXG4gKi9cbmV4cG9ydCBjb25zdCBET01BSU5fRVJST1JfQ09ERVMgPSBPYmplY3Qua2V5cyhET01BSU5fRVJST1JTKSBhcyBBcnJheTxrZXlvZiB0eXBlb2YgRE9NQUlOX0VSUk9SUz47XG5cbi8qKlxuICogVmVyaWZpY2Egc2UgdW0gY8OzZGlnbyBkZSBlcnJvIHBlcnRlbmNlIGFvcyBkb23DrW5pb3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tYWluRXJyb3IoY29kZTogc3RyaW5nKTogY29kZSBpcyBrZXlvZiB0eXBlb2YgRE9NQUlOX0VSUk9SUyB7XG4gIHJldHVybiBjb2RlIGluIERPTUFJTl9FUlJPUlM7XG59XG5cbi8qKlxuICogT2J0w6ltIGEgZGVmaW5pw6fDo28gZGUgZXJybyBkZSB1bSBjw7NkaWdvIGRlIGRvbcOtbmlvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREb21haW5FcnJvckRlZmluaXRpb24oY29kZToga2V5b2YgdHlwZW9mIERPTUFJTl9FUlJPUlMpIHtcbiAgcmV0dXJuIERPTUFJTl9FUlJPUlNbY29kZV07XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVTVEFUw41TVElDQVMgRE9TIERPTcONTklPU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKipcbiAqIEVzdGF0w61zdGljYXMgZG9zIGRvbcOtbmlvcyBkZSBlcnJvXG4gKi9cbmV4cG9ydCBjb25zdCBET01BSU5fU1RBVElTVElDUyA9IHtcbiAgVVNVQVJJTzogT2JqZWN0LmtleXMoVVNVQVJJT19FUlJPUlMpLmxlbmd0aCxcbiAgU09MSUNJVEFDQU86IE9iamVjdC5rZXlzKFNPTElDSVRBQ0FPX0VSUk9SUykubGVuZ3RoLFxuICBDSURBREFPOiBPYmplY3Qua2V5cyhDSURBREFPX0VSUk9SUykubGVuZ3RoLFxuICBCRU5FRklDSU86IE9iamVjdC5rZXlzKEJFTkVGSUNJT19FUlJPUlMpLmxlbmd0aCxcbiAgRE9DVU1FTlRPOiBPYmplY3Qua2V5cyhET0NVTUVOVE9fRVJST1JTKS5sZW5ndGgsXG4gIEFVRElUT1JJQTogT2JqZWN0LmtleXMoQVVESVRPUklBX0VSUk9SUykubGVuZ3RoLFxuICBOT1RJRklDQUNBTzogT2JqZWN0LmtleXMoTk9USUZJQ0FDQU9fRVJST1JTKS5sZW5ndGgsXG4gIFJFTEFUT1JJTzogT2JqZWN0LmtleXMoUkVMQVRPUklPX0VSUk9SUykubGVuZ3RoLFxuICBJTlRFR1JBRE9SOiBPYmplY3Qua2V5cyhJTlRFR1JBRE9SX0VSUk9SUykubGVuZ3RoLFxuICBUT1RBTDogT2JqZWN0LmtleXMoRE9NQUlOX0VSUk9SUykubGVuZ3RoLFxufSBhcyBjb25zdDtcblxuLyoqXG4gKiBJbmZvcm1hw6fDtWVzIHNvYnJlIGEgY29iZXJ0dXJhIGRvcyBkb23DrW5pb3NcbiAqL1xuZXhwb3J0IGNvbnN0IERPTUFJTl9DT1ZFUkFHRSA9IHtcbiAgZG9tYWluczogW1xuICAgICdVU1VBUklPJyxcbiAgICAnU09MSUNJVEFDQU8nLCBcbiAgICAnQ0lEQURBTycsXG4gICAgJ0JFTkVGSUNJTycsXG4gICAgJ0RPQ1VNRU5UTycsXG4gICAgJ0FVRElUT1JJQScsXG4gICAgJ05PVElGSUNBQ0FPJyxcbiAgICAnUkVMQVRPUklPJyxcbiAgICAnSU5URUdSQURPUidcbiAgXSxcbiAgdG90YWxEb21haW5zOiA5LFxuICB0b3RhbEVycm9yczogRE9NQUlOX1NUQVRJU1RJQ1MuVE9UQUwsXG4gIGF2ZXJhZ2VFcnJvcnNQZXJEb21haW46IE1hdGgucm91bmQoRE9NQUlOX1NUQVRJU1RJQ1MuVE9UQUwgLyA5KSxcbn0gYXMgY29uc3Q7Il0sInZlcnNpb24iOjN9