24fb3ba3c53fe9442763ea034bffb473
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfirmacaoRecebimentoDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const metodo_confirmacao_enum_1 = require("../../../enums/metodo-confirmacao.enum");
/**
 * DTO para registro de confirmação de recebimento de pagamento
 *
 * Este DTO é utilizado para validar os dados de entrada ao registrar
 * a confirmação de recebimento de um pagamento pelo beneficiário.
 *
 * @author Equipe PGBen
 */
class ConfirmacaoRecebimentoDto {
    /**
     * Data em que a confirmação foi registrada
     */
    dataConfirmacao;
    /**
     * Método utilizado para confirmar o recebimento
     */
    metodoConfirmacao;
    /**
     * Referência ao cidadão que recebeu o benefício, se diferente do beneficiário original
     */
    destinatarioId;
    /**
     * Observações adicionais sobre a confirmação
     */
    observacoes;
}
exports.ConfirmacaoRecebimentoDto = ConfirmacaoRecebimentoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Data da confirmação de recebimento',
        example: '2025-05-18T14:30:00.000Z',
        type: Date
    }),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], ConfirmacaoRecebimentoDto.prototype, "dataConfirmacao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Método de confirmação utilizado',
        enum: metodo_confirmacao_enum_1.MetodoConfirmacaoEnum,
        example: metodo_confirmacao_enum_1.MetodoConfirmacaoEnum.ASSINATURA
    }),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsEnum)(metodo_confirmacao_enum_1.MetodoConfirmacaoEnum),
    __metadata("design:type", typeof (_b = typeof metodo_confirmacao_enum_1.MetodoConfirmacaoEnum !== "undefined" && metodo_confirmacao_enum_1.MetodoConfirmacaoEnum) === "function" ? _b : Object)
], ConfirmacaoRecebimentoDto.prototype, "metodoConfirmacao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'ID do destinatário que recebeu o pagamento (se diferente do beneficiário)',
        example: '123e4567-e89b-12d3-a456-426614174000',
        required: false
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4'),
    __metadata("design:type", String)
], ConfirmacaoRecebimentoDto.prototype, "destinatarioId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Observações sobre a confirmação de recebimento',
        example: 'Beneficiário confirmou recebimento com assinatura no formulário padrão.',
        required: false
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ConfirmacaoRecebimentoDto.prototype, "observacoes", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXHBhZ2FtZW50b1xcZHRvc1xcY29uZmlybWFjYW8tcmVjZWJpbWVudG8uZHRvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSw2Q0FBOEM7QUFDOUMseURBQXlDO0FBQ3pDLHFEQUEyRjtBQUMzRixvRkFBK0U7QUFFL0U7Ozs7Ozs7R0FPRztBQUNILE1BQWEseUJBQXlCO0lBQ3BDOztPQUVHO0lBU0gsZUFBZSxDQUFPO0lBRXRCOztPQUVHO0lBUUgsaUJBQWlCLENBQXdCO0lBRXpDOztPQUVHO0lBUUgsY0FBYyxDQUFVO0lBRXhCOztPQUVHO0lBUUgsV0FBVyxDQUFVO0NBQ3RCO0FBakRELDhEQWlEQztBQXJDQztJQVJDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxvQ0FBb0M7UUFDakQsT0FBTyxFQUFFLDBCQUEwQjtRQUNuQyxJQUFJLEVBQUUsSUFBSTtLQUNYLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEdBQUU7SUFDUixJQUFBLHdCQUFJLEVBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDO2tEQUNBLElBQUksb0JBQUosSUFBSTtrRUFBQztBQVl0QjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxpQ0FBaUM7UUFDOUMsSUFBSSxFQUFFLCtDQUFxQjtRQUMzQixPQUFPLEVBQUUsK0NBQXFCLENBQUMsVUFBVTtLQUMxQyxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSx3QkFBTSxFQUFDLCtDQUFxQixDQUFDO2tEQUNYLCtDQUFxQixvQkFBckIsK0NBQXFCO29FQUFDO0FBWXpDO0lBUEMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLDJFQUEyRTtRQUN4RixPQUFPLEVBQUUsc0NBQXNDO1FBQy9DLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEVBQUMsR0FBRyxDQUFDOztpRUFDWTtBQVl4QjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxnREFBZ0Q7UUFDN0QsT0FBTyxFQUFFLHlFQUF5RTtRQUNsRixRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxHQUFFOzs4REFDVSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcbW9kdWxlc1xccGFnYW1lbnRvXFxkdG9zXFxjb25maXJtYWNhby1yZWNlYmltZW50by5kdG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBpUHJvcGVydHkgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuaW1wb3J0IHsgVHlwZSB9IGZyb20gJ2NsYXNzLXRyYW5zZm9ybWVyJztcbmltcG9ydCB7IElzRGF0ZSwgSXNFbnVtLCBJc05vdEVtcHR5LCBJc09wdGlvbmFsLCBJc1N0cmluZywgSXNVVUlEIH0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcbmltcG9ydCB7IE1ldG9kb0NvbmZpcm1hY2FvRW51bSB9IGZyb20gJy4uLy4uLy4uL2VudW1zL21ldG9kby1jb25maXJtYWNhby5lbnVtJztcblxuLyoqXG4gKiBEVE8gcGFyYSByZWdpc3RybyBkZSBjb25maXJtYcOnw6NvIGRlIHJlY2ViaW1lbnRvIGRlIHBhZ2FtZW50b1xuICogXG4gKiBFc3RlIERUTyDDqSB1dGlsaXphZG8gcGFyYSB2YWxpZGFyIG9zIGRhZG9zIGRlIGVudHJhZGEgYW8gcmVnaXN0cmFyXG4gKiBhIGNvbmZpcm1hw6fDo28gZGUgcmVjZWJpbWVudG8gZGUgdW0gcGFnYW1lbnRvIHBlbG8gYmVuZWZpY2nDoXJpby5cbiAqIFxuICogQGF1dGhvciBFcXVpcGUgUEdCZW5cbiAqL1xuZXhwb3J0IGNsYXNzIENvbmZpcm1hY2FvUmVjZWJpbWVudG9EdG8ge1xuICAvKipcbiAgICogRGF0YSBlbSBxdWUgYSBjb25maXJtYcOnw6NvIGZvaSByZWdpc3RyYWRhXG4gICAqL1xuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnRGF0YSBkYSBjb25maXJtYcOnw6NvIGRlIHJlY2ViaW1lbnRvJyxcbiAgICBleGFtcGxlOiAnMjAyNS0wNS0xOFQxNDozMDowMC4wMDBaJyxcbiAgICB0eXBlOiBEYXRlXG4gIH0pXG4gIEBJc05vdEVtcHR5KClcbiAgQElzRGF0ZSgpXG4gIEBUeXBlKCgpID0+IERhdGUpXG4gIGRhdGFDb25maXJtYWNhbzogRGF0ZTtcblxuICAvKipcbiAgICogTcOpdG9kbyB1dGlsaXphZG8gcGFyYSBjb25maXJtYXIgbyByZWNlYmltZW50b1xuICAgKi9cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ03DqXRvZG8gZGUgY29uZmlybWHDp8OjbyB1dGlsaXphZG8nLFxuICAgIGVudW06IE1ldG9kb0NvbmZpcm1hY2FvRW51bSxcbiAgICBleGFtcGxlOiBNZXRvZG9Db25maXJtYWNhb0VudW0uQVNTSU5BVFVSQVxuICB9KVxuICBASXNOb3RFbXB0eSgpXG4gIEBJc0VudW0oTWV0b2RvQ29uZmlybWFjYW9FbnVtKVxuICBtZXRvZG9Db25maXJtYWNhbzogTWV0b2RvQ29uZmlybWFjYW9FbnVtO1xuXG4gIC8qKlxuICAgKiBSZWZlcsOqbmNpYSBhbyBjaWRhZMOjbyBxdWUgcmVjZWJldSBvIGJlbmVmw61jaW8sIHNlIGRpZmVyZW50ZSBkbyBiZW5lZmljacOhcmlvIG9yaWdpbmFsXG4gICAqL1xuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnSUQgZG8gZGVzdGluYXTDoXJpbyBxdWUgcmVjZWJldSBvIHBhZ2FtZW50byAoc2UgZGlmZXJlbnRlIGRvIGJlbmVmaWNpw6FyaW8pJyxcbiAgICBleGFtcGxlOiAnMTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDAwJyxcbiAgICByZXF1aXJlZDogZmFsc2VcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNVVUlEKCc0JylcbiAgZGVzdGluYXRhcmlvSWQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIE9ic2VydmHDp8O1ZXMgYWRpY2lvbmFpcyBzb2JyZSBhIGNvbmZpcm1hw6fDo29cbiAgICovXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdPYnNlcnZhw6fDtWVzIHNvYnJlIGEgY29uZmlybWHDp8OjbyBkZSByZWNlYmltZW50bycsXG4gICAgZXhhbXBsZTogJ0JlbmVmaWNpw6FyaW8gY29uZmlybW91IHJlY2ViaW1lbnRvIGNvbSBhc3NpbmF0dXJhIG5vIGZvcm11bMOhcmlvIHBhZHLDo28uJyxcbiAgICByZXF1aXJlZDogZmFsc2VcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoKVxuICBvYnNlcnZhY29lcz86IHN0cmluZztcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==