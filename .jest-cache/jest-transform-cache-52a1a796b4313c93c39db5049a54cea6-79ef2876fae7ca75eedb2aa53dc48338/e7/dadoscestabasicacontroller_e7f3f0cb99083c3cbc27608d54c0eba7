8443028ad7027369d4af835d40e7c623
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DadosCestaBasicaController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../../auth/guards/roles.guard");
const dados_cesta_basica_service_1 = require("../services/dados-cesta-basica.service");
const create_dados_cesta_basica_dto_1 = require("../dto/create-dados-cesta-basica.dto");
const dados_cesta_basica_entity_1 = require("../../../entities/dados-cesta-basica.entity");
/**
 * Controlador para gerenciar dados específicos da Cesta Básica
 */
let DadosCestaBasicaController = class DadosCestaBasicaController {
    dadosCestaBasicaService;
    constructor(dadosCestaBasicaService) {
        this.dadosCestaBasicaService = dadosCestaBasicaService;
    }
    /**
     * Criar dados de cesta básica para uma solicitação
     */
    async create(createDto) {
        return this.dadosCestaBasicaService.create(createDto);
    }
    /**
     * Buscar dados de cesta básica por ID
     */
    async findOne(id) {
        return this.dadosCestaBasicaService.findOne(id);
    }
    /**
     * Buscar dados de cesta básica por solicitação
     */
    async findBySolicitacao(solicitacaoId) {
        return this.dadosCestaBasicaService.findBySolicitacao(solicitacaoId);
    }
    /**
     * Atualizar dados de cesta básica
     */
    async update(id, updateDto) {
        return this.dadosCestaBasicaService.update(id, updateDto);
    }
    /**
     * Remover dados de cesta básica
     */
    async remove(id) {
        return this.dadosCestaBasicaService.remove(id);
    }
};
exports.DadosCestaBasicaController = DadosCestaBasicaController;
__decorate([
    (0, common_1.Post)(),
    (0, swagger_1.ApiOperation)({
        summary: 'Criar dados de cesta básica',
        description: 'Cria dados específicos para solicitação de Cesta Básica',
    }),
    (0, swagger_1.ApiBody)({ type: create_dados_cesta_basica_dto_1.CreateDadosCestaBasicaDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.CREATED,
        description: 'Dados de cesta básica criados com sucesso',
        type: dados_cesta_basica_entity_1.DadosCestaBasica,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof create_dados_cesta_basica_dto_1.CreateDadosCestaBasicaDto !== "undefined" && create_dados_cesta_basica_dto_1.CreateDadosCestaBasicaDto) === "function" ? _b : Object]),
    __metadata("design:returntype", typeof (_c = typeof Promise !== "undefined" && Promise) === "function" ? _c : Object)
], DadosCestaBasicaController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de cesta básica por ID',
        description: 'Retorna os dados de cesta básica específicos pelo ID',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de cesta básica' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de cesta básica encontrados',
        type: dados_cesta_basica_entity_1.DadosCestaBasica,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de cesta básica não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], DadosCestaBasicaController.prototype, "findOne", null);
__decorate([
    (0, common_1.Get)('solicitacao/:solicitacaoId'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de cesta básica por solicitação',
        description: 'Retorna os dados de cesta básica de uma solicitação específica',
    }),
    (0, swagger_1.ApiParam)({ name: 'solicitacaoId', description: 'ID da solicitação' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de cesta básica encontrados',
        type: dados_cesta_basica_entity_1.DadosCestaBasica,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de cesta básica não encontrados para esta solicitação',
    }),
    __param(0, (0, common_1.Param)('solicitacaoId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], DadosCestaBasicaController.prototype, "findBySolicitacao", null);
__decorate([
    (0, common_1.Patch)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Atualizar dados de cesta básica',
        description: 'Atualiza dados específicos de uma solicitação de Cesta Básica',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de cesta básica' }),
    (0, swagger_1.ApiBody)({ type: create_dados_cesta_basica_dto_1.UpdateDadosCestaBasicaDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de cesta básica atualizados com sucesso',
        type: dados_cesta_basica_entity_1.DadosCestaBasica,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de cesta básica não encontrados',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_f = typeof create_dados_cesta_basica_dto_1.UpdateDadosCestaBasicaDto !== "undefined" && create_dados_cesta_basica_dto_1.UpdateDadosCestaBasicaDto) === "function" ? _f : Object]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], DadosCestaBasicaController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Remover dados de cesta básica',
        description: 'Remove dados específicos de cesta básica (apenas administradores)',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de cesta básica' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NO_CONTENT,
        description: 'Dados de cesta básica removidos com sucesso',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de cesta básica não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_h = typeof Promise !== "undefined" && Promise) === "function" ? _h : Object)
], DadosCestaBasicaController.prototype, "remove", null);
exports.DadosCestaBasicaController = DadosCestaBasicaController = __decorate([
    (0, swagger_1.ApiTags)('Benefícios'),
    (0, common_1.Controller)('dados-cesta-basica'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof dados_cesta_basica_service_1.DadosCestaBasicaService !== "undefined" && dados_cesta_basica_service_1.DadosCestaBasicaService) === "function" ? _a : Object])
], DadosCestaBasicaController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,