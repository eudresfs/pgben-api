2db79ca10192a58b71215de261cca09b
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateRequisitoDocumentoDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const enums_1 = require("@/enums");
/**
 * DTO para criação de requisito documental
 *
 * Define os documentos necessários para solicitação de um benefício
 */
class CreateRequisitoDocumentoDto {
    tipo_documento;
    nome;
    descricao;
    obrigatorio;
    observacoes;
}
exports.CreateRequisitoDocumentoDto = CreateRequisitoDocumentoDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo do documento requerido',
        enum: enums_1.TipoDocumentoEnum,
        example: enums_1.TipoDocumentoEnum.COMPROVANTE_RESIDENCIA,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de documento é obrigatório' }),
    (0, class_validator_1.IsEnum)(enums_1.TipoDocumentoEnum, { message: 'Tipo de documento inválido' }),
    __metadata("design:type", typeof (_a = typeof enums_1.TipoDocumentoEnum !== "undefined" && enums_1.TipoDocumentoEnum) === "function" ? _a : Object)
], CreateRequisitoDocumentoDto.prototype, "tipo_documento", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome personalizado do documento',
        example: 'Comprovante de Residência Atualizado',
        maxLength: 255,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome do documento é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser um texto' }),
    (0, class_validator_1.MaxLength)(255, { message: 'Nome deve ter no máximo 255 caracteres' }),
    __metadata("design:type", String)
], CreateRequisitoDocumentoDto.prototype, "nome", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Descrição do documento e suas especificações',
        example: 'Comprovante de residência dos últimos 3 meses (conta de água, luz ou telefone)',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Descrição é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser um texto' }),
    __metadata("design:type", String)
], CreateRequisitoDocumentoDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Indica se o documento é obrigatório para a solicitação',
        default: true,
    }),
    (0, class_validator_1.IsBoolean)({ message: 'Obrigatoriedade deve ser um booleano' }),
    __metadata("design:type", Boolean)
], CreateRequisitoDocumentoDto.prototype, "obrigatorio", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Observações adicionais sobre o documento',
        example: 'Caso não possua comprovante em seu nome, apresentar declaração do titular',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Observações devem ser um texto' }),
    __metadata("design:type", String)
], CreateRequisitoDocumentoDto.prototype, "observacoes", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGJlbmVmaWNpb1xcZHRvXFxjcmVhdGUtcmVxdWlzaXRvLWRvY3VtZW50by5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUFtRTtBQUNuRSxxREFPeUI7QUFDekIsbUNBQTRDO0FBRTVDOzs7O0dBSUc7QUFDSCxNQUFhLDJCQUEyQjtJQVF0QyxjQUFjLENBQW9CO0lBVWxDLElBQUksQ0FBUztJQVNiLFNBQVMsQ0FBUztJQU9sQixXQUFXLENBQVU7SUFTckIsV0FBVyxDQUFVO0NBQ3RCO0FBNUNELGtFQTRDQztBQXBDQztJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw2QkFBNkI7UUFDMUMsSUFBSSxFQUFFLHlCQUFpQjtRQUN2QixPQUFPLEVBQUUseUJBQWlCLENBQUMsc0JBQXNCO0tBQ2xELENBQUM7SUFDRCxJQUFBLDRCQUFVLEVBQUMsRUFBRSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsQ0FBQztJQUMxRCxJQUFBLHdCQUFNLEVBQUMseUJBQWlCLEVBQUUsRUFBRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQztrREFDckQseUJBQWlCLG9CQUFqQix5QkFBaUI7bUVBQUM7QUFVbEM7SUFSQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsaUNBQWlDO1FBQzlDLE9BQU8sRUFBRSxzQ0FBc0M7UUFDL0MsU0FBUyxFQUFFLEdBQUc7S0FDZixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLENBQUM7SUFDMUQsSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLENBQUM7SUFDL0MsSUFBQSwyQkFBUyxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxDQUFDOzt5REFDekQ7QUFTYjtJQVBDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw4Q0FBOEM7UUFDM0QsT0FBTyxFQUNMLGdGQUFnRjtLQUNuRixDQUFDO0lBQ0QsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLENBQUM7SUFDbEQsSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLENBQUM7OzhEQUNuQztBQU9sQjtJQUxDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSx3REFBd0Q7UUFDckUsT0FBTyxFQUFFLElBQUk7S0FDZCxDQUFDO0lBQ0QsSUFBQSwyQkFBUyxFQUFDLEVBQUUsT0FBTyxFQUFFLHNDQUFzQyxFQUFFLENBQUM7O2dFQUMxQztBQVNyQjtJQVBDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsV0FBVyxFQUFFLDBDQUEwQztRQUN2RCxPQUFPLEVBQ0wsMkVBQTJFO0tBQzlFLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsQ0FBQzs7Z0VBQ25DIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFxiZW5lZmljaW9cXGR0b1xcY3JlYXRlLXJlcXVpc2l0by1kb2N1bWVudG8uZHRvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwaVByb3BlcnR5LCBBcGlQcm9wZXJ0eU9wdGlvbmFsIH0gZnJvbSAnQG5lc3Rqcy9zd2FnZ2VyJztcbmltcG9ydCB7XG4gIElzTm90RW1wdHksXG4gIElzU3RyaW5nLFxuICBJc0Jvb2xlYW4sXG4gIElzT3B0aW9uYWwsXG4gIE1heExlbmd0aCxcbiAgSXNFbnVtLFxufSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuaW1wb3J0IHsgVGlwb0RvY3VtZW50b0VudW0gfSBmcm9tICdAL2VudW1zJztcblxuLyoqXG4gKiBEVE8gcGFyYSBjcmlhw6fDo28gZGUgcmVxdWlzaXRvIGRvY3VtZW50YWxcbiAqXG4gKiBEZWZpbmUgb3MgZG9jdW1lbnRvcyBuZWNlc3PDoXJpb3MgcGFyYSBzb2xpY2l0YcOnw6NvIGRlIHVtIGJlbmVmw61jaW9cbiAqL1xuZXhwb3J0IGNsYXNzIENyZWF0ZVJlcXVpc2l0b0RvY3VtZW50b0R0byB7XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdUaXBvIGRvIGRvY3VtZW50byByZXF1ZXJpZG8nLFxuICAgIGVudW06IFRpcG9Eb2N1bWVudG9FbnVtLFxuICAgIGV4YW1wbGU6IFRpcG9Eb2N1bWVudG9FbnVtLkNPTVBST1ZBTlRFX1JFU0lERU5DSUEsXG4gIH0pXG4gIEBJc05vdEVtcHR5KHsgbWVzc2FnZTogJ1RpcG8gZGUgZG9jdW1lbnRvIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgQElzRW51bShUaXBvRG9jdW1lbnRvRW51bSwgeyBtZXNzYWdlOiAnVGlwbyBkZSBkb2N1bWVudG8gaW52w6FsaWRvJyB9KVxuICB0aXBvX2RvY3VtZW50bzogVGlwb0RvY3VtZW50b0VudW07XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ05vbWUgcGVyc29uYWxpemFkbyBkbyBkb2N1bWVudG8nLFxuICAgIGV4YW1wbGU6ICdDb21wcm92YW50ZSBkZSBSZXNpZMOqbmNpYSBBdHVhbGl6YWRvJyxcbiAgICBtYXhMZW5ndGg6IDI1NSxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnTm9tZSBkbyBkb2N1bWVudG8gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnTm9tZSBkZXZlIHNlciB1bSB0ZXh0bycgfSlcbiAgQE1heExlbmd0aCgyNTUsIHsgbWVzc2FnZTogJ05vbWUgZGV2ZSB0ZXIgbm8gbcOheGltbyAyNTUgY2FyYWN0ZXJlcycgfSlcbiAgbm9tZTogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdEZXNjcmnDp8OjbyBkbyBkb2N1bWVudG8gZSBzdWFzIGVzcGVjaWZpY2HDp8O1ZXMnLFxuICAgIGV4YW1wbGU6XG4gICAgICAnQ29tcHJvdmFudGUgZGUgcmVzaWTDqm5jaWEgZG9zIMO6bHRpbW9zIDMgbWVzZXMgKGNvbnRhIGRlIMOhZ3VhLCBsdXogb3UgdGVsZWZvbmUpJyxcbiAgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnRGVzY3Jpw6fDo28gw6kgb2JyaWdhdMOzcmlhJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnRGVzY3Jpw6fDo28gZGV2ZSBzZXIgdW0gdGV4dG8nIH0pXG4gIGRlc2NyaWNhbzogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdJbmRpY2Egc2UgbyBkb2N1bWVudG8gw6kgb2JyaWdhdMOzcmlvIHBhcmEgYSBzb2xpY2l0YcOnw6NvJyxcbiAgICBkZWZhdWx0OiB0cnVlLFxuICB9KVxuICBASXNCb29sZWFuKHsgbWVzc2FnZTogJ09icmlnYXRvcmllZGFkZSBkZXZlIHNlciB1bSBib29sZWFubycgfSlcbiAgb2JyaWdhdG9yaW86IGJvb2xlYW47XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIGRlc2NyaXB0aW9uOiAnT2JzZXJ2YcOnw7VlcyBhZGljaW9uYWlzIHNvYnJlIG8gZG9jdW1lbnRvJyxcbiAgICBleGFtcGxlOlxuICAgICAgJ0Nhc28gbsOjbyBwb3NzdWEgY29tcHJvdmFudGUgZW0gc2V1IG5vbWUsIGFwcmVzZW50YXIgZGVjbGFyYcOnw6NvIGRvIHRpdHVsYXInLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdPYnNlcnZhw6fDtWVzIGRldmVtIHNlciB1bSB0ZXh0bycgfSlcbiAgb2JzZXJ2YWNvZXM/OiBzdHJpbmc7XG59XG4iXSwidmVyc2lvbiI6M30=