{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\controllers\\dados-cesta-basica.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\controllers\\dados-cesta-basica.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseUUIDPipe,\n  UseGuards,\n  HttpStatus,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiParam,\n  ApiBody,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../../../auth/guards/roles.guard';\nimport { Roles } from '../../../auth/decorators/role.decorator';\nimport { UserRole } from '../../../enums';\nimport { DadosCestaBasicaService } from '../services/dados-cesta-basica.service';\nimport {\n  CreateDadosCestaBasicaDto,\n  UpdateDadosCestaBasicaDto,\n} from '../dto/create-dados-cesta-basica.dto';\nimport { DadosCestaBasica } from '../../../entities/dados-cesta-basica.entity';\n\n/**\n * Controlador para gerenciar dados específicos da Cesta Básica\n */\n@ApiTags('Benefícios')\n@Controller('dados-cesta-basica')\n@UseGuards(JwtAuthGuard, RolesGuard)\n@ApiBearerAuth()\nexport class DadosCestaBasicaController {\n  constructor(\n    private readonly dadosCestaBasicaService: DadosCestaBasicaService,\n  ) {}\n\n  /**\n   * Criar dados de cesta básica para uma solicitação\n   */\n  @Post()\n  @ApiOperation({\n    summary: 'Criar dados de cesta básica',\n    description: 'Cria dados específicos para solicitação de Cesta Básica',\n  })\n  @ApiBody({ type: CreateDadosCestaBasicaDto })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Dados de cesta básica criados com sucesso',\n    type: DadosCestaBasica,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos fornecidos',\n  })\n  async create(\n    @Body() createDto: CreateDadosCestaBasicaDto,\n  ): Promise<DadosCestaBasica> {\n    return this.dadosCestaBasicaService.create(createDto);\n  }\n\n  /**\n   * Buscar dados de cesta básica por ID\n   */\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Buscar dados de cesta básica por ID',\n    description: 'Retorna os dados de cesta básica específicos pelo ID',\n  })\n  @ApiParam({ name: 'id', description: 'ID dos dados de cesta básica' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Dados de cesta básica encontrados',\n    type: DadosCestaBasica,\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de cesta básica não encontrados',\n  })\n  async findOne(\n    @Param('id', ParseUUIDPipe) id: string,\n  ): Promise<DadosCestaBasica> {\n    return this.dadosCestaBasicaService.findOne(id);\n  }\n\n  /**\n   * Buscar dados de cesta básica por solicitação\n   */\n  @Get('solicitacao/:solicitacaoId')\n  @ApiOperation({\n    summary: 'Buscar dados de cesta básica por solicitação',\n    description:\n      'Retorna os dados de cesta básica de uma solicitação específica',\n  })\n  @ApiParam({ name: 'solicitacaoId', description: 'ID da solicitação' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Dados de cesta básica encontrados',\n    type: DadosCestaBasica,\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de cesta básica não encontrados para esta solicitação',\n  })\n  async findBySolicitacao(\n    @Param('solicitacaoId', ParseUUIDPipe) solicitacaoId: string,\n  ): Promise<DadosCestaBasica> {\n    return this.dadosCestaBasicaService.findBySolicitacao(solicitacaoId);\n  }\n\n  /**\n   * Atualizar dados de cesta básica\n   */\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Atualizar dados de cesta básica',\n    description:\n      'Atualiza dados específicos de uma solicitação de Cesta Básica',\n  })\n  @ApiParam({ name: 'id', description: 'ID dos dados de cesta básica' })\n  @ApiBody({ type: UpdateDadosCestaBasicaDto })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Dados de cesta básica atualizados com sucesso',\n    type: DadosCestaBasica,\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de cesta básica não encontrados',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Dados inválidos fornecidos',\n  })\n  async update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() updateDto: UpdateDadosCestaBasicaDto,\n  ): Promise<DadosCestaBasica> {\n    return this.dadosCestaBasicaService.update(id, updateDto);\n  }\n\n  /**\n   * Remover dados de cesta básica\n   */\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Remover dados de cesta básica',\n    description:\n      'Remove dados específicos de cesta básica (apenas administradores)',\n  })\n  @ApiParam({ name: 'id', description: 'ID dos dados de cesta básica' })\n  @ApiResponse({\n    status: HttpStatus.NO_CONTENT,\n    description: 'Dados de cesta básica removidos com sucesso',\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    description: 'Dados de cesta básica não encontrados',\n  })\n  async remove(@Param('id', ParseUUIDPipe) id: string): Promise<void> {\n    return this.dadosCestaBasicaService.remove(id);\n  }\n}\n"],"version":3}