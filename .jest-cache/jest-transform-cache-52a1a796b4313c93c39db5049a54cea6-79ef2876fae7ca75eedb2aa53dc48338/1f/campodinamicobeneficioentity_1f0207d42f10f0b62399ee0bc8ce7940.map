{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\campo-dinamico-beneficio.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\campo-dinamico-beneficio.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport {\n  IsNotEmpty,\n  IsEnum,\n  IsOptional,\n  IsBoolean,\n  IsNumber,\n  Min,\n} from 'class-validator';\nimport { TipoBeneficio } from './tipo-beneficio.entity';\n\n/**\n * Enum para definir os tipos de dados suportados pelos campos dinâmicos\n */\nexport enum TipoDado {\n  STRING = 'string',\n  NUMBER = 'number',\n  BOOLEAN = 'boolean',\n  DATE = 'date',\n  ARRAY = 'array',\n  OBJECT = 'object',\n}\n\n/**\n * Entidade para campos dinâmicos de benefícios\n *\n * Permite definir campos específicos para cada tipo de benefício,\n * com validações e regras de negócio próprias.\n */\n@Entity('campo_dinamico_beneficio')\n@Index(['tipo_beneficio_id', 'nome'], { unique: true })\nexport class CampoDinamicoBeneficio {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'Tipo de benefício é obrigatório' })\n  tipo_beneficio_id: string;\n\n  @ManyToOne(\n    () => TipoBeneficio,\n    (tipoBeneficio) => tipoBeneficio.campos_dinamicos,\n  )\n  @JoinColumn({ name: 'tipo_beneficio_id' })\n  tipo_beneficio: TipoBeneficio;\n\n  @Column()\n  @IsNotEmpty({ message: 'Label é obrigatório' })\n  label: string;\n\n  @Column()\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  nome: string;\n\n  @Column({\n    type: 'enum',\n    enum: TipoDado,\n    enumName: 'tipo_dado',\n  })\n  @IsNotEmpty({ message: 'Tipo de dado é obrigatório' })\n  @IsEnum(TipoDado, { message: 'Tipo de dado inválido' })\n  tipo: TipoDado;\n\n  @Column({ default: false })\n  @IsBoolean({ message: 'Obrigatório deve ser um booleano' })\n  obrigatorio: boolean;\n\n  @Column('text', { nullable: true })\n  @IsOptional()\n  descricao: string;\n\n  @Column('jsonb', { nullable: true })\n  validacoes: {\n    min?: number;\n    max?: number;\n    minLength?: number;\n    maxLength?: number;\n    pattern?: string;\n    enum?: string[];\n    format?: string;\n  };\n\n  @Column({ default: 1 })\n  @IsNumber({}, { message: 'Ordem deve ser um número' })\n  @Min(1, { message: 'Ordem deve ser maior que zero' })\n  ordem: number;\n\n  @Column({ default: true })\n  @IsBoolean({ message: 'Ativo deve ser um booleano' })\n  ativo: boolean;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  removed_at: Date;\n\n  // Getters e Setters\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se o campo foi criado recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do registro em dias\n   */\n  getIdadeRegistroEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se o campo foi removido\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se o campo está ativo\n   */\n  isAtivo(): boolean {\n    return this.ativo && !this.removed_at;\n  }\n\n  /**\n   * Verifica se é um campo obrigatório\n   */\n  isObrigatorio(): boolean {\n    return this.obrigatorio;\n  }\n\n  /**\n   * Verifica se é um campo opcional\n   */\n  isOpcional(): boolean {\n    return !this.obrigatorio;\n  }\n\n  /**\n   * Verifica se é campo de texto\n   */\n  isCampoTexto(): boolean {\n    return this.tipo === TipoDado.STRING;\n  }\n\n  /**\n   * Verifica se é campo numérico\n   */\n  isCampoNumerico(): boolean {\n    return this.tipo === TipoDado.NUMBER;\n  }\n\n  /**\n   * Verifica se é campo booleano\n   */\n  isCampoBooleano(): boolean {\n    return this.tipo === TipoDado.BOOLEAN;\n  }\n\n  /**\n   * Verifica se é campo de data\n   */\n  isCampoData(): boolean {\n    return this.tipo === TipoDado.DATE;\n  }\n\n  /**\n   * Verifica se é campo de array\n   */\n  isCampoArray(): boolean {\n    return this.tipo === TipoDado.ARRAY;\n  }\n\n  /**\n   * Verifica se é campo de objeto\n   */\n  isCampoObjeto(): boolean {\n    return this.tipo === TipoDado.OBJECT;\n  }\n\n  /**\n   * Obtém a descrição do tipo de dado\n   */\n  getDescricaoTipoDado(): string {\n    const descricoes = {\n      [TipoDado.STRING]: 'Texto',\n      [TipoDado.NUMBER]: 'Número',\n      [TipoDado.BOOLEAN]: 'Verdadeiro/Falso',\n      [TipoDado.DATE]: 'Data',\n      [TipoDado.ARRAY]: 'Lista',\n      [TipoDado.OBJECT]: 'Objeto',\n    };\n    return descricoes[this.tipo] || 'Tipo não identificado';\n  }\n\n  /**\n   * Verifica se tem validações definidas\n   */\n  temValidacoes(): boolean {\n    return !!this.validacoes && Object.keys(this.validacoes).length > 0;\n  }\n\n  /**\n   * Verifica se tem validação de valor mínimo\n   */\n  temValidacaoMin(): boolean {\n    return (\n      this.temValidacoes() &&\n      this.validacoes.min !== undefined &&\n      this.validacoes.min !== null\n    );\n  }\n\n  /**\n   * Verifica se tem validação de valor máximo\n   */\n  temValidacaoMax(): boolean {\n    return (\n      this.temValidacoes() &&\n      this.validacoes.max !== undefined &&\n      this.validacoes.max !== null\n    );\n  }\n\n  /**\n   * Verifica se tem validação de comprimento mínimo\n   */\n  temValidacaoMinLength(): boolean {\n    return (\n      this.temValidacoes() &&\n      this.validacoes.minLength !== undefined &&\n      this.validacoes.minLength !== null\n    );\n  }\n\n  /**\n   * Verifica se tem validação de comprimento máximo\n   */\n  temValidacaoMaxLength(): boolean {\n    return (\n      this.temValidacoes() &&\n      this.validacoes.maxLength !== undefined &&\n      this.validacoes.maxLength !== null\n    );\n  }\n\n  /**\n   * Verifica se tem validação de padrão (regex)\n   */\n  temValidacaoPattern(): boolean {\n    return this.temValidacoes() && !!this.validacoes.pattern;\n  }\n\n  /**\n   * Verifica se tem validação de enum (lista de valores)\n   */\n  temValidacaoEnum(): boolean {\n    return (\n      this.temValidacoes() &&\n      !!this.validacoes.enum &&\n      this.validacoes.enum.length > 0\n    );\n  }\n\n  /**\n   * Verifica se tem validação de formato\n   */\n  temValidacaoFormat(): boolean {\n    return this.temValidacoes() && !!this.validacoes.format;\n  }\n\n  /**\n   * Obtém o valor mínimo\n   */\n  getValorMinimo(): number | null {\n    if (!this.temValidacaoMin()) return null;\n    return this.validacoes.min ?? null;\n  }\n\n  /**\n   * Obtém o valor máximo\n   */\n  getValorMaximo(): number | null {\n    if (!this.temValidacaoMax()) return null;\n    return this.validacoes.max ?? null;\n  }\n\n  /**\n   * Obtém o comprimento mínimo\n   */\n  getComprimentoMinimo(): number | null {\n    if (!this.temValidacaoMinLength()) return null;\n    return this.validacoes.minLength ?? null;\n  }\n\n  /**\n   * Obtém o comprimento máximo\n   */\n  getComprimentoMaximo(): number | null {\n    if (!this.temValidacaoMaxLength()) return null;\n    return this.validacoes.maxLength ?? null;\n  }\n\n  /**\n   * Obtém o padrão regex\n   */\n  getPadrao(): string | null {\n    if (!this.temValidacaoPattern()) return null;\n    return this.validacoes.pattern ?? null;\n  }\n\n  /**\n   * Obtém os valores do enum\n   */\n  getValoresEnum(): string[] {\n    if (!this.temValidacaoEnum()) return [];\n    return this.validacoes.enum ?? [];\n  }\n\n  /**\n   * Obtém o formato\n   */\n  getFormato(): string | null {\n    if (!this.temValidacaoFormat()) return null;\n    return this.validacoes.format ?? null;\n  }\n\n  /**\n   * Valida um valor contra as regras do campo\n   */\n  validarValor(valor: any): { valido: boolean; erros: string[] } {\n    const erros: string[] = [];\n\n    // Verifica se é obrigatório\n    if (\n      this.isObrigatorio() &&\n      (valor === null || valor === undefined || valor === '')\n    ) {\n      erros.push(`${this.label} é obrigatório`);\n      return { valido: false, erros };\n    }\n\n    // Se não tem valor e não é obrigatório, é válido\n    if (valor === null || valor === undefined || valor === '') {\n      return { valido: true, erros: [] };\n    }\n\n    // Validações por tipo\n    switch (this.tipo) {\n      case TipoDado.STRING:\n        if (typeof valor !== 'string') {\n          erros.push(`${this.label} deve ser um texto`);\n        } else {\n          const comprimentoMinimo = this.getComprimentoMinimo();\n          if (\n            this.temValidacaoMinLength() &&\n            comprimentoMinimo !== null &&\n            valor.length < comprimentoMinimo\n          ) {\n            erros.push(\n              `${this.label} deve ter pelo menos ${comprimentoMinimo} caracteres`,\n            );\n          }\n          const comprimentoMaximo = this.getComprimentoMaximo();\n          if (\n            this.temValidacaoMaxLength() &&\n            comprimentoMaximo !== null &&\n            valor.length > comprimentoMaximo\n          ) {\n            erros.push(\n              `${this.label} deve ter no máximo ${comprimentoMaximo} caracteres`,\n            );\n          }\n          if (this.temValidacaoPattern()) {\n            const padrao = this.getPadrao();\n            if (padrao !== null) {\n              const regex = new RegExp(padrao);\n              if (!regex.test(valor)) {\n                erros.push(`${this.label} não atende ao formato exigido`);\n              }\n            }\n          }\n          if (\n            this.temValidacaoEnum() &&\n            !this.getValoresEnum().includes(valor)\n          ) {\n            erros.push(\n              `${this.label} deve ser um dos valores: ${this.getValoresEnum().join(', ')}`,\n            );\n          }\n        }\n        break;\n\n      case TipoDado.NUMBER:\n        const numero = Number(valor);\n        if (isNaN(numero)) {\n          erros.push(`${this.label} deve ser um número`);\n        } else {\n          const valorMinimo = this.getValorMinimo();\n          if (\n            this.temValidacaoMin() &&\n            valorMinimo !== null &&\n            numero < valorMinimo\n          ) {\n            erros.push(\n              `${this.label} deve ser maior ou igual a ${valorMinimo}`,\n            );\n          }\n          const valorMaximo = this.getValorMaximo();\n          if (\n            this.temValidacaoMax() &&\n            valorMaximo !== null &&\n            numero > valorMaximo\n          ) {\n            erros.push(\n              `${this.label} deve ser menor ou igual a ${valorMaximo}`,\n            );\n          }\n        }\n        break;\n\n      case TipoDado.BOOLEAN:\n        if (typeof valor !== 'boolean') {\n          erros.push(`${this.label} deve ser verdadeiro ou falso`);\n        }\n        break;\n\n      case TipoDado.DATE:\n        const data = new Date(valor);\n        if (isNaN(data.getTime())) {\n          erros.push(`${this.label} deve ser uma data válida`);\n        }\n        break;\n\n      case TipoDado.ARRAY:\n        if (!Array.isArray(valor)) {\n          erros.push(`${this.label} deve ser uma lista`);\n        } else {\n          const valorMinimo = this.getValorMinimo();\n          const valorMaximo = this.getValorMaximo();\n          if (\n            this.temValidacaoMin() &&\n            valorMinimo !== null &&\n            valor.length < valorMinimo\n          ) {\n            erros.push(\n              `${this.label} deve ter pelo menos ${valorMinimo} itens`,\n            );\n          }\n          if (\n            this.temValidacaoMax() &&\n            valorMaximo !== null &&\n            valor.length > valorMaximo\n          ) {\n            erros.push(`${this.label} deve ter no máximo ${valorMaximo} itens`);\n          }\n        }\n        break;\n\n      case TipoDado.OBJECT:\n        if (typeof valor !== 'object' || Array.isArray(valor)) {\n          erros.push(`${this.label} deve ser um objeto`);\n        }\n        break;\n    }\n\n    return { valido: erros.length === 0, erros };\n  }\n\n  /**\n   * Verifica se pertence a um tipo de benefício\n   */\n  pertenceAoTipoBeneficio(tipoBeneficioId: string): boolean {\n    return this.tipo_beneficio_id === tipoBeneficioId;\n  }\n\n  /**\n   * Obtém um resumo do campo\n   */\n  getSummary(): string {\n    const tipo = this.getDescricaoTipoDado();\n    const obrigatoriedade = this.isObrigatorio() ? 'Obrigatório' : 'Opcional';\n    const status = this.isAtivo() ? 'Ativo' : 'Inativo';\n    return `${this.label} (${tipo}) - ${obrigatoriedade} - ${status}`;\n  }\n\n  /**\n   * Gera uma chave única para o campo\n   */\n  getUniqueKey(): string {\n    return `campo_${this.tipo_beneficio_id}_${this.nome}`;\n  }\n\n  /**\n   * Verifica se o campo é consistente\n   */\n  isConsistente(): boolean {\n    // Verifica se tem tipo de benefício\n    if (!this.tipo_beneficio_id) return false;\n\n    // Verifica se tem label\n    if (!this.label || this.label.trim().length === 0) return false;\n\n    // Verifica se tem nome\n    if (!this.nome || this.nome.trim().length === 0) return false;\n\n    // Verifica se tem tipo válido\n    if (!Object.values(TipoDado).includes(this.tipo)) return false;\n\n    // Verifica se a ordem é válida\n    if (this.ordem < 1) return false;\n\n    // Verifica validações se existirem\n    if (this.temValidacoes()) {\n      if (this.temValidacaoMin() && this.temValidacaoMax()) {\n        const valorMinimo = this.getValorMinimo();\n        const valorMaximo = this.getValorMaximo();\n        if (\n          valorMinimo !== null &&\n          valorMaximo !== null &&\n          valorMinimo > valorMaximo\n        ) {\n          return false;\n        }\n      }\n\n      if (this.temValidacaoMinLength() && this.temValidacaoMaxLength()) {\n        const comprimentoMinimo = this.getComprimentoMinimo();\n        const comprimentoMaximo = this.getComprimentoMaximo();\n        if (\n          comprimentoMinimo !== null &&\n          comprimentoMaximo !== null &&\n          comprimentoMinimo > comprimentoMaximo\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removido\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n\n    // Pode implementar lógica adicional aqui\n    // Por exemplo, verificar se tem dados associados\n\n    return true;\n  }\n\n  /**\n   * Clona o campo (sem ID)\n   */\n  clone(): Partial<CampoDinamicoBeneficio> {\n    return {\n      tipo_beneficio_id: this.tipo_beneficio_id,\n      label: this.label,\n      nome: this.nome,\n      tipo: this.tipo,\n      obrigatorio: this.obrigatorio,\n      descricao: this.descricao,\n      validacoes: this.validacoes\n        ? JSON.parse(JSON.stringify(this.validacoes))\n        : null,\n      ordem: this.ordem,\n      ativo: this.ativo,\n    };\n  }\n\n  /**\n   * Verifica se é um campo crítico\n   */\n  isCritico(): boolean {\n    // Campos obrigatórios são críticos\n    if (this.isObrigatorio()) return true;\n\n    // Campos com ordem baixa (primeiros) são mais críticos\n    if (this.ordem <= 3) return true;\n\n    return false;\n  }\n\n  /**\n   * Obtém a complexidade do campo baseada em validações\n   */\n  getComplexidade(): 'BAIXA' | 'MEDIA' | 'ALTA' {\n    let pontos = 0;\n\n    // Tipo de dado complexo\n    if (this.isCampoObjeto() || this.isCampoArray()) pontos += 2;\n\n    // Validações\n    if (this.temValidacoes()) {\n      pontos += Object.keys(this.validacoes).length;\n    }\n\n    // Obrigatório\n    if (this.isObrigatorio()) pontos += 1;\n\n    if (pontos <= 2) return 'BAIXA';\n    if (pontos <= 5) return 'MEDIA';\n    return 'ALTA';\n  }\n\n  /**\n   * Obtém a categoria do campo\n   */\n  getCategoria(): 'BASICO' | 'AVANCADO' | 'COMPLEXO' {\n    if (\n      this.isCampoTexto() ||\n      this.isCampoNumerico() ||\n      this.isCampoBooleano()\n    ) {\n      return this.temValidacoes() ? 'AVANCADO' : 'BASICO';\n    }\n    return 'COMPLEXO';\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<CampoDinamicoBeneficio> {\n    return {\n      id: this.id,\n      label: this.label,\n      nome: this.nome,\n      tipo: this.tipo,\n      obrigatorio: this.obrigatorio,\n      ordem: this.ordem,\n      ativo: this.ativo,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Obtém sugestões de melhoria para o campo\n   */\n  getSugestoesMelhoria(): string[] {\n    const sugestoes: string[] = [];\n\n    if (!this.descricao || this.descricao.trim().length === 0) {\n      sugestoes.push('Adicionar descrição detalhada do campo');\n    }\n\n    if (\n      !this.temValidacoes() &&\n      (this.isCampoTexto() || this.isCampoNumerico())\n    ) {\n      sugestoes.push('Definir validações para o campo');\n    }\n\n    if (this.isCampoTexto() && !this.temValidacaoMaxLength()) {\n      sugestoes.push('Definir comprimento máximo para campos de texto');\n    }\n\n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar e corrigir inconsistências nos dados');\n    }\n\n    if (!this.ativo) {\n      sugestoes.push('Considerar reativar o campo se necessário');\n    }\n\n    return sugestoes;\n  }\n\n  /**\n   * Verifica se precisa de atualização (dados muito antigos)\n   */\n  precisaAtualizacao(): boolean {\n    // Dados com mais de 6 meses podem precisar de revisão\n    const seisMesesAtras = new Date();\n    seisMesesAtras.setMonth(seisMesesAtras.getMonth() - 6);\n    return this.updated_at < seisMesesAtras;\n  }\n\n  /**\n   * Obtém estatísticas do campo\n   */\n  getEstatisticas(): {\n    categoria: string;\n    complexidade: string;\n    tipo: string;\n    obrigatorio: boolean;\n    temValidacoes: boolean;\n    numeroValidacoes: number;\n    ordem: number;\n  } {\n    return {\n      categoria: this.getCategoria(),\n      complexidade: this.getComplexidade(),\n      tipo: this.getDescricaoTipoDado(),\n      obrigatorio: this.isObrigatorio(),\n      temValidacoes: this.temValidacoes(),\n      numeroValidacoes: this.temValidacoes()\n        ? Object.keys(this.validacoes).length\n        : 0,\n      ordem: this.ordem,\n    };\n  }\n}\n"],"version":3}