{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\configs\\configuration.ts","mappings":";;AAAA,2BAAkC;AAClC,+BAA4B;AAE5B,MAAM,WAAW,GAAG,GAAG,EAAE;IACvB,IAAI,CAAC;QACH,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QACtD,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;QAExD,IAAI,CAAC,aAAa,IAAI,CAAC,cAAc,EAAE,CAAC;YACtC,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAC9D,CAAC;QAED,0CAA0C;QAC1C,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QAClC,MAAM,iBAAiB,GAAG,IAAA,WAAI,EAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC3D,MAAM,kBAAkB,GAAG,IAAA,WAAI,EAAC,WAAW,EAAE,cAAc,CAAC,CAAC;QAE7D,6BAA6B;QAC7B,MAAM,SAAS,GAAG,IAAA,iBAAY,EAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;QACjE,MAAM,UAAU,GAAG,IAAA,iBAAY,EAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;QAEnE,6BAA6B;QAC7B,IACE,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YACvC,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAC3C,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QAED,IACE,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC;YACzC,CAAC,UAAU,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAC7C,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QAED,OAAO;YACL,SAAS;YACT,UAAU;SACX,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,IAAI,KAAK,CACb,oCAAoC,KAAK,CAAC,OAAO,uEAAuE,CACzH,CAAC;IACJ,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,GAAQ,EAAE;IACvB,MAAM,OAAO,GAAG,WAAW,EAAE,CAAC;IAE9B,OAAO;QACL,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QACxB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;QAC1B,QAAQ,EAAE;YACR,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;YACzB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;YACzE,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;YACzB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;YACzB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;SAC1B;QACD,GAAG,EAAE;YACH,GAAG,OAAO;YACV,uBAAuB,EAAE,QAAQ,CAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,IAAI,MAAM,EACjD,EAAE,CACH;YACD,wBAAwB,EAAE,QAAQ,CAChC,OAAO,CAAC,GAAG,CAAC,4BAA4B,IAAI,QAAQ,EACpD,EAAE,CACH;SACF;QACD,wBAAwB,EACtB,OAAO,CAAC,GAAG,CAAC,2BAA2B,IAAI,OAAO;KACrD,CAAC;AACJ,CAAC,CAAC","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\configs\\configuration.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { join } from 'path';\n\nconst loadJwtKeys = () => {\n  try {\n    const publicKeyPath = process.env.JWT_PUBLIC_KEY_PATH;\n    const privateKeyPath = process.env.JWT_PRIVATE_KEY_PATH;\n\n    if (!publicKeyPath || !privateKeyPath) {\n      throw new Error('Caminhos das chaves JWT não configurados');\n    }\n\n    // Obter o caminho absoluto para as chaves\n    const projectRoot = process.cwd();\n    const fullPublicKeyPath = join(projectRoot, publicKeyPath);\n    const fullPrivateKeyPath = join(projectRoot, privateKeyPath);\n\n    // Ler as chaves dos arquivos\n    const publicKey = readFileSync(fullPublicKeyPath, 'utf8').trim();\n    const privateKey = readFileSync(fullPrivateKeyPath, 'utf8').trim();\n\n    // Validar formato das chaves\n    if (\n      !publicKey.includes('BEGIN PUBLIC KEY') &&\n      !publicKey.includes('BEGIN RSA PUBLIC KEY')\n    ) {\n      throw new Error('Formato inválido para chave pública');\n    }\n\n    if (\n      !privateKey.includes('BEGIN PRIVATE KEY') &&\n      !privateKey.includes('BEGIN RSA PRIVATE KEY')\n    ) {\n      throw new Error('Formato inválido para chave privada');\n    }\n\n    return {\n      publicKey,\n      privateKey,\n    };\n  } catch (error) {\n    console.error('Falha ao carregar as chaves JWT:', error);\n    throw new Error(\n      `Falha ao carregar as chaves JWT: ${error.message}. Verifique se os caminhos estão corretos e as permissões de leitura.`,\n    );\n  }\n};\n\nexport default (): any => {\n  const jwtKeys = loadJwtKeys();\n\n  return {\n    env: process.env.APP_ENV,\n    port: process.env.APP_PORT,\n    database: {\n      host: process.env.DB_HOST,\n      port: process.env.DB_PORT ? parseInt(process.env.DB_PORT, 10) : undefined,\n      name: process.env.DB_NAME,\n      user: process.env.DB_USER,\n      pass: process.env.DB_PASS,\n    },\n    jwt: {\n      ...jwtKeys,\n      accessTokenExpiresInSec: parseInt(\n        process.env.JWT_ACCESS_TOKEN_EXP_IN_SEC || '3600',\n        10,\n      ),\n      refreshTokenExpiresInSec: parseInt(\n        process.env.JWT_REFRESH_TOKEN_EXP_IN_SEC || '604800',\n        10,\n      ),\n    },\n    defaultAdminUserPassword:\n      process.env.DEFAULT_ADMIN_USER_PASSWORD || 'admin',\n  };\n};\n"],"version":3}