{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-dados-sociais.dto.ts","mappings":";;;;;;;;;;;;;AAAA,6CAA8C;AAC9C,qDAayB;AACzB,yDAAoD;AACpD,wEAAoE;AACpE,kFAA6E;AAC7E,8EAAwE;AAExE;;;;;GAKG;AACH,MAAa,qBAAqB;IA6BhC,YAAY,CAAmB;IAe/B,mBAAmB,CAAW;IAsC9B,KAAK,CAAU;IAgCf,QAAQ,CAAU;IAclB,UAAU,GAAY,KAAK,CAAC;IAsC5B,SAAS,CAAU;IAcnB,UAAU,GAAY,KAAK,CAAC;IAW5B,QAAQ,CAAU;IA8BlB,SAAS,CAAU;IAWnB,wBAAwB,CAAU;IAelC,kCAAkC,CAAW;IAmC7C,iBAAiB,CAAwB;IAWzC,aAAa,CAAU;IAevB,sBAAsB,CAAW;IAWjC,uBAAuB,CAAU;IAWjC,WAAW,CAAU;CACtB;AA3UD,sDA2UC;AA9SC;IA5BC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,kCAAkC;QAC/C,IAAI,EAAE,oCAAgB;QACtB,OAAO,EAAE,oCAAgB,CAAC,cAAc;QACxC,QAAQ,EAAE;YACR,UAAU,EAAE;gBACV,KAAK,EAAE,oCAAgB,CAAC,UAAU;gBAClC,WAAW,EAAE,uCAAuC;aACrD;YACD,oBAAoB,EAAE;gBACpB,KAAK,EAAE,oCAAgB,CAAC,oBAAoB;gBAC5C,WAAW,EAAE,0CAA0C;aACxD;YACD,cAAc,EAAE;gBACd,KAAK,EAAE,oCAAgB,CAAC,cAAc;gBACtC,WAAW,EAAE,uBAAuB;aACrC;YACD,iBAAiB,EAAE;gBACjB,KAAK,EAAE,oCAAgB,CAAC,iBAAiB;gBACzC,WAAW,EAAE,0BAA0B;aACxC;SACF;KACF,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;IACrD,IAAA,4BAAW,EAAC,oCAAgB,EAAE;QAC7B,QAAQ,EAAE,cAAc;QACxB,aAAa,EAAE,KAAK;KACrB,CAAC;kDACY,oCAAgB,oBAAhB,oCAAgB;2DAAC;AAe/B;IAbC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,sDAAsD;QACnE,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,0DAA0D,EAAE,CAAC;IAClF,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;kEAC4B;AAsC9B;IApCC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,kCAAkC;QAC/C,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;YACR,SAAS,EAAE;gBACT,KAAK,EAAE,CAAC;gBACR,WAAW,EAAE,mBAAmB;aACjC;YACD,cAAc,EAAE;gBACd,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,mBAAmB;aACjC;YACD,WAAW,EAAE;gBACX,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,aAAa;aAC3B;SACF;KACF,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,gEAAgE,EAAE,CAAC;IAChH,IAAA,qBAAG,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IAClD,IAAA,qBAAG,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC;IACnE,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,EAAE,CAAC;YAC1D,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;oDACa;AAgCf;IA9BC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,kCAAkC;QAC/C,OAAO,EAAE,qBAAqB;QAC9B,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;YACR,eAAe,EAAE;gBACf,KAAK,EAAE,qBAAqB;gBAC5B,WAAW,EAAE,iCAAiC;aAC/C;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,UAAU;gBACjB,WAAW,EAAE,0BAA0B;aACxC;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,mBAAmB;gBAC1B,WAAW,EAAE,uBAAuB;aACrC;YACD,YAAY,EAAE;gBACZ,KAAK,EAAE,cAAc;gBACrB,WAAW,EAAE,2BAA2B;aACzC;SACF;KACF,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;IACnD,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;IACzE,IAAA,yBAAO,EAAC,2BAA2B,EAAE;QACpC,OAAO,EAAE,yEAAyE;KACnF,CAAC;;uDACgB;AAclB;IAZC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,mDAAmD;QAChE,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;KACf,CAAC;IACD,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,iDAAiD,EAAE,CAAC;IACzE,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;yDAC0B;AAsC5B;IApCC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,iDAAiD;QAC9D,OAAO,EAAE,MAAM;QACf,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,QAAQ;QACjB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;YACR,YAAY,EAAE;gBACZ,KAAK,EAAE,MAAM;gBACb,WAAW,EAAE,gCAAgC;aAC9C;YACD,WAAW,EAAE;gBACX,KAAK,EAAE,MAAM;gBACb,WAAW,EAAE,uCAAuC;aACrD;YACD,UAAU,EAAE;gBACV,KAAK,EAAE,MAAM;gBACb,WAAW,EAAE,gCAAgC;aAC9C;SACF;KACF,CAAC;IACD,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC;IACxC,IAAA,0BAAQ,EAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,uEAAuE,EAAE,CAAC;IACvH,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,uDAAuD,EAAE,CAAC;IAChF,IAAA,qBAAG,EAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;IACxE,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,EAAE,CAAC;YAC1D,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;wDACiB;AAcnB;IAZC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8DAA8D;QAC3E,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;KACf,CAAC;IACD,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,iDAAiD,EAAE,CAAC;IACzE,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;yDAC0B;AAW5B;IATC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,gDAAgD;QAC7D,OAAO,EAAE,wBAAwB;QACjC,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC;IACxC,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC;IACtD,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,+CAA+C,EAAE,CAAC;;uDAC3D;AA8BlB;IA5BC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8BAA8B;QAC3C,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,QAAQ;QACjB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;YACR,cAAc,EAAE;gBACd,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,wCAAwC;aACtD;SACF;KACF,CAAC;IACD,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC;IACxC,IAAA,0BAAQ,EAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,uEAAuE,EAAE,CAAC;IACvH,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,uDAAuD,EAAE,CAAC;IAChF,IAAA,qBAAG,EAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;IACxE,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,EAAE,CAAC;YAC1D,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;wDACiB;AAWnB;IATC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,gEAAgE;QAC7E,OAAO,EAAE,wBAAwB;QACjC,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;IACnE,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,4DAA4D,EAAE,CAAC;;uEACxD;AAelC;IAbC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,qEAAqE;QAClF,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,yEAAyE,EAAE,CAAC;IACjG,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;iFAC2C;AAmC7C;IAjCC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,uCAAuC;QACpD,IAAI,EAAE,6CAAoB;QAC1B,OAAO,EAAE,6CAAoB,CAAC,YAAY;QAC1C,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;YACR,YAAY,EAAE;gBACZ,KAAK,EAAE,6CAAoB,CAAC,YAAY;gBACxC,WAAW,EAAE,0BAA0B;aACxC;YACD,gBAAgB,EAAE;gBAChB,KAAK,EAAE,6CAAoB,CAAC,gBAAgB;gBAC5C,WAAW,EAAE,iCAAiC;aAC/C;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,6CAAoB,CAAC,QAAQ;gBACpC,WAAW,EAAE,sBAAsB;aACpC;YACD,UAAU,EAAE;gBACV,KAAK,EAAE,6CAAoB,CAAC,UAAU;gBACtC,WAAW,EAAE,mBAAmB;aACjC;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,6CAAoB,CAAC,MAAM;gBAClC,WAAW,EAAE,qCAAqC;aACnD;SACF;KACF,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,4BAAW,EAAC,6CAAoB,EAAE;QACjC,QAAQ,EAAE,sBAAsB;QAChC,aAAa,EAAE,KAAK;KACrB,CAAC;kDACkB,6CAAoB,oBAApB,6CAAoB;gEAAC;AAWzC;IATC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,4CAA4C;QACzD,OAAO,EAAE,iBAAiB;QAC1B,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,oCAAoC,EAAE,CAAC;IAC3D,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,oDAAoD,EAAE,CAAC;;4DAC3D;AAevB;IAbC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,kEAAkE;QAC/E,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,6DAA6D,EAAE,CAAC;IACrF,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;QACxC,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;;qEAC+B;AAWjC;IATC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8CAA8C;QAC3D,OAAO,EAAE,kBAAkB;QAC3B,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,8CAA8C,EAAE,CAAC;IACrE,IAAA,2BAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,8DAA8D,EAAE,CAAC;;sEAC3D;AAWjC;IATC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,gDAAgD;QAC7D,OAAO,EAAE,+CAA+C;QACxD,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC;IACvD,IAAA,2BAAS,EAAC,IAAI,EAAE,EAAE,OAAO,EAAE,iDAAiD,EAAE,CAAC;;0DAC3D","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\create-dados-sociais.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsOptional,\n  IsNumber,\n  Min,\n  Max,\n  IsEnum,\n  IsString,\n  IsBoolean,\n  ValidateIf,\n  MaxLength,\n  IsPositive,\n  Matches,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport { EscolaridadeEnum } from '../../../enums/escolaridade.enum';\nimport { SituacaoTrabalhoEnum } from '../../../enums/situacao-trabalho.enum';\nimport { IsEnumValue } from '../../../shared/validators/enum-validator';\n\n/**\n * DTO para criação de dados sociais de um cidadão\n * \n * Contém todas as informações socioeconômicas necessárias para\n * caracterizar a situação social do cidadão e sua família.\n */\nexport class CreateDadosSociaisDto {\n  @ApiProperty({\n    description: 'Nível de escolaridade do cidadão',\n    enum: EscolaridadeEnum,\n    example: EscolaridadeEnum.MEDIO_COMPLETO,\n    examples: {\n      analfabeto: {\n        value: EscolaridadeEnum.ANALFABETO,\n        description: 'Cidadão que não sabe ler nem escrever'\n      },\n      fundamental_completo: {\n        value: EscolaridadeEnum.FUNDAMENTAL_COMPLETO,\n        description: 'Ensino fundamental completo (até 9º ano)'\n      },\n      medio_completo: {\n        value: EscolaridadeEnum.MEDIO_COMPLETO,\n        description: 'Ensino médio completo'\n      },\n      superior_completo: {\n        value: EscolaridadeEnum.SUPERIOR_COMPLETO,\n        description: 'Ensino superior completo'\n      }\n    }\n  })\n  @IsNotEmpty({ message: 'Escolaridade é obrigatória' })\n  @IsEnumValue(EscolaridadeEnum, {\n    enumName: 'Escolaridade',\n    caseSensitive: false,\n  })\n  escolaridade: EscolaridadeEnum;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão faz parte de público prioritário',\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo publico_prioritario deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  publico_prioritario?: boolean;\n\n  @ApiProperty({\n    description: 'Renda mensal do cidadão em reais',\n    example: 1500.50,\n    minimum: 0,\n    maximum: 999999.99,\n    required: false,\n    examples: {\n      sem_renda: {\n        value: 0,\n        description: 'Cidadão sem renda'\n      },\n      salario_minimo: {\n        value: 1320.00,\n        description: 'Um salário mínimo'\n      },\n      renda_media: {\n        value: 2500.00,\n        description: 'Renda média'\n      }\n    }\n  })\n  @IsOptional()\n  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Renda deve ser um número válido com no máximo 2 casas decimais' })\n  @Min(0, { message: 'Renda não pode ser negativa' })\n  @Max(999999.99, { message: 'Renda não pode exceder R$ 999.999,99' })\n  @Type(() => Number)\n  @Transform(({ value }) => {\n    if (value === null || value === undefined || value === '') {\n      return undefined;\n    }\n    if (typeof value === 'string') {\n      const parsed = parseFloat(value.replace(',', '.'));\n      return isNaN(parsed) ? value : parsed;\n    }\n    return value;\n  })\n  renda?: number;\n\n  @ApiProperty({\n    description: 'Ocupação ou profissão do cidadão',\n    example: 'Auxiliar de limpeza',\n    maxLength: 255,\n    required: false,\n    examples: {\n      servicos_gerais: {\n        value: 'Auxiliar de limpeza',\n        description: 'Profissional de serviços gerais'\n      },\n      comercio: {\n        value: 'Vendedor',\n        description: 'Profissional do comércio'\n      },\n      autonomo: {\n        value: 'Manicure autônoma',\n        description: 'Profissional autônomo'\n      },\n      desempregado: {\n        value: 'Desempregado',\n        description: 'Pessoa sem ocupação atual'\n      }\n    }\n  })\n  @IsOptional()\n  @IsString({ message: 'Ocupação deve ser um texto' })\n  @MaxLength(255, { message: 'Ocupação deve ter no máximo 255 caracteres' })\n  @Matches(/^[a-zA-ZÀ-ÿ0-9\\s\\-\\.\\,]*$/, { \n    message: 'Ocupação deve conter apenas letras, números, espaços e pontuação básica' \n  })\n  ocupacao?: string;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão recebe Programa Bolsa Família',\n    example: false,\n    default: false,\n  })\n  @IsBoolean({ message: 'O campo recebe_pbf deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  recebe_pbf: boolean = false;\n\n  @ApiProperty({\n    description: 'Valor mensal recebido do Programa Bolsa Família',\n    example: 400.00,\n    minimum: 0,\n    maximum: 10000.00,\n    required: false,\n    examples: {\n      valor_basico: {\n        value: 142.00,\n        description: 'Valor básico do Auxílio Brasil'\n      },\n      valor_medio: {\n        value: 400.00,\n        description: 'Valor médio com benefícios adicionais'\n      },\n      valor_alto: {\n        value: 600.00,\n        description: 'Valor com múltiplos benefícios'\n      }\n    }\n  })\n  @ValidateIf((o) => o.recebe_pbf === true)\n  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Valor do PBF deve ser um número válido com no máximo 2 casas decimais' })\n  @IsPositive({ message: 'Valor do PBF deve ser maior que zero quando informado' })\n  @Max(10000.00, { message: 'Valor do PBF não pode exceder R$ 10.000,00' })\n  @Type(() => Number)\n  @Transform(({ value }) => {\n    if (value === null || value === undefined || value === '') {\n      return undefined;\n    }\n    if (typeof value === 'string') {\n      const parsed = parseFloat(value.replace(',', '.'));\n      return isNaN(parsed) ? value : parsed;\n    }\n    return value;\n  })\n  valor_pbf?: number;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão recebe Benefício de Prestação Continuada',\n    example: false,\n    default: false,\n  })\n  @IsBoolean({ message: 'O campo recebe_bpc deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  recebe_bpc: boolean = false;\n\n  @ApiProperty({\n    description: 'Tipo do BPC recebido (idoso, deficiente, etc.)',\n    example: 'Pessoa com deficiência',\n    maxLength: 100,\n    required: false,\n  })\n  @ValidateIf((o) => o.recebe_bpc === true)\n  @IsString({ message: 'Tipo do BPC deve ser um texto' })\n  @MaxLength(100, { message: 'Tipo do BPC deve ter no máximo 100 caracteres' })\n  tipo_bpc?: string;\n\n  @ApiProperty({\n    description: 'Valor mensal recebido do BPC',\n    example: 1320.00,\n    minimum: 0,\n    maximum: 10000.00,\n    required: false,\n    examples: {\n      salario_minimo: {\n        value: 1320.00,\n        description: 'Valor padrão do BPC (1 salário mínimo)'\n      }\n    }\n  })\n  @ValidateIf((o) => o.recebe_bpc === true)\n  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Valor do BPC deve ser um número válido com no máximo 2 casas decimais' })\n  @IsPositive({ message: 'Valor do BPC deve ser maior que zero quando informado' })\n  @Max(10000.00, { message: 'Valor do BPC não pode exceder R$ 10.000,00' })\n  @Type(() => Number)\n  @Transform(({ value }) => {\n    if (value === null || value === undefined || value === '') {\n      return undefined;\n    }\n    if (typeof value === 'string') {\n      const parsed = parseFloat(value.replace(',', '.'));\n      return isNaN(parsed) ? value : parsed;\n    }\n    return value;\n  })\n  valor_bpc?: number;\n\n  @ApiProperty({\n    description: 'Curso profissionalizante que o cidadão possui ou está cursando',\n    example: 'Técnico em Informática',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Curso profissionalizante deve ser um texto' })\n  @MaxLength(255, { message: 'Curso profissionalizante deve ter no máximo 255 caracteres' })\n  curso_profissionalizante?: string;\n\n  @ApiProperty({\n    description: 'Indica se o cidadão tem interesse em fazer curso profissionalizante',\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo interesse_curso_profissionalizante deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  interesse_curso_profissionalizante?: boolean;\n\n  @ApiProperty({\n    description: 'Situação atual de trabalho do cidadão',\n    enum: SituacaoTrabalhoEnum,\n    example: SituacaoTrabalhoEnum.DESEMPREGADO,\n    required: false,\n    examples: {\n      desempregado: {\n        value: SituacaoTrabalhoEnum.DESEMPREGADO,\n        description: 'Pessoa sem emprego atual'\n      },\n      empregado_formal: {\n        value: SituacaoTrabalhoEnum.EMPREGADO_FORMAL,\n        description: 'Empregado com carteira assinada'\n      },\n      autonomo: {\n        value: SituacaoTrabalhoEnum.AUTONOMO,\n        description: 'Trabalhador autônomo'\n      },\n      aposentado: {\n        value: SituacaoTrabalhoEnum.APOSENTADO,\n        description: 'Pessoa aposentada'\n      },\n      do_lar: {\n        value: SituacaoTrabalhoEnum.DO_LAR,\n        description: 'Pessoa dedicada aos cuidados do lar'\n      }\n    }\n  })\n  @IsOptional()\n  @IsEnumValue(SituacaoTrabalhoEnum, {\n    enumName: 'Situação de Trabalho',\n    caseSensitive: false,\n  })\n  situacao_trabalho?: SituacaoTrabalhoEnum;\n\n  @ApiProperty({\n    description: 'Área de trabalho ou interesse profissional',\n    example: 'Serviços gerais',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Área de trabalho deve ser um texto' })\n  @MaxLength(255, { message: 'Área de trabalho deve ter no máximo 255 caracteres' })\n  area_trabalho?: string;\n\n  @ApiProperty({\n    description: 'Indica se há familiar apto para trabalhar na composição familiar',\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean({ message: 'O campo familiar_apto_trabalho deve ser verdadeiro ou falso' })\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  familiar_apto_trabalho?: boolean;\n\n  @ApiProperty({\n    description: 'Área de interesse profissional de familiares',\n    example: 'Construção civil',\n    maxLength: 255,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Área de interesse familiar deve ser um texto' })\n  @MaxLength(255, { message: 'Área de interesse familiar deve ter no máximo 255 caracteres' })\n  area_interesse_familiar?: string;\n\n  @ApiProperty({\n    description: 'Observações adicionais sobre a situação social',\n    example: 'Família em situação de vulnerabilidade social',\n    maxLength: 1000,\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Observações devem ser um texto' })\n  @MaxLength(1000, { message: 'Observações devem ter no máximo 1000 caracteres' })\n  observacoes?: string;\n}"],"version":3}