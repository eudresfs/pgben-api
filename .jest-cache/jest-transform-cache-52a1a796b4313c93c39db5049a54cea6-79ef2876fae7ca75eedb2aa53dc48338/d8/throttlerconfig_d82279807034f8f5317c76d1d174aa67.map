{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\config\\throttler.config.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\config\\throttler.config.ts"],"sourcesContent":["import { ConfigService } from '@nestjs/config';\nimport { ThrottlerModuleOptions } from '@nestjs/throttler';\n\n/**\n * Configuração do Rate Limiting para o Sistema SEMTAS\n * \n * Implementa diferentes limites para diferentes tipos de endpoints:\n * - Autenticação: Mais restritivo para prevenir ataques de força bruta\n * - API Geral: Limite padrão para operações normais\n * - Upload: Limite específico para uploads de documentos\n * \n * Utiliza Redis como storage para permitir rate limiting distribuído\n */\nexport const createThrottlerConfig = (\n  configService: ConfigService,\n): ThrottlerModuleOptions => {\n  const nodeEnv = configService.get<string>('NODE_ENV', 'development');\n  \n  // Configuração do throttler com armazenamento em memória\n  const config: ThrottlerModuleOptions = {\n    throttlers: [\n      {\n        name: 'default',\n        ttl: configService.get<number>('THROTTLE_TTL', 60) * 1000, // Converter para ms\n        limit: configService.get<number>('THROTTLE_LIMIT', 100),\n      },\n      {\n        name: 'auth',\n        ttl: configService.get<number>('THROTTLE_AUTH_TTL', 300) * 1000, // 5 minutos\n        limit: configService.get<number>('THROTTLE_AUTH_LIMIT', 5), // 5 tentativas por 5 min\n      },\n      {\n        name: 'upload',\n        ttl: configService.get<number>('THROTTLE_UPLOAD_TTL', 60) * 1000, // 1 minuto\n        limit: configService.get<number>('THROTTLE_UPLOAD_LIMIT', 10), // 10 uploads por minuto\n      },\n      {\n        name: 'api',\n        ttl: configService.get<number>('THROTTLE_API_TTL', 60) * 1000, // 1 minuto\n        limit: configService.get<number>('THROTTLE_API_LIMIT', 200), // 200 requests por minuto\n      },\n    ],\n    skipIf: (context) => {\n      // Pular rate limiting em desenvolvimento se configurado\n      if (nodeEnv === 'development') {\n        const skipInDev = configService.get<boolean>('THROTTLE_SKIP_DEV', false);\n        if (skipInDev) {\n          return true;\n        }\n      }\n      \n      // Pular para health checks\n      const request = context.switchToHttp().getRequest();\n      const isHealthCheck = request.url?.includes('/health') || \n                           request.url?.includes('/metrics') ||\n                           request.url?.includes('/status');\n      \n      return isHealthCheck;\n    },\n    errorMessage: 'Muitas tentativas. Tente novamente em alguns minutos.',\n  };\n\n  console.log('ℹ️ Rate limiting configurado com armazenamento em memória');\n  return config;\n};\n\n/**\n * Configuração de rate limiting específica para endpoints de autenticação\n */\nexport const AUTH_THROTTLE_CONFIG = {\n  default: {\n    limit: 5,\n    ttl: 300000, // 5 minutos em ms\n  },\n};\n\n/**\n * Configuração de rate limiting específica para uploads\n */\nexport const UPLOAD_THROTTLE_CONFIG = {\n  default: {\n    limit: 10,\n    ttl: 60000, // 1 minuto em ms\n  },\n};\n\n/**\n * Configuração de rate limiting específica para API geral\n */\nexport const API_THROTTLE_CONFIG = {\n  default: {\n    limit: 200,\n    ttl: 60000, // 1 minuto em ms\n  },\n};\n\n/**\n * Utilitário para obter IP real do cliente considerando proxies\n */\nexport const getClientIp = (request: any): string => {\n  return (\n    request.headers['x-forwarded-for']?.split(',')[0] ||\n    request.headers['x-real-ip'] ||\n    request.connection?.remoteAddress ||\n    request.socket?.remoteAddress ||\n    request.ip ||\n    'unknown'\n  );\n};\n\n/**\n * Configuração de headers de resposta para rate limiting\n */\nexport const RATE_LIMIT_HEADERS = {\n  LIMIT: 'X-RateLimit-Limit',\n  REMAINING: 'X-RateLimit-Remaining',\n  RESET: 'X-RateLimit-Reset',\n  RETRY_AFTER: 'Retry-After',\n};"],"version":3}