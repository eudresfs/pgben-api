fec86860ae726fdf9c501c04dea03e1e
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pagamento = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const status_pagamento_enum_1 = require("../enums/status-pagamento.enum");
const metodo_pagamento_enum_1 = require("../enums/metodo-pagamento.enum");
const usuario_entity_1 = require("./usuario.entity");
const solicitacao_entity_1 = require("./solicitacao.entity");
/**
 * Entidade que representa um pagamento de benefício no sistema.
 *
 * Esta entidade armazena informações sobre pagamentos liberados para beneficiários,
 * incluindo valores, métodos de pagamento, status e histórico de liberação.
 *
 * @author Equipe PGBen
 */
let Pagamento = class Pagamento {
    /**
     * Identificador único do pagamento
     */
    id;
    /**
     * Referência à solicitação aprovada que originou este pagamento
     */
    solicitacaoId;
    /**
     * Referência às informações bancárias/PIX utilizadas para o pagamento
     */
    infoBancariaId;
    /**
     * Valor liberado do benefício
     */
    valor;
    /**
     * Data efetiva da liberação do pagamento
     */
    dataLiberacao;
    /**
     * Status atual do pagamento no sistema
     */
    status;
    /**
     * Método utilizado para realizar o pagamento
     */
    metodoPagamento;
    /**
     * Referência ao usuário que liberou o pagamento
     */
    liberadoPor;
    /**
     * Observações adicionais sobre o pagamento
     */
    observacoes;
    /**
     * Data de criação do registro
     */
    created_at;
    /**
     * Data da última atualização do registro
     */
    updated_at;
    /**
     * Data de remoção lógica (soft delete)
     */
    removed_at;
    /**
     * Relacionamentos com outras entidades
     */
    solicitacao;
    /* @ManyToOne(() => InfoBancaria)
    @JoinColumn({ name: 'info_bancaria_id' })
    infoBancaria: InfoBancaria; */
    responsavelLiberacao;
    /**
     * Comprovantes anexados a este pagamento
     */
    comprovantes;
    /**
     * Confirmação de recebimento deste pagamento
     */
    confirmacoes;
};
exports.Pagamento = Pagamento;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Pagamento.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'solicitacao_id' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID da solicitação é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID da solicitação inválido' }),
    __metadata("design:type", String)
], Pagamento.prototype, "solicitacaoId", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'info_bancaria_id', nullable: true }),
    __metadata("design:type", String)
], Pagamento.prototype, "infoBancariaId", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'decimal', precision: 10, scale: 2 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Valor é obrigatório' }),
    (0, class_validator_1.IsDecimal)({ decimal_digits: '2' }, { message: 'Valor deve ter no máximo 2 casas decimais' }),
    (0, class_validator_1.Min)(0.01, { message: 'Valor deve ser maior que zero' }),
    __metadata("design:type", Number)
], Pagamento.prototype, "valor", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'data_liberacao', type: 'date' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Data de liberação é obrigatória' }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], Pagamento.prototype, "dataLiberacao", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: status_pagamento_enum_1.StatusPagamentoEnum,
        default: status_pagamento_enum_1.StatusPagamentoEnum.AGENDADO,
    }),
    (0, class_validator_1.IsEnum)(status_pagamento_enum_1.StatusPagamentoEnum, { message: 'Status inválido' }),
    __metadata("design:type", typeof (_b = typeof status_pagamento_enum_1.StatusPagamentoEnum !== "undefined" && status_pagamento_enum_1.StatusPagamentoEnum) === "function" ? _b : Object)
], Pagamento.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.Column)({
        name: 'metodo_pagamento',
        type: 'enum',
        enum: metodo_pagamento_enum_1.MetodoPagamentoEnum,
    }),
    (0, class_validator_1.IsEnum)(metodo_pagamento_enum_1.MetodoPagamentoEnum, { message: 'Método de pagamento inválido' }),
    __metadata("design:type", typeof (_c = typeof metodo_pagamento_enum_1.MetodoPagamentoEnum !== "undefined" && metodo_pagamento_enum_1.MetodoPagamentoEnum) === "function" ? _c : Object)
], Pagamento.prototype, "metodoPagamento", void 0);
__decorate([
    (0, typeorm_1.Column)({ name: 'liberado_por' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'ID do responsável pela liberação é obrigatório' }),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do responsável pela liberação inválido' }),
    __metadata("design:type", String)
], Pagamento.prototype, "liberadoPor", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], Pagamento.prototype, "observacoes", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ name: 'created_at' }),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], Pagamento.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({ name: 'updated_at' }),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], Pagamento.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.DeleteDateColumn)({ name: 'removed_at' }),
    __metadata("design:type", typeof (_f = typeof Date !== "undefined" && Date) === "function" ? _f : Object)
], Pagamento.prototype, "removed_at", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => solicitacao_entity_1.Solicitacao),
    (0, typeorm_1.JoinColumn)({ name: 'solicitacao_id' }),
    __metadata("design:type", typeof (_g = typeof solicitacao_entity_1.Solicitacao !== "undefined" && solicitacao_entity_1.Solicitacao) === "function" ? _g : Object)
], Pagamento.prototype, "solicitacao", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => usuario_entity_1.Usuario),
    (0, typeorm_1.JoinColumn)({ name: 'liberado_por' }),
    __metadata("design:type", typeof (_h = typeof usuario_entity_1.Usuario !== "undefined" && usuario_entity_1.Usuario) === "function" ? _h : Object)
], Pagamento.prototype, "responsavelLiberacao", void 0);
__decorate([
    (0, typeorm_1.OneToMany)('ComprovantePagamento', 'pagamento'),
    __metadata("design:type", Array)
], Pagamento.prototype, "comprovantes", void 0);
__decorate([
    (0, typeorm_1.OneToMany)('ConfirmacaoRecebimento', 'pagamento'),
    __metadata("design:type", Array)
], Pagamento.prototype, "confirmacoes", void 0);
exports.Pagamento = Pagamento = __decorate([
    (0, typeorm_1.Entity)('pagamento')
], Pagamento);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,