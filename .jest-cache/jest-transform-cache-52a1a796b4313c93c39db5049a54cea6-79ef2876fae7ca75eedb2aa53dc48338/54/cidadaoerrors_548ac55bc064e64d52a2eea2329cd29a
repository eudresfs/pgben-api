9cfa439aceebaab238e9e0f801f55a96
"use strict";
/**
 * Domínio de Erros: CIDADAO
 *
 * Define códigos de erro específicos para operações relacionadas
 * ao módulo de cidadãos do sistema SEMTAS.
 *
 * @see docs/ADRs/catalogo-erros.md
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CIDADAO_ERRORS = void 0;
exports.throwCidadaoNotFound = throwCidadaoNotFound;
exports.throwInvalidCpf = throwInvalidCpf;
exports.throwDuplicateCpf = throwDuplicateCpf;
exports.throwInvalidNis = throwInvalidNis;
exports.throwDuplicateNis = throwDuplicateNis;
exports.throwIncomeExceedsLimit = throwIncomeExceedsLimit;
exports.throwAddressNotInMunicipality = throwAddressNotInMunicipality;
exports.throwMinorWithoutResponsible = throwMinorWithoutResponsible;
exports.throwCadunValidationFailed = throwCadunValidationFailed;
exports.throwLgpdConsentRequired = throwLgpdConsentRequired;
exports.throwCidadaoAccessDenied = throwCidadaoAccessDenied;
const common_1 = require("@nestjs/common");
const types_1 = require("../types");
const AppError_1 = require("../AppError");
/**
 * Catálogo de erros específicos do domínio CIDADAO
 */
exports.CIDADAO_ERRORS = {
    // ========================================
    // OPERAÇÕES CRUD
    // ========================================
    CIDADAO_NOT_FOUND: {
        code: 'CIDADAO_NOT_FOUND',
        message: 'Cidadão não encontrado',
        httpStatus: common_1.HttpStatus.NOT_FOUND,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Cidadão não encontrado no sistema',
            'en-US': 'Citizen not found in the system',
        },
    },
    CIDADAO_ALREADY_EXISTS: {
        code: 'CIDADAO_ALREADY_EXISTS',
        message: 'Cidadão já cadastrado',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Já existe um cidadão cadastrado com estes dados',
            'en-US': 'A citizen is already registered with this data',
        },
    },
    CIDADAO_CANNOT_DELETE: {
        code: 'CIDADAO_CANNOT_DELETE',
        message: 'Cidadão não pode ser excluído',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Cidadão possui vínculos ativos e não pode ser excluído',
            'en-US': 'Citizen has active links and cannot be deleted',
        },
    },
    // ========================================
    // VALIDAÇÕES DE DOCUMENTOS
    // ========================================
    CIDADAO_INVALID_CPF: {
        code: 'CIDADAO_INVALID_CPF',
        message: 'CPF inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'CPF informado é inválido',
            'en-US': 'Invalid CPF provided',
        },
    },
    CIDADAO_DUPLICATE_CPF: {
        code: 'CIDADAO_DUPLICATE_CPF',
        message: 'CPF já cadastrado',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'CPF já está cadastrado no sistema',
            'en-US': 'CPF is already registered in the system',
        },
    },
    CIDADAO_INVALID_NIS: {
        code: 'CIDADAO_INVALID_NIS',
        message: 'NIS inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'NIS informado é inválido',
            'en-US': 'Invalid NIS provided',
        },
    },
    CIDADAO_DUPLICATE_NIS: {
        code: 'CIDADAO_DUPLICATE_NIS',
        message: 'NIS já cadastrado',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'NIS já está cadastrado no sistema',
            'en-US': 'NIS is already registered in the system',
        },
    },
    CIDADAO_INVALID_RG: {
        code: 'CIDADAO_INVALID_RG',
        message: 'RG inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'RG informado é inválido',
            'en-US': 'Invalid RG provided',
        },
    },
    CIDADAO_DUPLICATE_RG: {
        code: 'CIDADAO_DUPLICATE_RG',
        message: 'RG já cadastrado',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'RG já está cadastrado no sistema',
            'en-US': 'RG is already registered in the system',
        },
    },
    // ========================================
    // VALIDAÇÕES DE DADOS PESSOAIS
    // ========================================
    CIDADAO_INVALID_NAME: {
        code: 'CIDADAO_INVALID_NAME',
        message: 'Nome inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Nome informado é inválido',
            'en-US': 'Invalid name provided',
        },
    },
    CIDADAO_INVALID_BIRTH_DATE: {
        code: 'CIDADAO_INVALID_BIRTH_DATE',
        message: 'Data de nascimento inválida',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Data de nascimento informada é inválida',
            'en-US': 'Invalid birth date provided',
        },
    },
    CIDADAO_INVALID_AGE: {
        code: 'CIDADAO_INVALID_AGE',
        message: 'Idade inválida',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Idade do cidadão é inválida para o benefício solicitado',
            'en-US': 'Citizen age is invalid for the requested benefit',
        },
    },
    CIDADAO_INVALID_EMAIL: {
        code: 'CIDADAO_INVALID_EMAIL',
        message: 'Email inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Email informado é inválido',
            'en-US': 'Invalid email provided',
        },
    },
    CIDADAO_DUPLICATE_EMAIL: {
        code: 'CIDADAO_DUPLICATE_EMAIL',
        message: 'Email já cadastrado',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Email já está cadastrado no sistema',
            'en-US': 'Email is already registered in the system',
        },
    },
    CIDADAO_INVALID_PHONE: {
        code: 'CIDADAO_INVALID_PHONE',
        message: 'Telefone inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Telefone informado é inválido',
            'en-US': 'Invalid phone number provided',
        },
    },
    CIDADAO_INVALID_GENDER: {
        code: 'CIDADAO_INVALID_GENDER',
        message: 'Gênero inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Gênero informado é inválido',
            'en-US': 'Invalid gender provided',
        },
    },
    CIDADAO_INVALID_MARITAL_STATUS: {
        code: 'CIDADAO_INVALID_MARITAL_STATUS',
        message: 'Estado civil inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Estado civil informado é inválido',
            'en-US': 'Invalid marital status provided',
        },
    },
    // ========================================
    // VALIDAÇÕES DE ENDEREÇO
    // ========================================
    CIDADAO_INVALID_ADDRESS: {
        code: 'CIDADAO_INVALID_ADDRESS',
        message: 'Endereço inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Endereço informado é inválido',
            'en-US': 'Invalid address provided',
        },
    },
    CIDADAO_INVALID_CEP: {
        code: 'CIDADAO_INVALID_CEP',
        message: 'CEP inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'CEP informado é inválido',
            'en-US': 'Invalid ZIP code provided',
        },
    },
    CIDADAO_ADDRESS_NOT_IN_MUNICIPALITY: {
        code: 'CIDADAO_ADDRESS_NOT_IN_MUNICIPALITY',
        message: 'Endereço fora do município',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Endereço informado não pertence ao município atendido',
            'en-US': 'Address is not within the served municipality',
        },
        legalReference: 'Lei Orgânica Municipal',
    },
    // ========================================
    // VALIDAÇÕES SOCIOECONÔMICAS
    // ========================================
    CIDADAO_INVALID_INCOME: {
        code: 'CIDADAO_INVALID_INCOME',
        message: 'Renda inválida',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Renda informada é inválida',
            'en-US': 'Invalid income provided',
        },
    },
    CIDADAO_INCOME_EXCEEDS_LIMIT: {
        code: 'CIDADAO_INCOME_EXCEEDS_LIMIT',
        message: 'Renda excede limite permitido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Renda familiar excede o limite permitido para o benefício',
            'en-US': 'Family income exceeds the allowed limit for the benefit',
        },
        legalReference: 'Decreto Municipal nº XXX/XXXX',
    },
    CIDADAO_INVALID_FAMILY_SIZE: {
        code: 'CIDADAO_INVALID_FAMILY_SIZE',
        message: 'Composição familiar inválida',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Composição familiar informada é inválida',
            'en-US': 'Invalid family composition provided',
        },
    },
    CIDADAO_INVALID_VULNERABILITY_SCORE: {
        code: 'CIDADAO_INVALID_VULNERABILITY_SCORE',
        message: 'Índice de vulnerabilidade inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Índice de vulnerabilidade social é inválido',
            'en-US': 'Invalid social vulnerability index',
        },
    },
    // ========================================
    // RELACIONAMENTOS FAMILIARES
    // ========================================
    CIDADAO_FAMILY_NOT_FOUND: {
        code: 'CIDADAO_FAMILY_NOT_FOUND',
        message: 'Família não encontrada',
        httpStatus: common_1.HttpStatus.NOT_FOUND,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Família não encontrada no sistema',
            'en-US': 'Family not found in the system',
        },
    },
    CIDADAO_INVALID_FAMILY_RELATIONSHIP: {
        code: 'CIDADAO_INVALID_FAMILY_RELATIONSHIP',
        message: 'Relacionamento familiar inválido',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Relacionamento familiar informado é inválido',
            'en-US': 'Invalid family relationship provided',
        },
    },
    CIDADAO_ALREADY_IN_FAMILY: {
        code: 'CIDADAO_ALREADY_IN_FAMILY',
        message: 'Cidadão já pertence a uma família',
        httpStatus: common_1.HttpStatus.CONFLICT,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Cidadão já pertence a uma composição familiar',
            'en-US': 'Citizen already belongs to a family composition',
        },
    },
    CIDADAO_CANNOT_BE_OWN_RESPONSIBLE: {
        code: 'CIDADAO_CANNOT_BE_OWN_RESPONSIBLE',
        message: 'Cidadão não pode ser responsável por si mesmo',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Cidadão não pode ser responsável por si mesmo',
            'en-US': 'Citizen cannot be responsible for themselves',
        },
    },
    CIDADAO_RESPONSIBLE_NOT_FOUND: {
        code: 'CIDADAO_RESPONSIBLE_NOT_FOUND',
        message: 'Responsável não encontrado',
        httpStatus: common_1.HttpStatus.NOT_FOUND,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Responsável não encontrado no sistema',
            'en-US': 'Responsible person not found in the system',
        },
    },
    CIDADAO_MINOR_WITHOUT_RESPONSIBLE: {
        code: 'CIDADAO_MINOR_WITHOUT_RESPONSIBLE',
        message: 'Menor de idade sem responsável',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.VALIDATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Menor de idade deve ter um responsável cadastrado',
            'en-US': 'Minor must have a registered responsible person',
        },
        legalReference: 'Estatuto da Criança e do Adolescente',
    },
    // ========================================
    // INTEGRAÇÃO COM SISTEMAS EXTERNOS
    // ========================================
    CIDADAO_CADUN_VALIDATION_FAILED: {
        code: 'CIDADAO_CADUN_VALIDATION_FAILED',
        message: 'Falha na validação do CadÚnico',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Falha na validação dos dados no Cadastro Único',
            'en-US': 'Failed to validate data in Unified Registry',
        },
    },
    CIDADAO_CADUN_NOT_FOUND: {
        code: 'CIDADAO_CADUN_NOT_FOUND',
        message: 'Cidadão não encontrado no CadÚnico',
        httpStatus: common_1.HttpStatus.NOT_FOUND,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Cidadão não encontrado no Cadastro Único',
            'en-US': 'Citizen not found in Unified Registry',
        },
        legalReference: 'Decreto Federal nº 6.135/2007',
    },
    CIDADAO_CADUN_DATA_MISMATCH: {
        code: 'CIDADAO_CADUN_DATA_MISMATCH',
        message: 'Dados divergentes do CadÚnico',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.INTEGRATIONS,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Dados informados divergem do Cadastro Único',
            'en-US': 'Provided data differs from Unified Registry',
        },
    },
    // ========================================
    // PERMISSÕES E ACESSO
    // ========================================
    CIDADAO_ACCESS_DENIED: {
        code: 'CIDADAO_ACCESS_DENIED',
        message: 'Acesso negado aos dados do cidadão',
        httpStatus: common_1.HttpStatus.FORBIDDEN,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'Você não tem permissão para acessar os dados deste cidadão',
            'en-US': 'You do not have permission to access this citizen data',
        },
    },
    CIDADAO_LGPD_CONSENT_REQUIRED: {
        code: 'CIDADAO_LGPD_CONSENT_REQUIRED',
        message: 'Consentimento LGPD obrigatório',
        httpStatus: common_1.HttpStatus.BAD_REQUEST,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.HIGH,
        localizedMessages: {
            'pt-BR': 'É necessário o consentimento do cidadão para tratamento dos dados pessoais',
            'en-US': 'Citizen consent is required for personal data processing',
        },
        legalReference: 'Lei nº 13.709/2018 (LGPD)',
    },
    CIDADAO_DATA_RETENTION_EXPIRED: {
        code: 'CIDADAO_DATA_RETENTION_EXPIRED',
        message: 'Prazo de retenção de dados expirado',
        httpStatus: common_1.HttpStatus.GONE,
        category: types_1.ErrorCategory.OPERATIONAL_FLOW,
        severity: types_1.ErrorSeverity.MEDIUM,
        localizedMessages: {
            'pt-BR': 'Prazo de retenção dos dados do cidadão expirou',
            'en-US': 'Citizen data retention period has expired',
        },
        legalReference: 'Lei nº 13.709/2018 (LGPD)',
    },
};
// ========================================
// FUNÇÕES HELPER PARA CIDADÃO
// ========================================
/**
 * Lança erro de cidadão não encontrado
 */
function throwCidadaoNotFound(identifier, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_NOT_FOUND', {
        ...context,
        data: {
            identifier,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de CPF inválido
 */
function throwInvalidCpf(cpf, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_INVALID_CPF', {
        ...context,
        data: {
            cpf,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de CPF duplicado
 */
function throwDuplicateCpf(cpf, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_DUPLICATE_CPF', {
        ...context,
        data: {
            cpf,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de NIS inválido
 */
function throwInvalidNis(nis, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_INVALID_NIS', {
        ...context,
        data: {
            nis,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de NIS duplicado
 */
function throwDuplicateNis(nis, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_DUPLICATE_NIS', {
        ...context,
        data: {
            nis,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de renda excedendo limite
 */
function throwIncomeExceedsLimit(currentIncome, maxAllowed, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_INCOME_EXCEEDS_LIMIT', {
        ...context,
        data: {
            currentIncome,
            maxAllowed,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de endereço fora do município
 */
function throwAddressNotInMunicipality(address, municipality, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_ADDRESS_NOT_IN_MUNICIPALITY', {
        ...context,
        data: {
            address,
            municipality,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de menor sem responsável
 */
function throwMinorWithoutResponsible(cidadaoId, age, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_MINOR_WITHOUT_RESPONSIBLE', {
        ...context,
        data: {
            cidadaoId,
            age,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de falha na validação do CadÚnico
 */
function throwCadunValidationFailed(cpf, nis, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_CADUN_VALIDATION_FAILED', {
        ...context,
        data: {
            cpf,
            nis,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de consentimento LGPD obrigatório
 */
function throwLgpdConsentRequired(cidadaoId, dataType, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_LGPD_CONSENT_REQUIRED', {
        ...context,
        data: {
            cidadaoId,
            dataType,
            ...context.data,
        },
    }, language);
}
/**
 * Lança erro de acesso negado
 */
function throwCidadaoAccessDenied(cidadaoId, userId, context = {}, language = 'pt-BR') {
    throw new AppError_1.AppError('CIDADAO_ACCESS_DENIED', {
        ...context,
        data: {
            cidadaoId,
            userId,
            ...context.data,
        },
    }, language);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,