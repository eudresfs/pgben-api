{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\dto\\avaliar-solicitacao.dto.ts","mappings":";;;;;;;;;;;;AAAA,6CAAmE;AACnE,qDAMyB;AAEzB;;;;GAIG;AACH,MAAa,qBAAqB;IAOhC,QAAQ,CAAU;IASlB,OAAO,CAAS;IAYhB,UAAU,CAAY;CACvB;AA7BD,sDA6BC;AAtBC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,sCAAsC;QACnD,OAAO,EAAE,IAAI;KACd,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,oCAAoC,EAAE,CAAC;IAC7D,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC;;uDACtC;AASlB;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,qCAAqC;QAClD,OAAO,EACL,qGAAqG;KACxG,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;IAChD,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC;;sDACnC;AAYhB;IAVC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,4DAA4D;QACzE,OAAO,EAAE;YACP,yCAAyC;YACzC,2CAA2C;SAC5C;KACF,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,yBAAO,EAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC;IACpD,IAAA,0BAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC;;yDAChD","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\dto\\avaliar-solicitacao.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsBoolean,\n  IsOptional,\n  IsArray,\n} from 'class-validator';\n\n/**\n * DTO para avaliação de solicitação\n *\n * Utilizado para aprovar ou pendenciar solicitações de benefícios\n */\nexport class AvaliarSolicitacaoDto {\n  @ApiProperty({\n    description: 'Indica se a solicitação foi aprovada',\n    example: true,\n  })\n  @IsNotEmpty({ message: 'Decisão de aprovação é obrigatória' })\n  @IsBoolean({ message: 'Aprovado deve ser um booleano' })\n  aprovado: boolean;\n\n  @ApiProperty({\n    description: 'Parecer técnico sobre a solicitação',\n    example:\n      'Solicitação aprovada conforme análise da documentação e verificação dos critérios de elegibilidade.',\n  })\n  @IsNotEmpty({ message: 'Parecer é obrigatório' })\n  @IsString({ message: 'Parecer deve ser um texto' })\n  parecer: string;\n\n  @ApiPropertyOptional({\n    description: 'Lista de pendências (caso a solicitação não seja aprovada)',\n    example: [\n      'Comprovante de residência desatualizado',\n      'Necessário apresentar declaração de renda',\n    ],\n  })\n  @IsOptional()\n  @IsArray({ message: 'Pendências deve ser um array' })\n  @IsString({ each: true, message: 'Cada pendência deve ser um texto' })\n  pendencias?: string[];\n}\n"],"version":3}