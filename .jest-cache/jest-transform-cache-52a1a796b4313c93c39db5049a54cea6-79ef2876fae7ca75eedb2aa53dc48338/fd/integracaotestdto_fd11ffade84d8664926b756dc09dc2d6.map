{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\dtos\\integracao\\integracao-test.dto.ts","mappings":";;;;;;;;;;;;;AAAA,6CAA8C;AAC9C,qDAMyB;AACzB,6CAAuD;AAEvD;;;;GAIG;AACH,MAAa,iBAAiB;IAQ5B,MAAM,CAAU;IAUhB,IAAI,CAAsB;IAe1B,UAAU,CAA0B;IAEpC;;OAEG;IACH,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,YAAY,CAAC,KAAyC;QACxD,IAAI,KAAK,EAAE,CAAC;YACV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;IACH,CAAC;IAcD,WAAW,CAAuB;IAgBlC,gBAAgB,CAAuB;CACxC;AA7ED,8CA6EC;AArEC;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,sCAAsC;QACnD,OAAO,EAAE,YAAY;QACrB,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC;;iDACtC;AAUhB;IARC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,oBAAoB;QACjC,IAAI,EAAE,0BAAkB;QACxB,OAAO,EAAE,0BAAkB,CAAC,KAAK;QACjC,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,EAAC,0BAAkB,EAAE,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;kDAChE,0BAAkB,oBAAlB,0BAAkB;+CAAC;AAe1B;IAbC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE;YACP,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,MAAM;SACf;QACD,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE,IAAI;QACd,oBAAoB,EAAE,IAAI;KAC3B,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,gDAAgD,EAAE,CAAC;kDAC3D,MAAM,oBAAN,MAAM;qDAAiB;AA2BpC;IAZC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,+BAA+B;QAC5C,OAAO,EAAE;YACP,IAAI,EAAE,kBAAkB;YACxB,QAAQ,EAAE,UAAU;SACrB;QACD,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE,IAAI;QACd,oBAAoB,EAAE,IAAI;KAC3B,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,iDAAiD,EAAE,CAAC;kDAC3D,MAAM,oBAAN,MAAM;sDAAc;AAgBlC;IAdC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,oCAAoC;QACjD,OAAO,EAAE;YACP,YAAY,EAAE,mBAAmB;YACjC,QAAQ,EAAE,yBAAyB;SACpC;QACD,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE,IAAI;QACd,oBAAoB,EAAE,IAAI;KAC3B,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC;QACR,OAAO,EAAE,yDAAyD;KACnE,CAAC;kDACiB,MAAM,oBAAN,MAAM;2DAAc","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\dtos\\integracao\\integracao-test.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { IntegracaoTipoEnum } from '../../../../enums';\n\n/**\n * DTO para teste de uma configuração de integração.\n * Permite testar a conexão com o serviço externo usando\n * parâmetros específicos para o teste.\n */\nexport class IntegracaoTestDto {\n  @ApiProperty({\n    description: 'Código da configuração de integração',\n    example: 'email-smtp',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'O código deve ser uma string' })\n  codigo?: string;\n\n  @ApiProperty({\n    description: 'Tipo da integração',\n    enum: IntegracaoTipoEnum,\n    example: IntegracaoTipoEnum.EMAIL,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(IntegracaoTipoEnum, { message: 'Tipo de integração inválido' })\n  tipo?: IntegracaoTipoEnum;\n\n  @ApiProperty({\n    description: 'Parâmetros de configuração para teste',\n    example: {\n      host: 'smtp.example.com',\n      port: '587',\n      secure: 'true',\n    },\n    type: 'object',\n    nullable: true,\n    additionalProperties: true,\n  })\n  @IsOptional()\n  @IsObject({ message: 'A configuração deve estar em formato de objeto' })\n  parametros?: Record<string, string>;\n\n  /**\n   * Alias para o campo parametros, utilizado em diferentes partes do código\n   */\n  get configuracao(): Record<string, string> | undefined {\n    return this.parametros;\n  }\n\n  set configuracao(value: Record<string, string> | undefined) {\n    if (value) {\n      this.parametros = value;\n    }\n  }\n\n  @ApiProperty({\n    description: 'Credenciais para autenticação',\n    example: {\n      user: 'user@example.com',\n      password: 'senha123',\n    },\n    type: 'object',\n    nullable: true,\n    additionalProperties: true,\n  })\n  @IsOptional()\n  @IsObject({ message: 'As credenciais devem estar em formato de objeto' })\n  credenciais?: Record<string, any>;\n\n  @ApiProperty({\n    description: 'Parâmetros adicionais para o teste',\n    example: {\n      destinatario: 'teste@example.com',\n      mensagem: 'Teste de envio de email',\n    },\n    type: 'object',\n    nullable: true,\n    additionalProperties: true,\n  })\n  @IsOptional()\n  @IsObject({\n    message: 'Os parâmetros de teste devem estar em formato de objeto',\n  })\n  parametros_teste?: Record<string, any>;\n}\n"],"version":3}