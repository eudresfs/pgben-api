5c94f5bd377c5ea155b7f677a3df8c3f
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegracaoTestDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const enums_1 = require("../../../../enums");
/**
 * DTO para teste de uma configuração de integração.
 * Permite testar a conexão com o serviço externo usando
 * parâmetros específicos para o teste.
 */
class IntegracaoTestDto {
    codigo;
    tipo;
    parametros;
    /**
     * Alias para o campo parametros, utilizado em diferentes partes do código
     */
    get configuracao() {
        return this.parametros;
    }
    set configuracao(value) {
        if (value) {
            this.parametros = value;
        }
    }
    credenciais;
    parametros_teste;
}
exports.IntegracaoTestDto = IntegracaoTestDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Código da configuração de integração',
        example: 'email-smtp',
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'O código deve ser uma string' }),
    __metadata("design:type", String)
], IntegracaoTestDto.prototype, "codigo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Tipo da integração',
        enum: enums_1.IntegracaoTipoEnum,
        example: enums_1.IntegracaoTipoEnum.EMAIL,
        required: false,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsEnum)(enums_1.IntegracaoTipoEnum, { message: 'Tipo de integração inválido' }),
    __metadata("design:type", typeof (_a = typeof enums_1.IntegracaoTipoEnum !== "undefined" && enums_1.IntegracaoTipoEnum) === "function" ? _a : Object)
], IntegracaoTestDto.prototype, "tipo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Parâmetros de configuração para teste',
        example: {
            host: 'smtp.example.com',
            port: '587',
            secure: 'true',
        },
        type: 'object',
        nullable: true,
        additionalProperties: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)({ message: 'A configuração deve estar em formato de objeto' }),
    __metadata("design:type", typeof (_b = typeof Record !== "undefined" && Record) === "function" ? _b : Object)
], IntegracaoTestDto.prototype, "parametros", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Credenciais para autenticação',
        example: {
            user: 'user@example.com',
            password: 'senha123',
        },
        type: 'object',
        nullable: true,
        additionalProperties: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)({ message: 'As credenciais devem estar em formato de objeto' }),
    __metadata("design:type", typeof (_c = typeof Record !== "undefined" && Record) === "function" ? _c : Object)
], IntegracaoTestDto.prototype, "credenciais", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Parâmetros adicionais para o teste',
        example: {
            destinatario: 'teste@example.com',
            mensagem: 'Teste de envio de email',
        },
        type: 'object',
        nullable: true,
        additionalProperties: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)({
        message: 'Os parâmetros de teste devem estar em formato de objeto',
    }),
    __metadata("design:type", typeof (_d = typeof Record !== "undefined" && Record) === "function" ? _d : Object)
], IntegracaoTestDto.prototype, "parametros_teste", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGNvbmZpZ3VyYWNhb1xcZHRvc1xcaW50ZWdyYWNhb1xcaW50ZWdyYWNhby10ZXN0LmR0by50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQThDO0FBQzlDLHFEQU15QjtBQUN6Qiw2Q0FBdUQ7QUFFdkQ7Ozs7R0FJRztBQUNILE1BQWEsaUJBQWlCO0lBUTVCLE1BQU0sQ0FBVTtJQVVoQixJQUFJLENBQXNCO0lBZTFCLFVBQVUsQ0FBMEI7SUFFcEM7O09BRUc7SUFDSCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksWUFBWSxDQUFDLEtBQXlDO1FBQ3hELElBQUksS0FBSyxFQUFFLENBQUM7WUFDVixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUMxQixDQUFDO0lBQ0gsQ0FBQztJQWNELFdBQVcsQ0FBdUI7SUFnQmxDLGdCQUFnQixDQUF1QjtDQUN4QztBQTdFRCw4Q0E2RUM7QUFyRUM7SUFQQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsc0NBQXNDO1FBQ25ELE9BQU8sRUFBRSxZQUFZO1FBQ3JCLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsQ0FBQzs7aURBQ3RDO0FBVWhCO0lBUkMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsV0FBVyxFQUFFLG9CQUFvQjtRQUNqQyxJQUFJLEVBQUUsMEJBQWtCO1FBQ3hCLE9BQU8sRUFBRSwwQkFBa0IsQ0FBQyxLQUFLO1FBQ2pDLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEVBQUMsMEJBQWtCLEVBQUUsRUFBRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsQ0FBQztrREFDaEUsMEJBQWtCLG9CQUFsQiwwQkFBa0I7K0NBQUM7QUFlMUI7SUFiQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsdUNBQXVDO1FBQ3BELE9BQU8sRUFBRTtZQUNQLElBQUksRUFBRSxrQkFBa0I7WUFDeEIsSUFBSSxFQUFFLEtBQUs7WUFDWCxNQUFNLEVBQUUsTUFBTTtTQUNmO1FBQ0QsSUFBSSxFQUFFLFFBQVE7UUFDZCxRQUFRLEVBQUUsSUFBSTtRQUNkLG9CQUFvQixFQUFFLElBQUk7S0FDM0IsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSxnREFBZ0QsRUFBRSxDQUFDO2tEQUMzRCxNQUFNLG9CQUFOLE1BQU07cURBQWlCO0FBMkJwQztJQVpDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSwrQkFBK0I7UUFDNUMsT0FBTyxFQUFFO1lBQ1AsSUFBSSxFQUFFLGtCQUFrQjtZQUN4QixRQUFRLEVBQUUsVUFBVTtTQUNyQjtRQUNELElBQUksRUFBRSxRQUFRO1FBQ2QsUUFBUSxFQUFFLElBQUk7UUFDZCxvQkFBb0IsRUFBRSxJQUFJO0tBQzNCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsaURBQWlELEVBQUUsQ0FBQztrREFDM0QsTUFBTSxvQkFBTixNQUFNO3NEQUFjO0FBZ0JsQztJQWRDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxvQ0FBb0M7UUFDakQsT0FBTyxFQUFFO1lBQ1AsWUFBWSxFQUFFLG1CQUFtQjtZQUNqQyxRQUFRLEVBQUUseUJBQXlCO1NBQ3BDO1FBQ0QsSUFBSSxFQUFFLFFBQVE7UUFDZCxRQUFRLEVBQUUsSUFBSTtRQUNkLG9CQUFvQixFQUFFLElBQUk7S0FDM0IsQ0FBQztJQUNELElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQztRQUNSLE9BQU8sRUFBRSx5REFBeUQ7S0FDbkUsQ0FBQztrREFDaUIsTUFBTSxvQkFBTixNQUFNOzJEQUFjIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFxjb25maWd1cmFjYW9cXGR0b3NcXGludGVncmFjYW9cXGludGVncmFjYW8tdGVzdC5kdG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBpUHJvcGVydHkgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xuaW1wb3J0IHtcbiAgSXNFbnVtLFxuICBJc05vdEVtcHR5LFxuICBJc09iamVjdCxcbiAgSXNPcHRpb25hbCxcbiAgSXNTdHJpbmcsXG59IGZyb20gJ2NsYXNzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBJbnRlZ3JhY2FvVGlwb0VudW0gfSBmcm9tICcuLi8uLi8uLi8uLi9lbnVtcyc7XG5cbi8qKlxuICogRFRPIHBhcmEgdGVzdGUgZGUgdW1hIGNvbmZpZ3VyYcOnw6NvIGRlIGludGVncmHDp8Ojby5cbiAqIFBlcm1pdGUgdGVzdGFyIGEgY29uZXjDo28gY29tIG8gc2VydmnDp28gZXh0ZXJubyB1c2FuZG9cbiAqIHBhcsOibWV0cm9zIGVzcGVjw61maWNvcyBwYXJhIG8gdGVzdGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbnRlZ3JhY2FvVGVzdER0byB7XG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZGVzY3JpcHRpb246ICdDw7NkaWdvIGRhIGNvbmZpZ3VyYcOnw6NvIGRlIGludGVncmHDp8OjbycsXG4gICAgZXhhbXBsZTogJ2VtYWlsLXNtdHAnLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnTyBjw7NkaWdvIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIGNvZGlnbz86IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnVGlwbyBkYSBpbnRlZ3Jhw6fDo28nLFxuICAgIGVudW06IEludGVncmFjYW9UaXBvRW51bSxcbiAgICBleGFtcGxlOiBJbnRlZ3JhY2FvVGlwb0VudW0uRU1BSUwsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc0VudW0oSW50ZWdyYWNhb1RpcG9FbnVtLCB7IG1lc3NhZ2U6ICdUaXBvIGRlIGludGVncmHDp8OjbyBpbnbDoWxpZG8nIH0pXG4gIHRpcG8/OiBJbnRlZ3JhY2FvVGlwb0VudW07XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ1BhcsOibWV0cm9zIGRlIGNvbmZpZ3VyYcOnw6NvIHBhcmEgdGVzdGUnLFxuICAgIGV4YW1wbGU6IHtcbiAgICAgIGhvc3Q6ICdzbXRwLmV4YW1wbGUuY29tJyxcbiAgICAgIHBvcnQ6ICc1ODcnLFxuICAgICAgc2VjdXJlOiAndHJ1ZScsXG4gICAgfSxcbiAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICBudWxsYWJsZTogdHJ1ZSxcbiAgICBhZGRpdGlvbmFsUHJvcGVydGllczogdHJ1ZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNPYmplY3QoeyBtZXNzYWdlOiAnQSBjb25maWd1cmHDp8OjbyBkZXZlIGVzdGFyIGVtIGZvcm1hdG8gZGUgb2JqZXRvJyB9KVxuICBwYXJhbWV0cm9zPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcblxuICAvKipcbiAgICogQWxpYXMgcGFyYSBvIGNhbXBvIHBhcmFtZXRyb3MsIHV0aWxpemFkbyBlbSBkaWZlcmVudGVzIHBhcnRlcyBkbyBjw7NkaWdvXG4gICAqL1xuICBnZXQgY29uZmlndXJhY2FvKCk6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLnBhcmFtZXRyb3M7XG4gIH1cblxuICBzZXQgY29uZmlndXJhY2FvKHZhbHVlOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgdW5kZWZpbmVkKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnBhcmFtZXRyb3MgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnQ3JlZGVuY2lhaXMgcGFyYSBhdXRlbnRpY2HDp8OjbycsXG4gICAgZXhhbXBsZToge1xuICAgICAgdXNlcjogJ3VzZXJAZXhhbXBsZS5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdzZW5oYTEyMycsXG4gICAgfSxcbiAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICBudWxsYWJsZTogdHJ1ZSxcbiAgICBhZGRpdGlvbmFsUHJvcGVydGllczogdHJ1ZSxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNPYmplY3QoeyBtZXNzYWdlOiAnQXMgY3JlZGVuY2lhaXMgZGV2ZW0gZXN0YXIgZW0gZm9ybWF0byBkZSBvYmpldG8nIH0pXG4gIGNyZWRlbmNpYWlzPzogUmVjb3JkPHN0cmluZywgYW55PjtcblxuICBAQXBpUHJvcGVydHkoe1xuICAgIGRlc2NyaXB0aW9uOiAnUGFyw6JtZXRyb3MgYWRpY2lvbmFpcyBwYXJhIG8gdGVzdGUnLFxuICAgIGV4YW1wbGU6IHtcbiAgICAgIGRlc3RpbmF0YXJpbzogJ3Rlc3RlQGV4YW1wbGUuY29tJyxcbiAgICAgIG1lbnNhZ2VtOiAnVGVzdGUgZGUgZW52aW8gZGUgZW1haWwnLFxuICAgIH0sXG4gICAgdHlwZTogJ29iamVjdCcsXG4gICAgbnVsbGFibGU6IHRydWUsXG4gICAgYWRkaXRpb25hbFByb3BlcnRpZXM6IHRydWUsXG4gIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzT2JqZWN0KHtcbiAgICBtZXNzYWdlOiAnT3MgcGFyw6JtZXRyb3MgZGUgdGVzdGUgZGV2ZW0gZXN0YXIgZW0gZm9ybWF0byBkZSBvYmpldG8nLFxuICB9KVxuICBwYXJhbWV0cm9zX3Rlc3RlPzogUmVjb3JkPHN0cmluZywgYW55Pjtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==