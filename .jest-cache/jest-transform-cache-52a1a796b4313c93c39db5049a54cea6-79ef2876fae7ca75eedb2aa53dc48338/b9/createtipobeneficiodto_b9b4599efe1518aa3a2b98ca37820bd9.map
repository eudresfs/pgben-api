{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\create-tipo-beneficio.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\dto\\create-tipo-beneficio.dto.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsNumber,\n  IsEnum,\n  IsBoolean,\n  IsOptional,\n  Min,\n  MaxLength,\n  ValidateNested,\n  IsObject,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { PeriodicidadeEnum } from '../../../enums/periodicidade.enum';\nimport { Status } from '@/enums';\n\n/**\n * DTO para critérios de elegibilidade\n */\nexport class CriteriosElegibilidadeDto {\n  @ApiPropertyOptional({ description: 'Idade mínima para elegibilidade' })\n  @IsOptional()\n  @IsNumber({}, { message: 'Idade mínima deve ser um número' })\n  @Min(0, { message: 'Idade mínima não pode ser negativa' })\n  idade_minima?: number;\n\n  @ApiPropertyOptional({ description: 'Idade máxima para elegibilidade' })\n  @IsOptional()\n  @IsNumber({}, { message: 'Idade máxima deve ser um número' })\n  @Min(0, { message: 'Idade máxima não pode ser negativa' })\n  idade_maxima?: number;\n\n  @ApiPropertyOptional({\n    description: 'Renda máxima per capita para elegibilidade',\n  })\n  @IsOptional()\n  @IsNumber({}, { message: 'Renda máxima deve ser um número' })\n  @Min(0, { message: 'Renda máxima não pode ser negativa' })\n  renda_maxima?: number;\n\n  @ApiPropertyOptional({\n    description: 'Tempo mínimo de residência no município (em meses)',\n  })\n  @IsOptional()\n  @IsNumber({}, { message: 'Tempo mínimo de residência deve ser um número' })\n  @Min(0, { message: 'Tempo mínimo de residência não pode ser negativo' })\n  tempo_minimo_residencia?: number;\n\n  @ApiPropertyOptional({ description: 'Outros critérios de elegibilidade' })\n  @IsOptional()\n  @IsString({ each: true, message: 'Outros critérios devem ser textos' })\n  outros?: string[];\n}\n\n/**\n * DTO para criação de tipo de benefício\n */\nexport class CreateTipoBeneficioDto {\n  @ApiProperty({\n    description: 'Nome do tipo de benefício',\n    example: 'Benefício Natalidade',\n  })\n  @IsNotEmpty({ message: 'Nome é obrigatório' })\n  @IsString({ message: 'Nome deve ser um texto' })\n  @MaxLength(100, { message: 'Nome não pode ter mais de 100 caracteres' })\n  nome: string;\n\n  @ApiProperty({\n    description: 'Código do tipo de benefício',\n    example: 'BENEFICIO_NATALIDADE',\n  })\n  @IsNotEmpty({ message: 'Código é obrigatório' })\n  @IsString({ message: 'Código deve ser um texto' })\n  @MaxLength(25, { message: 'Código não pode ter mais de 25 caracteres' })\n  codigo: string;\n\n  @ApiProperty({ description: 'Descrição detalhada do benefício' })\n  @IsNotEmpty({ message: 'Descrição é obrigatória' })\n  @IsString({ message: 'Descrição deve ser um texto' })\n  descricao: string;\n\n  @ApiProperty({\n    description: 'Periodicidade do benefício',\n    enum: PeriodicidadeEnum,\n    example: PeriodicidadeEnum.MENSAL,\n  })\n  @IsNotEmpty({ message: 'Periodicidade é obrigatória' })\n  @IsEnum(PeriodicidadeEnum, { message: 'Periodicidade inválida' })\n  periodicidade: PeriodicidadeEnum;\n\n  @ApiProperty({ description: 'Valor do benefício', example: 400.0 })\n  @IsNotEmpty({ message: 'Valor é obrigatório' })\n  @IsNumber({}, { message: 'Valor deve ser um número' })\n  @Min(0, { message: 'Valor não pode ser negativo' })\n  valor: number;\n\n  @ApiProperty({\n    description: 'Status do benefício',\n    enum: Status,\n    example: Status.ATIVO,\n    default: 'ativo',\n  })\n  @IsNotEmpty({ message: 'Status é obrigatória' })\n  @IsEnum(Status, { message: 'Status inválida' })\n  status?: Status;\n\n  @ApiPropertyOptional({\n    description: 'Critérios de elegibilidade para o benefício',\n  })\n  @IsOptional()\n  @IsObject({ message: 'Critérios de elegibilidade devem ser um objeto' })\n  @ValidateNested()\n  @Type(() => CriteriosElegibilidadeDto)\n  criterios_elegibilidade?: CriteriosElegibilidadeDto;\n}\n"],"version":3}