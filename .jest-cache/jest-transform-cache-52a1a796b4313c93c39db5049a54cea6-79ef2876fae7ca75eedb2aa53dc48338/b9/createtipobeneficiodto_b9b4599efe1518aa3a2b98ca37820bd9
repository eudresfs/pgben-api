4563f299ded96bdd1eecd39e34d0626a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateTipoBeneficioDto = exports.CriteriosElegibilidadeDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const periodicidade_enum_1 = require("../../../enums/periodicidade.enum");
const enums_1 = require("@/enums");
/**
 * DTO para critérios de elegibilidade
 */
class CriteriosElegibilidadeDto {
    idade_minima;
    idade_maxima;
    renda_maxima;
    tempo_minimo_residencia;
    outros;
}
exports.CriteriosElegibilidadeDto = CriteriosElegibilidadeDto;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Idade mínima para elegibilidade' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Idade mínima deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Idade mínima não pode ser negativa' }),
    __metadata("design:type", Number)
], CriteriosElegibilidadeDto.prototype, "idade_minima", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Idade máxima para elegibilidade' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Idade máxima deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Idade máxima não pode ser negativa' }),
    __metadata("design:type", Number)
], CriteriosElegibilidadeDto.prototype, "idade_maxima", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Renda máxima per capita para elegibilidade',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Renda máxima deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Renda máxima não pode ser negativa' }),
    __metadata("design:type", Number)
], CriteriosElegibilidadeDto.prototype, "renda_maxima", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tempo mínimo de residência no município (em meses)',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Tempo mínimo de residência deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Tempo mínimo de residência não pode ser negativo' }),
    __metadata("design:type", Number)
], CriteriosElegibilidadeDto.prototype, "tempo_minimo_residencia", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Outros critérios de elegibilidade' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ each: true, message: 'Outros critérios devem ser textos' }),
    __metadata("design:type", Array)
], CriteriosElegibilidadeDto.prototype, "outros", void 0);
/**
 * DTO para criação de tipo de benefício
 */
class CreateTipoBeneficioDto {
    nome;
    codigo;
    descricao;
    periodicidade;
    valor;
    status;
    criterios_elegibilidade;
}
exports.CreateTipoBeneficioDto = CreateTipoBeneficioDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Nome do tipo de benefício',
        example: 'Benefício Natalidade',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome deve ser um texto' }),
    (0, class_validator_1.MaxLength)(100, { message: 'Nome não pode ter mais de 100 caracteres' }),
    __metadata("design:type", String)
], CreateTipoBeneficioDto.prototype, "nome", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Código do tipo de benefício',
        example: 'BENEFICIO_NATALIDADE',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Código é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Código deve ser um texto' }),
    (0, class_validator_1.MaxLength)(25, { message: 'Código não pode ter mais de 25 caracteres' }),
    __metadata("design:type", String)
], CreateTipoBeneficioDto.prototype, "codigo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Descrição detalhada do benefício' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Descrição é obrigatória' }),
    (0, class_validator_1.IsString)({ message: 'Descrição deve ser um texto' }),
    __metadata("design:type", String)
], CreateTipoBeneficioDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Periodicidade do benefício',
        enum: periodicidade_enum_1.PeriodicidadeEnum,
        example: periodicidade_enum_1.PeriodicidadeEnum.MENSAL,
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Periodicidade é obrigatória' }),
    (0, class_validator_1.IsEnum)(periodicidade_enum_1.PeriodicidadeEnum, { message: 'Periodicidade inválida' }),
    __metadata("design:type", typeof (_a = typeof periodicidade_enum_1.PeriodicidadeEnum !== "undefined" && periodicidade_enum_1.PeriodicidadeEnum) === "function" ? _a : Object)
], CreateTipoBeneficioDto.prototype, "periodicidade", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Valor do benefício', example: 400.0 }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Valor é obrigatório' }),
    (0, class_validator_1.IsNumber)({}, { message: 'Valor deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Valor não pode ser negativo' }),
    __metadata("design:type", Number)
], CreateTipoBeneficioDto.prototype, "valor", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Status do benefício',
        enum: enums_1.Status,
        example: enums_1.Status.ATIVO,
        default: 'ativo',
    }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Status é obrigatória' }),
    (0, class_validator_1.IsEnum)(enums_1.Status, { message: 'Status inválida' }),
    __metadata("design:type", typeof (_b = typeof enums_1.Status !== "undefined" && enums_1.Status) === "function" ? _b : Object)
], CreateTipoBeneficioDto.prototype, "status", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Critérios de elegibilidade para o benefício',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)({ message: 'Critérios de elegibilidade devem ser um objeto' }),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CriteriosElegibilidadeDto),
    __metadata("design:type", CriteriosElegibilidadeDto)
], CreateTipoBeneficioDto.prototype, "criterios_elegibilidade", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,