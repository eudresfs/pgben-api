a9d23bd8633b98272fafe4201b088fc1
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricaSnapshot = void 0;
const typeorm_1 = require("typeorm");
const metrica_definicao_entity_1 = require("./metrica-definicao.entity");
/**
 * Snapshot de valor de uma métrica
 *
 * Esta entidade armazena os valores coletados ou calculados para cada métrica
 * ao longo do tempo, mantendo um histórico completo para análise e visualização.
 */
let MetricaSnapshot = class MetricaSnapshot {
    id;
    /**
     * Referência para a definição da métrica
     */
    definicao_id;
    /**
     * Relacionamento com a definição da métrica
     *
     * Usando lazy loading para evitar dependências circulares
     */
    definicao;
    /**
     * Início do período de referência
     */
    periodo_inicio;
    /**
     * Fim do período de referência
     */
    periodo_fim;
    /**
     * Granularidade temporal do snapshot
     */
    granularidade;
    /**
     * Valor numérico da métrica
     */
    valor;
    /**
     * Valor formatado conforme configurações de exibição da métrica
     */
    valor_formatado;
    /**
     * Dimensões ou filtros aplicados na coleta do valor
     * Exemplo: { "regiao": "nordeste", "faixa_etaria": "18-25" }
     */
    dimensoes;
    /**
     * Hash das dimensões para garantir unicidade
     * Gerado a partir do objeto de dimensões
     */
    dimensoes_hash;
    /**
     * Metadados adicionais sobre o snapshot
     * Exemplo: fonte de dados específica, contexto da coleta
     */
    metadados;
    /**
     * Flag indicando se o valor foi validado após a coleta
     */
    validado;
    /**
     * Versão da definição da métrica utilizada no cálculo
     */
    versao_definicao;
    /**
     * Data e hora da coleta/cálculo do valor
     */
    created_at;
    /**
     * Duração em milissegundos do processo de coleta/cálculo
     */
    duracao_processamento_ms;
    /**
     * Status da coleta
     * 'sucesso', 'erro', 'parcial'
     */
    status_coleta;
    /**
     * Mensagem de erro ou informação adicional sobre o status
     */
    mensagem_status;
};
exports.MetricaSnapshot = MetricaSnapshot;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], MetricaSnapshot.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'uuid' }),
    __metadata("design:type", String)
], MetricaSnapshot.prototype, "definicao_id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => metrica_definicao_entity_1.MetricaDefinicao, (definicao) => definicao.snapshots, { onDelete: 'CASCADE', lazy: true }),
    (0, typeorm_1.JoinColumn)({ name: 'definicao_id' }),
    __metadata("design:type", typeof (_a = typeof Promise !== "undefined" && Promise) === "function" ? _a : Object)
], MetricaSnapshot.prototype, "definicao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], MetricaSnapshot.prototype, "periodo_inicio", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'timestamp' }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], MetricaSnapshot.prototype, "periodo_fim", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: metrica_definicao_entity_1.GranularidadeTemporal,
        enumName: 'granularidade_temporal',
    }),
    __metadata("design:type", typeof (_d = typeof metrica_definicao_entity_1.GranularidadeTemporal !== "undefined" && metrica_definicao_entity_1.GranularidadeTemporal) === "function" ? _d : Object)
], MetricaSnapshot.prototype, "granularidade", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'decimal', precision: 20, scale: 6 }),
    __metadata("design:type", Number)
], MetricaSnapshot.prototype, "valor", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 100, nullable: true }),
    __metadata("design:type", String)
], MetricaSnapshot.prototype, "valor_formatado", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', default: {} }),
    __metadata("design:type", typeof (_e = typeof Record !== "undefined" && Record) === "function" ? _e : Object)
], MetricaSnapshot.prototype, "dimensoes", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 64, default: '' }),
    __metadata("design:type", String)
], MetricaSnapshot.prototype, "dimensoes_hash", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_f = typeof Record !== "undefined" && Record) === "function" ? _f : Object)
], MetricaSnapshot.prototype, "metadados", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: true }),
    __metadata("design:type", Boolean)
], MetricaSnapshot.prototype, "validado", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 1 }),
    __metadata("design:type", Number)
], MetricaSnapshot.prototype, "versao_definicao", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_g = typeof Date !== "undefined" && Date) === "function" ? _g : Object)
], MetricaSnapshot.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: 0 }),
    __metadata("design:type", Number)
], MetricaSnapshot.prototype, "duracao_processamento_ms", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 20, default: 'sucesso' }),
    __metadata("design:type", String)
], MetricaSnapshot.prototype, "status_coleta", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MetricaSnapshot.prototype, "mensagem_status", void 0);
exports.MetricaSnapshot = MetricaSnapshot = __decorate([
    (0, typeorm_1.Entity)('metrica_snapshot'),
    (0, typeorm_1.Index)(['definicao_id', 'periodo_inicio', 'periodo_fim', 'dimensoes_hash'], { unique: true }),
    (0, typeorm_1.Index)(['periodo_inicio', 'periodo_fim'])
], MetricaSnapshot);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxtZXRyaWNhLXNuYXBzaG90LmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscUNBQWlIO0FBQ2pILHlFQUFxRjtBQUVyRjs7Ozs7R0FLRztBQUlJLElBQU0sZUFBZSxHQUFyQixNQUFNLGVBQWU7SUFFMUIsRUFBRSxDQUFTO0lBRVg7O09BRUc7SUFFSCxZQUFZLENBQVM7SUFFckI7Ozs7T0FJRztJQUdILFNBQVMsQ0FBNEI7SUFFckM7O09BRUc7SUFFSCxjQUFjLENBQU87SUFFckI7O09BRUc7SUFFSCxXQUFXLENBQU87SUFFbEI7O09BRUc7SUFNSCxhQUFhLENBQXdCO0lBRXJDOztPQUVHO0lBRUgsS0FBSyxDQUFTO0lBRWQ7O09BRUc7SUFFSCxlQUFlLENBQVM7SUFFeEI7OztPQUdHO0lBRUgsU0FBUyxDQUFzQjtJQUUvQjs7O09BR0c7SUFFSCxjQUFjLENBQVM7SUFFdkI7OztPQUdHO0lBRUgsU0FBUyxDQUFzQjtJQUUvQjs7T0FFRztJQUVILFFBQVEsQ0FBVTtJQUVsQjs7T0FFRztJQUVILGdCQUFnQixDQUFTO0lBRXpCOztPQUVHO0lBRUgsVUFBVSxDQUFPO0lBRWpCOztPQUVHO0lBRUgsd0JBQXdCLENBQVM7SUFFakM7OztPQUdHO0lBRUgsYUFBYSxDQUFTO0lBRXRCOztPQUVHO0lBRUgsZUFBZSxDQUFTO0NBQ3pCLENBQUE7QUE5R1ksMENBQWU7QUFFMUI7SUFEQyxJQUFBLGdDQUFzQixFQUFDLE1BQU0sQ0FBQzs7MkNBQ3BCO0FBTVg7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7O3FEQUNKO0FBU3JCO0lBRkMsSUFBQSxtQkFBUyxFQUFDLEdBQUcsRUFBRSxDQUFDLDJDQUFnQixFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDMUcsSUFBQSxvQkFBVSxFQUFDLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxDQUFDO2tEQUMxQixPQUFPLG9CQUFQLE9BQU87a0RBQW1CO0FBTXJDO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxDQUFDO2tEQUNkLElBQUksb0JBQUosSUFBSTt1REFBQztBQU1yQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsQ0FBQztrREFDakIsSUFBSSxvQkFBSixJQUFJO29EQUFDO0FBVWxCO0lBTEMsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsZ0RBQXFCO1FBQzNCLFFBQVEsRUFBRSx3QkFBd0I7S0FDbkMsQ0FBQztrREFDYSxnREFBcUIsb0JBQXJCLGdEQUFxQjtzREFBQztBQU1yQztJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUM7OzhDQUN2QztBQU1kO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7O3dEQUNoQjtBQU94QjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDO2tEQUM1QixNQUFNLG9CQUFOLE1BQU07a0RBQWM7QUFPL0I7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsQ0FBQzs7dURBQ2I7QUFPdkI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDL0IsTUFBTSxvQkFBTixNQUFNO2tEQUFjO0FBTS9CO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDOztpREFDUjtBQU1sQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQzs7eURBQ0U7QUFNekI7SUFEQyxJQUFBLDBCQUFnQixHQUFFO2tEQUNQLElBQUksb0JBQUosSUFBSTttREFBQztBQU1qQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQzs7aUVBQ1U7QUFPakM7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQzs7c0RBQ3JCO0FBTXRCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7O3dEQUNqQjswQkE3R2IsZUFBZTtJQUgzQixJQUFBLGdCQUFNLEVBQUMsa0JBQWtCLENBQUM7SUFDMUIsSUFBQSxlQUFLLEVBQUMsQ0FBQyxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDNUYsSUFBQSxlQUFLLEVBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsQ0FBQztHQUM1QixlQUFlLENBOEczQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcZW50aXRpZXNcXG1ldHJpY2Etc25hcHNob3QuZW50aXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgQ29sdW1uLCBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uLCBDcmVhdGVEYXRlQ29sdW1uLCBNYW55VG9PbmUsIEpvaW5Db2x1bW4sIEluZGV4IH0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBNZXRyaWNhRGVmaW5pY2FvLCBHcmFudWxhcmlkYWRlVGVtcG9yYWwgfSBmcm9tICcuL21ldHJpY2EtZGVmaW5pY2FvLmVudGl0eSc7XG5cbi8qKlxuICogU25hcHNob3QgZGUgdmFsb3IgZGUgdW1hIG3DqXRyaWNhXG4gKiBcbiAqIEVzdGEgZW50aWRhZGUgYXJtYXplbmEgb3MgdmFsb3JlcyBjb2xldGFkb3Mgb3UgY2FsY3VsYWRvcyBwYXJhIGNhZGEgbcOpdHJpY2FcbiAqIGFvIGxvbmdvIGRvIHRlbXBvLCBtYW50ZW5kbyB1bSBoaXN0w7NyaWNvIGNvbXBsZXRvIHBhcmEgYW7DoWxpc2UgZSB2aXN1YWxpemHDp8Ojby5cbiAqL1xuQEVudGl0eSgnbWV0cmljYV9zbmFwc2hvdCcpXG5ASW5kZXgoWydkZWZpbmljYW9faWQnLCAncGVyaW9kb19pbmljaW8nLCAncGVyaW9kb19maW0nLCAnZGltZW5zb2VzX2hhc2gnXSwgeyB1bmlxdWU6IHRydWUgfSlcbkBJbmRleChbJ3BlcmlvZG9faW5pY2lvJywgJ3BlcmlvZG9fZmltJ10pXG5leHBvcnQgY2xhc3MgTWV0cmljYVNuYXBzaG90IHtcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oJ3V1aWQnKVxuICBpZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBSZWZlcsOqbmNpYSBwYXJhIGEgZGVmaW5pw6fDo28gZGEgbcOpdHJpY2FcbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAndXVpZCcgfSlcbiAgZGVmaW5pY2FvX2lkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFJlbGFjaW9uYW1lbnRvIGNvbSBhIGRlZmluacOnw6NvIGRhIG3DqXRyaWNhXG4gICAqIFxuICAgKiBVc2FuZG8gbGF6eSBsb2FkaW5nIHBhcmEgZXZpdGFyIGRlcGVuZMOqbmNpYXMgY2lyY3VsYXJlc1xuICAgKi9cbiAgQE1hbnlUb09uZSgoKSA9PiBNZXRyaWNhRGVmaW5pY2FvLCAoZGVmaW5pY2FvKSA9PiBkZWZpbmljYW8uc25hcHNob3RzLCB7IG9uRGVsZXRlOiAnQ0FTQ0FERScsIGxhenk6IHRydWUgfSlcbiAgQEpvaW5Db2x1bW4oeyBuYW1lOiAnZGVmaW5pY2FvX2lkJyB9KVxuICBkZWZpbmljYW86IFByb21pc2U8TWV0cmljYURlZmluaWNhbz47XG5cbiAgLyoqXG4gICAqIEluw61jaW8gZG8gcGVyw61vZG8gZGUgcmVmZXLDqm5jaWFcbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAndGltZXN0YW1wJyB9KVxuICBwZXJpb2RvX2luaWNpbzogRGF0ZTtcblxuICAvKipcbiAgICogRmltIGRvIHBlcsOtb2RvIGRlIHJlZmVyw6puY2lhXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3RpbWVzdGFtcCcgfSlcbiAgcGVyaW9kb19maW06IERhdGU7XG5cbiAgLyoqXG4gICAqIEdyYW51bGFyaWRhZGUgdGVtcG9yYWwgZG8gc25hcHNob3RcbiAgICovXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICdlbnVtJyxcbiAgICBlbnVtOiBHcmFudWxhcmlkYWRlVGVtcG9yYWwsXG4gICAgZW51bU5hbWU6ICdncmFudWxhcmlkYWRlX3RlbXBvcmFsJyxcbiAgfSlcbiAgZ3JhbnVsYXJpZGFkZTogR3JhbnVsYXJpZGFkZVRlbXBvcmFsO1xuXG4gIC8qKlxuICAgKiBWYWxvciBudW3DqXJpY28gZGEgbcOpdHJpY2FcbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAnZGVjaW1hbCcsIHByZWNpc2lvbjogMjAsIHNjYWxlOiA2IH0pXG4gIHZhbG9yOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFZhbG9yIGZvcm1hdGFkbyBjb25mb3JtZSBjb25maWd1cmHDp8O1ZXMgZGUgZXhpYmnDp8OjbyBkYSBtw6l0cmljYVxuICAgKi9cbiAgQENvbHVtbih7IGxlbmd0aDogMTAwLCBudWxsYWJsZTogdHJ1ZSB9KVxuICB2YWxvcl9mb3JtYXRhZG86IHN0cmluZztcblxuICAvKipcbiAgICogRGltZW5zw7VlcyBvdSBmaWx0cm9zIGFwbGljYWRvcyBuYSBjb2xldGEgZG8gdmFsb3JcbiAgICogRXhlbXBsbzogeyBcInJlZ2lhb1wiOiBcIm5vcmRlc3RlXCIsIFwiZmFpeGFfZXRhcmlhXCI6IFwiMTgtMjVcIiB9XG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ2pzb25iJywgZGVmYXVsdDoge30gfSlcbiAgZGltZW5zb2VzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuXG4gIC8qKlxuICAgKiBIYXNoIGRhcyBkaW1lbnPDtWVzIHBhcmEgZ2FyYW50aXIgdW5pY2lkYWRlXG4gICAqIEdlcmFkbyBhIHBhcnRpciBkbyBvYmpldG8gZGUgZGltZW5zw7Vlc1xuICAgKi9cbiAgQENvbHVtbih7IGxlbmd0aDogNjQsIGRlZmF1bHQ6ICcnIH0pXG4gIGRpbWVuc29lc19oYXNoOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIE1ldGFkYWRvcyBhZGljaW9uYWlzIHNvYnJlIG8gc25hcHNob3RcbiAgICogRXhlbXBsbzogZm9udGUgZGUgZGFkb3MgZXNwZWPDrWZpY2EsIGNvbnRleHRvIGRhIGNvbGV0YVxuICAgKi9cbiAgQENvbHVtbih7IHR5cGU6ICdqc29uYicsIG51bGxhYmxlOiB0cnVlIH0pXG4gIG1ldGFkYWRvczogUmVjb3JkPHN0cmluZywgYW55PjtcblxuICAvKipcbiAgICogRmxhZyBpbmRpY2FuZG8gc2UgbyB2YWxvciBmb2kgdmFsaWRhZG8gYXDDs3MgYSBjb2xldGFcbiAgICovXG4gIEBDb2x1bW4oeyBkZWZhdWx0OiB0cnVlIH0pXG4gIHZhbGlkYWRvOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBWZXJzw6NvIGRhIGRlZmluacOnw6NvIGRhIG3DqXRyaWNhIHV0aWxpemFkYSBubyBjw6FsY3Vsb1xuICAgKi9cbiAgQENvbHVtbih7IGRlZmF1bHQ6IDEgfSlcbiAgdmVyc2FvX2RlZmluaWNhbzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBEYXRhIGUgaG9yYSBkYSBjb2xldGEvY8OhbGN1bG8gZG8gdmFsb3JcbiAgICovXG4gIEBDcmVhdGVEYXRlQ29sdW1uKClcbiAgY3JlYXRlZF9hdDogRGF0ZTtcblxuICAvKipcbiAgICogRHVyYcOnw6NvIGVtIG1pbGlzc2VndW5kb3MgZG8gcHJvY2Vzc28gZGUgY29sZXRhL2PDoWxjdWxvXG4gICAqL1xuICBAQ29sdW1uKHsgZGVmYXVsdDogMCB9KVxuICBkdXJhY2FvX3Byb2Nlc3NhbWVudG9fbXM6IG51bWJlcjtcblxuICAvKipcbiAgICogU3RhdHVzIGRhIGNvbGV0YVxuICAgKiAnc3VjZXNzbycsICdlcnJvJywgJ3BhcmNpYWwnXG4gICAqL1xuICBAQ29sdW1uKHsgbGVuZ3RoOiAyMCwgZGVmYXVsdDogJ3N1Y2Vzc28nIH0pXG4gIHN0YXR1c19jb2xldGE6IHN0cmluZztcblxuICAvKipcbiAgICogTWVuc2FnZW0gZGUgZXJybyBvdSBpbmZvcm1hw6fDo28gYWRpY2lvbmFsIHNvYnJlIG8gc3RhdHVzXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3RleHQnLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBtZW5zYWdlbV9zdGF0dXM6IHN0cmluZztcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==