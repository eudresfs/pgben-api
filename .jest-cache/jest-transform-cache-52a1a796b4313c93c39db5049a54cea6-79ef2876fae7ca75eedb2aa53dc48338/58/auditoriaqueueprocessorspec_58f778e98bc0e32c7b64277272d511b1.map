{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\test\\modules\\auditoria\\services\\auditoria-queue.processor.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\test\\modules\\auditoria\\services\\auditoria-queue.processor.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { getRepositoryToken } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AuditoriaQueueProcessor } from '../../../../src/modules/auditoria/services/auditoria-queue.processor';\nimport { LogAuditoria } from '../../../../src/modules/auditoria/entities/log-auditoria.entity';\nimport { TipoOperacao } from '../../../../src/modules/auditoria/enums/tipo-operacao.enum';\nimport { Logger } from '@nestjs/common';\n\ndescribe('AuditoriaQueueProcessor', () => {\n  let processor: AuditoriaQueueProcessor;\n  let logAuditoriaRepository: Repository<LogAuditoria>;\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        AuditoriaQueueProcessor,\n        {\n          provide: getRepositoryToken(LogAuditoria),\n          useValue: {\n            create: jest.fn().mockImplementation((dto) => dto),\n            save: jest.fn().mockResolvedValue({ id: 'mock-log-id' }),\n            findOne: jest.fn().mockResolvedValue(null),\n          },\n        },\n        {\n          provide: Logger,\n          useValue: {\n            log: jest.fn(),\n            error: jest.fn(),\n            warn: jest.fn(),\n            debug: jest.fn(),\n            verbose: jest.fn(),\n          },\n        },\n      ],\n    }).compile();\n\n    processor = module.get<AuditoriaQueueProcessor>(AuditoriaQueueProcessor);\n    logAuditoriaRepository = module.get<Repository<LogAuditoria>>(\n      getRepositoryToken(LogAuditoria),\n    );\n  });\n\n  it('deve ser definido', () => {\n    expect(processor).toBeDefined();\n  });\n\n  describe('processarLogAuditoria', () => {\n    it('deve processar um log de auditoria com sucesso', async () => {\n      const mockJob = {\n        data: {\n          tipo_operacao: TipoOperacao.CREATE,\n          entidade_afetada: 'Usuario',\n          entidade_id: '123e4567-e89b-12d3-a456-426614174000',\n          descricao: 'Criação de novo usuário',\n          ip_origem: '192.168.1.1',\n          usuario_id: 'mock-user-id',\n        },\n      };\n\n      await processor.processarLogAuditoria(mockJob as any);\n\n      expect(logAuditoriaRepository.create).toHaveBeenCalledWith(mockJob.data);\n      expect(logAuditoriaRepository.save).toHaveBeenCalled();\n    });\n\n    it('deve lidar com erros ao processar log de auditoria', async () => {\n      const mockJob = {\n        data: {\n          tipo_operacao: TipoOperacao.CREATE,\n          entidade_afetada: 'Usuario',\n        },\n      };\n\n      jest\n        .spyOn(logAuditoriaRepository, 'save')\n        .mockRejectedValueOnce(new Error('Erro ao salvar'));\n\n      await expect(\n        processor.processarLogAuditoria(mockJob as any),\n      ).rejects.toThrow('Erro ao salvar');\n    });\n  });\n\n  describe('processarAcessoDadosSensiveis', () => {\n    it('deve processar um registro de acesso a dados sensíveis', async () => {\n      const mockJob = {\n        data: {\n          tipo_operacao: TipoOperacao.READ,\n          entidade_afetada: 'Usuario',\n          entidade_id: '123e4567-e89b-12d3-a456-426614174000',\n          dados_sensiveis_acessados: ['cpf', 'renda_familiar'],\n          ip_origem: '192.168.1.1',\n          usuario_id: 'mock-user-id',\n          descricao: 'Acesso a dados sensíveis',\n        },\n      };\n\n      await processor.processarAcessoDadosSensiveis(mockJob as any);\n\n      expect(logAuditoriaRepository.create).toHaveBeenCalledWith(\n        expect.objectContaining({\n          tipo_operacao: TipoOperacao.READ,\n          entidade_afetada: 'Usuario',\n          entidade_id: '123e4567-e89b-12d3-a456-426614174000',\n          dados_sensiveis_acessados: ['cpf', 'renda_familiar'],\n        }),\n      );\n      expect(logAuditoriaRepository.save).toHaveBeenCalled();\n    });\n\n    it('deve adicionar descrição padrão se não fornecida', async () => {\n      const mockJob = {\n        data: {\n          tipo_operacao: TipoOperacao.READ,\n          entidade_afetada: 'Usuario',\n          entidade_id: '123e4567-e89b-12d3-a456-426614174000',\n          dados_sensiveis_acessados: ['cpf'],\n          ip_origem: '192.168.1.1',\n          usuario_id: 'mock-user-id',\n        },\n      };\n\n      await processor.processarAcessoDadosSensiveis(mockJob as any);\n\n      expect(logAuditoriaRepository.create).toHaveBeenCalledWith(\n        expect.objectContaining({\n          descricao: expect.stringContaining('Acesso a dados sensíveis'),\n        }),\n      );\n    });\n  });\n});\n"],"version":3}