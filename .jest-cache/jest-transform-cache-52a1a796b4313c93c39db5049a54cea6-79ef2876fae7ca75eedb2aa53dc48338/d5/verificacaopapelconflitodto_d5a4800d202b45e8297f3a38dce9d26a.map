{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\verificacao-papel-conflito.dto.ts","mappings":";;;;;;;;;;;;AAAA,6CAA8C;AAC9C,qDAMyB;AACzB,yDAAyC;AAEzC;;GAEG;AACH,MAAM,mBAAmB;IAOvB,QAAQ,CAAS;CAClB;AADC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8BAA8B;QAC3C,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC;IACpD,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC;;qDAC/C;AAGnB;;;;;GAKG;AACH,MAAa,2BAA2B;IAOtC,UAAU,CAAS;IAUnB,MAAM,CAAwB;CAC/B;AAlBD,kEAkBC;AAXC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,eAAe;QAC5B,OAAO,EAAE,sCAAsC;KAChD,CAAC;IACD,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACtD,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC;;+DAC/C;AAUnB;IARC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,qCAAqC;QAClD,IAAI,EAAE,CAAC,mBAAmB,CAAC;KAC5B,CAAC;IACD,IAAA,yBAAO,EAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;IAChD,IAAA,8BAAY,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC;IACzE,IAAA,gCAAc,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAC9B,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC;;2DACF","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\verificacao-papel-conflito.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsUUID,\n  IsArray,\n  ArrayMinSize,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\n/**\n * DTO para verificação de papéis conflitantes\n */\nclass PapelVerificacaoDto {\n  @ApiProperty({\n    description: 'ID do papel a ser verificado',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsNotEmpty({ message: 'ID do papel é obrigatório' })\n  @IsUUID('4', { message: 'ID do papel deve ser um UUID válido' })\n  papel_id: string;\n}\n\n/**\n * DTO para verificação de papéis conflitantes\n *\n * Este DTO é utilizado para verificar se existe algum conflito entre os papéis\n * que um cidadão possui ou está tentando obter.\n */\nexport class VerificacaoPapelConflitoDto {\n  @ApiProperty({\n    description: 'ID do cidadão',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsNotEmpty({ message: 'ID do cidadão é obrigatório' })\n  @IsUUID('4', { message: 'ID do cidadão deve ser um UUID válido' })\n  cidadao_id: string;\n\n  @ApiProperty({\n    description: 'Lista de papéis a serem verificados',\n    type: [PapelVerificacaoDto],\n  })\n  @IsArray({ message: 'Papéis deve ser um array' })\n  @ArrayMinSize(1, { message: 'É necessário informar pelo menos um papel' })\n  @ValidateNested({ each: true })\n  @Type(() => PapelVerificacaoDto)\n  papeis: PapelVerificacaoDto[];\n}\n"],"version":3}