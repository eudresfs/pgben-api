{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\decorators\\escopos.decorator.ts","mappings":";;;AAAA,2CAA6C;AAE7C;;GAEG;AACU,QAAA,WAAW,GAAG,oBAAoB,CAAC;AAEhD;;;;;;;;;;;;GAYG;AACI,MAAM,OAAO,GAAG,CAAC,GAAG,OAAiB,EAAE,EAAE,CAAC,IAAA,oBAAW,EAAC,mBAAW,EAAE,OAAO,CAAC,CAAC;AAAtE,QAAA,OAAO,WAA+D","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\integrador\\decorators\\escopos.decorator.ts"],"sourcesContent":["import { SetMetadata } from '@nestjs/common';\n\n/**\n * Chave de metadados usada para armazenar os escopos requeridos.\n */\nexport const ESCOPOS_KEY = 'escopos_requeridos';\n\n/**\n * Decorator para definir quais escopos são necessários para acessar um endpoint.\n * @param escopos Lista de escopos requeridos no formato 'acao:recurso'\n * @returns Decorator para controllers ou métodos\n * \n * @example\n * // Requer permissão de leitura para o recurso 'usuarios'\n * @Escopos('read:usuarios')\n * \n * @example\n * // Requer múltiplas permissões\n * @Escopos('read:beneficios', 'write:solicitacoes')\n */\nexport const Escopos = (...escopos: string[]) => SetMetadata(ESCOPOS_KEY, escopos);\n"],"version":3}