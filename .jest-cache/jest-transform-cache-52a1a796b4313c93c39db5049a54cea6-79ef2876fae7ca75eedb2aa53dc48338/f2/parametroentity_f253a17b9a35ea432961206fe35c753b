3e84f4d55b703f035b4141df21dff2a2
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Parametro = void 0;
const typeorm_1 = require("typeorm");
const enums_1 = require("../enums");
/**
 * Entidade que representa um parâmetro de configuração do sistema.
 * Os parâmetros permitem personalizar o comportamento do sistema sem
 * necessidade de alterações no código fonte.
 */
let Parametro = class Parametro {
    id;
    /**
     * Chave única que identifica o parâmetro.
     * Usada para buscar o valor do parâmetro no sistema.
     */
    chave;
    /**
     * Valor do parâmetro armazenado como string.
     * Será convertido para o tipo correto durante o acesso.
     */
    valor;
    /**
     * Tipo do parâmetro, que determina como o valor será convertido.
     */
    tipo;
    /**
     * Descrição do parâmetro, explicando seu propósito e uso.
     */
    descricao;
    /**
     * Categoria para agrupamento lógico dos parâmetros.
     */
    categoria;
    /**
     * Data de criação do parâmetro.
     */
    created_at;
    /**
     * Data da última atualização do parâmetro.
     */
    updated_at;
    /**
     * ID do usuário que realizou a última atualização.
     */
    updated_by;
};
exports.Parametro = Parametro;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Parametro.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100, unique: true }),
    (0, typeorm_1.Index)('idx_parametro_chave'),
    __metadata("design:type", String)
], Parametro.prototype, "chave", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text' }),
    __metadata("design:type", String)
], Parametro.prototype, "valor", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: enums_1.ParametroTipoEnum,
        default: enums_1.ParametroTipoEnum.STRING,
    }),
    __metadata("design:type", typeof (_a = typeof enums_1.ParametroTipoEnum !== "undefined" && enums_1.ParametroTipoEnum) === "function" ? _a : Object)
], Parametro.prototype, "tipo", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 500 }),
    __metadata("design:type", String)
], Parametro.prototype, "descricao", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'varchar', length: 100 }),
    (0, typeorm_1.Index)('idx_parametro_categoria'),
    __metadata("design:type", String)
], Parametro.prototype, "categoria", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ type: 'timestamp' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Parametro.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({ type: 'timestamp' }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], Parametro.prototype, "updated_at", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], Parametro.prototype, "updated_by", void 0);
exports.Parametro = Parametro = __decorate([
    (0, typeorm_1.Entity)('configuracao_parametro')
], Parametro);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxwYXJhbWV0cm8uZW50aXR5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxxQ0FPaUI7QUFDakIsb0NBQTZDO0FBRTdDOzs7O0dBSUc7QUFFSSxJQUFNLFNBQVMsR0FBZixNQUFNLFNBQVM7SUFFcEIsRUFBRSxDQUFTO0lBRVg7OztPQUdHO0lBR0gsS0FBSyxDQUFTO0lBRWQ7OztPQUdHO0lBRUgsS0FBSyxDQUFTO0lBRWQ7O09BRUc7SUFNSCxJQUFJLENBQW9CO0lBRXhCOztPQUVHO0lBRUgsU0FBUyxDQUFTO0lBRWxCOztPQUVHO0lBR0gsU0FBUyxDQUFTO0lBRWxCOztPQUVHO0lBRUgsVUFBVSxDQUFPO0lBRWpCOztPQUVHO0lBRUgsVUFBVSxDQUFPO0lBRWpCOztPQUVHO0lBRUgsVUFBVSxDQUFTO0NBQ3BCLENBQUE7QUEzRFksOEJBQVM7QUFFcEI7SUFEQyxJQUFBLGdDQUFzQixFQUFDLE1BQU0sQ0FBQzs7cUNBQ3BCO0FBUVg7SUFGQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQ3RELElBQUEsZUFBSyxFQUFDLHFCQUFxQixDQUFDOzt3Q0FDZjtBQU9kO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDOzt3Q0FDWDtBQVVkO0lBTEMsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUseUJBQWlCO1FBQ3ZCLE9BQU8sRUFBRSx5QkFBaUIsQ0FBQyxNQUFNO0tBQ2xDLENBQUM7a0RBQ0kseUJBQWlCLG9CQUFqQix5QkFBaUI7dUNBQUM7QUFNeEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7NENBQ3ZCO0FBT2xCO0lBRkMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7SUFDeEMsSUFBQSxlQUFLLEVBQUMseUJBQXlCLENBQUM7OzRDQUNmO0FBTWxCO0lBREMsSUFBQSwwQkFBZ0IsRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsQ0FBQztrREFDNUIsSUFBSSxvQkFBSixJQUFJOzZDQUFDO0FBTWpCO0lBREMsSUFBQSwwQkFBZ0IsRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsQ0FBQztrREFDNUIsSUFBSSxvQkFBSixJQUFJOzZDQUFDO0FBTWpCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7OzZDQUN0QjtvQkExRFIsU0FBUztJQURyQixJQUFBLGdCQUFNLEVBQUMsd0JBQXdCLENBQUM7R0FDcEIsU0FBUyxDQTJEckIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxwYXJhbWV0cm8uZW50aXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEVudGl0eSxcbiAgQ29sdW1uLFxuICBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uLFxuICBDcmVhdGVEYXRlQ29sdW1uLFxuICBVcGRhdGVEYXRlQ29sdW1uLFxuICBJbmRleCxcbn0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBQYXJhbWV0cm9UaXBvRW51bSB9IGZyb20gJy4uL2VudW1zJztcblxuLyoqXG4gKiBFbnRpZGFkZSBxdWUgcmVwcmVzZW50YSB1bSBwYXLDom1ldHJvIGRlIGNvbmZpZ3VyYcOnw6NvIGRvIHNpc3RlbWEuXG4gKiBPcyBwYXLDom1ldHJvcyBwZXJtaXRlbSBwZXJzb25hbGl6YXIgbyBjb21wb3J0YW1lbnRvIGRvIHNpc3RlbWEgc2VtXG4gKiBuZWNlc3NpZGFkZSBkZSBhbHRlcmHDp8O1ZXMgbm8gY8OzZGlnbyBmb250ZS5cbiAqL1xuQEVudGl0eSgnY29uZmlndXJhY2FvX3BhcmFtZXRybycpXG5leHBvcnQgY2xhc3MgUGFyYW1ldHJvIHtcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oJ3V1aWQnKVxuICBpZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDaGF2ZSDDum5pY2EgcXVlIGlkZW50aWZpY2EgbyBwYXLDom1ldHJvLlxuICAgKiBVc2FkYSBwYXJhIGJ1c2NhciBvIHZhbG9yIGRvIHBhcsOibWV0cm8gbm8gc2lzdGVtYS5cbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAndmFyY2hhcicsIGxlbmd0aDogMTAwLCB1bmlxdWU6IHRydWUgfSlcbiAgQEluZGV4KCdpZHhfcGFyYW1ldHJvX2NoYXZlJylcbiAgY2hhdmU6IHN0cmluZztcblxuICAvKipcbiAgICogVmFsb3IgZG8gcGFyw6JtZXRybyBhcm1hemVuYWRvIGNvbW8gc3RyaW5nLlxuICAgKiBTZXLDoSBjb252ZXJ0aWRvIHBhcmEgbyB0aXBvIGNvcnJldG8gZHVyYW50ZSBvIGFjZXNzby5cbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAndGV4dCcgfSlcbiAgdmFsb3I6IHN0cmluZztcblxuICAvKipcbiAgICogVGlwbyBkbyBwYXLDom1ldHJvLCBxdWUgZGV0ZXJtaW5hIGNvbW8gbyB2YWxvciBzZXLDoSBjb252ZXJ0aWRvLlxuICAgKi9cbiAgQENvbHVtbih7XG4gICAgdHlwZTogJ2VudW0nLFxuICAgIGVudW06IFBhcmFtZXRyb1RpcG9FbnVtLFxuICAgIGRlZmF1bHQ6IFBhcmFtZXRyb1RpcG9FbnVtLlNUUklORyxcbiAgfSlcbiAgdGlwbzogUGFyYW1ldHJvVGlwb0VudW07XG5cbiAgLyoqXG4gICAqIERlc2NyacOnw6NvIGRvIHBhcsOibWV0cm8sIGV4cGxpY2FuZG8gc2V1IHByb3DDs3NpdG8gZSB1c28uXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3ZhcmNoYXInLCBsZW5ndGg6IDUwMCB9KVxuICBkZXNjcmljYW86IHN0cmluZztcblxuICAvKipcbiAgICogQ2F0ZWdvcmlhIHBhcmEgYWdydXBhbWVudG8gbMOzZ2ljbyBkb3MgcGFyw6JtZXRyb3MuXG4gICAqL1xuICBAQ29sdW1uKHsgdHlwZTogJ3ZhcmNoYXInLCBsZW5ndGg6IDEwMCB9KVxuICBASW5kZXgoJ2lkeF9wYXJhbWV0cm9fY2F0ZWdvcmlhJylcbiAgY2F0ZWdvcmlhOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIERhdGEgZGUgY3JpYcOnw6NvIGRvIHBhcsOibWV0cm8uXG4gICAqL1xuICBAQ3JlYXRlRGF0ZUNvbHVtbih7IHR5cGU6ICd0aW1lc3RhbXAnIH0pXG4gIGNyZWF0ZWRfYXQ6IERhdGU7XG5cbiAgLyoqXG4gICAqIERhdGEgZGEgw7psdGltYSBhdHVhbGl6YcOnw6NvIGRvIHBhcsOibWV0cm8uXG4gICAqL1xuICBAVXBkYXRlRGF0ZUNvbHVtbih7IHR5cGU6ICd0aW1lc3RhbXAnIH0pXG4gIHVwZGF0ZWRfYXQ6IERhdGU7XG5cbiAgLyoqXG4gICAqIElEIGRvIHVzdcOhcmlvIHF1ZSByZWFsaXpvdSBhIMO6bHRpbWEgYXR1YWxpemHDp8Ojby5cbiAgICovXG4gIEBDb2x1bW4oeyB0eXBlOiAndXVpZCcsIG51bGxhYmxlOiB0cnVlIH0pXG4gIHVwZGF0ZWRfYnk6IHN0cmluZztcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==