aefbb1e320ff11f900c012e9ae08048c
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricasModule = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const event_emitter_1 = require("@nestjs/event-emitter");
const schedule_adapter_module_1 = require("../../shared/schedule/schedule-adapter.module");
const auth_module_1 = require("../../auth/auth.module");
const health_check_service_1 = require("../../shared/services/health-check.service");
// Controladores
const metricas_controller_1 = require("./controllers/metricas.controller");
const metricas_definicao_controller_1 = require("./controllers/metricas-definicao.controller");
const metricas_anomalias_controller_1 = require("./controllers/metricas-anomalias.controller");
const metricas_valores_controller_1 = require("./controllers/metricas-valores.controller");
const metricas_analise_controller_1 = require("./controllers/metricas-analise.controller");
const metricas_dashboard_controller_1 = require("./controllers/metricas-dashboard.controller");
const metricas_exportacao_controller_1 = require("./controllers/metricas-exportacao.controller");
// Serviços
const metricas_service_1 = require("./services/metricas.service");
const metricas_definicao_service_1 = require("./services/metricas-definicao.service");
const health_service_1 = require("./services/health.service");
const metricas_coleta_service_1 = require("./services/metricas-coleta.service");
const metrica_calculo_service_1 = require("./services/metrica-calculo.service");
const metricas_cache_service_1 = require("./services/metricas-cache.service");
const dashboard_service_1 = require("./services/dashboard.service");
const metricas_anomalia_service_1 = require("./services/metricas-anomalia.service");
// Middleware
const metricas_middleware_1 = require("./middlewares/metricas.middleware");
// Entidades
const entities_1 = require("../../entities");
// Módulos externos
const nestjs_prometheus_1 = require("@willsoto/nestjs-prometheus");
/**
 * Módulo responsável pelo monitoramento, observabilidade e análise de métricas do sistema
 *
 * Este módulo implementa:
 * 1. Coleta e exposição de métricas para o Prometheus
 * 2. Sistema completo de definição, coleta e armazenamento de métricas de negócio
 * 3. Análise de tendências e detecção de anomalias
 * 4. Cacheamento eficiente para consultas de alta performance
 * 5. API para alimentação de dashboards e relatórios
 */
let MetricasModule = class MetricasModule {
    configure(consumer) {
        // Aplica o middleware de métricas a todas as rotas
        consumer.apply(metricas_middleware_1.MetricasMiddleware).forRoutes('*');
    }
};
exports.MetricasModule = MetricasModule;
exports.MetricasModule = MetricasModule = __decorate([
    (0, common_1.Module)({
        imports: [
            // Configuração do Prometheus para métricas de sistema
            nestjs_prometheus_1.PrometheusModule.register({
                defaultMetrics: {
                    enabled: true,
                },
                path: '/prometheus',
            }),
            // Módulo de agendamento personalizado para coleta programada de métricas
            schedule_adapter_module_1.ScheduleAdapterModule,
            // Módulo de eventos para comunicação entre serviços
            event_emitter_1.EventEmitterModule.forRoot(),
            // Entidades de banco de dados
            typeorm_1.TypeOrmModule.forFeature([
                entities_1.LogAuditoria,
                entities_1.MetricaDefinicao,
                entities_1.MetricaSnapshot,
                entities_1.MetricaConfiguracao,
                // Entidades para dashboard
                entities_1.Solicitacao,
                entities_1.Recurso,
                entities_1.TipoBeneficio,
                entities_1.Unidade,
                entities_1.Usuario,
            ]),
            // Importa o módulo compartilhado de autenticação
            auth_module_1.AuthModule,
        ],
        // Controladores para API
        controllers: [
            metricas_controller_1.MetricasController,
            metricas_definicao_controller_1.MetricasDefinicaoController,
            metricas_anomalias_controller_1.MetricasAnomaliasController,
            metricas_valores_controller_1.MetricasValoresController,
            metricas_analise_controller_1.MetricasAnaliseController,
            metricas_dashboard_controller_1.MetricasDashboardController,
            metricas_exportacao_controller_1.MetricasExportacaoController,
        ],
        // Serviços do módulo
        providers: [
            // Serviços originais
            metricas_service_1.MetricasService,
            health_service_1.HealthService,
            // Novos serviços
            metricas_definicao_service_1.MetricasService,
            metricas_coleta_service_1.MetricasColetaService,
            metrica_calculo_service_1.MetricaCalculoService,
            metricas_cache_service_1.MetricasCacheService,
            metricas_anomalia_service_1.MetricasAnomaliasService,
            dashboard_service_1.DashboardService,
            // Serviço de health check compartilhado
            health_check_service_1.HealthCheckService,
        ],
        // Serviços exportados para outros módulos
        exports: [
            metricas_service_1.MetricasService,
            health_service_1.HealthService,
            metricas_coleta_service_1.MetricasColetaService,
            metricas_cache_service_1.MetricasCacheService,
        ],
    })
], MetricasModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,