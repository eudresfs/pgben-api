{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\metricas.module.ts","mappings":";;;;;;;;;AAAA,2CAAwE;AACxE,6CAAgD;AAChD,yDAA2D;AAC3D,2FAAsF;AACtF,wDAAoD;AACpD,qFAAgF;AAEhF,gBAAgB;AAChB,2EAAuE;AACvE,+FAA0F;AAC1F,+FAA0F;AAC1F,2FAAsF;AACtF,2FAAsF;AACtF,+FAA0F;AAC1F,iGAA4F;AAE5F,WAAW;AACX,kEAA8D;AAC9D,sFAAoG;AACpG,8DAA0D;AAC1D,gFAA2E;AAC3E,gFAA2E;AAC3E,8EAAyE;AACzE,oEAAgE;AAChE,oFAAgF;AAEhF,aAAa;AACb,2EAAuE;AAEvE,YAAY;AACZ,6CAUwB;AAExB,mBAAmB;AACnB,mEAA+D;AAE/D;;;;;;;;;GASG;AAwEI,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,SAAS,CAAC,QAA4B;QACpC,mDAAmD;QACnD,QAAQ,CAAC,KAAK,CAAC,wCAAkB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpD,CAAC;CACF,CAAA;AALY,wCAAc;yBAAd,cAAc;IAvE1B,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,sDAAsD;YACtD,oCAAgB,CAAC,QAAQ,CAAC;gBACxB,cAAc,EAAE;oBACd,OAAO,EAAE,IAAI;iBACd;gBACD,IAAI,EAAE,aAAa;aACpB,CAAC;YAEF,yEAAyE;YACzE,+CAAqB;YAErB,oDAAoD;YACpD,kCAAkB,CAAC,OAAO,EAAE;YAE5B,8BAA8B;YAC9B,uBAAa,CAAC,UAAU,CAAC;gBACvB,uBAAY;gBACZ,2BAAgB;gBAChB,0BAAe;gBACf,8BAAmB;gBACnB,2BAA2B;gBAC3B,sBAAW;gBACX,kBAAO;gBACP,wBAAa;gBACb,kBAAO;gBACP,kBAAO;aACR,CAAC;YAEF,iDAAiD;YACjD,wBAAU;SACX;QAED,yBAAyB;QACzB,WAAW,EAAE;YACX,wCAAkB;YAClB,2DAA2B;YAC3B,2DAA2B;YAC3B,uDAAyB;YACzB,uDAAyB;YACzB,2DAA2B;YAC3B,6DAA4B;SAC7B;QAED,qBAAqB;QACrB,SAAS,EAAE;YACT,qBAAqB;YACrB,kCAAe;YACf,8BAAa;YAEb,iBAAiB;YACjB,4CAAwB;YACxB,+CAAqB;YACrB,+CAAqB;YACrB,6CAAoB;YACpB,oDAAwB;YACxB,oCAAgB;YAEhB,wCAAwC;YACxC,yCAAkB;SACnB;QAED,0CAA0C;QAC1C,OAAO,EAAE;YACP,kCAAe;YACf,8BAAa;YACb,+CAAqB;YACrB,6CAAoB;SACrB;KACF,CAAC;GACW,cAAc,CAK1B","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\metricas.module.ts"],"sourcesContent":["import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { ScheduleAdapterModule } from '../../shared/schedule/schedule-adapter.module';\nimport { AuthModule } from '../../auth/auth.module';\nimport { HealthCheckService } from '../../shared/services/health-check.service';\n\n// Controladores\nimport { MetricasController } from './controllers/metricas.controller';\nimport { MetricasDefinicaoController } from './controllers/metricas-definicao.controller';\nimport { MetricasAnomaliasController } from './controllers/metricas-anomalias.controller';\nimport { MetricasValoresController } from './controllers/metricas-valores.controller';\nimport { MetricasAnaliseController } from './controllers/metricas-analise.controller';\nimport { MetricasDashboardController } from './controllers/metricas-dashboard.controller';\nimport { MetricasExportacaoController } from './controllers/metricas-exportacao.controller';\n\n// Serviços\nimport { MetricasService } from './services/metricas.service';\nimport { MetricasService as MetricasDefinicaoService } from './services/metricas-definicao.service';\nimport { HealthService } from './services/health.service';\nimport { MetricasColetaService } from './services/metricas-coleta.service';\nimport { MetricaCalculoService } from './services/metrica-calculo.service';\nimport { MetricasCacheService } from './services/metricas-cache.service';\nimport { DashboardService } from './services/dashboard.service';\nimport { MetricasAnomaliasService } from './services/metricas-anomalia.service';\n\n// Middleware\nimport { MetricasMiddleware } from './middlewares/metricas.middleware';\n\n// Entidades\nimport {\n  LogAuditoria,\n  MetricaDefinicao,\n  MetricaSnapshot,\n  MetricaConfiguracao,\n  Solicitacao,\n  Recurso,\n  TipoBeneficio,\n  Unidade,\n  Usuario,\n} from '../../entities';\n\n// Módulos externos\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus';\n\n/**\n * Módulo responsável pelo monitoramento, observabilidade e análise de métricas do sistema\n *\n * Este módulo implementa:\n * 1. Coleta e exposição de métricas para o Prometheus\n * 2. Sistema completo de definição, coleta e armazenamento de métricas de negócio\n * 3. Análise de tendências e detecção de anomalias\n * 4. Cacheamento eficiente para consultas de alta performance\n * 5. API para alimentação de dashboards e relatórios\n */\n@Module({\n  imports: [\n    // Configuração do Prometheus para métricas de sistema\n    PrometheusModule.register({\n      defaultMetrics: {\n        enabled: true,\n      },\n      path: '/prometheus',\n    }),\n\n    // Módulo de agendamento personalizado para coleta programada de métricas\n    ScheduleAdapterModule,\n\n    // Módulo de eventos para comunicação entre serviços\n    EventEmitterModule.forRoot(),\n\n    // Entidades de banco de dados\n    TypeOrmModule.forFeature([\n      LogAuditoria,\n      MetricaDefinicao,\n      MetricaSnapshot,\n      MetricaConfiguracao,\n      // Entidades para dashboard\n      Solicitacao,\n      Recurso,\n      TipoBeneficio,\n      Unidade,\n      Usuario,\n    ]),\n\n    // Importa o módulo compartilhado de autenticação\n    AuthModule,\n  ],\n\n  // Controladores para API\n  controllers: [\n    MetricasController,\n    MetricasDefinicaoController,\n    MetricasAnomaliasController,\n    MetricasValoresController,\n    MetricasAnaliseController,\n    MetricasDashboardController,\n    MetricasExportacaoController,\n  ],\n\n  // Serviços do módulo\n  providers: [\n    // Serviços originais\n    MetricasService,\n    HealthService,\n\n    // Novos serviços\n    MetricasDefinicaoService,\n    MetricasColetaService,\n    MetricaCalculoService,\n    MetricasCacheService,\n    MetricasAnomaliasService,\n    DashboardService,\n\n    // Serviço de health check compartilhado\n    HealthCheckService,\n  ],\n\n  // Serviços exportados para outros módulos\n  exports: [\n    MetricasService,\n    HealthService,\n    MetricasColetaService,\n    MetricasCacheService,\n  ],\n})\nexport class MetricasModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    // Aplica o middleware de métricas a todas as rotas\n    consumer.apply(MetricasMiddleware).forRoutes('*');\n  }\n}\n"],"version":3}