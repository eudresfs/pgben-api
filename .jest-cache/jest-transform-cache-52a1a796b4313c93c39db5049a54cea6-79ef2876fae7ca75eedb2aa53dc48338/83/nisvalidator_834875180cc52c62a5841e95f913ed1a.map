{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\validators\\nis-validator.ts","mappings":";;;;;;;;;AAAA,qDAIyB;AAGlB,IAAM,YAAY,GAAlB,MAAM,YAAY;IACvB,QAAQ,CAAC,GAAW,EAAE,IAAyB;QAC7C,IAAI,CAAC,GAAG,EAAE,CAAC;YAAA,OAAO,KAAK,CAAC;QAAA,CAAC;QAEzB,8BAA8B;QAC9B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAEhC,6BAA6B;QAC7B,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YAAA,OAAO,KAAK,CAAC;QAAA,CAAC;QAEtC,0CAA0C;QAC1C,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YAAA,OAAO,KAAK,CAAC;QAAA,CAAC;QAE1C,+DAA+D;QAC/D,MAAM,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5B,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QACxB,MAAM,iBAAiB,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC;QAErD,OAAO,iBAAiB,KAAK,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,cAAc,CAAC,IAAyB;QACtC,OAAO,cAAc,CAAC;IACxB,CAAC;CACF,CAAA;AA9BY,oCAAY;uBAAZ,YAAY;IADxB,IAAA,qCAAmB,EAAC,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;GAC/C,YAAY,CA8BxB","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\validators\\nis-validator.ts"],"sourcesContent":["import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n@ValidatorConstraint({ name: 'nisValidator', async: false })\nexport class NISValidator implements ValidatorConstraintInterface {\n  validate(nis: string, args: ValidationArguments) {\n    if (!nis) {return false;}\n\n    // Remove caracteres especiais\n    nis = nis.replace(/[^\\d]/g, '');\n\n    // Verifica se tem 11 dígitos\n    if (nis.length !== 11) {return false;}\n\n    // Verifica se todos os dígitos são iguais\n    if (/^(\\d)\\1+$/.test(nis)) {return false;}\n\n    // Validação do dígito verificador (algoritmo do PIS/PASEP/NIS)\n    const multiplicadores = [3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n    let soma = 0;\n\n    for (let i = 0; i < 10; i++) {\n      soma += parseInt(nis.charAt(i)) * multiplicadores[i];\n    }\n\n    const resto = soma % 11;\n    const digitoVerificador = resto < 2 ? 0 : 11 - resto;\n\n    return digitoVerificador === parseInt(nis.charAt(10));\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return 'NIS inválido';\n  }\n}\n"],"version":3}