ced825007bb47a785d1cf424cea37da6
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateUsuarioDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const roles_constants_1 = require("../../../shared/constants/roles.constants");
const cpf_validator_1 = require("../../../shared/validators/cpf.validator");
/**
 * DTO para atualização de usuário
 */
class UpdateUsuarioDto {
    nome;
    email;
    cpf;
    telefone;
    matricula;
    role_id;
    unidade_id;
    setor_id;
}
exports.UpdateUsuarioDto = UpdateUsuarioDto;
__decorate([
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    (0, class_validator_1.MinLength)(3, { message: 'Nome deve ter pelo menos 3 caracteres' }),
    (0, class_validator_1.MaxLength)(100, { message: 'Nome deve ter no máximo 100 caracteres' }),
    (0, class_validator_1.Matches)(/^[A-Za-zÀ-ÿ\s]+$/, {
        message: 'Nome deve conter apenas letras e espaços',
    }),
    (0, class_validator_1.Matches)(/^\S+\s+\S+/, {
        message: 'Nome deve conter pelo menos nome e sobrenome',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: 'João da Silva',
        description: 'Nome completo do usuário',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "nome", void 0);
__decorate([
    (0, class_validator_1.IsEmail)({}, { message: 'Email inválido' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: 'joao.silva@semtas.natal.gov.br',
        description: 'Email do usuário (será usado para login)',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "email", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'CPF deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'CPF é obrigatório' }),
    (0, class_validator_1.Matches)(/^\d{3}\.\d{3}\.\d{3}\-\d{2}$/, {
        message: 'CPF deve estar no formato 123.456.789-00',
    }),
    (0, class_validator_1.Validate)(cpf_validator_1.IsCPF, {
        message: 'CPF inválido',
    }),
    (0, swagger_1.ApiProperty)({
        example: '123.456.789-00',
        description: 'CPF do usuário',
        required: true,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "cpf", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Telefone deve ser uma string' }),
    (0, class_validator_1.Matches)(/^\(\d{2}\)\s\d{4,5}-\d{4}$/, {
        message: 'Telefone deve estar no formato (XX) XXXXX-XXXX ou (XX) XXXX-XXXX',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: '(84) 98765-4321',
        description: 'Telefone do usuário',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "telefone", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Matrícula deve ser uma string' }),
    (0, class_validator_1.Matches)(/^\d{5,10}$/, {
        message: 'Matrícula deve conter entre 5 e 10 dígitos numéricos',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: '12345',
        description: 'Matrícula do usuário',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "matricula", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(roles_constants_1.ROLES, { message: 'Papel inválido' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        description: 'Papel do usuário no sistema',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "role_id", void 0);
__decorate([
    (0, class_validator_1.IsUUID)(undefined, { message: 'ID da unidade inválido' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: '123e4567-e89b-12d3-a456-426614174000',
        description: 'ID da unidade do usuário',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "unidade_id", void 0);
__decorate([
    (0, class_validator_1.IsUUID)(undefined, { message: 'ID do setor inválido' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiProperty)({
        example: '123e4567-e89b-12d3-a456-426614174001',
        description: 'ID do setor do usuário',
        required: false,
    }),
    __metadata("design:type", String)
], UpdateUsuarioDto.prototype, "setor_id", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXHVzdWFyaW9cXGR0b1xcdXBkYXRlLXVzdWFyaW8uZHRvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLDZDQUE4QztBQUM5QyxxREFXeUI7QUFDekIsK0VBQTRFO0FBQzVFLDRFQUFpRTtBQUVqRTs7R0FFRztBQUNILE1BQWEsZ0JBQWdCO0lBZ0IzQixJQUFJLENBQVU7SUFTZCxLQUFLLENBQVU7SUFlZixHQUFHLENBQVM7SUFZWixRQUFRLENBQVU7SUFZbEIsU0FBUyxDQUFVO0lBUW5CLE9BQU8sQ0FBVTtJQVNqQixVQUFVLENBQVU7SUFTcEIsUUFBUSxDQUFVO0NBQ25CO0FBM0ZELDRDQTJGQztBQTNFQztJQWZDLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxDQUFDO0lBQ2pELElBQUEsMkJBQVMsRUFBQyxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsdUNBQXVDLEVBQUUsQ0FBQztJQUNsRSxJQUFBLDJCQUFTLEVBQUMsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLENBQUM7SUFDckUsSUFBQSx5QkFBTyxFQUFDLGtCQUFrQixFQUFFO1FBQzNCLE9BQU8sRUFBRSwwQ0FBMEM7S0FDcEQsQ0FBQztJQUNELElBQUEseUJBQU8sRUFBQyxZQUFZLEVBQUU7UUFDckIsT0FBTyxFQUFFLDhDQUE4QztLQUN4RCxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSxxQkFBVyxFQUFDO1FBQ1gsT0FBTyxFQUFFLGVBQWU7UUFDeEIsV0FBVyxFQUFFLDBCQUEwQjtRQUN2QyxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDOzs4Q0FDWTtBQVNkO0lBUEMsSUFBQSx5QkFBTyxFQUFDLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxDQUFDO0lBQzFDLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEscUJBQVcsRUFBQztRQUNYLE9BQU8sRUFBRSxnQ0FBZ0M7UUFDekMsV0FBVyxFQUFFLDBDQUEwQztRQUN2RCxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDOzsrQ0FDYTtBQWVmO0lBYkMsSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLENBQUM7SUFDaEQsSUFBQSw0QkFBVSxFQUFDLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLENBQUM7SUFDNUMsSUFBQSx5QkFBTyxFQUFDLDhCQUE4QixFQUFFO1FBQ3ZDLE9BQU8sRUFBRSwwQ0FBMEM7S0FDcEQsQ0FBQztJQUNELElBQUEsMEJBQVEsRUFBQyxxQkFBSyxFQUFFO1FBQ2YsT0FBTyxFQUFFLGNBQWM7S0FDeEIsQ0FBQztJQUNELElBQUEscUJBQVcsRUFBQztRQUNYLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsV0FBVyxFQUFFLGdCQUFnQjtRQUM3QixRQUFRLEVBQUUsSUFBSTtLQUNmLENBQUM7OzZDQUNVO0FBWVo7SUFWQyxJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsQ0FBQztJQUNyRCxJQUFBLHlCQUFPLEVBQUMsNEJBQTRCLEVBQUU7UUFDckMsT0FBTyxFQUFFLGtFQUFrRTtLQUM1RSxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSxxQkFBVyxFQUFDO1FBQ1gsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixXQUFXLEVBQUUscUJBQXFCO1FBQ2xDLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7O2tEQUNnQjtBQVlsQjtJQVZDLElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxDQUFDO0lBQ3RELElBQUEseUJBQU8sRUFBQyxZQUFZLEVBQUU7UUFDckIsT0FBTyxFQUFFLHNEQUFzRDtLQUNoRSxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSxxQkFBVyxFQUFDO1FBQ1gsT0FBTyxFQUFFLE9BQU87UUFDaEIsV0FBVyxFQUFFLHNCQUFzQjtRQUNuQyxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDOzttREFDaUI7QUFRbkI7SUFOQyxJQUFBLHdCQUFNLEVBQUMsdUJBQUssRUFBRSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxDQUFDO0lBQzVDLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSw2QkFBNkI7UUFDMUMsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQzs7aURBQ2U7QUFTakI7SUFQQyxJQUFBLHdCQUFNLEVBQUMsU0FBUyxFQUFFLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLENBQUM7SUFDeEQsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSxxQkFBVyxFQUFDO1FBQ1gsT0FBTyxFQUFFLHNDQUFzQztRQUMvQyxXQUFXLEVBQUUsMEJBQTBCO1FBQ3ZDLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7O29EQUNrQjtBQVNwQjtJQVBDLElBQUEsd0JBQU0sRUFBQyxTQUFTLEVBQUUsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsQ0FBQztJQUN0RCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHFCQUFXLEVBQUM7UUFDWCxPQUFPLEVBQUUsc0NBQXNDO1FBQy9DLFdBQVcsRUFBRSx3QkFBd0I7UUFDckMsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQzs7a0RBQ2dCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxtb2R1bGVzXFx1c3VhcmlvXFxkdG9cXHVwZGF0ZS11c3VhcmlvLmR0by50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQcm9wZXJ0eSB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XG5pbXBvcnQge1xuICBJc0VtYWlsLFxuICBJc1N0cmluZyxcbiAgSXNPcHRpb25hbCxcbiAgSXNFbnVtLFxuICBJc1VVSUQsXG4gIE1pbkxlbmd0aCxcbiAgTWF4TGVuZ3RoLFxuICBNYXRjaGVzLFxuICBWYWxpZGF0ZSxcbiAgSXNOb3RFbXB0eSxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcbmltcG9ydCB7IFJPTEVTLCBSb2xlVHlwZSB9IGZyb20gJy4uLy4uLy4uL3NoYXJlZC9jb25zdGFudHMvcm9sZXMuY29uc3RhbnRzJztcbmltcG9ydCB7IElzQ1BGIH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3ZhbGlkYXRvcnMvY3BmLnZhbGlkYXRvcic7XG5cbi8qKlxuICogRFRPIHBhcmEgYXR1YWxpemHDp8OjbyBkZSB1c3XDoXJpb1xuICovXG5leHBvcnQgY2xhc3MgVXBkYXRlVXN1YXJpb0R0byB7XG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdOb21lIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBNaW5MZW5ndGgoMywgeyBtZXNzYWdlOiAnTm9tZSBkZXZlIHRlciBwZWxvIG1lbm9zIDMgY2FyYWN0ZXJlcycgfSlcbiAgQE1heExlbmd0aCgxMDAsIHsgbWVzc2FnZTogJ05vbWUgZGV2ZSB0ZXIgbm8gbcOheGltbyAxMDAgY2FyYWN0ZXJlcycgfSlcbiAgQE1hdGNoZXMoL15bQS1aYS16w4Atw79cXHNdKyQvLCB7XG4gICAgbWVzc2FnZTogJ05vbWUgZGV2ZSBjb250ZXIgYXBlbmFzIGxldHJhcyBlIGVzcGHDp29zJyxcbiAgfSlcbiAgQE1hdGNoZXMoL15cXFMrXFxzK1xcUysvLCB7XG4gICAgbWVzc2FnZTogJ05vbWUgZGV2ZSBjb250ZXIgcGVsbyBtZW5vcyBub21lIGUgc29icmVub21lJyxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBAQXBpUHJvcGVydHkoe1xuICAgIGV4YW1wbGU6ICdKb8OjbyBkYSBTaWx2YScsXG4gICAgZGVzY3JpcHRpb246ICdOb21lIGNvbXBsZXRvIGRvIHVzdcOhcmlvJyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gIH0pXG4gIG5vbWU/OiBzdHJpbmc7XG5cbiAgQElzRW1haWwoe30sIHsgbWVzc2FnZTogJ0VtYWlsIGludsOhbGlkbycgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBAQXBpUHJvcGVydHkoe1xuICAgIGV4YW1wbGU6ICdqb2FvLnNpbHZhQHNlbXRhcy5uYXRhbC5nb3YuYnInLFxuICAgIGRlc2NyaXB0aW9uOiAnRW1haWwgZG8gdXN1w6FyaW8gKHNlcsOhIHVzYWRvIHBhcmEgbG9naW4pJyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gIH0pXG4gIGVtYWlsPzogc3RyaW5nO1xuXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdDUEYgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnQ1BGIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgQE1hdGNoZXMoL15cXGR7M31cXC5cXGR7M31cXC5cXGR7M31cXC1cXGR7Mn0kLywge1xuICAgIG1lc3NhZ2U6ICdDUEYgZGV2ZSBlc3RhciBubyBmb3JtYXRvIDEyMy40NTYuNzg5LTAwJyxcbiAgfSlcbiAgQFZhbGlkYXRlKElzQ1BGLCB7XG4gICAgbWVzc2FnZTogJ0NQRiBpbnbDoWxpZG8nLFxuICB9KVxuICBAQXBpUHJvcGVydHkoe1xuICAgIGV4YW1wbGU6ICcxMjMuNDU2Ljc4OS0wMCcsXG4gICAgZGVzY3JpcHRpb246ICdDUEYgZG8gdXN1w6FyaW8nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9KVxuICBjcGY6IHN0cmluZztcblxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnVGVsZWZvbmUgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1hdGNoZXMoL15cXChcXGR7Mn1cXClcXHNcXGR7NCw1fS1cXGR7NH0kLywge1xuICAgIG1lc3NhZ2U6ICdUZWxlZm9uZSBkZXZlIGVzdGFyIG5vIGZvcm1hdG8gKFhYKSBYWFhYWC1YWFhYIG91IChYWCkgWFhYWC1YWFhYJyxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBAQXBpUHJvcGVydHkoe1xuICAgIGV4YW1wbGU6ICcoODQpIDk4NzY1LTQzMjEnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGVsZWZvbmUgZG8gdXN1w6FyaW8nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgdGVsZWZvbmU/OiBzdHJpbmc7XG5cbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ01hdHLDrWN1bGEgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1hdGNoZXMoL15cXGR7NSwxMH0kLywge1xuICAgIG1lc3NhZ2U6ICdNYXRyw61jdWxhIGRldmUgY29udGVyIGVudHJlIDUgZSAxMCBkw61naXRvcyBudW3DqXJpY29zJyxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBAQXBpUHJvcGVydHkoe1xuICAgIGV4YW1wbGU6ICcxMjM0NScsXG4gICAgZGVzY3JpcHRpb246ICdNYXRyw61jdWxhIGRvIHVzdcOhcmlvJyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gIH0pXG4gIG1hdHJpY3VsYT86IHN0cmluZztcblxuICBASXNFbnVtKFJPTEVTLCB7IG1lc3NhZ2U6ICdQYXBlbCBpbnbDoWxpZG8nIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQEFwaVByb3BlcnR5KHtcbiAgICBkZXNjcmlwdGlvbjogJ1BhcGVsIGRvIHVzdcOhcmlvIG5vIHNpc3RlbWEnLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgcm9sZV9pZD86IHN0cmluZztcblxuICBASXNVVUlEKHVuZGVmaW5lZCwgeyBtZXNzYWdlOiAnSUQgZGEgdW5pZGFkZSBpbnbDoWxpZG8nIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQEFwaVByb3BlcnR5KHtcbiAgICBleGFtcGxlOiAnMTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDAwJyxcbiAgICBkZXNjcmlwdGlvbjogJ0lEIGRhIHVuaWRhZGUgZG8gdXN1w6FyaW8nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSlcbiAgdW5pZGFkZV9pZD86IHN0cmluZztcblxuICBASXNVVUlEKHVuZGVmaW5lZCwgeyBtZXNzYWdlOiAnSUQgZG8gc2V0b3IgaW52w6FsaWRvJyB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBBcGlQcm9wZXJ0eSh7XG4gICAgZXhhbXBsZTogJzEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMScsXG4gICAgZGVzY3JpcHRpb246ICdJRCBkbyBzZXRvciBkbyB1c3XDoXJpbycsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9KVxuICBzZXRvcl9pZD86IHN0cmluZztcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==