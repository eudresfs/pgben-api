{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\usuario\\dto\\update-usuario.dto.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\usuario\\dto\\update-usuario.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  IsOptional,\n  IsEnum,\n  IsUUID,\n  MinLength,\n  MaxLength,\n  Matches,\n  Validate,\n  IsNotEmpty,\n} from 'class-validator';\nimport { ROLES, RoleType } from '../../../shared/constants/roles.constants';\nimport { IsCPF } from '../../../shared/validators/cpf.validator';\n\n/**\n * DTO para atualização de usuário\n */\nexport class UpdateUsuarioDto {\n  @IsString({ message: 'Nome deve ser uma string' })\n  @MinLength(3, { message: 'Nome deve ter pelo menos 3 caracteres' })\n  @MaxLength(100, { message: 'Nome deve ter no máximo 100 caracteres' })\n  @Matches(/^[A-Za-zÀ-ÿ\\s]+$/, {\n    message: 'Nome deve conter apenas letras e espaços',\n  })\n  @Matches(/^\\S+\\s+\\S+/, {\n    message: 'Nome deve conter pelo menos nome e sobrenome',\n  })\n  @IsOptional()\n  @ApiProperty({\n    example: 'João da Silva',\n    description: 'Nome completo do usuário',\n    required: false,\n  })\n  nome?: string;\n\n  @IsEmail({}, { message: 'Email inválido' })\n  @IsOptional()\n  @ApiProperty({\n    example: 'joao.silva@semtas.natal.gov.br',\n    description: 'Email do usuário (será usado para login)',\n    required: false,\n  })\n  email?: string;\n\n  @IsString({ message: 'CPF deve ser uma string' })\n  @IsNotEmpty({ message: 'CPF é obrigatório' })\n  @Matches(/^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/, {\n    message: 'CPF deve estar no formato 123.456.789-00',\n  })\n  @Validate(IsCPF, {\n    message: 'CPF inválido',\n  })\n  @ApiProperty({\n    example: '123.456.789-00',\n    description: 'CPF do usuário',\n    required: true,\n  })\n  cpf: string;\n\n  @IsString({ message: 'Telefone deve ser uma string' })\n  @Matches(/^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/, {\n    message: 'Telefone deve estar no formato (XX) XXXXX-XXXX ou (XX) XXXX-XXXX',\n  })\n  @IsOptional()\n  @ApiProperty({\n    example: '(84) 98765-4321',\n    description: 'Telefone do usuário',\n    required: false,\n  })\n  telefone?: string;\n\n  @IsString({ message: 'Matrícula deve ser uma string' })\n  @Matches(/^\\d{5,10}$/, {\n    message: 'Matrícula deve conter entre 5 e 10 dígitos numéricos',\n  })\n  @IsOptional()\n  @ApiProperty({\n    example: '12345',\n    description: 'Matrícula do usuário',\n    required: false,\n  })\n  matricula?: string;\n\n  @IsEnum(ROLES, { message: 'Papel inválido' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Papel do usuário no sistema',\n    required: false,\n  })\n  role_id?: string;\n\n  @IsUUID(undefined, { message: 'ID da unidade inválido' })\n  @IsOptional()\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    description: 'ID da unidade do usuário',\n    required: false,\n  })\n  unidade_id?: string;\n\n  @IsUUID(undefined, { message: 'ID do setor inválido' })\n  @IsOptional()\n  @ApiProperty({\n    example: '123e4567-e89b-12d3-a456-426614174001',\n    description: 'ID do setor do usuário',\n    required: false,\n  })\n  setor_id?: string;\n}\n"],"version":3}