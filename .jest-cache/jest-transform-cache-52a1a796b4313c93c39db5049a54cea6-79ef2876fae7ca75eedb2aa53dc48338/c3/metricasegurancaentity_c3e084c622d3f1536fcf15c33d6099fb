dd27f20db6ded6bbf4a3acca19f86b0d
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricaSeguranca = exports.NivelAlertaEnum = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
/**
 * Níveis de alerta para métricas de segurança
 */
var NivelAlertaEnum;
(function (NivelAlertaEnum) {
    NivelAlertaEnum["INFO"] = "info";
    NivelAlertaEnum["AVISO"] = "aviso";
    NivelAlertaEnum["CRITICO"] = "critico";
    NivelAlertaEnum["EMERGENCIA"] = "emergencia";
})(NivelAlertaEnum || (exports.NivelAlertaEnum = NivelAlertaEnum = {}));
/**
 * Entidade que representa métricas de segurança específicas para LGPD
 *
 * Esta entidade armazena eventos de segurança relacionados à LGPD,
 * incluindo acessos a dados sensíveis, tentativas de autenticação,
 * e outras operações relevantes para conformidade.
 */
let MetricaSeguranca = class MetricaSeguranca {
    id;
    tipo_evento;
    created_at;
    usuario_id;
    perfil_usuario;
    ip_origem;
    user_agent;
    endpoint;
    dados_acessados;
    detalhes;
    nivel;
};
exports.MetricaSeguranca = MetricaSeguranca;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 100 }),
    (0, typeorm_1.Index)('idx_metricas_seguranca_tipo'),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de evento é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Tipo de evento deve ser uma string' }),
    (0, class_validator_1.MaxLength)(100, {
        message: 'Tipo de evento deve ter no máximo 100 caracteres',
    }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "tipo_evento", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ name: 'created_at' }),
    (0, typeorm_1.Index)('idx_metricas_seguranca_timestamp'),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], MetricaSeguranca.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'uuid', nullable: true }),
    (0, typeorm_1.Index)('idx_metricas_seguranca_usuario'),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUUID)('4', { message: 'ID do usuário inválido' }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "usuario_id", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 50, nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Perfil do usuário deve ser uma string' }),
    (0, class_validator_1.MaxLength)(50, {
        message: 'Perfil do usuário deve ter no máximo 50 caracteres',
    }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "perfil_usuario", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 45, nullable: true }),
    (0, typeorm_1.Index)('idx_metricas_seguranca_ip'),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsIP)(undefined, { message: 'IP de origem inválido' }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "ip_origem", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'User agent deve ser uma string' }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "user_agent", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 255, nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)({ message: 'Endpoint deve ser uma string' }),
    (0, class_validator_1.MaxLength)(255, { message: 'Endpoint deve ter no máximo 255 caracteres' }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "endpoint", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_b = typeof Record !== "undefined" && Record) === "function" ? _b : Object)
], MetricaSeguranca.prototype, "dados_acessados", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_c = typeof Record !== "undefined" && Record) === "function" ? _c : Object)
], MetricaSeguranca.prototype, "detalhes", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: NivelAlertaEnum,
        default: NivelAlertaEnum.INFO,
    }),
    (0, typeorm_1.Index)('idx_metricas_seguranca_nivel'),
    (0, class_validator_1.IsEnum)(NivelAlertaEnum, { message: 'Nível de alerta inválido' }),
    __metadata("design:type", String)
], MetricaSeguranca.prototype, "nivel", void 0);
exports.MetricaSeguranca = MetricaSeguranca = __decorate([
    (0, typeorm_1.Entity)('metricas_seguranca')
], MetricaSeguranca);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxtZXRyaWNhLXNlZ3VyYW5jYS5lbnRpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFDQU1pQjtBQUNqQixxREFReUI7QUFFekI7O0dBRUc7QUFDSCxJQUFZLGVBS1g7QUFMRCxXQUFZLGVBQWU7SUFDekIsZ0NBQWEsQ0FBQTtJQUNiLGtDQUFlLENBQUE7SUFDZixzQ0FBbUIsQ0FBQTtJQUNuQiw0Q0FBeUIsQ0FBQTtBQUMzQixDQUFDLEVBTFcsZUFBZSwrQkFBZixlQUFlLFFBSzFCO0FBRUQ7Ozs7OztHQU1HO0FBRUksSUFBTSxnQkFBZ0IsR0FBdEIsTUFBTSxnQkFBZ0I7SUFFM0IsRUFBRSxDQUFTO0lBU1gsV0FBVyxDQUFTO0lBSXBCLFVBQVUsQ0FBTztJQU1qQixVQUFVLENBQVM7SUFRbkIsY0FBYyxDQUFTO0lBTXZCLFNBQVMsQ0FBUztJQUtsQixVQUFVLENBQVM7SUFNbkIsUUFBUSxDQUFTO0lBR2pCLGVBQWUsQ0FBc0I7SUFHckMsUUFBUSxDQUFzQjtJQVM5QixLQUFLLENBQWtCO0NBQ3hCLENBQUE7QUE5RFksNENBQWdCO0FBRTNCO0lBREMsSUFBQSxnQ0FBc0IsRUFBQyxNQUFNLENBQUM7OzRDQUNwQjtBQVNYO0lBUEMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLElBQUEsZUFBSyxFQUFDLDZCQUE2QixDQUFDO0lBQ3BDLElBQUEsNEJBQVUsRUFBQyxFQUFFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxDQUFDO0lBQ3ZELElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxDQUFDO0lBQzNELElBQUEsMkJBQVMsRUFBQyxHQUFHLEVBQUU7UUFDZCxPQUFPLEVBQUUsa0RBQWtEO0tBQzVELENBQUM7O3FEQUNrQjtBQUlwQjtJQUZDLElBQUEsMEJBQWdCLEVBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLENBQUM7SUFDeEMsSUFBQSxlQUFLLEVBQUMsa0NBQWtDLENBQUM7a0RBQzlCLElBQUksb0JBQUosSUFBSTtvREFBQztBQU1qQjtJQUpDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQ3hDLElBQUEsZUFBSyxFQUFDLGdDQUFnQyxDQUFDO0lBQ3ZDLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsd0JBQU0sRUFBQyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQzs7b0RBQ2hDO0FBUW5CO0lBTkMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdEMsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLHVDQUF1QyxFQUFFLENBQUM7SUFDOUQsSUFBQSwyQkFBUyxFQUFDLEVBQUUsRUFBRTtRQUNiLE9BQU8sRUFBRSxvREFBb0Q7S0FDOUQsQ0FBQzs7d0RBQ3FCO0FBTXZCO0lBSkMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdEMsSUFBQSxlQUFLLEVBQUMsMkJBQTJCLENBQUM7SUFDbEMsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSxzQkFBSSxFQUFDLFNBQVMsRUFBRSxFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxDQUFDOzttREFDcEM7QUFLbEI7SUFIQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUN4QyxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsQ0FBQzs7b0RBQ3JDO0FBTW5CO0lBSkMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDdkMsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLDhCQUE4QixFQUFFLENBQUM7SUFDckQsSUFBQSwyQkFBUyxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSw0Q0FBNEMsRUFBRSxDQUFDOztrREFDekQ7QUFHakI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDekIsTUFBTSxvQkFBTixNQUFNO3lEQUFjO0FBR3JDO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ2hDLE1BQU0sb0JBQU4sTUFBTTtrREFBYztBQVM5QjtJQVBDLElBQUEsZ0JBQU0sRUFBQztRQUNOLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLGVBQWU7UUFDckIsT0FBTyxFQUFFLGVBQWUsQ0FBQyxJQUFJO0tBQzlCLENBQUM7SUFDRCxJQUFBLGVBQUssRUFBQyw4QkFBOEIsQ0FBQztJQUNyQyxJQUFBLHdCQUFNLEVBQUMsZUFBZSxFQUFFLEVBQUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLENBQUM7OytDQUMxQzsyQkE3RFosZ0JBQWdCO0lBRDVCLElBQUEsZ0JBQU0sRUFBQyxvQkFBb0IsQ0FBQztHQUNoQixnQkFBZ0IsQ0E4RDVCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXVkcmVcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZXRvc1xccGdiZW5cXHBnYmVuLXNlcnZlclxcc3JjXFxlbnRpdGllc1xcbWV0cmljYS1zZWd1cmFuY2EuZW50aXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEVudGl0eSxcbiAgUHJpbWFyeUdlbmVyYXRlZENvbHVtbixcbiAgQ29sdW1uLFxuICBJbmRleCxcbiAgQ3JlYXRlRGF0ZUNvbHVtbixcbn0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQge1xuICBJc05vdEVtcHR5LFxuICBJc09wdGlvbmFsLFxuICBJc1VVSUQsXG4gIElzU3RyaW5nLFxuICBNYXhMZW5ndGgsXG4gIElzSVAsXG4gIElzRW51bSxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcblxuLyoqXG4gKiBOw612ZWlzIGRlIGFsZXJ0YSBwYXJhIG3DqXRyaWNhcyBkZSBzZWd1cmFuw6dhXG4gKi9cbmV4cG9ydCBlbnVtIE5pdmVsQWxlcnRhRW51bSB7XG4gIElORk8gPSAnaW5mbycsXG4gIEFWSVNPID0gJ2F2aXNvJyxcbiAgQ1JJVElDTyA9ICdjcml0aWNvJyxcbiAgRU1FUkdFTkNJQSA9ICdlbWVyZ2VuY2lhJyxcbn1cblxuLyoqXG4gKiBFbnRpZGFkZSBxdWUgcmVwcmVzZW50YSBtw6l0cmljYXMgZGUgc2VndXJhbsOnYSBlc3BlY8OtZmljYXMgcGFyYSBMR1BEXG4gKlxuICogRXN0YSBlbnRpZGFkZSBhcm1hemVuYSBldmVudG9zIGRlIHNlZ3VyYW7Dp2EgcmVsYWNpb25hZG9zIMOgIExHUEQsXG4gKiBpbmNsdWluZG8gYWNlc3NvcyBhIGRhZG9zIHNlbnPDrXZlaXMsIHRlbnRhdGl2YXMgZGUgYXV0ZW50aWNhw6fDo28sXG4gKiBlIG91dHJhcyBvcGVyYcOnw7VlcyByZWxldmFudGVzIHBhcmEgY29uZm9ybWlkYWRlLlxuICovXG5ARW50aXR5KCdtZXRyaWNhc19zZWd1cmFuY2EnKVxuZXhwb3J0IGNsYXNzIE1ldHJpY2FTZWd1cmFuY2Ege1xuICBAUHJpbWFyeUdlbmVyYXRlZENvbHVtbigndXVpZCcpXG4gIGlkOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7IGxlbmd0aDogMTAwIH0pXG4gIEBJbmRleCgnaWR4X21ldHJpY2FzX3NlZ3VyYW5jYV90aXBvJylcbiAgQElzTm90RW1wdHkoeyBtZXNzYWdlOiAnVGlwbyBkZSBldmVudG8gw6kgb2JyaWdhdMOzcmlvJyB9KVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnVGlwbyBkZSBldmVudG8gZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1heExlbmd0aCgxMDAsIHtcbiAgICBtZXNzYWdlOiAnVGlwbyBkZSBldmVudG8gZGV2ZSB0ZXIgbm8gbcOheGltbyAxMDAgY2FyYWN0ZXJlcycsXG4gIH0pXG4gIHRpcG9fZXZlbnRvOiBzdHJpbmc7XG5cbiAgQENyZWF0ZURhdGVDb2x1bW4oeyBuYW1lOiAnY3JlYXRlZF9hdCcgfSlcbiAgQEluZGV4KCdpZHhfbWV0cmljYXNfc2VndXJhbmNhX3RpbWVzdGFtcCcpXG4gIGNyZWF0ZWRfYXQ6IERhdGU7XG5cbiAgQENvbHVtbih7IHR5cGU6ICd1dWlkJywgbnVsbGFibGU6IHRydWUgfSlcbiAgQEluZGV4KCdpZHhfbWV0cmljYXNfc2VndXJhbmNhX3VzdWFyaW8nKVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1VVSUQoJzQnLCB7IG1lc3NhZ2U6ICdJRCBkbyB1c3XDoXJpbyBpbnbDoWxpZG8nIH0pXG4gIHVzdWFyaW9faWQ6IHN0cmluZztcblxuICBAQ29sdW1uKHsgbGVuZ3RoOiA1MCwgbnVsbGFibGU6IHRydWUgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNTdHJpbmcoeyBtZXNzYWdlOiAnUGVyZmlsIGRvIHVzdcOhcmlvIGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBNYXhMZW5ndGgoNTAsIHtcbiAgICBtZXNzYWdlOiAnUGVyZmlsIGRvIHVzdcOhcmlvIGRldmUgdGVyIG5vIG3DoXhpbW8gNTAgY2FyYWN0ZXJlcycsXG4gIH0pXG4gIHBlcmZpbF91c3VhcmlvOiBzdHJpbmc7XG5cbiAgQENvbHVtbih7IGxlbmd0aDogNDUsIG51bGxhYmxlOiB0cnVlIH0pXG4gIEBJbmRleCgnaWR4X21ldHJpY2FzX3NlZ3VyYW5jYV9pcCcpXG4gIEBJc09wdGlvbmFsKClcbiAgQElzSVAodW5kZWZpbmVkLCB7IG1lc3NhZ2U6ICdJUCBkZSBvcmlnZW0gaW52w6FsaWRvJyB9KVxuICBpcF9vcmlnZW06IHN0cmluZztcblxuICBAQ29sdW1uKHsgdHlwZTogJ3RleHQnLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc1N0cmluZyh7IG1lc3NhZ2U6ICdVc2VyIGFnZW50IGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIHVzZXJfYWdlbnQ6IHN0cmluZztcblxuICBAQ29sdW1uKHsgbGVuZ3RoOiAyNTUsIG51bGxhYmxlOiB0cnVlIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ0VuZHBvaW50IGRldmUgc2VyIHVtYSBzdHJpbmcnIH0pXG4gIEBNYXhMZW5ndGgoMjU1LCB7IG1lc3NhZ2U6ICdFbmRwb2ludCBkZXZlIHRlciBubyBtw6F4aW1vIDI1NSBjYXJhY3RlcmVzJyB9KVxuICBlbmRwb2ludDogc3RyaW5nO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAnanNvbmInLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkYWRvc19hY2Vzc2Fkb3M6IFJlY29yZDxzdHJpbmcsIGFueT47XG5cbiAgQENvbHVtbih7IHR5cGU6ICdqc29uYicsIG51bGxhYmxlOiB0cnVlIH0pXG4gIGRldGFsaGVzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuXG4gIEBDb2x1bW4oe1xuICAgIHR5cGU6ICdlbnVtJyxcbiAgICBlbnVtOiBOaXZlbEFsZXJ0YUVudW0sXG4gICAgZGVmYXVsdDogTml2ZWxBbGVydGFFbnVtLklORk8sXG4gIH0pXG4gIEBJbmRleCgnaWR4X21ldHJpY2FzX3NlZ3VyYW5jYV9uaXZlbCcpXG4gIEBJc0VudW0oTml2ZWxBbGVydGFFbnVtLCB7IG1lc3NhZ2U6ICdOw612ZWwgZGUgYWxlcnRhIGludsOhbGlkbycgfSlcbiAgbml2ZWw6IE5pdmVsQWxlcnRhRW51bTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==