8c31dff6cd981fa70d7249b0d0a113b3
"use strict";
/**
 * Índice dos Domínios de Erros
 *
 * Exporta todos os domínios de erro específicos do sistema SEMTAS.
 * Cada domínio contém códigos de erro padronizados e funções auxiliares
 * para lançamento de exceções com contexto específico.
 *
 * @see docs/ADRs/catalogo-erros.md
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DOMAIN_ERROR_CODES = exports.DOMAIN_ERRORS = exports.throwVersionMismatch = exports.throwDataTransformationFailed = exports.throwCertificateInvalid = exports.throwCircuitBreakerOpen = exports.throwMaxRetriesExceeded = exports.throwIntegradorRateLimitExceeded = exports.throwInvalidResponse = exports.throwIntegradorInvalidCredentials = exports.throwIntegradorTimeout = exports.throwConnectionFailed = exports.throwIntegradorNotFound = exports.throwRelatorioTemplateNotFound = exports.throwMemoryLimitExceeded = exports.throwNoDataFound = exports.throwExportFailed = exports.throwRelatorioAccessDenied = exports.throwDataTooLarge = exports.throwProcessingTimeout = exports.throwMissingParameters = exports.throwInvalidDateRange = exports.throwGenerationFailed = exports.throwRelatorioNotFound = void 0;
exports.isDomainError = isDomainError;
exports.getDomainErrorDefinition = getDomainErrorDefinition;
exports.getDomainStatistics = getDomainStatistics;
exports.getDomainCoverage = getDomainCoverage;
// ========================================
// EXPORTAÇÕES DOS DOMÍNIOS
// ========================================
// Domínio USUARIO
__exportStar(require("./usuario.errors"), exports);
// Domínio SOLICITACAO
__exportStar(require("./solicitacao.errors"), exports);
// Domínio CIDADAO
__exportStar(require("./cidadao.errors"), exports);
// Domínio BENEFICIO
__exportStar(require("./beneficio.errors"), exports);
// Domínio DOCUMENTO
__exportStar(require("./documento.errors"), exports);
// Domínio AUDITORIA
__exportStar(require("./auditoria.errors"), exports);
// Domínio NOTIFICACAO
__exportStar(require("./notificacao.errors"), exports);
// Domínio RELATORIO - exportações específicas para evitar conflitos
var relatorio_errors_1 = require("./relatorio.errors");
Object.defineProperty(exports, "throwRelatorioNotFound", { enumerable: true, get: function () { return relatorio_errors_1.throwRelatorioNotFound; } });
Object.defineProperty(exports, "throwGenerationFailed", { enumerable: true, get: function () { return relatorio_errors_1.throwGenerationFailed; } });
Object.defineProperty(exports, "throwInvalidDateRange", { enumerable: true, get: function () { return relatorio_errors_1.throwInvalidDateRange; } });
Object.defineProperty(exports, "throwMissingParameters", { enumerable: true, get: function () { return relatorio_errors_1.throwMissingParameters; } });
Object.defineProperty(exports, "throwProcessingTimeout", { enumerable: true, get: function () { return relatorio_errors_1.throwProcessingTimeout; } });
Object.defineProperty(exports, "throwDataTooLarge", { enumerable: true, get: function () { return relatorio_errors_1.throwDataTooLarge; } });
Object.defineProperty(exports, "throwRelatorioAccessDenied", { enumerable: true, get: function () { return relatorio_errors_1.throwRelatorioAccessDenied; } });
Object.defineProperty(exports, "throwExportFailed", { enumerable: true, get: function () { return relatorio_errors_1.throwExportFailed; } });
Object.defineProperty(exports, "throwNoDataFound", { enumerable: true, get: function () { return relatorio_errors_1.throwNoDataFound; } });
Object.defineProperty(exports, "throwMemoryLimitExceeded", { enumerable: true, get: function () { return relatorio_errors_1.throwMemoryLimitExceeded; } });
Object.defineProperty(exports, "throwRelatorioTemplateNotFound", { enumerable: true, get: function () { return relatorio_errors_1.throwTemplateNotFound; } });
// Domínio INTEGRADOR - exportações específicas para evitar conflitos
var integrador_errors_1 = require("./integrador.errors");
Object.defineProperty(exports, "throwIntegradorNotFound", { enumerable: true, get: function () { return integrador_errors_1.throwIntegradorNotFound; } });
Object.defineProperty(exports, "throwConnectionFailed", { enumerable: true, get: function () { return integrador_errors_1.throwConnectionFailed; } });
Object.defineProperty(exports, "throwIntegradorTimeout", { enumerable: true, get: function () { return integrador_errors_1.throwIntegradorTimeout; } });
Object.defineProperty(exports, "throwIntegradorInvalidCredentials", { enumerable: true, get: function () { return integrador_errors_1.throwInvalidCredentials; } });
Object.defineProperty(exports, "throwInvalidResponse", { enumerable: true, get: function () { return integrador_errors_1.throwInvalidResponse; } });
Object.defineProperty(exports, "throwIntegradorRateLimitExceeded", { enumerable: true, get: function () { return integrador_errors_1.throwRateLimitExceeded; } });
Object.defineProperty(exports, "throwMaxRetriesExceeded", { enumerable: true, get: function () { return integrador_errors_1.throwMaxRetriesExceeded; } });
Object.defineProperty(exports, "throwCircuitBreakerOpen", { enumerable: true, get: function () { return integrador_errors_1.throwCircuitBreakerOpen; } });
Object.defineProperty(exports, "throwCertificateInvalid", { enumerable: true, get: function () { return integrador_errors_1.throwCertificateInvalid; } });
Object.defineProperty(exports, "throwDataTransformationFailed", { enumerable: true, get: function () { return integrador_errors_1.throwDataTransformationFailed; } });
Object.defineProperty(exports, "throwVersionMismatch", { enumerable: true, get: function () { return integrador_errors_1.throwVersionMismatch; } });
// ========================================
// CONSOLIDAÇÃO DOS CATÁLOGOS
// ========================================
const usuario_errors_1 = require("./usuario.errors");
const solicitacao_errors_1 = require("./solicitacao.errors");
const cidadao_errors_1 = require("./cidadao.errors");
const beneficio_errors_1 = require("./beneficio.errors");
const documento_errors_1 = require("./documento.errors");
const auditoria_errors_1 = require("./auditoria.errors");
const notificacao_errors_1 = require("./notificacao.errors");
const relatorio_errors_2 = require("./relatorio.errors");
const integrador_errors_2 = require("./integrador.errors");
/**
 * Catálogo consolidado de todos os erros de domínio
 */
exports.DOMAIN_ERRORS = {
    ...usuario_errors_1.USUARIO_ERRORS,
    ...solicitacao_errors_1.SOLICITACAO_ERRORS,
    ...cidadao_errors_1.CIDADAO_ERRORS,
    ...beneficio_errors_1.BENEFICIO_ERRORS,
    ...documento_errors_1.DOCUMENTO_ERRORS,
    ...auditoria_errors_1.AUDITORIA_ERRORS,
    ...notificacao_errors_1.NOTIFICACAO_ERRORS,
    ...relatorio_errors_2.RELATORIO_ERRORS,
    ...integrador_errors_2.INTEGRADOR_ERRORS,
};
/**
 * Lista de todos os códigos de erro de domínio
 */
exports.DOMAIN_ERROR_CODES = Object.keys(exports.DOMAIN_ERRORS);
/**
 * Verifica se um código de erro pertence aos domínios
 */
function isDomainError(code) {
    return code in exports.DOMAIN_ERRORS;
}
/**
 * Obtém a definição de erro de um código de domínio
 */
function getDomainErrorDefinition(code) {
    return exports.DOMAIN_ERRORS[code];
}
// ========================================
// ESTATÍSTICAS DOS DOMÍNIOS
// ========================================
/**
 * Estatísticas dos domínios de erro
 * Função para evitar problemas de ordem de importação
 */
function getDomainStatistics() {
    return {
        USUARIO: Object.keys(usuario_errors_1.USUARIO_ERRORS).length,
        SOLICITACAO: Object.keys(solicitacao_errors_1.SOLICITACAO_ERRORS).length,
        CIDADAO: Object.keys(cidadao_errors_1.CIDADAO_ERRORS).length,
        BENEFICIO: Object.keys(beneficio_errors_1.BENEFICIO_ERRORS).length,
        DOCUMENTO: Object.keys(documento_errors_1.DOCUMENTO_ERRORS).length,
        AUDITORIA: Object.keys(auditoria_errors_1.AUDITORIA_ERRORS).length,
        NOTIFICACAO: Object.keys(notificacao_errors_1.NOTIFICACAO_ERRORS).length,
        RELATORIO: Object.keys(relatorio_errors_2.RELATORIO_ERRORS).length,
        INTEGRADOR: Object.keys(integrador_errors_2.INTEGRADOR_ERRORS).length,
        TOTAL: Object.keys(exports.DOMAIN_ERRORS).length,
    };
}
// DOMAIN_STATISTICS removido para evitar problemas de inicialização
// Use getDomainStatistics() quando necessário
/**
 * Informações sobre a cobertura dos domínios
 */
function getDomainCoverage() {
    const stats = getDomainStatistics();
    return {
        domains: [
            'USUARIO',
            'SOLICITACAO',
            'CIDADAO',
            'BENEFICIO',
            'DOCUMENTO',
            'AUDITORIA',
            'NOTIFICACAO',
            'RELATORIO',
            'INTEGRADOR',
        ],
        totalDomains: 9,
        totalErrors: stats.TOTAL,
        averageErrorsPerDomain: Math.round(stats.TOTAL / 9),
    };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,