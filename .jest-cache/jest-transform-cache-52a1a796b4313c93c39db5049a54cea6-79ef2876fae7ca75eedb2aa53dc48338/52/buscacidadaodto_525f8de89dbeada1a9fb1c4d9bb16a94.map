{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\busca-cidadao.dto.ts","mappings":";;;;;;;;;;;;AAMA,oDAmBC;AAzBD,6CAA8C;AAC9C,qDAAmH;AAEnH;;GAEG;AACH,SAAgB,oBAAoB,CAAC,iBAAqC;IACxE,OAAO,IAAA,4BAAU,EACf;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE;YACT,QAAQ,CAAC,KAAU,EAAE,IAAyB;gBAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAyB,CAAC;gBAC9C,MAAM,YAAY,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvF,MAAM,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC,CAAC;gBAE1G,OAAO,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC;YACpC,CAAC;YACD,cAAc,CAAC,IAAyB;gBACtC,OAAO,0FAA0F,CAAC;YACpG,CAAC;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,MAAa,eAAe;IAS1B,EAAE,CAAU;IASZ,GAAG,CAAU;IASb,GAAG,CAAU;IASb,QAAQ,CAAU;IASlB,IAAI,CAAU;IASd,gBAAgB,GAAa,KAAK,CAAC;CACpC;AAvDD,0CAuDC;AA9CC;IARC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,sBAAsB;QACnC,OAAO,EAAE,sCAAsC;QAC/C,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;IACtD,oBAAoB,CAAC,EAAE,OAAO,EAAE,0FAA0F,EAAE,CAAC;;2CAClH;AASZ;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,wCAAwC;QACrD,OAAO,EAAE,aAAa;QACtB,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;;4CACpC;AASb;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,4BAA4B;QACzC,OAAO,EAAE,aAAa;QACtB,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;;4CACpC;AASb;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,6CAA6C;QAC1D,OAAO,EAAE,aAAa;QACtB,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC;;iDACpC;AASlB;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,iCAAiC;QAC9C,OAAO,EAAE,YAAY;QACrB,QAAQ,EAAE,KAAK;KAChB,CAAC;IACD,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;;6CACpC;AASd;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,gEAAgE;QAC7E,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,KAAK;QACf,OAAO,EAAE,KAAK;KACf,CAAC;IACD,IAAA,4BAAU,GAAE;;yDACsB","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\cidadao\\dto\\busca-cidadao.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsUUID, ValidateBy, ValidationOptions, ValidationArguments } from 'class-validator';\n\n/**\n * Validador customizado para garantir que apenas um parâmetro de busca seja fornecido\n */\nexport function IsOnlyOneSearchParam(validationOptions?: ValidationOptions) {\n  return ValidateBy(\n    {\n      name: 'isOnlyOneSearchParam',\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n          const object = args.object as BuscaCidadaoDto;\n          const searchParams = [object.id, object.cpf, object.nis, object.telefone, object.nome];\n          const definedParams = searchParams.filter(param => param !== undefined && param !== null && param !== '');\n          \n          return definedParams.length === 1;\n        },\n        defaultMessage(args: ValidationArguments) {\n          return 'Apenas um parâmetro de busca deve ser fornecido por vez (id, cpf, nis, telefone ou nome)';\n        },\n      },\n    },\n    validationOptions,\n  );\n}\n\n/**\n * DTO para busca unificada de cidadão\n * Permite buscar por ID, CPF, NIS, telefone ou nome\n * Apenas um parâmetro deve ser fornecido por vez\n */\nexport class BuscaCidadaoDto {\n  @ApiProperty({\n    description: 'ID do cidadão (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    required: false,\n  })\n  @IsOptional()\n  @IsUUID('4', { message: 'ID deve ser um UUID válido' })\n  @IsOnlyOneSearchParam({ message: 'Apenas um parâmetro de busca deve ser fornecido por vez (id, cpf, nis, telefone ou nome)' })\n  id?: string;\n\n  @ApiProperty({\n    description: 'CPF do cidadão (com ou sem formatação)',\n    example: '12345678901',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'CPF deve ser uma string' })\n  cpf?: string;\n\n  @ApiProperty({\n    description: 'NIS do cidadão (PIS/PASEP)',\n    example: '12345678901',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'NIS deve ser uma string' })\n  nis?: string;\n\n  @ApiProperty({\n    description: 'Telefone do cidadão (com ou sem formatação)',\n    example: '11987654321',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Telefone deve ser uma string' })\n  telefone?: string;\n\n  @ApiProperty({\n    description: 'Nome do cidadão (busca parcial)',\n    example: 'João Silva',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Nome deve ser uma string' })\n  nome?: string;\n\n  @ApiProperty({\n    description: 'Se deve incluir relacionamentos (papéis e composição familiar)',\n    example: false,\n    required: false,\n    default: false,\n  })\n  @IsOptional()\n  includeRelations?: boolean = false;\n}"],"version":3}