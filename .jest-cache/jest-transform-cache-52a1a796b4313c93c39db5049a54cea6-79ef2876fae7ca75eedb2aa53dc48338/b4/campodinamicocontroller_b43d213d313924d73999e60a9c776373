7d09d5f5ae9403d5204fa72cc87d04b0
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CampoDinamicoController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const campo_dinamico_service_1 = require("../services/campo-dinamico.service");
const create_campo_dinamico_dto_1 = require("../dto/create-campo-dinamico.dto");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../../auth/guards/roles.guard");
const role_decorator_1 = require("../../../auth/decorators/role.decorator");
const roles_constants_1 = require("../../../shared/constants/roles.constants");
/**
 * Controlador de campos dinâmicos de benefícios
 *
 * Responsável por gerenciar as rotas relacionadas a campos dinâmicos
 * específicos para cada tipo de benefício.
 */
let CampoDinamicoController = class CampoDinamicoController {
    campoDinamicoService;
    constructor(campoDinamicoService) {
        this.campoDinamicoService = campoDinamicoService;
    }
    /**
     * Lista todos os campos dinâmicos de um tipo de benefício
     */
    async findAll(tipoBeneficioId) {
        return this.campoDinamicoService.findByTipoBeneficio(tipoBeneficioId);
    }
    /**
     * Cria um novo campo dinâmico para um tipo de benefício
     */
    async create(tipoBeneficioId, createCampoDinamicoDto) {
        return this.campoDinamicoService.create(tipoBeneficioId, createCampoDinamicoDto);
    }
    /**
     * Atualiza um campo dinâmico existente
     */
    async update(id, updateCampoDinamicoDto) {
        return this.campoDinamicoService.update(id, updateCampoDinamicoDto);
    }
    /**
     * Remove um campo dinâmico
     */
    async remove(id) {
        return this.campoDinamicoService.remove(id);
    }
    /**
     * Obtém o schema ativo de um tipo de benefício
     */
    async getSchemaAtivo(tipoBeneficioId) {
        return this.campoDinamicoService.getSchemaAtivo(tipoBeneficioId);
    }
    /**
     * Obtém o histórico de versões do schema de um tipo de benefício
     */
    async getHistoricoVersoes(tipoBeneficioId) {
        return this.campoDinamicoService.getHistoricoVersoes(tipoBeneficioId);
    }
};
exports.CampoDinamicoController = CampoDinamicoController;
__decorate([
    (0, common_1.Get)(),
    (0, swagger_1.ApiOperation)({ summary: 'Listar campos dinâmicos de um benefício' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Lista de campos dinâmicos retornada com sucesso',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tipo de benefício não encontrado' }),
    __param(0, (0, common_1.Param)('tipoBeneficioId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], CampoDinamicoController.prototype, "findAll", null);
__decorate([
    (0, common_1.Post)(),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN, roles_constants_1.ROLES.GESTOR),
    (0, swagger_1.ApiOperation)({ summary: 'Criar novo campo dinâmico' }),
    (0, swagger_1.ApiResponse)({
        status: 201,
        description: 'Campo dinâmico criado com sucesso',
    }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Dados inválidos' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tipo de benefício não encontrado' }),
    (0, swagger_1.ApiResponse)({ status: 409, description: 'Nome já em uso' }),
    __param(0, (0, common_1.Param)('tipoBeneficioId', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_b = typeof create_campo_dinamico_dto_1.CreateCampoDinamicoDto !== "undefined" && create_campo_dinamico_dto_1.CreateCampoDinamicoDto) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], CampoDinamicoController.prototype, "create", null);
__decorate([
    (0, common_1.Put)(':id'),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN, roles_constants_1.ROLES.GESTOR),
    (0, swagger_1.ApiOperation)({ summary: 'Atualizar campo dinâmico existente' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Campo dinâmico atualizado com sucesso',
    }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Dados inválidos' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Campo dinâmico não encontrado' }),
    (0, swagger_1.ApiResponse)({ status: 409, description: 'Nome já em uso' }),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_c = typeof Partial !== "undefined" && Partial) === "function" ? _c : Object]),
    __metadata("design:returntype", Promise)
], CampoDinamicoController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN, roles_constants_1.ROLES.GESTOR),
    (0, swagger_1.ApiOperation)({ summary: 'Remover campo dinâmico' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Campo dinâmico removido com sucesso',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Campo dinâmico não encontrado' }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], CampoDinamicoController.prototype, "remove", null);
__decorate([
    (0, common_1.Get)('schema'),
    (0, swagger_1.ApiOperation)({ summary: 'Obter schema ativo de um benefício' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Schema retornado com sucesso' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tipo de benefício não encontrado' }),
    __param(0, (0, common_1.Param)('tipoBeneficioId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], CampoDinamicoController.prototype, "getSchemaAtivo", null);
__decorate([
    (0, common_1.Get)('schema/historico'),
    (0, role_decorator_1.Roles)(roles_constants_1.ROLES.ADMIN, roles_constants_1.ROLES.GESTOR),
    (0, swagger_1.ApiOperation)({ summary: 'Obter histórico de versões do schema' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Histórico retornado com sucesso' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tipo de benefício não encontrado' }),
    __param(0, (0, common_1.Param)('tipoBeneficioId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], CampoDinamicoController.prototype, "getHistoricoVersoes", null);
exports.CampoDinamicoController = CampoDinamicoController = __decorate([
    (0, swagger_1.ApiTags)('Benefícios'),
    (0, common_1.Controller)('beneficio/:tipoBeneficioId/campos-dinamicos'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof campo_dinamico_service_1.CampoDinamicoService !== "undefined" && campo_dinamico_service_1.CampoDinamicoService) === "function" ? _a : Object])
], CampoDinamicoController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,