{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\catalog.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\catalog.spec.ts"],"sourcesContent":["/**\n * Testes para o catálogo de erros\n * \n * Valida a estrutura e funcionalidade do sistema\n * de catálogo de erros padronizado.\n */\n\nimport {\n  ERROR_CATALOG,\n  POSTGRES_ERROR_MAP,\n  ErrorCategory,\n  ErrorSeverity,\n  ErrorDefinition,\n} from './catalog';\n\ndescribe('Error Catalog', () => {\n  describe('ERROR_CATALOG', () => {\n    it('should have all required error definitions', () => {\n      // Verificar se existem erros para cada categoria\n      const categories = Object.values(ErrorCategory);\n      \n      categories.forEach(category => {\n        const errorsInCategory = Object.values(ERROR_CATALOG)\n          .filter(error => error.category === category);\n        \n        expect(errorsInCategory.length).toBeGreaterThan(0);\n      });\n    });\n\n    it('should have unique error codes', () => {\n      const codes = Object.keys(ERROR_CATALOG);\n      const uniqueCodes = new Set(codes);\n      \n      expect(codes.length).toBe(uniqueCodes.size);\n    });\n\n    it('should follow naming convention for error codes', () => {\n      const codes = Object.keys(ERROR_CATALOG);\n      const validPattern = /^(VAL|BEN|INT|FLO|SYS)_[A-Z]+_\\d{3}$/;\n      \n      codes.forEach(code => {\n        expect(code).toMatch(validPattern);\n      });\n    });\n\n    it('should have valid HTTP status codes', () => {\n      const validStatusCodes = [400, 401, 403, 404, 409, 422, 429, 500, 502, 503];\n      \n      Object.values(ERROR_CATALOG).forEach(error => {\n        expect(validStatusCodes).toContain(error.httpStatus);\n      });\n    });\n\n    it('should have non-empty messages', () => {\n      Object.values(ERROR_CATALOG).forEach(error => {\n        expect(error.message).toBeTruthy();\n        expect(error.message.length).toBeGreaterThan(0);\n      });\n    });\n\n    it('should have valid categories', () => {\n      const validCategories = Object.values(ErrorCategory);\n      \n      Object.values(ERROR_CATALOG).forEach(error => {\n        expect(validCategories).toContain(error.category);\n      });\n    });\n\n    it('should have valid severities', () => {\n      const validSeverities = Object.values(ErrorSeverity);\n      \n      Object.values(ERROR_CATALOG).forEach(error => {\n        expect(validSeverities).toContain(error.severity);\n      });\n    });\n  });\n\n  describe('POSTGRES_ERROR_MAP', () => {\n    it('should map common PostgreSQL error codes', () => {\n      const expectedMappings = {\n        '23503': 'SYS_FK_001',\n        '23505': 'SYS_UNIQUE_001',\n      };\n      \n      Object.entries(expectedMappings).forEach(([pgCode, catalogCode]) => {\n        expect(POSTGRES_ERROR_MAP[pgCode]).toBe(catalogCode);\n      });\n    });\n\n    it('should only map to existing catalog codes', () => {\n      const catalogCodes = Object.keys(ERROR_CATALOG);\n      \n      Object.values(POSTGRES_ERROR_MAP).forEach(catalogCode => {\n        expect(catalogCodes).toContain(catalogCode);\n      });\n    });\n  });\n\n  describe('Error Definition Structure', () => {\n    it('should have required fields for each error', () => {\n      Object.values(ERROR_CATALOG).forEach((error: ErrorDefinition) => {\n        expect(error).toHaveProperty('message');\n        expect(error).toHaveProperty('httpStatus');\n        expect(error).toHaveProperty('category');\n        expect(error).toHaveProperty('severity');\n      });\n    });\n\n    it('should have consistent severity mapping to HTTP status', () => {\n      Object.values(ERROR_CATALOG).forEach(error => {\n        switch (error.severity) {\n          case ErrorSeverity.CRITICAL:\n            expect([500, 503]).toContain(error.httpStatus);\n            break;\n          case ErrorSeverity.HIGH:\n            expect([400, 403, 409, 422]).toContain(error.httpStatus);\n            break;\n          case ErrorSeverity.MEDIUM:\n            expect([400, 404, 409, 429, 502]).toContain(error.httpStatus);\n            break;\n          case ErrorSeverity.LOW:\n            expect([400, 404]).toContain(error.httpStatus);\n            break;\n        }\n      });\n    });\n  });\n\n  describe('Validation Errors', () => {\n    it('should have CPF validation errors', () => {\n      expect(ERROR_CATALOG['VAL_CPF_001']).toBeDefined();\n      expect(ERROR_CATALOG['VAL_CPF_002']).toBeDefined();\n    });\n\n    it('should have NIS validation errors', () => {\n      expect(ERROR_CATALOG['VAL_NIS_001']).toBeDefined();\n      expect(ERROR_CATALOG['VAL_NIS_002']).toBeDefined();\n    });\n\n    it('should have income validation errors', () => {\n      expect(ERROR_CATALOG['VAL_INCOME_001']).toBeDefined();\n      expect(ERROR_CATALOG['VAL_INCOME_002']).toBeDefined();\n    });\n  });\n\n  describe('Benefit Errors', () => {\n    it('should have natalidade benefit errors', () => {\n      expect(ERROR_CATALOG['BEN_NAT_001']).toBeDefined();\n      expect(ERROR_CATALOG['BEN_NAT_002']).toBeDefined();\n    });\n\n    it('should have aluguel social benefit errors', () => {\n      expect(ERROR_CATALOG['BEN_ALU_001']).toBeDefined();\n      expect(ERROR_CATALOG['BEN_ALU_002']).toBeDefined();\n    });\n\n    it('should have generic benefit errors', () => {\n      expect(ERROR_CATALOG['BEN_GEN_001']).toBeDefined();\n      expect(ERROR_CATALOG['BEN_WF_001']).toBeDefined();\n    });\n  });\n\n  describe('Integration Errors', () => {\n    it('should have Azure integration errors', () => {\n      expect(ERROR_CATALOG['INT_AZURE_001']).toBeDefined();\n    });\n\n    it('should have email integration errors', () => {\n      expect(ERROR_CATALOG['INT_EMAIL_001']).toBeDefined();\n    });\n\n    it('should have database integration errors', () => {\n      expect(ERROR_CATALOG['INT_DB_001']).toBeDefined();\n    });\n  });\n\n  describe('Operational Flow Errors', () => {\n    it('should have permission errors', () => {\n      expect(ERROR_CATALOG['FLO_PERM_001']).toBeDefined();\n    });\n\n    it('should have document errors', () => {\n      expect(ERROR_CATALOG['FLO_DOC_001']).toBeDefined();\n    });\n\n    it('should have deadline errors', () => {\n      expect(ERROR_CATALOG['FLO_DEADLINE_001']).toBeDefined();\n    });\n  });\n\n  describe('System Errors', () => {\n    it('should have database constraint errors', () => {\n      expect(ERROR_CATALOG['SYS_FK_001']).toBeDefined();\n      expect(ERROR_CATALOG['SYS_UNIQUE_001']).toBeDefined();\n    });\n\n    it('should have rate limiting errors', () => {\n      expect(ERROR_CATALOG['SYS_RATE_001']).toBeDefined();\n    });\n\n    it('should have maintenance errors', () => {\n      expect(ERROR_CATALOG['SYS_MAINT_001']).toBeDefined();\n    });\n  });\n\n  describe('Message Interpolation Support', () => {\n    it('should have placeholder patterns in messages', () => {\n      const messagesWithPlaceholders = [\n        'VAL_CPF_002',\n        'VAL_NIS_002',\n        'VAL_AGE_001',\n        'VAL_INCOME_002',\n        'BEN_NAT_001',\n        'BEN_NAT_002',\n        'BEN_GEN_001',\n        'BEN_WF_001',\n        'INT_AZURE_001',\n        'INT_EMAIL_001',\n        'FLO_DOC_001',\n        'FLO_DEADLINE_001',\n        'SYS_RATE_001',\n        'SYS_MAINT_001',\n      ];\n      \n      messagesWithPlaceholders.forEach(code => {\n        const error = ERROR_CATALOG[code];\n        expect(error.message).toMatch(/\\{\\w+\\}/);\n      });\n    });\n  });\n\n  describe('Legal References', () => {\n    it('should have legal references for benefit errors', () => {\n      const benefitErrors = Object.entries(ERROR_CATALOG)\n        .filter(([code]) => code.startsWith('BEN_'))\n        .map(([, error]) => error);\n      \n      benefitErrors.forEach(error => {\n        if (error.legalReference) {\n          expect(error.legalReference).toBeTruthy();\n          expect(error.legalReference.length).toBeGreaterThan(0);\n        }\n      });\n    });\n  });\n});"],"version":3}