{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\controllers\\campo-dinamico.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\beneficio\\controllers\\campo-dinamico.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n  ParseUUIDPipe,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { CampoDinamicoService } from '../services/campo-dinamico.service';\nimport { CreateCampoDinamicoDto } from '../dto/create-campo-dinamico.dto';\nimport { JwtAuthGuard } from '../../../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../../../auth/guards/roles.guard';\nimport { Roles } from '../../../auth/decorators/role.decorator';\nimport { Role } from '../../../enums/role.enum';\nimport { ROLES } from '../../../shared/constants/roles.constants';\n\n/**\n * Controlador de campos dinâmicos de benefícios\n *\n * Responsável por gerenciar as rotas relacionadas a campos dinâmicos\n * específicos para cada tipo de benefício.\n */\n@ApiTags('Benefícios')\n@Controller('beneficio/:tipoBeneficioId/campos-dinamicos')\n@UseGuards(JwtAuthGuard, RolesGuard)\n@ApiBearerAuth()\nexport class CampoDinamicoController {\n  constructor(private readonly campoDinamicoService: CampoDinamicoService) {}\n\n  /**\n   * Lista todos os campos dinâmicos de um tipo de benefício\n   */\n  @Get()\n  @ApiOperation({ summary: 'Listar campos dinâmicos de um benefício' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de campos dinâmicos retornada com sucesso',\n  })\n  @ApiResponse({ status: 404, description: 'Tipo de benefício não encontrado' })\n  async findAll(\n    @Param('tipoBeneficioId', ParseUUIDPipe) tipoBeneficioId: string,\n  ) {\n    return this.campoDinamicoService.findByTipoBeneficio(tipoBeneficioId);\n  }\n\n  /**\n   * Cria um novo campo dinâmico para um tipo de benefício\n   */\n  @Post()\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Criar novo campo dinâmico' })\n  @ApiResponse({\n    status: 201,\n    description: 'Campo dinâmico criado com sucesso',\n  })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 404, description: 'Tipo de benefício não encontrado' })\n  @ApiResponse({ status: 409, description: 'Nome já em uso' })\n  async create(\n    @Param('tipoBeneficioId', ParseUUIDPipe) tipoBeneficioId: string,\n    @Body() createCampoDinamicoDto: CreateCampoDinamicoDto,\n  ) {\n    return this.campoDinamicoService.create(\n      tipoBeneficioId,\n      createCampoDinamicoDto,\n    );\n  }\n\n  /**\n   * Atualiza um campo dinâmico existente\n   */\n  @Put(':id')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Atualizar campo dinâmico existente' })\n  @ApiResponse({\n    status: 200,\n    description: 'Campo dinâmico atualizado com sucesso',\n  })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  @ApiResponse({ status: 404, description: 'Campo dinâmico não encontrado' })\n  @ApiResponse({ status: 409, description: 'Nome já em uso' })\n  async update(\n    @Param('id') id: string,\n    @Body() updateCampoDinamicoDto: Partial<CreateCampoDinamicoDto>,\n  ) {\n    return this.campoDinamicoService.update(id, updateCampoDinamicoDto);\n  }\n\n  /**\n   * Remove um campo dinâmico\n   */\n  @Delete(':id')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Remover campo dinâmico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Campo dinâmico removido com sucesso',\n  })\n  @ApiResponse({ status: 404, description: 'Campo dinâmico não encontrado' })\n  async remove(@Param('id') id: string) {\n    return this.campoDinamicoService.remove(id);\n  }\n\n  /**\n   * Obtém o schema ativo de um tipo de benefício\n   */\n  @Get('schema')\n  @ApiOperation({ summary: 'Obter schema ativo de um benefício' })\n  @ApiResponse({ status: 200, description: 'Schema retornado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Tipo de benefício não encontrado' })\n  async getSchemaAtivo(\n    @Param('tipoBeneficioId', ParseUUIDPipe) tipoBeneficioId: string,\n  ) {\n    return this.campoDinamicoService.getSchemaAtivo(tipoBeneficioId);\n  }\n\n  /**\n   * Obtém o histórico de versões do schema de um tipo de benefício\n   */\n  @Get('schema/historico')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Obter histórico de versões do schema' })\n  @ApiResponse({ status: 200, description: 'Histórico retornado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Tipo de benefício não encontrado' })\n  async getHistoricoVersoes(\n    @Param('tipoBeneficioId', ParseUUIDPipe) tipoBeneficioId: string,\n  ) {\n    return this.campoDinamicoService.getHistoricoVersoes(tipoBeneficioId);\n  }\n}\n"],"version":3}