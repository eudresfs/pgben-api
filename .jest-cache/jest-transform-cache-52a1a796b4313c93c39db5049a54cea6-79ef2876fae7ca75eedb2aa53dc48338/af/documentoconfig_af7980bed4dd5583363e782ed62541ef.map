{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\documento\\config\\documento.config.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\documento\\config\\documento.config.ts"],"sourcesContent":["/**\n * Configuração consolidada para o módulo de documentos\n *\n * Este arquivo centraliza todas as configurações relacionadas a documentos,\n * incluindo tipos MIME permitidos e configurações de upload.\n */\n\nexport interface MimeTypeConfig {\n  extension: string;\n  mimeTypes: string[];\n  maxSize: number; // em bytes\n  description: string;\n  allowThumbnail: boolean;\n  category: 'DOCUMENTOS' | 'IMAGENS' | 'PLANILHAS' | 'TEXTO';\n}\n\n/**\n * Configuração detalhada de tipos MIME permitidos\n */\nexport const MIME_TYPE_CONFIGS: Record<string, MimeTypeConfig> = {\n  // Documentos PDF\n  pdf: {\n    extension: 'pdf',\n    mimeTypes: ['application/pdf'],\n    maxSize: 10 * 1024 * 1024, // 10MB\n    description: 'Documento PDF',\n    allowThumbnail: true,\n    category: 'DOCUMENTOS',\n  },\n\n  // Documentos do Microsoft Office\n  docx: {\n    extension: 'docx',\n    mimeTypes: [\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    ],\n    maxSize: 5 * 1024 * 1024, // 5MB\n    description: 'Documento Word',\n    allowThumbnail: false,\n    category: 'DOCUMENTOS',\n  },\n\n  // Imagens\n  jpg: {\n    extension: 'jpg',\n    mimeTypes: ['image/jpeg'],\n    maxSize: 5 * 1024 * 1024, // 5MB\n    description: 'Imagem JPEG',\n    allowThumbnail: true,\n    category: 'IMAGENS',\n  },\n\n  png: {\n    extension: 'png',\n    mimeTypes: ['image/png'],\n    maxSize: 5 * 1024 * 1024, // 5MB\n    description: 'Imagem PNG',\n    allowThumbnail: true,\n    category: 'IMAGENS',\n  },\n\n  // Texto\n  txt: {\n    extension: 'txt',\n    mimeTypes: ['text/plain'],\n    maxSize: 1 * 1024 * 1024, // 1MB\n    description: 'Arquivo de texto',\n    allowThumbnail: false,\n    category: 'TEXTO',\n  },\n};\n\n/**\n * Lista de todos os tipos MIME permitidos (extraída das configurações)\n */\nexport const TODOS_MIME_TYPES_PERMITIDOS = Object.values(\n  MIME_TYPE_CONFIGS,\n).flatMap((config) => config.mimeTypes);\n\n/**\n * Mapeamento de tipos MIME por categoria\n */\nexport const MIME_TYPES_POR_CATEGORIA = {\n  DOCUMENTOS: Object.values(MIME_TYPE_CONFIGS)\n    .filter((config) => config.category === 'DOCUMENTOS')\n    .flatMap((config) => config.mimeTypes),\n  IMAGENS: Object.values(MIME_TYPE_CONFIGS)\n    .filter((config) => config.category === 'IMAGENS')\n    .flatMap((config) => config.mimeTypes),\n  PLANILHAS: Object.values(MIME_TYPE_CONFIGS)\n    .filter((config) => config.category === 'PLANILHAS')\n    .flatMap((config) => config.mimeTypes),\n  // APRESENTACOES: Categoria não definida na interface MimeTypeConfig\n  TEXTO: Object.values(MIME_TYPE_CONFIGS)\n    .filter((config) => config.category === 'TEXTO')\n    .flatMap((config) => config.mimeTypes),\n};\n\n/**\n * Extensões de arquivo correspondentes aos tipos MIME\n */\nexport const EXTENSOES_PERMITIDAS = Object.values(MIME_TYPE_CONFIGS).reduce(\n  (acc, config) => {\n    config.mimeTypes.forEach((mimeType) => {\n      if (!acc[mimeType]) {\n        acc[mimeType] = [];\n      }\n      acc[mimeType].push(`.${config.extension}`);\n    });\n    return acc;\n  },\n  {} as Record<string, string[]>,\n);\n\n/**\n * Lista de extensões perigosas que devem ser sempre bloqueadas\n */\nexport const BLOCKED_EXTENSIONS = [\n  // Executáveis\n  'exe',\n  'bat',\n  'cmd',\n  'com',\n  'scr',\n  'pif',\n  'msi',\n  'dll',\n  // Scripts\n  'js',\n  'vbs',\n  'ps1',\n  'sh',\n  'py',\n  'pl',\n  'php',\n  'asp',\n  'jsp',\n  // Arquivos compactados (podem conter malware)\n  'zip',\n  'rar',\n  '7z',\n  'tar',\n  'gz',\n  // Outros formatos perigosos\n  'html',\n  'htm',\n  'xml',\n  'svg',\n];\n\n/**\n * Lista de tipos MIME perigosos que devem ser sempre bloqueados\n */\nexport const BLOCKED_MIME_TYPES = [\n  // Executáveis\n  'application/x-msdownload',\n  'application/x-executable',\n  'application/x-dosexec',\n  // Scripts\n  'text/javascript',\n  'application/javascript',\n  'text/html',\n  'application/x-httpd-php',\n  // Arquivos compactados\n  'application/zip',\n  'application/x-rar-compressed',\n  'application/x-7z-compressed',\n  // XML/SVG (podem conter scripts)\n  'image/svg+xml',\n  'application/xml',\n  'text/xml',\n];\n\n/**\n * Configurações de segurança para validação de arquivos\n */\nexport const SECURITY_CONFIG = {\n  // Tamanho máximo global para qualquer arquivo (20MB)\n  MAX_FILE_SIZE: 20 * 1024 * 1024,\n\n  // Número máximo de arquivos por upload\n  MAX_FILES_PER_UPLOAD: 5,\n\n  // Verificar magic numbers (assinatura do arquivo)\n  VERIFY_MAGIC_NUMBERS: true,\n\n  // Escanear conteúdo em busca de padrões suspeitos\n  SCAN_CONTENT: true,\n\n  // Verificar vírus/malware\n  MALWARE_SCAN: true,\n\n  // Criptografar documentos sensíveis\n  ENCRYPT_SENSITIVE_DOCS: true,\n\n  // Colocar arquivos suspeitos em quarentena\n  QUARANTINE_SUSPICIOUS: true,\n};\n\n/**\n * Configurações de upload\n */\nexport const UPLOAD_CONFIG = {\n  // Diretório temporário para uploads\n  TEMP_DIR: 'uploads/temp',\n\n  // Diretório final para documentos\n  DOCS_DIR: 'uploads/documentos',\n\n  // Diretório para thumbnails\n  THUMBNAILS_DIR: 'uploads/thumbnails',\n\n  // Tempo limite para upload (em segundos)\n  UPLOAD_TIMEOUT: 300,\n\n  // Número máximo de tentativas de upload\n  MAX_UPLOAD_RETRIES: 3,\n};\n\n/**\n * Funções utilitárias\n */\n\n/**\n * Obtém a configuração de um tipo MIME\n */\nexport function getMimeTypeConfig(\n  mimeType: string,\n): MimeTypeConfig | undefined {\n  return Object.values(MIME_TYPE_CONFIGS).find((config) =>\n    config.mimeTypes.includes(mimeType),\n  );\n}\n\n/**\n * Verifica se um tipo MIME é permitido\n */\nexport function isMimeTypePermitido(mimeType: string): boolean {\n  return TODOS_MIME_TYPES_PERMITIDOS.includes(mimeType);\n}\n\n/**\n * Obtém a categoria de um tipo MIME\n */\nexport function getCategoriaMimeType(mimeType: string): string {\n  const config = getMimeTypeConfig(mimeType);\n  return config?.category || 'DESCONHECIDO';\n}\n\n/**\n * Obtém as extensões permitidas para um tipo MIME\n */\nexport function getExtensoesParaMimeType(mimeType: string): string[] {\n  return EXTENSOES_PERMITIDAS[mimeType] || [];\n}\n\n/**\n * Verifica se um arquivo requer criptografia\n */\nexport function requiresEncryption(mimeType: string): boolean {\n  // Funcionalidade de criptografia não implementada ainda\n  return false;\n}\n\n/**\n * Verifica se um arquivo permite thumbnail\n */\nexport function allowsThumbnail(mimeType: string): boolean {\n  const config = getMimeTypeConfig(mimeType);\n  return config?.allowThumbnail || false;\n}\n\n/**\n * Obtém o tamanho máximo permitido para um tipo MIME\n */\nexport function getMaxFileSize(mimeType: string): number {\n  const config = getMimeTypeConfig(mimeType);\n  return config?.maxSize || SECURITY_CONFIG.MAX_FILE_SIZE;\n}\n"],"version":3}