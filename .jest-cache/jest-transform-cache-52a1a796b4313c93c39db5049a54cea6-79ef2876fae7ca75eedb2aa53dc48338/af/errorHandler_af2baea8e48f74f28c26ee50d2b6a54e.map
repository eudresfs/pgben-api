{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\errorHandler.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\shared\\exceptions\\error-catalog\\errorHandler.ts"],"sourcesContent":["/**\n * Middleware de tratamento de erros integrado ao catálogo\n *\n * Estende o filtro de exceções existente para suportar\n * o novo sistema de catálogo de erros, mantendo\n * compatibilidade com o sistema atual.\n *\n * @see docs/ADRs/catalogo-erros.md\n */\n\nimport {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  BadRequestException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Request, Response } from 'express';\nimport { ValidationError } from 'class-validator';\nimport { REQUEST_ID_TOKEN_HEADER } from '../../constants';\nimport { createRequestContext } from '../../request-context/util';\nimport { BaseApiException } from '../base-api.exception';\nimport { UnifiedLoggerService } from '../../logging/unified-logger.service';\nimport { ApiErrorResponse } from '../../dtos/api-error-response.dto';\nimport { AppError } from './AppError';\nimport { ErrorCategory, ErrorSeverity } from './catalog';\n\n/**\n * Filtro de exceções aprimorado com suporte ao catálogo de erros\n *\n * Mantém compatibilidade total com o sistema existente enquanto\n * adiciona suporte completo para o novo catálogo de erros.\n */\n@Injectable()\n@Catch()\nexport class CatalogAwareExceptionFilter<T> implements ExceptionFilter {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly logger: UnifiedLoggerService,\n  ) {\n    this.logger.setContext(CatalogAwareExceptionFilter.name);\n  }\n\n  catch(exception: T, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const req: Request = ctx.getRequest<Request>();\n    const res: Response = ctx.getResponse<Response>();\n\n    const path = req.url;\n    const timestamp = new Date().toISOString();\n    const requestId = req.headers[REQUEST_ID_TOKEN_HEADER] as string;\n    const requestContext = createRequestContext(req);\n\n    // Extrair idioma do header para localização (padrão: pt-BR)\n    const acceptedLanguage =\n      req.headers['accept-language']?.split(',')[0] || 'pt-BR';\n\n    let stack: string | undefined;\n    let statusCode: HttpStatus;\n    let errorName: string;\n    let message: string;\n    let details: any;\n    let localizedMessage: string | undefined;\n    let validationErrors:\n      | Array<{ field: string; messages: string[] }>\n      | undefined;\n    let errorCode: string | undefined;\n    let category: ErrorCategory | undefined;\n    let severity: ErrorSeverity | undefined;\n    let legalReference: string | undefined;\n\n    // Tratamento estruturado por tipo de exceção\n    switch (true) {\n      case exception instanceof AppError:\n        // Novo sistema de catálogo de erros\n        const appError = exception as AppError;\n        statusCode = appError.getStatus();\n        errorName = appError.constructor.name;\n        errorCode = appError.errorCode;\n        message = appError.message;\n        localizedMessage = appError.localizedMessage;\n        category = appError.definition.category;\n        severity = appError.definition.severity;\n        legalReference = appError.definition.legalReference;\n        details = appError.getApiResponse(this.shouldIncludeDetails());\n\n        // Log estruturado específico para AppError\n        this.logAppError(appError, requestContext, requestId);\n        break;\n\n      case exception instanceof BaseApiException:\n        // Sistema existente de exceções customizadas\n        statusCode = exception.getStatus();\n        errorName = exception.constructor.name;\n        message = exception.message;\n        localizedMessage = exception.localizedMessage?.[acceptedLanguage];\n        details = exception.details || exception.getResponse();\n        break;\n\n      case exception instanceof BadRequestException:\n        // Tratamento de erros de validação\n        statusCode = exception.getStatus();\n        errorName = exception.constructor.name;\n        const response = exception.getResponse() as any;\n\n        if (response?.message && Array.isArray(response.message)) {\n          validationErrors = this.processValidationErrors(response.message);\n          message = 'Erro de validação';\n          details = { validationErrors };\n        } else {\n          message = response?.message || exception.message;\n          details = response;\n        }\n        break;\n\n      case exception instanceof HttpException:\n        // Outras exceções HTTP do NestJS\n        statusCode = exception.getStatus();\n        errorName = exception.constructor.name;\n        message = exception.message;\n        details = exception.getResponse();\n        break;\n\n      case exception instanceof Error:\n        // Erros genéricos do JavaScript\n        statusCode = HttpStatus.INTERNAL_SERVER_ERROR;\n        errorName = exception.constructor.name;\n        message = exception.message;\n        stack = exception.stack;\n\n        // Tentar mapear para erro do catálogo se possível\n        if (this.isDatabaseError(exception)) {\n          const mappedError = this.tryMapDatabaseError(\n            exception,\n            acceptedLanguage,\n          );\n          if (mappedError) {\n            statusCode = mappedError.getStatus();\n            errorCode = mappedError.errorCode;\n            message = mappedError.message;\n            localizedMessage = mappedError.localizedMessage;\n            category = mappedError.definition.category;\n            severity = mappedError.definition.severity;\n            details = mappedError.getApiResponse(this.shouldIncludeDetails());\n          }\n        }\n        break;\n\n      default:\n        // Erro desconhecido\n        statusCode = HttpStatus.INTERNAL_SERVER_ERROR;\n        errorName = 'UnknownException';\n        message = 'Erro interno do servidor';\n        break;\n    }\n\n    // Criar resposta de erro padronizada\n    const errorResponse: ApiErrorResponse = {\n      statusCode,\n      message: localizedMessage || message,\n      code: errorCode || errorName,\n      details,\n      errors: validationErrors,\n      timestamp,\n      path,\n    };\n\n    // Adicionar informações do catálogo se disponíveis\n    if (category) {\n      (errorResponse as any).category = category;\n    }\n    if (severity) {\n      (errorResponse as any).severity = severity;\n    }\n    if (legalReference) {\n      (errorResponse as any).legalReference = legalReference;\n    }\n\n    // Log estruturado do erro (se não foi logado como AppError)\n    if (!(exception instanceof AppError)) {\n      const logLevel = this.getLogLevel(statusCode, severity);\n      const logMessage = `${errorName}: ${message}`;\n      const logMeta = {\n        statusCode,\n        errorName,\n        errorCode,\n        category,\n        severity,\n        path,\n        requestId,\n        userAgent: req.headers['user-agent'],\n        ip: req.ip,\n        method: req.method,\n        stack:\n          stack && this.config.get<string>('NODE_ENV') === 'development'\n            ? stack\n            : undefined,\n      };\n\n      if (logLevel === 'error') {\n        this.logger.error(requestContext, logMessage, logMeta);\n      } else {\n        this.logger.warn(requestContext, logMessage, logMeta);\n      }\n    }\n\n    // Proteger dados sensíveis em produção\n    const isProduction = this.config.get<string>('NODE_ENV') === 'production';\n    if (isProduction && statusCode === HttpStatus.INTERNAL_SERVER_ERROR) {\n      errorResponse.message = 'Erro interno do servidor';\n      if (!errorCode) {\n        errorResponse.details = undefined;\n      }\n    }\n\n    res.status(statusCode).json(errorResponse);\n  }\n\n  /**\n   * Log específico para erros do catálogo\n   */\n  private logAppError(\n    appError: AppError,\n    requestContext: any,\n    requestId: string,\n  ): void {\n    const logData = appError.getLogData();\n    const logLevel = this.getLogLevel(\n      appError.getStatus(),\n      appError.definition.severity,\n    );\n    const logMessage = `[${appError.errorCode}] ${appError.message}`;\n\n    const logMeta = {\n      ...logData,\n      requestId,\n      path: requestContext.path,\n      method: requestContext.method,\n      userAgent: requestContext.userAgent,\n      ip: requestContext.ip,\n    };\n\n    if (logLevel === 'error') {\n      this.logger.error(requestContext, logMessage, logMeta);\n    } else {\n      this.logger.warn(requestContext, logMessage, logMeta);\n    }\n\n    // Log adicional para erros críticos\n    if (appError.isCritical()) {\n      this.logger.error(requestContext, `CRITICAL ERROR: ${logMessage}`, {\n        ...logMeta,\n        alert: true,\n        criticalError: true,\n      });\n    }\n  }\n\n  /**\n   * Determina o nível de log baseado no status HTTP e severidade\n   */\n  private getLogLevel(\n    statusCode: number,\n    severity?: ErrorSeverity,\n  ): 'error' | 'warn' {\n    if (\n      severity === ErrorSeverity.CRITICAL ||\n      severity === ErrorSeverity.HIGH\n    ) {\n      return 'error';\n    }\n    return statusCode >= 500 ? 'error' : 'warn';\n  }\n\n  /**\n   * Verifica se deve incluir detalhes na resposta\n   */\n  private shouldIncludeDetails(): boolean {\n    return this.config.get<string>('NODE_ENV') !== 'production';\n  }\n\n  /**\n   * Verifica se o erro é relacionado ao banco de dados\n   */\n  private isDatabaseError(error: Error): boolean {\n    const dbErrorIndicators = [\n      'duplicate key',\n      'foreign key',\n      'check constraint',\n      'not null',\n      'violates',\n      'constraint',\n      'ECONNREFUSED',\n      'ETIMEDOUT',\n      'connection',\n    ];\n\n    const errorMessage = error.message.toLowerCase();\n    return dbErrorIndicators.some((indicator) =>\n      errorMessage.includes(indicator.toLowerCase()),\n    );\n  }\n\n  /**\n   * Tenta mapear erro de banco para erro do catálogo\n   */\n  private tryMapDatabaseError(error: Error, language: string): AppError | null {\n    try {\n      // Extrair código PostgreSQL se disponível\n      const postgresCodeMatch = error.message.match(/code:\\s*(\\d+)/);\n      if (postgresCodeMatch) {\n        const postgresCode = postgresCodeMatch[1];\n        return AppError.fromPostgresError(\n          postgresCode,\n          {\n            cause: error,\n            metadata: {\n              originalMessage: error.message,\n            },\n          },\n          language,\n        );\n      }\n\n      // Mapear por padrões na mensagem\n      const message = error.message.toLowerCase();\n\n      if (\n        message.includes('duplicate key') ||\n        message.includes('unique constraint')\n      ) {\n        return AppError.fromPostgresError(\n          '23505',\n          {\n            cause: error,\n            metadata: { originalMessage: error.message },\n          },\n          language,\n        );\n      }\n\n      if (\n        message.includes('foreign key') ||\n        message.includes('violates foreign key')\n      ) {\n        return AppError.fromPostgresError(\n          '23503',\n          {\n            cause: error,\n            metadata: { originalMessage: error.message },\n          },\n          language,\n        );\n      }\n\n      if (message.includes('check constraint')) {\n        return AppError.fromPostgresError(\n          '23514',\n          {\n            cause: error,\n            metadata: { originalMessage: error.message },\n          },\n          language,\n        );\n      }\n\n      if (message.includes('not null')) {\n        return AppError.fromPostgresError(\n          '23502',\n          {\n            cause: error,\n            metadata: { originalMessage: error.message },\n          },\n          language,\n        );\n      }\n\n      return null;\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * Processa erros de validação do class-validator em formato estruturado\n   */\n  private processValidationErrors(\n    validationErrors: string[] | ValidationError[],\n  ): Array<{ field: string; messages: string[] }> {\n    const result: Array<{ field: string; messages: string[] }> = [];\n\n    for (const error of validationErrors) {\n      if (typeof error === 'string') {\n        result.push({\n          field: 'unknown',\n          messages: [error],\n        });\n      } else if (error && typeof error === 'object' && 'property' in error) {\n        const validationError = error as ValidationError;\n        const messages = validationError.constraints\n          ? Object.values(validationError.constraints)\n          : ['Erro de validação'];\n\n        result.push({\n          field: validationError.property,\n          messages,\n        });\n\n        if (validationError.children && validationError.children.length > 0) {\n          const childErrors = this.processValidationErrors(\n            validationError.children,\n          );\n          result.push(\n            ...childErrors.map((childError) => ({\n              field: `${validationError.property}.${childError.field}`,\n              messages: childError.messages,\n            })),\n          );\n        }\n      }\n    }\n\n    return result;\n  }\n}\n"],"version":3}