a415623c60a669b3af7c0ea5f23b50ca
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricaSistema = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
/**
 * Entidade que representa métricas de sistema
 *
 * Esta entidade armazena informações sobre o desempenho do sistema,
 * incluindo uso de CPU, memória, disco e carga do sistema.
 */
let MetricaSistema = class MetricaSistema {
    id;
    created_at;
    servidor;
    uso_cpu_percentual;
    uso_memoria_mb;
    memoria_total_mb;
    uso_disco_percentual;
    carga_sistema;
    detalhes;
};
exports.MetricaSistema = MetricaSistema;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], MetricaSistema.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ name: 'created_at' }),
    (0, typeorm_1.Index)('idx_metricas_sistema_timestamp'),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], MetricaSistema.prototype, "created_at", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 100 }),
    (0, typeorm_1.Index)('idx_metricas_sistema_servidor'),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome do servidor é obrigatório' }),
    (0, class_validator_1.IsString)({ message: 'Nome do servidor deve ser uma string' }),
    (0, class_validator_1.MaxLength)(100, { message: 'Nome do servidor deve ter no máximo 100 caracteres' }),
    __metadata("design:type", String)
], MetricaSistema.prototype, "servidor", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'numeric', precision: 5, scale: 2, nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Uso de CPU deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Uso de CPU não pode ser negativo' }),
    (0, class_validator_1.Max)(100, { message: 'Uso de CPU não pode ser maior que 100%' }),
    __metadata("design:type", Number)
], MetricaSistema.prototype, "uso_cpu_percentual", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'integer', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Uso de memória deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Uso de memória não pode ser negativo' }),
    __metadata("design:type", Number)
], MetricaSistema.prototype, "uso_memoria_mb", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'integer', nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Memória total deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Memória total não pode ser negativa' }),
    __metadata("design:type", Number)
], MetricaSistema.prototype, "memoria_total_mb", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'numeric', precision: 5, scale: 2, nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Uso de disco deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Uso de disco não pode ser negativo' }),
    (0, class_validator_1.Max)(100, { message: 'Uso de disco não pode ser maior que 100%' }),
    __metadata("design:type", Number)
], MetricaSistema.prototype, "uso_disco_percentual", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'numeric', precision: 5, scale: 2, nullable: true }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)({}, { message: 'Carga do sistema deve ser um número' }),
    (0, class_validator_1.Min)(0, { message: 'Carga do sistema não pode ser negativa' }),
    __metadata("design:type", Number)
], MetricaSistema.prototype, "carga_sistema", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", typeof (_b = typeof Record !== "undefined" && Record) === "function" ? _b : Object)
], MetricaSistema.prototype, "detalhes", void 0);
exports.MetricaSistema = MetricaSistema = __decorate([
    (0, typeorm_1.Entity)('metricas_sistema')
], MetricaSistema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXGVudGl0aWVzXFxtZXRyaWNhLXNpc3RlbWEuZW50aXR5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxxQ0FBMEY7QUFDMUYscURBQWtHO0FBRWxHOzs7OztHQUtHO0FBRUksSUFBTSxjQUFjLEdBQXBCLE1BQU0sY0FBYztJQUV6QixFQUFFLENBQVM7SUFJWCxVQUFVLENBQU87SUFPakIsUUFBUSxDQUFTO0lBT2pCLGtCQUFrQixDQUFTO0lBTTNCLGNBQWMsQ0FBUztJQU12QixnQkFBZ0IsQ0FBUztJQU96QixvQkFBb0IsQ0FBUztJQU03QixhQUFhLENBQVM7SUFHdEIsUUFBUSxDQUFzQjtDQUMvQixDQUFBO0FBakRZLHdDQUFjO0FBRXpCO0lBREMsSUFBQSxnQ0FBc0IsRUFBQyxNQUFNLENBQUM7OzBDQUNwQjtBQUlYO0lBRkMsSUFBQSwwQkFBZ0IsRUFBQyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQztJQUN4QyxJQUFBLGVBQUssRUFBQyxnQ0FBZ0MsQ0FBQztrREFDNUIsSUFBSSxvQkFBSixJQUFJO2tEQUFDO0FBT2pCO0lBTEMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLElBQUEsZUFBSyxFQUFDLCtCQUErQixDQUFDO0lBQ3RDLElBQUEsNEJBQVUsRUFBQyxFQUFFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxDQUFDO0lBQ3pELElBQUEsMEJBQVEsRUFBQyxFQUFFLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxDQUFDO0lBQzdELElBQUEsMkJBQVMsRUFBQyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsb0RBQW9ELEVBQUUsQ0FBQzs7Z0RBQ2pFO0FBT2pCO0lBTEMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQ25FLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsMEJBQVEsRUFBQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsK0JBQStCLEVBQUUsQ0FBQztJQUMxRCxJQUFBLHFCQUFHLEVBQUMsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLENBQUM7SUFDdkQsSUFBQSxxQkFBRyxFQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxDQUFDOzswREFDckM7QUFNM0I7SUFKQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUMzQyxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLENBQUM7SUFDOUQsSUFBQSxxQkFBRyxFQUFDLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxDQUFDOztzREFDckM7QUFNdkI7SUFKQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUMzQyxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLENBQUM7SUFDN0QsSUFBQSxxQkFBRyxFQUFDLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxDQUFDOzt3REFDbEM7QUFPekI7SUFMQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDbkUsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxFQUFDLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxDQUFDO0lBQzVELElBQUEscUJBQUcsRUFBQyxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsQ0FBQztJQUN6RCxJQUFBLHFCQUFHLEVBQUMsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLDBDQUEwQyxFQUFFLENBQUM7OzREQUNyQztBQU03QjtJQUpDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUNuRSxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEVBQUMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLENBQUM7SUFDaEUsSUFBQSxxQkFBRyxFQUFDLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxDQUFDOztxREFDeEM7QUFHdEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDaEMsTUFBTSxvQkFBTixNQUFNO2dEQUFjO3lCQWhEbkIsY0FBYztJQUQxQixJQUFBLGdCQUFNLEVBQUMsa0JBQWtCLENBQUM7R0FDZCxjQUFjLENBaUQxQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcZW50aXRpZXNcXG1ldHJpY2Etc2lzdGVtYS5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5LCBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uLCBDb2x1bW4sIEluZGV4LCBDcmVhdGVEYXRlQ29sdW1uIH0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBJc05vdEVtcHR5LCBJc09wdGlvbmFsLCBJc051bWJlciwgTWluLCBNYXgsIElzU3RyaW5nLCBNYXhMZW5ndGggfSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuXG4vKipcbiAqIEVudGlkYWRlIHF1ZSByZXByZXNlbnRhIG3DqXRyaWNhcyBkZSBzaXN0ZW1hXG4gKiBcbiAqIEVzdGEgZW50aWRhZGUgYXJtYXplbmEgaW5mb3JtYcOnw7VlcyBzb2JyZSBvIGRlc2VtcGVuaG8gZG8gc2lzdGVtYSxcbiAqIGluY2x1aW5kbyB1c28gZGUgQ1BVLCBtZW3Ds3JpYSwgZGlzY28gZSBjYXJnYSBkbyBzaXN0ZW1hLlxuICovXG5ARW50aXR5KCdtZXRyaWNhc19zaXN0ZW1hJylcbmV4cG9ydCBjbGFzcyBNZXRyaWNhU2lzdGVtYSB7XG4gIEBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uKCd1dWlkJylcbiAgaWQ6IHN0cmluZztcblxuICBAQ3JlYXRlRGF0ZUNvbHVtbih7IG5hbWU6ICdjcmVhdGVkX2F0JyB9KVxuICBASW5kZXgoJ2lkeF9tZXRyaWNhc19zaXN0ZW1hX3RpbWVzdGFtcCcpXG4gIGNyZWF0ZWRfYXQ6IERhdGU7XG5cbiAgQENvbHVtbih7IGxlbmd0aDogMTAwIH0pXG4gIEBJbmRleCgnaWR4X21ldHJpY2FzX3Npc3RlbWFfc2Vydmlkb3InKVxuICBASXNOb3RFbXB0eSh7IG1lc3NhZ2U6ICdOb21lIGRvIHNlcnZpZG9yIMOpIG9icmlnYXTDs3JpbycgfSlcbiAgQElzU3RyaW5nKHsgbWVzc2FnZTogJ05vbWUgZG8gc2Vydmlkb3IgZGV2ZSBzZXIgdW1hIHN0cmluZycgfSlcbiAgQE1heExlbmd0aCgxMDAsIHsgbWVzc2FnZTogJ05vbWUgZG8gc2Vydmlkb3IgZGV2ZSB0ZXIgbm8gbcOheGltbyAxMDAgY2FyYWN0ZXJlcycgfSlcbiAgc2Vydmlkb3I6IHN0cmluZztcblxuICBAQ29sdW1uKHsgdHlwZTogJ251bWVyaWMnLCBwcmVjaXNpb246IDUsIHNjYWxlOiAyLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc051bWJlcih7fSwgeyBtZXNzYWdlOiAnVXNvIGRlIENQVSBkZXZlIHNlciB1bSBuw7ptZXJvJyB9KVxuICBATWluKDAsIHsgbWVzc2FnZTogJ1VzbyBkZSBDUFUgbsOjbyBwb2RlIHNlciBuZWdhdGl2bycgfSlcbiAgQE1heCgxMDAsIHsgbWVzc2FnZTogJ1VzbyBkZSBDUFUgbsOjbyBwb2RlIHNlciBtYWlvciBxdWUgMTAwJScgfSlcbiAgdXNvX2NwdV9wZXJjZW50dWFsOiBudW1iZXI7XG5cbiAgQENvbHVtbih7IHR5cGU6ICdpbnRlZ2VyJywgbnVsbGFibGU6IHRydWUgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNOdW1iZXIoe30sIHsgbWVzc2FnZTogJ1VzbyBkZSBtZW3Ds3JpYSBkZXZlIHNlciB1bSBuw7ptZXJvJyB9KVxuICBATWluKDAsIHsgbWVzc2FnZTogJ1VzbyBkZSBtZW3Ds3JpYSBuw6NvIHBvZGUgc2VyIG5lZ2F0aXZvJyB9KVxuICB1c29fbWVtb3JpYV9tYjogbnVtYmVyO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAnaW50ZWdlcicsIG51bGxhYmxlOiB0cnVlIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzTnVtYmVyKHt9LCB7IG1lc3NhZ2U6ICdNZW3Ds3JpYSB0b3RhbCBkZXZlIHNlciB1bSBuw7ptZXJvJyB9KVxuICBATWluKDAsIHsgbWVzc2FnZTogJ01lbcOzcmlhIHRvdGFsIG7Do28gcG9kZSBzZXIgbmVnYXRpdmEnIH0pXG4gIG1lbW9yaWFfdG90YWxfbWI6IG51bWJlcjtcblxuICBAQ29sdW1uKHsgdHlwZTogJ251bWVyaWMnLCBwcmVjaXNpb246IDUsIHNjYWxlOiAyLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc051bWJlcih7fSwgeyBtZXNzYWdlOiAnVXNvIGRlIGRpc2NvIGRldmUgc2VyIHVtIG7Dum1lcm8nIH0pXG4gIEBNaW4oMCwgeyBtZXNzYWdlOiAnVXNvIGRlIGRpc2NvIG7Do28gcG9kZSBzZXIgbmVnYXRpdm8nIH0pXG4gIEBNYXgoMTAwLCB7IG1lc3NhZ2U6ICdVc28gZGUgZGlzY28gbsOjbyBwb2RlIHNlciBtYWlvciBxdWUgMTAwJScgfSlcbiAgdXNvX2Rpc2NvX3BlcmNlbnR1YWw6IG51bWJlcjtcblxuICBAQ29sdW1uKHsgdHlwZTogJ251bWVyaWMnLCBwcmVjaXNpb246IDUsIHNjYWxlOiAyLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc051bWJlcih7fSwgeyBtZXNzYWdlOiAnQ2FyZ2EgZG8gc2lzdGVtYSBkZXZlIHNlciB1bSBuw7ptZXJvJyB9KVxuICBATWluKDAsIHsgbWVzc2FnZTogJ0NhcmdhIGRvIHNpc3RlbWEgbsOjbyBwb2RlIHNlciBuZWdhdGl2YScgfSlcbiAgY2FyZ2Ffc2lzdGVtYTogbnVtYmVyO1xuXG4gIEBDb2x1bW4oeyB0eXBlOiAnanNvbmInLCBudWxsYWJsZTogdHJ1ZSB9KVxuICBkZXRhbGhlczogUmVjb3JkPHN0cmluZywgYW55Pjtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==