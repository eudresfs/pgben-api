{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\controllers\\metricas-valores.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\metricas\\controllers\\metricas-valores.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../../../shared/guards/jwt-auth.guard';\nimport { RolesGuard } from '../../../auth/guards/roles.guard';\nimport { Roles } from '../../../auth/decorators/role.decorator';\nimport { ROLES } from '../../../shared/constants/roles.constants';\n\nimport { MetricasService } from '../services/metricas.service';\nimport { MetricasColetaService } from '../services/metricas-coleta.service';\nimport {\n  ColetaManualMetricaDto,\n  ConsultaValorMetricaDto,\n  ConsultaSerieTemporalDto,\n} from '../dto/metrica-snapshot.dto';\n\n/**\n * Controlador para consulta de valores de métricas\n *\n * Este controlador fornece endpoints para:\n * 1. Consultar o valor atual de uma métrica\n * 2. Obter séries históricas de valores\n * 3. Comparar valores entre períodos\n * 4. Executar coleta manual de métricas\n */\n@ApiTags('Métricas e Dashboard')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard, RolesGuard)\n@Controller('metricas/valores')\nexport class MetricasValoresController {\n  constructor(\n    private readonly metricasService: MetricasService,\n    private readonly metricasColetaService: MetricasColetaService,\n  ) {}\n\n  /**\n   * Obtém o valor atual de uma métrica específica\n   */\n  @Get(':codigo')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.TECNICO)\n  @ApiOperation({ summary: 'Obtém o valor atual de uma métrica' })\n  @ApiResponse({\n    status: 200,\n    description: 'Valor da métrica retornado com sucesso',\n  })\n  @ApiResponse({ status: 404, description: 'Métrica não encontrada' })\n  async obterValorAtual(\n    @Param('codigo') codigo: string,\n    @Query() query: ConsultaValorMetricaDto,\n  ) {\n    // Temporariamente retornando dados mockados até que o método seja implementado\n    return {\n      metrica: codigo,\n      valor: 42,\n      unidade: '%',\n      timestamp: new Date(),\n      dimensoes: query.dimensoes || {},\n    };\n  }\n\n  /**\n   * Obtém a série histórica de valores de uma métrica\n   */\n  @Get(':codigo/historico')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.TECNICO)\n  @ApiOperation({ summary: 'Obtém série histórica de valores de uma métrica' })\n  @ApiResponse({\n    status: 200,\n    description: 'Série histórica retornada com sucesso',\n  })\n  @ApiResponse({ status: 404, description: 'Métrica não encontrada' })\n  async obterSerieHistorica(\n    @Param('codigo') codigo: string,\n    @Query() query: ConsultaSerieTemporalDto,\n  ) {\n    // Temporariamente retornando dados mockados até que o método seja implementado\n    return {\n      metrica: codigo,\n      dados: [\n        { timestamp: new Date(query.data_inicial), valor: 35 },\n        { timestamp: new Date(Date.now()), valor: 42 },\n      ],\n      periodo: {\n        inicio: query.data_inicial,\n        fim: query.data_final,\n      },\n      dimensoes: query.dimensoes || {},\n    };\n  }\n\n  /**\n   * Compara valores de uma métrica entre períodos\n   */\n  @Get(':codigo/comparativo')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR, ROLES.TECNICO)\n  @ApiOperation({ summary: 'Compara valores de uma métrica entre períodos' })\n  @ApiResponse({\n    status: 200,\n    description: 'Comparativo retornado com sucesso',\n  })\n  @ApiResponse({ status: 404, description: 'Métrica não encontrada' })\n  async compararPeriodos(\n    @Param('codigo') codigo: string,\n    @Query('periodo1Inicio') periodo1Inicio: Date,\n    @Query('periodo1Fim') periodo1Fim: Date,\n    @Query('periodo2Inicio') periodo2Inicio: Date,\n    @Query('periodo2Fim') periodo2Fim: Date,\n    @Query('granularidade') granularidade: string,\n  ) {\n    // Temporariamente retornando dados mockados até que o método seja implementado\n    return {\n      metrica: codigo,\n      periodo1: {\n        inicio: periodo1Inicio,\n        fim: periodo1Fim,\n        valor: 35,\n      },\n      periodo2: {\n        inicio: periodo2Inicio,\n        fim: periodo2Fim,\n        valor: 42,\n      },\n      variacao: {\n        absoluta: 7,\n        percentual: 20,\n      },\n      granularidade: granularidade || 'dia',\n    };\n  }\n\n  /**\n   * Executa coleta manual de uma métrica\n   */\n  @Post('coleta-manual')\n  @Roles(ROLES.ADMIN, ROLES.GESTOR)\n  @ApiOperation({ summary: 'Executa coleta manual de uma métrica' })\n  @ApiResponse({ status: 201, description: 'Coleta executada com sucesso' })\n  @ApiResponse({ status: 404, description: 'Métrica não encontrada' })\n  async executarColetaManual(@Body() dto: ColetaManualMetricaDto) {\n    return this.metricasColetaService.coletarMetricaManual(\n      dto.codigo,\n      dto.dimensoes,\n    );\n  }\n}\n"],"version":3}