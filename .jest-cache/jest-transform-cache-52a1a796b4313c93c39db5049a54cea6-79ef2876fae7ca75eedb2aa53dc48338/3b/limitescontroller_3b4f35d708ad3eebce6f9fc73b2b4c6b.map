{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\controllers\\limites.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\configuracao\\controllers\\limites.controller.ts"],"sourcesContent":["import { Controller, Get, Put, Body, Param } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiParam,\n} from '@nestjs/swagger';\nimport { LimitesService } from '../services/limites.service';\nimport { LimitesUploadDto } from '../dtos/limites/limites-upload.dto';\nimport { PrazoUpdateDto } from '../dtos/limites/prazo-update.dto';\nimport { LimitesUploadResponseDto } from '../dtos/limites/limites-upload-response.dto';\n\n/**\n * Controlador responsável pelas operações de limites operacionais do sistema\n */\n@ApiTags('Configuração')\n@ApiBearerAuth()\n@Controller('configuracao/limites')\nexport class LimitesController {\n  constructor(private readonly limitesService: LimitesService) {}\n\n  /**\n   * Busca os limites de upload configurados\n   * @returns DTO com os limites de upload\n   */\n  @Get('upload')\n  @ApiOperation({ summary: 'Buscar limites de upload configurados' })\n  @ApiResponse({\n    status: 200,\n    description: 'Limites de upload encontrados',\n    type: LimitesUploadResponseDto,\n  })\n  async buscarLimitesUpload(): Promise<LimitesUploadResponseDto> {\n    return this.limitesService.buscarLimitesUpload();\n  }\n\n  /**\n   * Atualiza os limites de upload\n   * @param dto DTO com os novos limites\n   * @returns DTO com os limites atualizados\n   */\n  @Put('upload')\n  @ApiOperation({ summary: 'Atualizar limites de upload' })\n  @ApiResponse({\n    status: 200,\n    description: 'Limites de upload atualizados com sucesso',\n    type: LimitesUploadResponseDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos',\n  })\n  async atualizarLimitesUpload(\n    @Body() dto: LimitesUploadDto,\n  ): Promise<LimitesUploadResponseDto> {\n    return this.limitesService.atualizarLimitesUpload(dto);\n  }\n\n  /**\n   * Busca o prazo configurado para uma etapa específica\n   * @param tipo Tipo do prazo\n   * @returns Prazo em dias\n   */\n  @Get('prazos/:tipo')\n  @ApiOperation({ summary: 'Buscar prazo configurado para uma etapa' })\n  @ApiParam({\n    name: 'tipo',\n    description: 'Tipo do prazo (analise, entrevista, recurso, validade)',\n    example: 'analise',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Prazo encontrado',\n    schema: {\n      type: 'object',\n      properties: {\n        tipo: {\n          type: 'string',\n          description: 'Tipo do prazo',\n          example: 'analise',\n        },\n        dias: {\n          type: 'number',\n          description: 'Prazo em dias',\n          example: 15,\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Tipo de prazo inválido',\n  })\n  async buscarPrazo(\n    @Param('tipo') tipo: string,\n  ): Promise<{ tipo: string; dias: number }> {\n    const dias = await this.limitesService.buscarPrazo(tipo);\n    return { tipo, dias };\n  }\n\n  /**\n   * Atualiza o prazo para uma etapa específica\n   * @param tipo Tipo do prazo\n   * @param dto DTO com o novo prazo\n   * @returns Prazo atualizado\n   */\n  @Put('prazos/:tipo')\n  @ApiOperation({ summary: 'Atualizar prazo para uma etapa' })\n  @ApiParam({\n    name: 'tipo',\n    description: 'Tipo do prazo (analise, entrevista, recurso, validade)',\n    example: 'analise',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Prazo atualizado com sucesso',\n    schema: {\n      type: 'object',\n      properties: {\n        tipo: {\n          type: 'string',\n          description: 'Tipo do prazo',\n          example: 'analise',\n        },\n        dias: {\n          type: 'number',\n          description: 'Prazo em dias',\n          example: 15,\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Dados inválidos ou tipo de prazo inválido',\n  })\n  async atualizarPrazo(\n    @Param('tipo') tipo: string,\n    @Body() dto: PrazoUpdateDto,\n  ): Promise<{ tipo: string; dias: number }> {\n    const dias = await this.limitesService.atualizarPrazo(tipo, dto);\n    return { tipo, dias };\n  }\n\n  /**\n   * Calcula a data limite para uma etapa com base no prazo configurado\n   * @param tipo Tipo do prazo\n   * @returns Data limite\n   */\n  @Get('prazos/:tipo/data-limite')\n  @ApiOperation({\n    summary: 'Calcular data limite com base no prazo configurado',\n  })\n  @ApiParam({\n    name: 'tipo',\n    description: 'Tipo do prazo (analise, entrevista, recurso, validade)',\n    example: 'analise',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Data limite calculada',\n    schema: {\n      type: 'object',\n      properties: {\n        tipo: {\n          type: 'string',\n          description: 'Tipo do prazo',\n          example: 'analise',\n        },\n        dias: {\n          type: 'number',\n          description: 'Prazo em dias',\n          example: 15,\n        },\n        dataLimite: {\n          type: 'string',\n          description: 'Data limite calculada',\n          example: '2025-06-02T20:00:00.000Z',\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Tipo de prazo inválido',\n  })\n  async calcularDataLimite(\n    @Param('tipo') tipo: string,\n  ): Promise<{ tipo: string; dias: number; dataLimite: Date }> {\n    const dias = await this.limitesService.buscarPrazo(tipo);\n    const dataLimite = await this.limitesService.calcularDataLimite(tipo);\n    return { tipo, dias, dataLimite };\n  }\n}\n"],"version":3}