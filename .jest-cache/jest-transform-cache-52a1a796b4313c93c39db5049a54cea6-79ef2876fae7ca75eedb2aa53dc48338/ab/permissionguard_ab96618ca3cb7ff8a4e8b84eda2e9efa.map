{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\guards\\permission.guard.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\guards\\permission.guard.ts"],"sourcesContent":["import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport {\n  PERMISSION_REQUIREMENTS_KEY,\n  PermissionRequirement,\n} from '../decorators/requires-permission.decorator';\nimport { PermissionService } from '../services/permission.service';\nimport { TipoEscopo } from '../../entities/user-permission.entity';\nimport { PermissionDeniedException } from '../exceptions/permission-denied.exception';\n\n/**\n * Guard para verificar permissões granulares.\n *\n * Este guard verifica se o usuário tem as permissões necessárias para acessar\n * um endpoint, considerando os requisitos de permissão definidos pelo decorador\n * RequiresPermission.\n */\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  private readonly logger = new Logger(PermissionGuard.name);\n\n  constructor(\n    private reflector: Reflector,\n    private permissionService: PermissionService,\n  ) {}\n\n  /**\n   * Verifica se o usuário tem as permissões necessárias para acessar o endpoint.\n   *\n   * @param context Contexto de execução\n   * @returns true se o usuário tem as permissões necessárias, false caso contrário\n   */\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    // Obtém os requisitos de permissão do método e da classe\n    const methodRequirements =\n      this.reflector.get<PermissionRequirement[]>(\n        PERMISSION_REQUIREMENTS_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const classRequirements =\n      this.reflector.get<PermissionRequirement[]>(\n        PERMISSION_REQUIREMENTS_KEY,\n        context.getClass(),\n      ) || [];\n\n    // Combina os requisitos de permissão\n    const requirements = [...methodRequirements, ...classRequirements];\n\n    // Se não houver requisitos de permissão, permite o acesso\n    if (requirements.length === 0) {\n      return true;\n    }\n\n    // Obtém a requisição\n    const request = context.switchToHttp().getRequest();\n\n    // Verifica se o usuário está autenticado\n    if (!request.user || !request.user.id) {\n      throw new UnauthorizedException('Usuário não autenticado');\n    }\n\n    const userId = request.user.id;\n\n    // BYPASS PARA SUPER ADMIN: Verifica se o usuário possui permissão de super admin (*.*)\n    // Se sim, permite acesso a qualquer endpoint sem verificar outras permissões\n    const hasSuperAdminPermission = await this.permissionService.hasPermission({\n      userId,\n      permissionName: '*.*',\n      scopeType: TipoEscopo.GLOBAL,\n    });\n\n    if (hasSuperAdminPermission) {\n      this.logger.debug(\n        `Acesso concedido via super admin: usuário ${userId} possui permissão '*.*'`,\n      );\n      return true;\n    }\n\n    // Verifica se o usuário tem pelo menos uma das permissões requeridas (OR lógico)\n    const permissionChecks: Promise<boolean>[] = [];\n    const requirementDetails: Array<{\n      requirement: PermissionRequirement;\n      scopeId?: string;\n    }> = [];\n\n    // Prepara todas as verificações de permissão\n    for (const requirement of requirements) {\n      const {\n        permissionName,\n        scopeType = TipoEscopo.GLOBAL,\n        scopeIdExpression,\n      } = requirement;\n\n      // Obtém o ID do escopo a partir da expressão\n      let scopeId: string | undefined;\n      if (scopeType === TipoEscopo.UNIDADE && scopeIdExpression) {\n        scopeId = this.evaluateScopeIdExpression(scopeIdExpression, request);\n      }\n\n      // Adiciona a verificação de permissão à lista\n      const permissionCheck = this.permissionService.hasPermission({\n        userId,\n        permissionName,\n        scopeType,\n        scopeId,\n      });\n\n      permissionChecks.push(permissionCheck);\n      requirementDetails.push({ requirement, scopeId });\n    }\n\n    // Executa todas as verificações em paralelo\n    const results = await Promise.all(permissionChecks);\n\n    // Verifica se pelo menos uma permissão foi concedida\n    const hasAnyPermission = results.some((result) => result === true);\n\n    if (!hasAnyPermission) {\n      // Log detalhado de todas as permissões que falharam\n      const failedPermissions = requirementDetails\n        .filter((_, index) => !results[index])\n        .map(({ requirement, scopeId }) => {\n          const { permissionName, scopeType = TipoEscopo.GLOBAL } = requirement;\n          return `${permissionName} (escopo: ${scopeType}${scopeId ? `, ID: ${scopeId}` : ''})`;\n        });\n\n      this.logger.warn(\n        `Acesso negado: usuário ${userId} não possui nenhuma das permissões requeridas: ${failedPermissions.join(', ')}`,\n      );\n\n      // Lança exceção com a primeira permissão que falhou (para compatibilidade)\n      const firstFailedRequirement = requirementDetails.find(\n        (_, index) => !results[index],\n      );\n      if (firstFailedRequirement) {\n        const { permissionName, scopeType = TipoEscopo.GLOBAL } =\n          firstFailedRequirement.requirement;\n        throw new PermissionDeniedException(\n          permissionName,\n          scopeType,\n          firstFailedRequirement.scopeId,\n        );\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Avalia a expressão para obter o ID do escopo a partir dos parâmetros da requisição.\n   *\n   * @param expression Expressão para obter o ID do escopo\n   * @param request Requisição\n   * @returns ID do escopo ou undefined se não for possível obter\n   */\n  private evaluateScopeIdExpression(\n    expression: string,\n    request: any,\n  ): string | undefined {\n    try {\n      // Divide a expressão em partes (ex: 'params.unidadeId' -> ['params', 'unidadeId'])\n      const parts = expression.split('.');\n\n      // Avalia a expressão\n      let value = request;\n      for (const part of parts) {\n        if (value && typeof value === 'object' && part in value) {\n          value = value[part];\n        } else {\n          return undefined;\n        }\n      }\n\n      return value?.toString();\n    } catch (error) {\n      this.logger.error(\n        `Erro ao avaliar expressão de escopo: ${error.message}`,\n        error.stack,\n      );\n      return undefined;\n    }\n  }\n}\n"],"version":3}