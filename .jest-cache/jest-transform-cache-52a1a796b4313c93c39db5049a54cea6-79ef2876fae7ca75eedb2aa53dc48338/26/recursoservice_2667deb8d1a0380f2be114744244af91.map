{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\recurso\\services\\recurso.service.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\recurso\\services\\recurso.service.ts"],"sourcesContent":["import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, Connection } from 'typeorm';\nimport { Recurso, StatusRecurso } from '../../../entities/recurso.entity';\nimport { RecursoHistorico } from '../../../entities/recurso-historico.entity';\nimport {\n  Solicitacao,\n  StatusSolicitacao,\n} from '../../../entities/solicitacao.entity';\nimport { CreateRecursoDto } from '../dto/create-recurso.dto';\nimport { AnalisarRecursoDto } from '../dto/analisar-recurso.dto';\nimport { RecursoResponseDto } from '../dto/recurso-response.dto';\nimport { ROLES } from '../../../shared/constants/roles.constants';\n\n/**\n * Serviço de Recursos de Primeira Instância\n *\n * Responsável pela lógica de negócio relacionada aos recursos de primeira instância\n * para solicitações de benefícios indeferidas\n */\n@Injectable()\nexport class RecursoService {\n  constructor(\n    @InjectRepository(Recurso)\n    private recursoRepository: Repository<Recurso>,\n\n    @InjectRepository(RecursoHistorico)\n    private historicoRepository: Repository<RecursoHistorico>,\n\n    @InjectRepository(Solicitacao)\n    private solicitacaoRepository: Repository<Solicitacao>,\n\n    private connection: Connection,\n  ) {}\n\n  /**\n   * Lista todos os recursos com paginação e filtros\n   */\n  async findAll(options: {\n    page?: number;\n    limit?: number;\n    status?: StatusRecurso;\n    solicitacao_id?: string;\n    setor_id?: string;\n    data_inicio?: string;\n    data_fim?: string;\n    user: any;\n  }) {\n    const {\n      page = 1,\n      limit = 10,\n      status,\n      solicitacao_id,\n      setor_id,\n      data_inicio,\n      data_fim,\n      user,\n    } = options;\n\n    const queryBuilder = this.recursoRepository.createQueryBuilder('recurso');\n\n    // Joins necessários\n    queryBuilder\n      .leftJoinAndSelect('recurso.solicitacao', 'solicitacao')\n      .leftJoinAndSelect('solicitacao.beneficiario', 'beneficiario')\n      .leftJoinAndSelect('recurso.analista', 'analista')\n      .leftJoinAndSelect('recurso.setor_responsavel', 'setor');\n\n    // Aplicar filtros\n    if (status) {\n      queryBuilder.andWhere('recurso.status = :status', { status });\n    }\n\n    if (solicitacao_id) {\n      queryBuilder.andWhere('recurso.solicitacao_id = :solicitacao_id', {\n        solicitacao_id,\n      });\n    }\n\n    if (setor_id) {\n      queryBuilder.andWhere('recurso.setor_responsavel_id = :setor_id', {\n        setor_id,\n      });\n    }\n\n    // Filtro por período\n    if (data_inicio && data_fim) {\n      const inicio = new Date(data_inicio);\n      const fim = new Date(data_fim);\n      fim.setHours(23, 59, 59, 999); // Ajusta para o final do dia\n\n      queryBuilder.andWhere('recurso.created_at BETWEEN :inicio AND :fim', {\n        inicio,\n        fim,\n      });\n    } else if (data_inicio) {\n      const inicio = new Date(data_inicio);\n      queryBuilder.andWhere('recurso.created_at >= :inicio', { inicio });\n    } else if (data_fim) {\n      const fim = new Date(data_fim);\n      fim.setHours(23, 59, 59, 999); // Ajusta para o final do dia\n      queryBuilder.andWhere('recurso.created_at <= :fim', { fim });\n    }\n\n    // Restrições de acesso baseadas no papel do usuário\n    if (![ROLES.ADMIN, ROLES.GESTOR].includes(user.role)) {\n      // Técnicos só podem ver recursos de solicitações da sua unidade\n      queryBuilder.andWhere('solicitacao.unidade_id = :unidade_id', {\n        unidade_id: user.unidade_id,\n      });\n    }\n\n    // Calcular paginação\n    const skip = (page - 1) * limit;\n    queryBuilder.skip(skip).take(limit);\n\n    // Ordenação padrão\n    queryBuilder.orderBy('recurso.created_at', 'DESC');\n\n    // Executar consulta\n    const [items, total] = await queryBuilder.getManyAndCount();\n\n    // Mapear resultados para DTOs\n    const recursos = items.map((recurso) => this.mapToDto(recurso));\n\n    return {\n      items: recursos,\n      meta: {\n        total,\n        page,\n        limit,\n        totalPages: Math.ceil(total / limit),\n      },\n    };\n  }\n\n  /**\n   * Busca um recurso pelo ID\n   */\n  async findById(id: string): Promise<Recurso> {\n    const recurso = await this.recursoRepository.findOne({\n      where: { id },\n      relations: [\n        'solicitacao',\n        'solicitacao.beneficiario',\n        'analista',\n        'setor_responsavel',\n      ],\n    });\n\n    if (!recurso) {\n      throw new NotFoundException(`Recurso com ID ${id} não encontrado`);\n    }\n\n    return recurso;\n  }\n\n  /**\n   * Cria um novo recurso\n   */\n  async create(\n    createRecursoDto: CreateRecursoDto,\n    user: any,\n  ): Promise<RecursoResponseDto> {\n    return this.connection.transaction(async (manager) => {\n      // Buscar a solicitação\n      const solicitacao = await this.solicitacaoRepository.findOne({\n        where: { id: createRecursoDto.solicitacao_id },\n      });\n\n      if (!solicitacao) {\n        throw new NotFoundException(\n          `Solicitação com ID ${createRecursoDto.solicitacao_id} não encontrada`,\n        );\n      }\n\n      // Verificar se a solicitação está reprovada\n      if (solicitacao.status !== StatusSolicitacao.INDEFERIDA) {\n        throw new BadRequestException(\n          'Só é possível criar recursos para solicitações reprovadas',\n        );\n      }\n\n      // Verificar se já existe um recurso para esta solicitação\n      const recursoExistente = await this.recursoRepository.findOne({\n        where: { solicitacao_id: createRecursoDto.solicitacao_id },\n      });\n\n      if (recursoExistente) {\n        throw new BadRequestException(\n          'Já existe um recurso para esta solicitação',\n        );\n      }\n\n      // Criar o recurso\n      const recurso = new Recurso();\n      recurso.solicitacao_id = createRecursoDto.solicitacao_id;\n      recurso.justificativa = createRecursoDto.justificativa;\n      recurso.status = StatusRecurso.PENDENTE;\n      recurso.created_at = new Date();\n\n      // Dados adicionais\n      if (createRecursoDto.documentos) {\n        recurso.documentos_adicionais = {\n          documentos: createRecursoDto.documentos,\n        };\n      }\n\n      if (createRecursoDto.motivo_indeferimento) {\n        recurso.motivo_indeferimento = createRecursoDto.motivo_indeferimento;\n      } else {\n        // Se não foi informado, usar o parecer da solicitação\n        recurso.motivo_indeferimento =\n          solicitacao.parecer_semtas || 'Não especificado';\n      }\n\n      // Definir setor responsável\n      if (createRecursoDto.setor_responsavel_id) {\n        recurso.setor_responsavel_id = createRecursoDto.setor_responsavel_id;\n      } else {\n        // Por padrão, usar o mesmo setor da unidade da solicitação\n        recurso.setor_responsavel_id = solicitacao.unidade_id;\n      }\n\n      // Salvar o recurso\n      const savedRecurso = await manager.save(recurso);\n\n      // Criar histórico\n      const historico = new RecursoHistorico();\n      historico.recurso_id = savedRecurso.id;\n      historico.status_anterior = ''; // Usando string vazia em vez de null\n      historico.status_novo = StatusRecurso.PENDENTE;\n      historico.usuario_id = user.id;\n      historico.observacao = 'Recurso criado';\n\n      await manager.save(historico);\n\n      // Retornar o recurso salvo\n      const result = await this.findById(savedRecurso.id);\n      return this.mapToDto(result);\n    });\n  }\n\n  /**\n   * Inicia a análise de um recurso\n   */\n  async iniciarAnalise(id: string, user: any): Promise<RecursoResponseDto> {\n    return this.connection.transaction(async (manager) => {\n      // Buscar o recurso\n      const recurso = await this.findById(id);\n\n      // Verificar se o usuário tem permissão\n      if (![ROLES.ADMIN, ROLES.GESTOR, ROLES.TECNICO].includes(user.role)) {\n        throw new UnauthorizedException(\n          'Você não tem permissão para analisar recursos',\n        );\n      }\n\n      // Verificar se o recurso está pendente\n      if (recurso.status !== StatusRecurso.PENDENTE) {\n        throw new BadRequestException(\n          'Só é possível iniciar análise de recursos pendentes',\n        );\n      }\n\n      // Atualizar o status\n      recurso.prepararAlteracaoStatus(\n        StatusRecurso.EM_ANALISE,\n        user.id,\n        'Análise iniciada',\n        user.ip || '0.0.0.0',\n      );\n\n      recurso.analista_id = user.id;\n\n      // Salvar o recurso\n      await manager.save(recurso);\n\n      // Retornar o recurso atualizado\n      const result = await this.findById(id);\n      return this.mapToDto(result);\n    });\n  }\n\n  /**\n   * Analisa um recurso (deferir/indeferir)\n   */\n  async analisarRecurso(\n    id: string,\n    analisarRecursoDto: AnalisarRecursoDto,\n    user: any,\n  ): Promise<RecursoResponseDto> {\n    return this.connection.transaction(async (manager) => {\n      // Buscar o recurso\n      const recurso = await this.findById(id);\n\n      // Verificar se o usuário tem permissão\n      if (![ROLES.ADMIN, ROLES.GESTOR, ROLES.TECNICO].includes(user.role)) {\n        throw new UnauthorizedException(\n          'Você não tem permissão para analisar recursos',\n        );\n      }\n\n      // Verificar se o recurso está em análise\n      if (recurso.status !== StatusRecurso.EM_ANALISE) {\n        throw new BadRequestException(\n          'Só é possível concluir análise de recursos em análise',\n        );\n      }\n\n      // Atualizar o recurso\n      recurso.prepararAlteracaoStatus(\n        analisarRecursoDto.status,\n        user.id,\n        analisarRecursoDto.observacao || 'Análise concluída',\n        user.ip || '0.0.0.0',\n      );\n\n      recurso.parecer = analisarRecursoDto.parecer;\n      recurso.data_analise = new Date();\n\n      // Se o recurso foi deferido, reabrir a solicitação\n      if (analisarRecursoDto.status === StatusRecurso.DEFERIDO) {\n        const solicitacao = await this.solicitacaoRepository.findOne({\n          where: { id: recurso.solicitacao_id },\n        });\n\n        if (solicitacao) {\n          solicitacao.prepararAlteracaoStatus(\n            StatusSolicitacao.APROVADA,\n            user.id,\n            'Solicitação aprovada via recurso',\n            user.ip || '0.0.0.0',\n          );\n\n          solicitacao.aprovador_id = user.id;\n          solicitacao.data_aprovacao = new Date();\n\n          await manager.save(solicitacao);\n        }\n      }\n\n      // Salvar o recurso\n      await manager.save(recurso);\n\n      // Retornar o recurso atualizado\n      const result = await this.findById(id);\n      return this.mapToDto(result);\n    });\n  }\n\n  /**\n   * Cancela um recurso\n   */\n  async cancelarRecurso(id: string, user: any): Promise<RecursoResponseDto> {\n    return this.connection.transaction(async (manager) => {\n      // Buscar o recurso\n      const recurso = await this.findById(id);\n\n      // Verificar se o usuário tem permissão\n      if (![ROLES.ADMIN, ROLES.GESTOR].includes(user.role)) {\n        throw new UnauthorizedException(\n          'Você não tem permissão para cancelar recursos',\n        );\n      }\n\n      // Verificar se o recurso pode ser cancelado\n      if (\n        [StatusRecurso.DEFERIDO, StatusRecurso.INDEFERIDO].includes(\n          recurso.status,\n        )\n      ) {\n        throw new BadRequestException(\n          'Não é possível cancelar um recurso já analisado',\n        );\n      }\n\n      // Atualizar o status\n      recurso.prepararAlteracaoStatus(\n        StatusRecurso.CANCELADO,\n        user.id,\n        'Recurso cancelado pelo usuário',\n        user.ip || '0.0.0.0',\n      );\n\n      // Salvar o recurso\n      await manager.save(recurso);\n\n      // Retornar o recurso atualizado\n      const result = await this.findById(id);\n      return this.mapToDto(result);\n    });\n  }\n\n  /**\n   * Lista o histórico de um recurso\n   */\n  async getHistorico(recursoId: string) {\n    // Verificar se o recurso existe\n    await this.findById(recursoId);\n\n    // Buscar o histórico\n    return this.historicoRepository.find({\n      where: { recurso_id: recursoId },\n      order: { created_at: 'DESC' },\n      relations: ['usuario'],\n    });\n  }\n\n  /**\n   * Mapeia uma entidade Recurso para um DTO de resposta\n   */\n  private mapToDto(recurso: Recurso): RecursoResponseDto {\n    const dto = new RecursoResponseDto();\n    dto.id = recurso.id;\n    dto.solicitacao_id = recurso.solicitacao_id;\n\n    if (recurso.solicitacao) {\n      dto.protocolo_solicitacao = recurso.solicitacao.protocolo;\n\n      if (recurso.solicitacao.beneficiario) {\n        dto.nome_beneficiario = recurso.solicitacao.beneficiario.nome;\n      }\n    }\n\n    dto.justificativa = recurso.justificativa;\n    dto.status = recurso.status;\n    dto.created_at = recurso.created_at;\n    dto.data_analise = recurso.data_analise;\n    dto.analista_id = recurso.analista_id;\n\n    if (recurso.analista) {\n      dto.nome_analista = recurso.analista.nome;\n    }\n\n    dto.parecer = recurso.parecer;\n    dto.documentos_adicionais = recurso.documentos_adicionais;\n    dto.motivo_indeferimento = recurso.motivo_indeferimento;\n    dto.prazo_analise = recurso.prazo_analise;\n    dto.setor_responsavel_id = recurso.setor_responsavel_id;\n\n    if (recurso.setor_responsavel) {\n      dto.nome_setor_responsavel = recurso.setor_responsavel.nome;\n    }\n\n    dto.created_at = recurso.created_at;\n    dto.updated_at = recurso.updated_at;\n\n    return dto;\n  }\n}\n"],"version":3}