dd2ff69b469b6837b62397a111736dbf
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegradorResponseDto = void 0;
const swagger_1 = require("@nestjs/swagger");
/**
 * DTO para resposta padronizada de informações de integrador.
 */
class IntegradorResponseDto {
    id;
    nome;
    descricao;
    responsavel;
    emailContato;
    telefoneContato;
    ativo;
    permissoesEscopo;
    ipPermitidos;
    ultimoAcesso;
    dataCriacao;
    dataAtualizacao;
    constructor(integrador) {
        this.id = integrador.id;
        this.nome = integrador.nome;
        this.descricao = integrador.descricao;
        this.responsavel = integrador.responsavel;
        this.emailContato = integrador.emailContato;
        this.telefoneContato = integrador.telefoneContato;
        this.ativo = integrador.ativo;
        this.permissoesEscopo = integrador.permissoesEscopo;
        this.ipPermitidos = integrador.ipPermitidos;
        this.ultimoAcesso = integrador.ultimoAcesso;
        this.dataCriacao = integrador.dataCriacao;
        this.dataAtualizacao = integrador.dataAtualizacao;
    }
}
exports.IntegradorResponseDto = IntegradorResponseDto;
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Identificador único do integrador' }),
    __metadata("design:type", String)
], IntegradorResponseDto.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Nome do integrador' }),
    __metadata("design:type", String)
], IntegradorResponseDto.prototype, "nome", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Descrição do integrador' }),
    __metadata("design:type", String)
], IntegradorResponseDto.prototype, "descricao", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Nome do responsável pelo integrador' }),
    __metadata("design:type", String)
], IntegradorResponseDto.prototype, "responsavel", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Email de contato do responsável' }),
    __metadata("design:type", String)
], IntegradorResponseDto.prototype, "emailContato", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Telefone de contato do responsável' }),
    __metadata("design:type", String)
], IntegradorResponseDto.prototype, "telefoneContato", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Status de ativação do integrador' }),
    __metadata("design:type", Boolean)
], IntegradorResponseDto.prototype, "ativo", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Lista de permissões de escopo disponíveis',
    }),
    __metadata("design:type", Array)
], IntegradorResponseDto.prototype, "permissoesEscopo", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Lista de endereços IP permitidos' }),
    __metadata("design:type", Array)
], IntegradorResponseDto.prototype, "ipPermitidos", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Data do último acesso' }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], IntegradorResponseDto.prototype, "ultimoAcesso", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Data de criação do registro' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], IntegradorResponseDto.prototype, "dataCriacao", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Data da última atualização do registro' }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], IntegradorResponseDto.prototype, "dataAtualizacao", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXGludGVncmFkb3JcXGR0b1xcaW50ZWdyYWRvci1yZXNwb25zZS5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUFtRTtBQUduRTs7R0FFRztBQUNILE1BQWEscUJBQXFCO0lBRWhDLEVBQUUsQ0FBUztJQUdYLElBQUksQ0FBUztJQUdiLFNBQVMsQ0FBVTtJQUduQixXQUFXLENBQVU7SUFHckIsWUFBWSxDQUFVO0lBR3RCLGVBQWUsQ0FBVTtJQUd6QixLQUFLLENBQVU7SUFLZixnQkFBZ0IsQ0FBWTtJQUc1QixZQUFZLENBQVk7SUFHeEIsWUFBWSxDQUFRO0lBR3BCLFdBQVcsQ0FBTztJQUdsQixlQUFlLENBQU87SUFFdEIsWUFBWSxVQUFzQjtRQUNoQyxJQUFJLENBQUMsRUFBRSxHQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQztRQUN0QyxJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUM7UUFDMUMsSUFBSSxDQUFDLFlBQVksR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDO1FBQzVDLElBQUksQ0FBQyxlQUFlLEdBQUcsVUFBVSxDQUFDLGVBQWUsQ0FBQztRQUNsRCxJQUFJLENBQUMsS0FBSyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNwRCxJQUFJLENBQUMsWUFBWSxHQUFHLFVBQVUsQ0FBQyxZQUFZLENBQUM7UUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDO1FBQzVDLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQztRQUMxQyxJQUFJLENBQUMsZUFBZSxHQUFHLFVBQVUsQ0FBQyxlQUFlLENBQUM7SUFDcEQsQ0FBQztDQUNGO0FBckRELHNEQXFEQztBQW5EQztJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxtQ0FBbUMsRUFBRSxDQUFDOztpREFDdkQ7QUFHWDtJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxvQkFBb0IsRUFBRSxDQUFDOzttREFDdEM7QUFHYjtJQURDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUseUJBQXlCLEVBQUUsQ0FBQzs7d0RBQzdDO0FBR25CO0lBREMsSUFBQSw2QkFBbUIsRUFBQyxFQUFFLFdBQVcsRUFBRSxxQ0FBcUMsRUFBRSxDQUFDOzswREFDdkQ7QUFHckI7SUFEQyxJQUFBLDZCQUFtQixFQUFDLEVBQUUsV0FBVyxFQUFFLGlDQUFpQyxFQUFFLENBQUM7OzJEQUNsRDtBQUd0QjtJQURDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUsb0NBQW9DLEVBQUUsQ0FBQzs7OERBQ2xEO0FBR3pCO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLGtDQUFrQyxFQUFFLENBQUM7O29EQUNsRDtBQUtmO0lBSEMsSUFBQSw2QkFBbUIsRUFBQztRQUNuQixXQUFXLEVBQUUsMkNBQTJDO0tBQ3pELENBQUM7OytEQUMwQjtBQUc1QjtJQURDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUsa0NBQWtDLEVBQUUsQ0FBQzs7MkRBQ2pEO0FBR3hCO0lBREMsSUFBQSw2QkFBbUIsRUFBQyxFQUFFLFdBQVcsRUFBRSx1QkFBdUIsRUFBRSxDQUFDO2tEQUMvQyxJQUFJLG9CQUFKLElBQUk7MkRBQUM7QUFHcEI7SUFEQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxXQUFXLEVBQUUsNkJBQTZCLEVBQUUsQ0FBQztrREFDL0MsSUFBSSxvQkFBSixJQUFJOzBEQUFDO0FBR2xCO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLHdDQUF3QyxFQUFFLENBQUM7a0RBQ3RELElBQUksb0JBQUosSUFBSTs4REFBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGV1ZHJlXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvamV0b3NcXHBnYmVuXFxwZ2Jlbi1zZXJ2ZXJcXHNyY1xcbW9kdWxlc1xcaW50ZWdyYWRvclxcZHRvXFxpbnRlZ3JhZG9yLXJlc3BvbnNlLmR0by50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQcm9wZXJ0eSwgQXBpUHJvcGVydHlPcHRpb25hbCB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XG5pbXBvcnQgeyBJbnRlZ3JhZG9yIH0gZnJvbSAnLi4vLi4vLi4vZW50aXRpZXMvaW50ZWdyYWRvci5lbnRpdHknO1xuXG4vKipcbiAqIERUTyBwYXJhIHJlc3Bvc3RhIHBhZHJvbml6YWRhIGRlIGluZm9ybWHDp8O1ZXMgZGUgaW50ZWdyYWRvci5cbiAqL1xuZXhwb3J0IGNsYXNzIEludGVncmFkb3JSZXNwb25zZUR0byB7XG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnSWRlbnRpZmljYWRvciDDum5pY28gZG8gaW50ZWdyYWRvcicgfSlcbiAgaWQ6IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ05vbWUgZG8gaW50ZWdyYWRvcicgfSlcbiAgbm9tZTogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHsgZGVzY3JpcHRpb246ICdEZXNjcmnDp8OjbyBkbyBpbnRlZ3JhZG9yJyB9KVxuICBkZXNjcmljYW8/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ05vbWUgZG8gcmVzcG9uc8OhdmVsIHBlbG8gaW50ZWdyYWRvcicgfSlcbiAgcmVzcG9uc2F2ZWw/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ0VtYWlsIGRlIGNvbnRhdG8gZG8gcmVzcG9uc8OhdmVsJyB9KVxuICBlbWFpbENvbnRhdG8/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ1RlbGVmb25lIGRlIGNvbnRhdG8gZG8gcmVzcG9uc8OhdmVsJyB9KVxuICB0ZWxlZm9uZUNvbnRhdG8/OiBzdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdTdGF0dXMgZGUgYXRpdmHDp8OjbyBkbyBpbnRlZ3JhZG9yJyB9KVxuICBhdGl2bzogYm9vbGVhbjtcblxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7XG4gICAgZGVzY3JpcHRpb246ICdMaXN0YSBkZSBwZXJtaXNzw7VlcyBkZSBlc2NvcG8gZGlzcG9uw612ZWlzJyxcbiAgfSlcbiAgcGVybWlzc29lc0VzY29wbz86IHN0cmluZ1tdO1xuXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHsgZGVzY3JpcHRpb246ICdMaXN0YSBkZSBlbmRlcmXDp29zIElQIHBlcm1pdGlkb3MnIH0pXG4gIGlwUGVybWl0aWRvcz86IHN0cmluZ1tdO1xuXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHsgZGVzY3JpcHRpb246ICdEYXRhIGRvIMO6bHRpbW8gYWNlc3NvJyB9KVxuICB1bHRpbW9BY2Vzc28/OiBEYXRlO1xuXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnRGF0YSBkZSBjcmlhw6fDo28gZG8gcmVnaXN0cm8nIH0pXG4gIGRhdGFDcmlhY2FvOiBEYXRlO1xuXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnRGF0YSBkYSDDumx0aW1hIGF0dWFsaXphw6fDo28gZG8gcmVnaXN0cm8nIH0pXG4gIGRhdGFBdHVhbGl6YWNhbzogRGF0ZTtcblxuICBjb25zdHJ1Y3RvcihpbnRlZ3JhZG9yOiBJbnRlZ3JhZG9yKSB7XG4gICAgdGhpcy5pZCA9IGludGVncmFkb3IuaWQ7XG4gICAgdGhpcy5ub21lID0gaW50ZWdyYWRvci5ub21lO1xuICAgIHRoaXMuZGVzY3JpY2FvID0gaW50ZWdyYWRvci5kZXNjcmljYW87XG4gICAgdGhpcy5yZXNwb25zYXZlbCA9IGludGVncmFkb3IucmVzcG9uc2F2ZWw7XG4gICAgdGhpcy5lbWFpbENvbnRhdG8gPSBpbnRlZ3JhZG9yLmVtYWlsQ29udGF0bztcbiAgICB0aGlzLnRlbGVmb25lQ29udGF0byA9IGludGVncmFkb3IudGVsZWZvbmVDb250YXRvO1xuICAgIHRoaXMuYXRpdm8gPSBpbnRlZ3JhZG9yLmF0aXZvO1xuICAgIHRoaXMucGVybWlzc29lc0VzY29wbyA9IGludGVncmFkb3IucGVybWlzc29lc0VzY29wbztcbiAgICB0aGlzLmlwUGVybWl0aWRvcyA9IGludGVncmFkb3IuaXBQZXJtaXRpZG9zO1xuICAgIHRoaXMudWx0aW1vQWNlc3NvID0gaW50ZWdyYWRvci51bHRpbW9BY2Vzc287XG4gICAgdGhpcy5kYXRhQ3JpYWNhbyA9IGludGVncmFkb3IuZGF0YUNyaWFjYW87XG4gICAgdGhpcy5kYXRhQXR1YWxpemFjYW8gPSBpbnRlZ3JhZG9yLmRhdGFBdHVhbGl6YWNhbztcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9