{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\relatorios-unificado\\strategies\\pdf.strategy.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAoD;AAEpD,oDAAiC;AACjC,uCAAyB;AACzB,uEAAkE;AAElE;;;;GAIG;AAEI,IAAM,WAAW,mBAAjB,MAAM,WAAW;IAGO;IAFZ,MAAM,GAAG,IAAI,eAAM,CAAC,aAAW,CAAC,IAAI,CAAC,CAAC;IAEvD,YAA6B,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAEnE;;;;;;OAMG;IACH,KAAK,CAAC,KAAK,CAAC,IAAY,EAAE,KAAU,EAAE,MAAW;QAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kCAAkC,IAAI,EAAE,CAAC,CAAC;QAE1D,2BAA2B;QAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACxD,eAAe,EACf,KAAK,CACN,CAAC;QAEF,IAAI,CAAC;YACH,sBAAsB;YACtB,MAAM,GAAG,GAAG,IAAI,gBAAW,CAAC;gBAC1B,MAAM,EAAE,EAAE;gBACV,IAAI,EAAE,IAAI;aACX,CAAC,CAAC;YAEH,+CAA+C;YAC/C,MAAM,MAAM,GAAG,EAAE,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;YAClD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEjB,mBAAmB;YACnB,GAAG;iBACA,QAAQ,CAAC,EAAE,CAAC;iBACZ,IAAI,CAAC,gBAAgB,CAAC;iBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACnD,GAAG,CAAC,QAAQ,EAAE,CAAC;YAEf,oBAAoB;YACpB,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACxC,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAkB,CAC/D,OAAO,CACR,CAAC;gBACF,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBACrE,GAAG;qBACA,QAAQ,CAAC,EAAE,CAAC;qBACZ,IAAI,CAAC,WAAW,CAAC;qBACjB,IAAI,CAAC,YAAY,UAAU,MAAM,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;YAED,6DAA6D;YAC7D,QAAQ,IAAI,EAAE,CAAC;gBACb,KAAK,uBAAuB;oBAC1B,MAAM,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBACzD,MAAM;gBACR,KAAK,yBAAyB;oBAC5B,MAAM,IAAI,CAAC,0BAA0B,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBAC1D,MAAM;gBACR,KAAK,0BAA0B;oBAC7B,MAAM,IAAI,CAAC,2BAA2B,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBAC3D,MAAM;gBACR;oBACE,GAAG;yBACA,QAAQ,CAAC,EAAE,CAAC;yBACZ,IAAI,CAAC,WAAW,CAAC;yBACjB,IAAI,CAAC,oCAAoC,CAAC,CAAC;YAClD,CAAC;YAED,uCAAuC;YACvC,MAAM,SAAS,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC;YAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACpB,GAAG;qBACA,QAAQ,CAAC,CAAC,CAAC;qBACX,IAAI,CAAC,WAAW,CAAC;qBACjB,IAAI,CACH,cAAc,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,SAAS,EAAE,EACpF,EAAE,EACF,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,EACpB,EAAE,KAAK,EAAE,QAAQ,EAAE,CACpB,CAAC;YACN,CAAC;YAED,sBAAsB;YACtB,GAAG,CAAC,GAAG,EAAE,CAAC;YAEV,mCAAmC;YACnC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;oBACvB,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;wBACjE,OAAO,CAAC,MAAM,CAAC,CAAC;oBAClB,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,MAAM,CAAC,KAAK,CAAC,CAAC;oBAChB,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;oBAC3B,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAEnE,mDAAmD;YACnD,IAAI,CAAC;gBACH,IAAI,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;oBAChC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAC,OAAO,YAAY,EAAE,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,sCAAsC,YAAY,CAAC,OAAO,EAAE,CAC7D,CAAC;YACJ,CAAC;YAED,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;OAIG;IACK,SAAS,CAAC,IAAY;QAC5B,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,uBAAuB;gBAC1B,OAAO,oCAAoC,CAAC;YAC9C,KAAK,yBAAyB;gBAC5B,OAAO,sCAAsC,CAAC;YAChD,KAAK,0BAA0B;gBAC7B,OAAO,uCAAuC,CAAC;YACjD;gBACE,OAAO,WAAW,CAAC;QACvB,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACK,KAAK,CAAC,yBAAyB,CACrC,GAAuB,EACvB,KAAY,EACZ,MAAW;QAEX,gCAAgC;QAChC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;YAChC,WAAW;YACX,cAAc;YACd,WAAW;YACX,SAAS;YACT,gBAAgB;SACjB,CAAC,CAAC;QAEH,6BAA6B;QAC7B,IAAI,WAAW,GAAG,GAAG,CAAC;QACtB,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAE3C,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE,CAAC;YAChC,6CAA6C;YAC7C,IAAI,WAAW,GAAG,YAAY,EAAE,CAAC;gBAC/B,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,WAAW,GAAG,GAAG,CAAC;gBAClB,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;oBAChC,WAAW;oBACX,cAAc;oBACd,WAAW;oBACX,SAAS;oBACT,gBAAgB;iBACjB,CAAC,CAAC;YACL,CAAC;YAED,iBAAiB;YACjB,GAAG;iBACA,IAAI,CAAC,WAAW,CAAC;iBACjB,QAAQ,CAAC,EAAE,CAAC;iBACZ,IAAI,CAAC,WAAW,CAAC,SAAS,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;iBACjE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,IAAI,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;gBAC/D,KAAK,EAAE,GAAG;aACX,CAAC;iBACD,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,IAAI,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;gBACjE,KAAK,EAAE,GAAG;aACX,CAAC;iBACD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,IAAI,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;gBAC1D,KAAK,EAAE,GAAG;aACX,CAAC;iBACD,IAAI,CACH,WAAW,CAAC,cAAc;gBACxB,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC;gBAClE,CAAC,CAAC,KAAK,EACT,GAAG,EACH,WAAW,CACZ,CAAC;YAEJ,WAAW,IAAI,EAAE,CAAC;QACpB,CAAC;QAED,mBAAmB;QACnB,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChB,GAAG;aACA,IAAI,CAAC,gBAAgB,CAAC;aACtB,QAAQ,CAAC,EAAE,CAAC;aACZ,IAAI,CAAC,mCAAmC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACK,KAAK,CAAC,0BAA0B,CACtC,GAAuB,EACvB,KAAU,EACV,MAAW;QAEX,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtC,mBAAmB;QACnB,GAAG;aACA,IAAI,CAAC,gBAAgB,CAAC;aACtB,QAAQ,CAAC,EAAE,CAAC;aACZ,IAAI,CAAC,oBAAoB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACnD,GAAG,CAAC,QAAQ,EAAE,CAAC;QAEf,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,KAAK,MAAM,MAAM,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACxC,UAAU,IAAI,UAAU,CAAC;YACzB,GAAG;iBACA,IAAI,CAAC,WAAW,CAAC;iBACjB,QAAQ,CAAC,EAAE,CAAC;iBACZ,IAAI,CAAC,GAAG,MAAM,KAAK,UAAU,eAAe,CAAC,CAAC;QACnD,CAAC;QAED,GAAG,CAAC,QAAQ,EAAE,CAAC;QACf,GAAG;aACA,IAAI,CAAC,gBAAgB,CAAC;aACtB,QAAQ,CAAC,EAAE,CAAC;aACZ,IAAI,CAAC,gBAAgB,UAAU,eAAe,CAAC,CAAC;QACnD,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEhB,oCAAoC;QACpC,KAAK,MAAM,MAAM,IAAI,UAAU,EAAE,CAAC;YAChC,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,GAAG;iBACA,IAAI,CAAC,gBAAgB,CAAC;iBACtB,QAAQ,CAAC,EAAE,CAAC;iBACZ,IAAI,CAAC,4BAA4B,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACnE,GAAG,CAAC,QAAQ,EAAE,CAAC;YAEf,gCAAgC;YAChC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBAChC,WAAW;gBACX,cAAc;gBACd,WAAW;gBACX,SAAS;gBACT,eAAe;aAChB,CAAC,CAAC;YAEH,6BAA6B;YAC7B,IAAI,WAAW,GAAG,GAAG,CAAC;YACtB,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAE3C,KAAK,MAAM,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;gBACxC,6CAA6C;gBAC7C,IAAI,WAAW,GAAG,YAAY,EAAE,CAAC;oBAC/B,GAAG,CAAC,OAAO,EAAE,CAAC;oBACd,WAAW,GAAG,GAAG,CAAC;oBAClB,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;wBAChC,WAAW;wBACX,cAAc;wBACd,WAAW;wBACX,SAAS;wBACT,eAAe;qBAChB,CAAC,CAAC;gBACL,CAAC;gBAED,iBAAiB;gBACjB,GAAG;qBACA,IAAI,CAAC,WAAW,CAAC;qBACjB,QAAQ,CAAC,EAAE,CAAC;qBACZ,IAAI,CAAC,WAAW,CAAC,SAAS,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;qBACjE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,IAAI,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;oBAC/D,KAAK,EAAE,GAAG;iBACX,CAAC;qBACD,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,IAAI,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;oBACjE,KAAK,EAAE,GAAG;iBACX,CAAC;qBACD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,IAAI,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE;oBAC1D,KAAK,EAAE,GAAG;iBACX,CAAC;qBACD,IAAI,CACH,WAAW,CAAC,aAAa;oBACvB,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC;oBACjE,CAAC,CAAC,KAAK,EACT,GAAG,EACH,WAAW,CACZ,CAAC;gBAEJ,WAAW,IAAI,EAAE,CAAC;YACpB,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACK,KAAK,CAAC,2BAA2B,CACvC,GAAuB,EACvB,KAAY,EACZ,MAAW;QAEX,gCAAgC;QAChC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;YAChC,SAAS;YACT,gBAAgB;YAChB,WAAW;YACX,WAAW;YACX,gBAAgB;SACjB,CAAC,CAAC;QAEH,6BAA6B;QAC7B,IAAI,WAAW,GAAG,GAAG,CAAC;QACtB,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAE3C,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,MAAM,aAAa,GACjB,IAAI,CAAC,iBAAiB,GAAG,CAAC;gBACxB,CAAC,CAAC,CACE,CAAC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACrD,GAAG,CACJ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,MAAM,CAAC;YAEb,iBAAiB;YACjB,GAAG;iBACA,IAAI,CAAC,WAAW,CAAC;iBACjB,QAAQ,CAAC,EAAE,CAAC;iBACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;iBACjE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE;gBACzD,KAAK,EAAE,EAAE;aACV,CAAC;iBACD,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE;gBAC7D,KAAK,EAAE,EAAE;aACV,CAAC;iBACD,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE;gBAC7D,KAAK,EAAE,EAAE;aACV,CAAC;iBACD,IAAI,CAAC,GAAG,aAAa,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;YAE9D,WAAW,IAAI,EAAE,CAAC;QACpB,CAAC;QAED,mBAAmB;QACnB,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CACzB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YACZ,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC;YACpC,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,qBAAqB,CAAC;YAC5C,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,qBAAqB,CAAC;YAC5C,OAAO,GAAG,CAAC;QACb,CAAC,EACD,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CACzC,CAAC;QAEF,MAAM,SAAS,GACb,MAAM,CAAC,KAAK,GAAG,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,MAAM,CAAC;QAEb,GAAG;aACA,IAAI,CAAC,gBAAgB,CAAC;aACtB,QAAQ,CAAC,EAAE,CAAC;aACZ,IAAI,CAAC,gBAAgB,MAAM,CAAC,KAAK,eAAe,CAAC,CAAC;QACrD,GAAG;aACA,IAAI,CAAC,WAAW,CAAC;aACjB,QAAQ,CAAC,EAAE,CAAC;aACZ,IAAI,CACH,cAAc,MAAM,CAAC,SAAS,iBAAiB,MAAM,CAAC,SAAS,yBAAyB,SAAS,GAAG,CACrG,CAAC;IACN,CAAC;IAED;;;;OAIG;IACK,uBAAuB,CAC7B,GAAuB,EACvB,OAAiB;QAEjB,MAAM,CAAC,GAAG,GAAG,CAAC;QAEd,8BAA8B;QAC9B,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1D,+BAA+B;QAC/B,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACvB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAExC,uDAAuD;QACvD,MAAM,QAAQ,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAE1C,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAChC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,uCAAuC;QACvC,GAAG;aACA,MAAM,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;aACnC,MAAM,EAAE,CAAC;IACd,CAAC;CACF,CAAA;AApbY,kCAAW;sBAAX,WAAW;IADvB,IAAA,mBAAU,GAAE;yDAIoC,qCAAgB,oBAAhB,qCAAgB;GAHpD,WAAW,CAobvB","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\relatorios-unificado\\strategies\\pdf.strategy.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\nimport { RelatorioStrategy } from '../interfaces/relatorio-strategy.interface';\nimport PDFDocument from 'pdfkit';\nimport * as fs from 'fs';\nimport { TempFilesService } from '../services/temp-files.service';\n\n/**\n * Estratégia de geração de relatórios em formato PDF\n *\n * Implementa a geração de relatórios em formato PDF usando PDFKit\n */\n@Injectable()\nexport class PdfStrategy implements RelatorioStrategy {\n  private readonly logger = new Logger(PdfStrategy.name);\n\n  constructor(private readonly tempFilesService: TempFilesService) {}\n\n  /**\n   * Gera um relatório em formato PDF\n   * @param tipo Tipo de relatório\n   * @param dados Dados do relatório\n   * @param opcoes Opções de configuração\n   * @returns Buffer contendo o PDF gerado\n   */\n  async gerar(tipo: string, dados: any, opcoes: any): Promise<Buffer> {\n    this.logger.log(`Gerando relatório PDF do tipo: ${tipo}`);\n\n    // Criar arquivo temporário\n    const tempFilePath = this.tempFilesService.getTempFilePath(\n      'relatorio-pdf',\n      'pdf',\n    );\n\n    try {\n      // Criar documento PDF\n      const doc = new PDFDocument({\n        margin: 50,\n        size: 'A4',\n      });\n\n      // Conectar stream do PDF ao arquivo temporário\n      const stream = fs.createWriteStream(tempFilePath);\n      doc.pipe(stream);\n\n      // Adicionar título\n      doc\n        .fontSize(20)\n        .font('Helvetica-Bold')\n        .text(this.getTitulo(tipo), { align: 'center' });\n      doc.moveDown();\n\n      // Adicionar período\n      if (opcoes.dataInicio && opcoes.dataFim) {\n        const dataInicio = new Date(opcoes.dataInicio).toLocaleDateString(\n          'pt-BR',\n        );\n        const dataFim = new Date(opcoes.dataFim).toLocaleDateString('pt-BR');\n        doc\n          .fontSize(12)\n          .font('Helvetica')\n          .text(`Período: ${dataInicio} a ${dataFim}`, { align: 'center' });\n        doc.moveDown(2);\n      }\n\n      // Adicionar conteúdo específico conforme o tipo de relatório\n      switch (tipo) {\n        case 'beneficios-concedidos':\n          await this.gerarBeneficiosConcedidos(doc, dados, opcoes);\n          break;\n        case 'solicitacoes-por-status':\n          await this.gerarSolicitacoesPorStatus(doc, dados, opcoes);\n          break;\n        case 'atendimentos-por-unidade':\n          await this.gerarAtendimentosPorUnidade(doc, dados, opcoes);\n          break;\n        default:\n          doc\n            .fontSize(12)\n            .font('Helvetica')\n            .text('Tipo de relatório não implementado');\n      }\n\n      // Adicionar rodapé com data de geração\n      const pageCount = doc.bufferedPageRange().count;\n      for (let i = 0; i < pageCount; i++) {\n        doc.switchToPage(i);\n        doc\n          .fontSize(8)\n          .font('Helvetica')\n          .text(\n            `Gerado em: ${new Date().toLocaleString('pt-BR')} - Página ${i + 1} de ${pageCount}`,\n            50,\n            doc.page.height - 50,\n            { align: 'center' },\n          );\n      }\n\n      // Finalizar documento\n      doc.end();\n\n      // Aguardar finalização da gravação\n      return new Promise((resolve, reject) => {\n        stream.on('finish', () => {\n          try {\n            const buffer = this.tempFilesService.readAndRemove(tempFilePath);\n            resolve(buffer);\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        stream.on('error', (error) => {\n          reject(error);\n        });\n      });\n    } catch (error) {\n      this.logger.error(`Erro ao gerar relatório PDF: ${error.message}`);\n\n      // Tentar limpar arquivo temporário em caso de erro\n      try {\n        if (fs.existsSync(tempFilePath)) {\n          fs.unlinkSync(tempFilePath);\n        }\n      } catch (cleanupError) {\n        this.logger.warn(\n          `Erro ao limpar arquivo temporário: ${cleanupError.message}`,\n        );\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Retorna o tipo MIME para arquivos PDF\n   */\n  getMimeType(): string {\n    return 'application/pdf';\n  }\n\n  /**\n   * Retorna a extensão para arquivos PDF\n   */\n  getExtensao(): string {\n    return 'pdf';\n  }\n\n  /**\n   * Retorna o título do relatório com base no tipo\n   * @param tipo Tipo de relatório\n   * @returns Título formatado\n   */\n  private getTitulo(tipo: string): string {\n    switch (tipo) {\n      case 'beneficios-concedidos':\n        return 'Relatório de Benefícios Concedidos';\n      case 'solicitacoes-por-status':\n        return 'Relatório de Solicitações por Status';\n      case 'atendimentos-por-unidade':\n        return 'Relatório de Atendimentos por Unidade';\n      default:\n        return 'Relatório';\n    }\n  }\n\n  /**\n   * Gera conteúdo para relatório de benefícios concedidos\n   * @param doc Documento PDF\n   * @param dados Dados para o relatório\n   * @param opcoes Opções de configuração\n   */\n  private async gerarBeneficiosConcedidos(\n    doc: PDFKit.PDFDocument,\n    dados: any[],\n    opcoes: any,\n  ): Promise<void> {\n    // Adicionar cabeçalho da tabela\n    this.desenharCabecalhoTabela(doc, [\n      'Protocolo',\n      'Beneficiário',\n      'Benefício',\n      'Unidade',\n      'Data Liberação',\n    ]);\n\n    // Adicionar linhas da tabela\n    let alturaLinha = 160;\n    const alturaMaxima = doc.page.height - 100;\n\n    for (const solicitacao of dados) {\n      // Verificar se precisa adicionar nova página\n      if (alturaLinha > alturaMaxima) {\n        doc.addPage();\n        alturaLinha = 100;\n        this.desenharCabecalhoTabela(doc, [\n          'Protocolo',\n          'Beneficiário',\n          'Benefício',\n          'Unidade',\n          'Data Liberação',\n        ]);\n      }\n\n      // Desenhar linha\n      doc\n        .font('Helvetica')\n        .fontSize(10)\n        .text(solicitacao.protocolo || '', 50, alturaLinha, { width: 80 })\n        .text(solicitacao.beneficiario?.nome || 'N/A', 130, alturaLinha, {\n          width: 150,\n        })\n        .text(solicitacao.tipo_beneficio?.nome || 'N/A', 280, alturaLinha, {\n          width: 100,\n        })\n        .text(solicitacao.unidade?.nome || 'N/A', 380, alturaLinha, {\n          width: 100,\n        })\n        .text(\n          solicitacao.data_liberacao\n            ? new Date(solicitacao.data_liberacao).toLocaleDateString('pt-BR')\n            : 'N/A',\n          480,\n          alturaLinha,\n        );\n\n      alturaLinha += 20;\n    }\n\n    // Adicionar resumo\n    doc.moveDown(2);\n    doc\n      .font('Helvetica-Bold')\n      .fontSize(12)\n      .text(`Total de benefícios concedidos: ${dados.length}`);\n  }\n\n  /**\n   * Gera conteúdo para relatório de solicitações por status\n   * @param doc Documento PDF\n   * @param dados Dados para o relatório\n   * @param opcoes Opções de configuração\n   */\n  private async gerarSolicitacoesPorStatus(\n    doc: PDFKit.PDFDocument,\n    dados: any,\n    opcoes: any,\n  ): Promise<void> {\n    const statusList = Object.keys(dados);\n\n    // Adicionar resumo\n    doc\n      .font('Helvetica-Bold')\n      .fontSize(12)\n      .text('Resumo por Status:', { underline: true });\n    doc.moveDown();\n\n    let totalGeral = 0;\n    for (const status of statusList) {\n      const quantidade = dados[status].length;\n      totalGeral += quantidade;\n      doc\n        .font('Helvetica')\n        .fontSize(10)\n        .text(`${status}: ${quantidade} solicitações`);\n    }\n\n    doc.moveDown();\n    doc\n      .font('Helvetica-Bold')\n      .fontSize(10)\n      .text(`Total Geral: ${totalGeral} solicitações`);\n    doc.moveDown(2);\n\n    // Adicionar detalhamento por status\n    for (const status of statusList) {\n      doc.addPage();\n      doc\n        .font('Helvetica-Bold')\n        .fontSize(14)\n        .text(`Solicitações com Status: ${status}`, { align: 'center' });\n      doc.moveDown();\n\n      // Adicionar cabeçalho da tabela\n      this.desenharCabecalhoTabela(doc, [\n        'Protocolo',\n        'Beneficiário',\n        'Benefício',\n        'Unidade',\n        'Data Abertura',\n      ]);\n\n      // Adicionar linhas da tabela\n      let alturaLinha = 160;\n      const alturaMaxima = doc.page.height - 100;\n\n      for (const solicitacao of dados[status]) {\n        // Verificar se precisa adicionar nova página\n        if (alturaLinha > alturaMaxima) {\n          doc.addPage();\n          alturaLinha = 100;\n          this.desenharCabecalhoTabela(doc, [\n            'Protocolo',\n            'Beneficiário',\n            'Benefício',\n            'Unidade',\n            'Data Abertura',\n          ]);\n        }\n\n        // Desenhar linha\n        doc\n          .font('Helvetica')\n          .fontSize(10)\n          .text(solicitacao.protocolo || '', 50, alturaLinha, { width: 80 })\n          .text(solicitacao.beneficiario?.nome || 'N/A', 130, alturaLinha, {\n            width: 150,\n          })\n          .text(solicitacao.tipo_beneficio?.nome || 'N/A', 280, alturaLinha, {\n            width: 100,\n          })\n          .text(solicitacao.unidade?.nome || 'N/A', 380, alturaLinha, {\n            width: 100,\n          })\n          .text(\n            solicitacao.data_abertura\n              ? new Date(solicitacao.data_abertura).toLocaleDateString('pt-BR')\n              : 'N/A',\n            480,\n            alturaLinha,\n          );\n\n        alturaLinha += 20;\n      }\n    }\n  }\n\n  /**\n   * Gera conteúdo para relatório de atendimentos por unidade\n   * @param doc Documento PDF\n   * @param dados Dados para o relatório\n   * @param opcoes Opções de configuração\n   */\n  private async gerarAtendimentosPorUnidade(\n    doc: PDFKit.PDFDocument,\n    dados: any[],\n    opcoes: any,\n  ): Promise<void> {\n    // Adicionar cabeçalho da tabela\n    this.desenharCabecalhoTabela(doc, [\n      'Unidade',\n      'Total Solicit.',\n      'Liberadas',\n      'Pendentes',\n      'Taxa Aprovação',\n    ]);\n\n    // Adicionar linhas da tabela\n    let alturaLinha = 160;\n    const alturaMaxima = doc.page.height - 100;\n\n    for (const item of dados) {\n      const taxaAprovacao =\n        item.totalSolicitacoes > 0\n          ? (\n              (item.solicitacoesLiberadas / item.totalSolicitacoes) *\n              100\n            ).toFixed(2)\n          : '0.00';\n\n      // Desenhar linha\n      doc\n        .font('Helvetica')\n        .fontSize(10)\n        .text(item.unidade.nome || 'N/A', 50, alturaLinha, { width: 150 })\n        .text(item.totalSolicitacoes.toString(), 200, alturaLinha, {\n          width: 80,\n        })\n        .text(item.solicitacoesLiberadas.toString(), 280, alturaLinha, {\n          width: 80,\n        })\n        .text(item.solicitacoesPendentes.toString(), 360, alturaLinha, {\n          width: 80,\n        })\n        .text(`${taxaAprovacao}%`, 440, alturaLinha, { width: 80 });\n\n      alturaLinha += 20;\n    }\n\n    // Adicionar totais\n    doc.moveDown(2);\n    const totais = dados.reduce(\n      (acc, item) => {\n        acc.total += item.totalSolicitacoes;\n        acc.liberadas += item.solicitacoesLiberadas;\n        acc.pendentes += item.solicitacoesPendentes;\n        return acc;\n      },\n      { total: 0, liberadas: 0, pendentes: 0 },\n    );\n\n    const taxaGeral =\n      totais.total > 0\n        ? ((totais.liberadas / totais.total) * 100).toFixed(2)\n        : '0.00';\n\n    doc\n      .font('Helvetica-Bold')\n      .fontSize(12)\n      .text(`Total Geral: ${totais.total} solicitações`);\n    doc\n      .font('Helvetica')\n      .fontSize(10)\n      .text(\n        `Liberadas: ${totais.liberadas} | Pendentes: ${totais.pendentes} | Taxa de Aprovação: ${taxaGeral}%`,\n      );\n  }\n\n  /**\n   * Desenha o cabeçalho de uma tabela no PDF\n   * @param doc Documento PDF\n   * @param colunas Array com os títulos das colunas\n   */\n  private desenharCabecalhoTabela(\n    doc: PDFKit.PDFDocument,\n    colunas: string[],\n  ): void {\n    const y = 130;\n\n    // Desenhar retângulo de fundo\n    doc.rect(50, y, doc.page.width - 100, 20).fill('#f0f0f0');\n\n    // Desenhar títulos das colunas\n    doc.fillColor('black');\n    doc.font('Helvetica-Bold').fontSize(10);\n\n    // Posicionar cada coluna (ajustar conforme necessário)\n    const posicoes = [50, 130, 280, 380, 480];\n\n    colunas.forEach((coluna, index) => {\n      doc.text(coluna, posicoes[index], y + 5);\n    });\n\n    // Linha horizontal abaixo do cabeçalho\n    doc\n      .moveTo(50, y + 20)\n      .lineTo(doc.page.width - 50, y + 20)\n      .stroke();\n  }\n}\n"],"version":3}