21e5bcc28bce7d0362a54c3ba40f2f8e
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsNotFutureDateConstraint = void 0;
exports.IsNotFutureDate = IsNotFutureDate;
const class_validator_1 = require("class-validator");
/**
 * Validador personalizado que verifica se uma data não é futura
 */
let IsNotFutureDateConstraint = class IsNotFutureDateConstraint {
    validate(date, args) {
        if (!date)
            return true; // Deixar que outras validações (como @IsNotEmpty) lidem com valores nulos
        // Converter para Date se for string
        const dateToValidate = date instanceof Date ? date : new Date(date);
        // Verificar se é uma data válida
        if (isNaN(dateToValidate.getTime())) {
            return false;
        }
        // Verificar se a data não é futura (considerando apenas a data, não a hora)
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        dateToValidate.setHours(0, 0, 0, 0);
        return dateToValidate <= today;
    }
    defaultMessage(args) {
        return 'A data não pode ser futura';
    }
};
exports.IsNotFutureDateConstraint = IsNotFutureDateConstraint;
exports.IsNotFutureDateConstraint = IsNotFutureDateConstraint = __decorate([
    (0, class_validator_1.ValidatorConstraint)({ name: 'isNotFutureDate', async: false })
], IsNotFutureDateConstraint);
/**
 * Decorador personalizado que verifica se uma data não é futura
 * @param validationOptions Opções adicionais para a validação
 */
function IsNotFutureDate(validationOptions) {
    return function (object, propertyName) {
        (0, class_validator_1.registerDecorator)({
            name: 'isNotFutureDate',
            target: object.constructor,
            propertyName: propertyName,
            options: validationOptions,
            constraints: [],
            validator: IsNotFutureDateConstraint,
        });
    };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXHNvbGljaXRhY2FvXFx2YWxpZGF0b3JzXFxpcy1ub3QtZnV0dXJlLWRhdGUudmFsaWRhdG9yLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQXlDQSwwQ0FXQztBQXBERCxxREFNeUI7QUFFekI7O0dBRUc7QUFFSSxJQUFNLHlCQUF5QixHQUEvQixNQUFNLHlCQUF5QjtJQUNwQyxRQUFRLENBQUMsSUFBUyxFQUFFLElBQXlCO1FBQzNDLElBQUksQ0FBQyxJQUFJO1lBQUUsT0FBTyxJQUFJLENBQUMsQ0FBQywwRUFBMEU7UUFFbEcsb0NBQW9DO1FBQ3BDLE1BQU0sY0FBYyxHQUFHLElBQUksWUFBWSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFcEUsaUNBQWlDO1FBQ2pDLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDcEMsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO1FBRUQsNEVBQTRFO1FBQzVFLE1BQU0sS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDekIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMzQixjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXBDLE9BQU8sY0FBYyxJQUFJLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBRUQsY0FBYyxDQUFDLElBQXlCO1FBQ3RDLE9BQU8sNEJBQTRCLENBQUM7SUFDdEMsQ0FBQztDQUNGLENBQUE7QUF2QlksOERBQXlCO29DQUF6Qix5QkFBeUI7SUFEckMsSUFBQSxxQ0FBbUIsRUFBQyxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUM7R0FDbEQseUJBQXlCLENBdUJyQztBQUVEOzs7R0FHRztBQUNILFNBQWdCLGVBQWUsQ0FBQyxpQkFBcUM7SUFDbkUsT0FBTyxVQUFVLE1BQWMsRUFBRSxZQUFvQjtRQUNuRCxJQUFBLG1DQUFpQixFQUFDO1lBQ2hCLElBQUksRUFBRSxpQkFBaUI7WUFDdkIsTUFBTSxFQUFFLE1BQU0sQ0FBQyxXQUFXO1lBQzFCLFlBQVksRUFBRSxZQUFZO1lBQzFCLE9BQU8sRUFBRSxpQkFBaUI7WUFDMUIsV0FBVyxFQUFFLEVBQUU7WUFDZixTQUFTLEVBQUUseUJBQXlCO1NBQ3JDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztBQUNKLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxldWRyZVxcT25lRHJpdmVcXERlc2t0b3BcXFByb2pldG9zXFxwZ2JlblxccGdiZW4tc2VydmVyXFxzcmNcXG1vZHVsZXNcXHNvbGljaXRhY2FvXFx2YWxpZGF0b3JzXFxpcy1ub3QtZnV0dXJlLWRhdGUudmFsaWRhdG9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHJlZ2lzdGVyRGVjb3JhdG9yLFxuICBWYWxpZGF0aW9uT3B0aW9ucyxcbiAgVmFsaWRhdGlvbkFyZ3VtZW50cyxcbiAgVmFsaWRhdG9yQ29uc3RyYWludCxcbiAgVmFsaWRhdG9yQ29uc3RyYWludEludGVyZmFjZSxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcblxuLyoqXG4gKiBWYWxpZGFkb3IgcGVyc29uYWxpemFkbyBxdWUgdmVyaWZpY2Egc2UgdW1hIGRhdGEgbsOjbyDDqSBmdXR1cmFcbiAqL1xuQFZhbGlkYXRvckNvbnN0cmFpbnQoeyBuYW1lOiAnaXNOb3RGdXR1cmVEYXRlJywgYXN5bmM6IGZhbHNlIH0pXG5leHBvcnQgY2xhc3MgSXNOb3RGdXR1cmVEYXRlQ29uc3RyYWludCBpbXBsZW1lbnRzIFZhbGlkYXRvckNvbnN0cmFpbnRJbnRlcmZhY2Uge1xuICB2YWxpZGF0ZShkYXRlOiBhbnksIGFyZ3M6IFZhbGlkYXRpb25Bcmd1bWVudHMpIHtcbiAgICBpZiAoIWRhdGUpIHJldHVybiB0cnVlOyAvLyBEZWl4YXIgcXVlIG91dHJhcyB2YWxpZGHDp8O1ZXMgKGNvbW8gQElzTm90RW1wdHkpIGxpZGVtIGNvbSB2YWxvcmVzIG51bG9zXG5cbiAgICAvLyBDb252ZXJ0ZXIgcGFyYSBEYXRlIHNlIGZvciBzdHJpbmdcbiAgICBjb25zdCBkYXRlVG9WYWxpZGF0ZSA9IGRhdGUgaW5zdGFuY2VvZiBEYXRlID8gZGF0ZSA6IG5ldyBEYXRlKGRhdGUpO1xuXG4gICAgLy8gVmVyaWZpY2FyIHNlIMOpIHVtYSBkYXRhIHbDoWxpZGFcbiAgICBpZiAoaXNOYU4oZGF0ZVRvVmFsaWRhdGUuZ2V0VGltZSgpKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciBzZSBhIGRhdGEgbsOjbyDDqSBmdXR1cmEgKGNvbnNpZGVyYW5kbyBhcGVuYXMgYSBkYXRhLCBuw6NvIGEgaG9yYSlcbiAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG4gICAgdG9kYXkuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgZGF0ZVRvVmFsaWRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG5cbiAgICByZXR1cm4gZGF0ZVRvVmFsaWRhdGUgPD0gdG9kYXk7XG4gIH1cblxuICBkZWZhdWx0TWVzc2FnZShhcmdzOiBWYWxpZGF0aW9uQXJndW1lbnRzKSB7XG4gICAgcmV0dXJuICdBIGRhdGEgbsOjbyBwb2RlIHNlciBmdXR1cmEnO1xuICB9XG59XG5cbi8qKlxuICogRGVjb3JhZG9yIHBlcnNvbmFsaXphZG8gcXVlIHZlcmlmaWNhIHNlIHVtYSBkYXRhIG7Do28gw6kgZnV0dXJhXG4gKiBAcGFyYW0gdmFsaWRhdGlvbk9wdGlvbnMgT3DDp8O1ZXMgYWRpY2lvbmFpcyBwYXJhIGEgdmFsaWRhw6fDo29cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIElzTm90RnV0dXJlRGF0ZSh2YWxpZGF0aW9uT3B0aW9ucz86IFZhbGlkYXRpb25PcHRpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbiAob2JqZWN0OiBPYmplY3QsIHByb3BlcnR5TmFtZTogc3RyaW5nKSB7XG4gICAgcmVnaXN0ZXJEZWNvcmF0b3Ioe1xuICAgICAgbmFtZTogJ2lzTm90RnV0dXJlRGF0ZScsXG4gICAgICB0YXJnZXQ6IG9iamVjdC5jb25zdHJ1Y3RvcixcbiAgICAgIHByb3BlcnR5TmFtZTogcHJvcGVydHlOYW1lLFxuICAgICAgb3B0aW9uczogdmFsaWRhdGlvbk9wdGlvbnMsXG4gICAgICBjb25zdHJhaW50czogW10sXG4gICAgICB2YWxpZGF0b3I6IElzTm90RnV0dXJlRGF0ZUNvbnN0cmFpbnQsXG4gICAgfSk7XG4gIH07XG59XG4iXSwidmVyc2lvbiI6M30=