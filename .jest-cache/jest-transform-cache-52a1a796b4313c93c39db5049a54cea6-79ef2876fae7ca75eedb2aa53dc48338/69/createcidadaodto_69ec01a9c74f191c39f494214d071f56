c55d1b032700131b8739780ef11644e9
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateCidadaoDto = exports.PapelCidadaoCreateDto = exports.EnderecoDto = void 0;
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const sexo_enum_1 = require("../../../enums/sexo.enum");
const tipo_papel_enum_1 = require("../../../enums/tipo-papel.enum");
const cpf_validator_1 = require("../validators/cpf-validator");
const nis_validator_1 = require("../validators/nis-validator");
const telefone_validator_1 = require("../validators/telefone-validator");
const cep_validator_1 = require("../validators/cep-validator");
const create_composicao_familiar_dto_1 = require("./create-composicao-familiar.dto");
const estado_civil_enum_1 = require("../../../enums/estado-civil.enum");
/**
 * DTO para endereço do cidadão
 *
 * Contém todos os campos necessários para registrar o endereço completo de um cidadão
 */
class EnderecoDto {
    logradouro;
    numero;
    complemento;
    bairro;
    cidade;
    estado;
    cep;
    ponto_referencia;
    tempo_de_residencia;
}
exports.EnderecoDto = EnderecoDto;
__decorate([
    (0, class_validator_1.IsString)({ message: 'Logradouro deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Logradouro é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 'Rua das Flores',
        description: 'Logradouro do endereço',
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "logradouro", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Número deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Número é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: '123',
        description: 'Número do endereço',
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "numero", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Complemento deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiPropertyOptional)({
        example: 'Apto 101',
        description: 'Complemento do endereço',
        required: false,
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "complemento", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Bairro deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Bairro é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 'Centro',
        description: 'Bairro do endereço',
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "bairro", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Cidade deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Cidade é obrigatória' }),
    (0, swagger_1.ApiProperty)({
        example: 'Natal',
        description: 'Cidade do endereço',
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "cidade", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Estado deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Estado é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 'RN',
        description: 'Estado do endereço (sigla)',
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "estado", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'CEP deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'CEP é obrigatório' }),
    (0, class_validator_1.Validate)(cep_validator_1.CEPValidator, { message: 'CEP inválido' }),
    (0, swagger_1.ApiProperty)({
        example: '59000-000',
        description: 'CEP do endereço',
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "cep", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Ponto de referência deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiPropertyOptional)({
        example: 'Próximo ao Corpo de Bombeiros',
        description: 'Ponto de referência do endereço',
        required: false,
    }),
    __metadata("design:type", String)
], EnderecoDto.prototype, "ponto_referencia", void 0);
__decorate([
    (0, class_validator_1.IsNumber)({}, { message: 'Tempo de residência deve ser um número' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tempo de residência é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 2,
        description: 'O tempo de residência do cidadão em anos',
    }),
    __metadata("design:type", Number)
], EnderecoDto.prototype, "tempo_de_residencia", void 0);
/**
 * DTO para criação de cidadão
 *
 * Contém todos os campos necessários para cadastrar um novo cidadão no sistema,
 * incluindo informações pessoais, documentos, endereço e dados socioeconômicos.
 */
/**
 * DTO para papel do cidadão na criação
 */
class PapelCidadaoCreateDto {
    tipo_papel;
    metadados;
}
exports.PapelCidadaoCreateDto = PapelCidadaoCreateDto;
__decorate([
    (0, class_validator_1.IsEnum)(tipo_papel_enum_1.TipoPapel, { message: 'Tipo de papel inválido' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Tipo de papel é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        enum: tipo_papel_enum_1.TipoPapel,
        example: tipo_papel_enum_1.TipoPapel.BENEFICIARIO,
        description: 'Tipo de papel do cidadão',
    }),
    __metadata("design:type", typeof (_a = typeof tipo_papel_enum_1.PaperType !== "undefined" && tipo_papel_enum_1.PaperType) === "function" ? _a : Object)
], PapelCidadaoCreateDto.prototype, "tipo_papel", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)({ message: 'Metadados deve ser um objeto' }),
    (0, swagger_1.ApiPropertyOptional)({
        type: 'object',
        additionalProperties: true,
        example: {
            grau_parentesco: 'Mãe',
            documento_representacao: '12345',
            data_validade_representacao: '2026-01-01',
        },
        description: 'Metadados específicos do papel (varia conforme o tipo)',
    }),
    __metadata("design:type", Object)
], PapelCidadaoCreateDto.prototype, "metadados", void 0);
class CreateCidadaoDto {
    papeis;
    composicao_familiar;
    nome;
    cpf;
    rg;
    prontuario_suas;
    naturalidade;
    data_nascimento;
    sexo;
    nis;
    nome_social;
    estado_civil;
    nome_mae;
    telefone;
    email;
    endereco;
    unidade_id;
}
exports.CreateCidadaoDto = CreateCidadaoDto;
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    (0, class_transformer_1.Type)(() => PapelCidadaoCreateDto),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiPropertyOptional)({
        type: [PapelCidadaoCreateDto],
        description: 'Papéis que o cidadão irá assumir no sistema',
    }),
    __metadata("design:type", Array)
], CreateCidadaoDto.prototype, "papeis", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    (0, class_transformer_1.Type)(() => create_composicao_familiar_dto_1.CreateComposicaoFamiliarDto),
    (0, swagger_1.ApiPropertyOptional)({
        type: [create_composicao_familiar_dto_1.CreateComposicaoFamiliarDto],
        description: 'Composição familiar do cidadão',
    }),
    __metadata("design:type", Array)
], CreateCidadaoDto.prototype, "composicao_familiar", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Nome deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 'Maria da Silva',
        description: 'Nome completo do cidadão',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "nome", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'CPF deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'CPF é obrigatório' }),
    (0, class_validator_1.Validate)(cpf_validator_1.CPFValidator, { message: 'CPF inválido' }),
    (0, swagger_1.ApiProperty)({
        example: '123.456.789-00',
        description: 'CPF do cidadão',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "cpf", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'RG deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'RG é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: '1234567',
        description: 'RG do cidadão',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "rg", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'Prontuario SUAS é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 'SUAS1234567',
        description: 'Nº do Prontuário SUAS do cidadão',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "prontuario_suas", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Naturalidade deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Naturalidade é obrigatória' }),
    (0, swagger_1.ApiProperty)({
        example: 'Natal',
        description: 'Cidade de Naturalidade',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "naturalidade", void 0);
__decorate([
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    (0, class_validator_1.IsNotEmpty)({ message: 'Data de nascimento é obrigatória' }),
    (0, swagger_1.ApiProperty)({
        example: '1985-10-15',
        description: 'Data de nascimento do cidadão',
    }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], CreateCidadaoDto.prototype, "data_nascimento", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(sexo_enum_1.Sexo, { message: 'Sexo inválido' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Sexo é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        enum: sexo_enum_1.Sexo,
        example: sexo_enum_1.Sexo.FEMININO,
        description: 'Sexo do cidadão',
    }),
    __metadata("design:type", typeof (_c = typeof sexo_enum_1.Sexo !== "undefined" && sexo_enum_1.Sexo) === "function" ? _c : Object)
], CreateCidadaoDto.prototype, "sexo", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'NIS deve ser uma string' }),
    (0, class_validator_1.ValidateIf)((o) => o.papeis?.some((p) => p.tipo_papel === tipo_papel_enum_1.TipoPapel.BENEFICIARIO)),
    (0, class_validator_1.IsNotEmpty)({ message: 'NIS é obrigatório para beneficiários' }),
    (0, class_validator_1.Validate)(nis_validator_1.NISValidator, { message: 'NIS inválido' }),
    (0, swagger_1.ApiPropertyOptional)({
        example: '12345678901',
        description: 'Número de Identificação Social (NIS) do cidadão, utilizado para programas sociais. Obrigatório para beneficiários.',
        required: false,
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "nis", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Nome social deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiPropertyOptional)({
        example: 'Maria Santos',
        description: 'Nome social do cidadão (usado para pessoas trans)',
        required: false,
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "nome_social", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(estado_civil_enum_1.EstadoCivil, { message: 'Estado civil inválido' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Estado civil é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        enum: estado_civil_enum_1.EstadoCivil,
        example: estado_civil_enum_1.EstadoCivil.CASADO,
        description: 'Estado civil do cidadão',
    }),
    __metadata("design:type", typeof (_d = typeof estado_civil_enum_1.EstadoCivil !== "undefined" && estado_civil_enum_1.EstadoCivil) === "function" ? _d : Object)
], CreateCidadaoDto.prototype, "estado_civil", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Nome da mãe deve ser uma string' }),
    (0, class_validator_1.IsNotEmpty)({ message: 'Nome da mãe é obrigatório' }),
    (0, swagger_1.ApiProperty)({
        example: 'Maria da Silva',
        description: 'Nome completo da mãe do cidadão',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "nome_mae", void 0);
__decorate([
    (0, class_validator_1.IsString)({ message: 'Telefone deve ser uma string' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.Validate)(telefone_validator_1.TelefoneValidator, { message: 'Telefone inválido' }),
    (0, swagger_1.ApiPropertyOptional)({
        example: '(84) 98765-4321',
        description: 'Telefone do cidadão para contato',
        required: false,
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "telefone", void 0);
__decorate([
    (0, class_validator_1.IsEmail)({}, { message: 'Email inválido' }),
    (0, class_validator_1.IsOptional)(),
    (0, swagger_1.ApiPropertyOptional)({
        example: 'email@exemplo.com',
        description: 'Endereço de email do cidadão para contato',
        required: false,
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "email", void 0);
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => EnderecoDto),
    (0, swagger_1.ApiProperty)({
        type: EnderecoDto,
        description: 'Endereço do cidadão',
    }),
    __metadata("design:type", EnderecoDto)
], CreateCidadaoDto.prototype, "endereco", void 0);
__decorate([
    (0, class_validator_1.IsUUID)('4', { message: 'ID da unidade deve ser um UUID válido' }),
    (0, swagger_1.ApiProperty)({
        example: '550e8400-e29b-41d4-a716-446655440000',
        description: 'ID da unidade onde o cidadão será cadastrado',
    }),
    __metadata("design:type", String)
], CreateCidadaoDto.prototype, "unidade_id", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,