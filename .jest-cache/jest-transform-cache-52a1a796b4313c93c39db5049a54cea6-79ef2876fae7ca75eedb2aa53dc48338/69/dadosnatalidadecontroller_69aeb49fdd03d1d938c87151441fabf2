8653669a85eead216a1ad96951e73e0a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DadosNatalidadeController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const jwt_auth_guard_1 = require("../../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../../auth/guards/roles.guard");
const dados_natalidade_service_1 = require("../services/dados-natalidade.service");
const create_dados_natalidade_dto_1 = require("../dto/create-dados-natalidade.dto");
const dados_natalidade_entity_1 = require("../../../entities/dados-natalidade.entity");
/**
 * Controlador para gerenciar dados específicos do Benefício Natalidade
 */
let DadosNatalidadeController = class DadosNatalidadeController {
    dadosNatalidadeService;
    constructor(dadosNatalidadeService) {
        this.dadosNatalidadeService = dadosNatalidadeService;
    }
    /**
     * Criar dados de natalidade para uma solicitação
     */
    async create(createDto) {
        return this.dadosNatalidadeService.create(createDto);
    }
    /**
     * Buscar dados de natalidade por ID
     */
    async findOne(id) {
        return this.dadosNatalidadeService.findOne(id);
    }
    /**
     * Buscar dados de natalidade por solicitação
     */
    async findBySolicitacao(solicitacaoId) {
        return this.dadosNatalidadeService.findBySolicitacao(solicitacaoId);
    }
    /**
     * Atualizar dados de natalidade
     */
    async update(id, updateDto) {
        return this.dadosNatalidadeService.update(id, updateDto);
    }
    /**
     * Remover dados de natalidade
     */
    async remove(id) {
        return this.dadosNatalidadeService.remove(id);
    }
};
exports.DadosNatalidadeController = DadosNatalidadeController;
__decorate([
    (0, common_1.Post)(),
    (0, swagger_1.ApiOperation)({
        summary: 'Criar dados de natalidade',
        description: 'Cria dados específicos para solicitação de Auxílio Natalidade',
    }),
    (0, swagger_1.ApiBody)({ type: create_dados_natalidade_dto_1.CreateDadosNatalidadeDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.CREATED,
        description: 'Dados de natalidade criados com sucesso',
        type: dados_natalidade_entity_1.DadosNatalidade,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof create_dados_natalidade_dto_1.CreateDadosNatalidadeDto !== "undefined" && create_dados_natalidade_dto_1.CreateDadosNatalidadeDto) === "function" ? _b : Object]),
    __metadata("design:returntype", typeof (_c = typeof Promise !== "undefined" && Promise) === "function" ? _c : Object)
], DadosNatalidadeController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de natalidade por ID',
        description: 'Retorna os dados de natalidade específicos pelo ID',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de natalidade' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de natalidade encontrados',
        type: dados_natalidade_entity_1.DadosNatalidade,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de natalidade não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], DadosNatalidadeController.prototype, "findOne", null);
__decorate([
    (0, common_1.Get)('solicitacao/:solicitacaoId'),
    (0, swagger_1.ApiOperation)({
        summary: 'Buscar dados de natalidade por solicitação',
        description: 'Retorna os dados de natalidade de uma solicitação específica',
    }),
    (0, swagger_1.ApiParam)({ name: 'solicitacaoId', description: 'ID da solicitação' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de natalidade encontrados',
        type: dados_natalidade_entity_1.DadosNatalidade,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de natalidade não encontrados para esta solicitação',
    }),
    __param(0, (0, common_1.Param)('solicitacaoId', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], DadosNatalidadeController.prototype, "findBySolicitacao", null);
__decorate([
    (0, common_1.Patch)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Atualizar dados de natalidade',
        description: 'Atualiza dados específicos de uma solicitação de Auxílio Natalidade',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de natalidade' }),
    (0, swagger_1.ApiBody)({ type: create_dados_natalidade_dto_1.UpdateDadosNatalidadeDto }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.OK,
        description: 'Dados de natalidade atualizados com sucesso',
        type: dados_natalidade_entity_1.DadosNatalidade,
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de natalidade não encontrados',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.BAD_REQUEST,
        description: 'Dados inválidos fornecidos',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_f = typeof create_dados_natalidade_dto_1.UpdateDadosNatalidadeDto !== "undefined" && create_dados_natalidade_dto_1.UpdateDadosNatalidadeDto) === "function" ? _f : Object]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], DadosNatalidadeController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, swagger_1.ApiOperation)({
        summary: 'Remover dados de natalidade',
        description: 'Remove dados específicos de natalidade (apenas administradores)',
    }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'ID dos dados de natalidade' }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NO_CONTENT,
        description: 'Dados de natalidade removidos com sucesso',
    }),
    (0, swagger_1.ApiResponse)({
        status: common_1.HttpStatus.NOT_FOUND,
        description: 'Dados de natalidade não encontrados',
    }),
    __param(0, (0, common_1.Param)('id', common_1.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_h = typeof Promise !== "undefined" && Promise) === "function" ? _h : Object)
], DadosNatalidadeController.prototype, "remove", null);
exports.DadosNatalidadeController = DadosNatalidadeController = __decorate([
    (0, swagger_1.ApiTags)('Benefícios'),
    (0, common_1.Controller)('dados-natalidade'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, swagger_1.ApiBearerAuth)(),
    __metadata("design:paramtypes", [typeof (_a = typeof dados_natalidade_service_1.DadosNatalidadeService !== "undefined" && dados_natalidade_service_1.DadosNatalidadeService) === "function" ? _a : Object])
], DadosNatalidadeController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,