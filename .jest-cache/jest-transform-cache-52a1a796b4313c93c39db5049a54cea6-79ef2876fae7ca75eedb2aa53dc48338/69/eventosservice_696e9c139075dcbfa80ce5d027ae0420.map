{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\services\\eventos.service.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\modules\\solicitacao\\services\\eventos.service.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport {\n  SolicitacaoEvent,\n  SolicitacaoEventType,\n  SolicitacaoEventUnion,\n} from '../events/solicitacao-events';\nimport {\n  Solicitacao,\n  StatusSolicitacao,\n} from '../../../entities/solicitacao.entity';\n\n/**\n * Serviço responsável pelo gerenciamento de eventos do módulo de solicitação\n *\n * Este serviço centraliza a emissão de eventos relacionados ao ciclo de vida das solicitações,\n * facilitando a comunicação assíncrona entre os diferentes componentes do sistema.\n */\n@Injectable()\nexport class EventosService {\n  private readonly logger = new Logger(EventosService.name);\n\n  constructor(private readonly eventEmitter: EventEmitter2) {}\n\n  /**\n   * Emite um evento relacionado a uma solicitação\n   * @param evento Evento a ser emitido\n   */\n  emitirEvento(evento: SolicitacaoEventUnion): void {\n    try {\n      this.logger.debug(\n        `Emitindo evento: ${evento.type} - Solicitação ID: ${evento.solicitacaoId}`,\n      );\n\n      // Define timestamp caso não tenha sido definido\n      if (!evento.timestamp) {\n        evento.timestamp = new Date();\n      }\n\n      // Emite o evento\n      this.eventEmitter.emit(evento.type, evento);\n\n      this.logger.debug(`Evento emitido com sucesso: ${evento.type}`);\n    } catch (error) {\n      this.logger.error(\n        `Erro ao emitir evento ${evento.type}: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  /**\n   * Emite evento de criação de solicitação\n   * @param solicitacao Solicitação criada\n   */\n  emitirEventoCriacao(solicitacao: Solicitacao): void {\n    this.emitirEvento({\n      type: SolicitacaoEventType.CREATED,\n      solicitacaoId: solicitacao.id,\n      timestamp: new Date(),\n      data: {\n        protocolo: solicitacao.protocolo,\n        tipoBeneficioId: solicitacao.tipo_beneficio_id || '',\n        cidadaoId: solicitacao.beneficiario?.id || '',\n        tecnicoId: solicitacao.tecnico_id || '',\n        unidadeId: solicitacao.unidade_id || '',\n      },\n    });\n  }\n\n  /**\n   * Emite evento de alteração de status\n   * @param solicitacao Solicitação alterada\n   * @param statusAnterior Status anterior\n   * @param usuarioId ID do usuário que realizou a alteração\n   * @param observacao Observação sobre a alteração\n   */\n  emitirEventoAlteracaoStatus(\n    solicitacao: Solicitacao,\n    statusAnterior: StatusSolicitacao,\n    usuarioId: string,\n    observacao?: string,\n  ): void {\n    this.emitirEvento({\n      type: SolicitacaoEventType.STATUS_CHANGED,\n      solicitacaoId: solicitacao.id,\n      timestamp: new Date(),\n      data: {\n        statusAnterior,\n        statusAtual: solicitacao.status,\n        usuarioId,\n        observacao,\n      },\n    });\n\n    // Emitir eventos específicos com base no novo status\n    switch (solicitacao.status) {\n      case StatusSolicitacao.APROVADA:\n        this.emitirEvento({\n          type: SolicitacaoEventType.APPROVED,\n          solicitacaoId: solicitacao.id,\n          timestamp: new Date(),\n          data: {\n            aprovadorId: usuarioId,\n            observacao,\n            dataAprovacao: solicitacao.data_aprovacao || new Date(),\n          },\n        });\n        break;\n\n      case StatusSolicitacao.INDEFERIDA:\n        this.emitirEvento({\n          type: SolicitacaoEventType.REJECTED,\n          solicitacaoId: solicitacao.id,\n          timestamp: new Date(),\n          data: {\n            reprovadorId: usuarioId,\n            motivoReprovacao: observacao || 'Não especificado',\n            dataReprovacao: new Date(),\n          },\n        });\n        break;\n\n      case StatusSolicitacao.LIBERADA:\n        this.emitirEvento({\n          type: SolicitacaoEventType.RELEASED,\n          solicitacaoId: solicitacao.id,\n          timestamp: new Date(),\n          data: {\n            liberadorId: usuarioId,\n            dataLiberacao: solicitacao.data_liberacao || new Date(),\n            observacao,\n          },\n        });\n        break;\n\n      case StatusSolicitacao.CONCLUIDA:\n        this.logger.log(`Solicitação ${solicitacao.id} concluída`);\n        break;\n\n      case StatusSolicitacao.CANCELADA:\n        this.logger.log(\n          `Solicitação ${solicitacao.id} cancelada: ${observacao || 'Não especificado'}`,\n        );\n        break;\n\n      case StatusSolicitacao.ARQUIVADA:\n        this.logger.log(`Solicitação ${solicitacao.id} arquivada`);\n        break;\n    }\n  }\n\n  /**\n   * Emite evento de prazo próximo do vencimento\n   * @param solicitacao Solicitação com prazo próximo\n   * @param tipoPrazo Tipo de prazo\n   * @param diasRestantes Dias restantes até o vencimento\n   */\n  emitirEventoPrazoProximo(\n    solicitacao: Solicitacao,\n    tipoPrazo: 'analise' | 'documentos' | 'processamento',\n    diasRestantes: number,\n  ): void {\n    const dataPrazo = solicitacao[`prazo_${tipoPrazo}`] as Date;\n\n    if (!dataPrazo) {\n      return;\n    }\n\n    this.emitirEvento({\n      type: SolicitacaoEventType.DEADLINE_APPROACHING,\n      solicitacaoId: solicitacao.id,\n      timestamp: new Date(),\n      data: {\n        tipoPrazo,\n        dataPrazo,\n        diasRestantes,\n        determinacaoJudicial: solicitacao.determinacao_judicial_flag || false,\n      },\n    });\n  }\n\n  /**\n   * Emite evento de prazo expirado\n   * @param solicitacao Solicitação com prazo expirado\n   * @param tipoPrazo Tipo de prazo\n   * @param diasAtraso Dias de atraso desde o vencimento\n   */\n  emitirEventoPrazoExpirado(\n    solicitacao: Solicitacao,\n    tipoPrazo: 'analise' | 'documentos' | 'processamento',\n    diasAtraso: number,\n  ): void {\n    const dataPrazo = solicitacao[`prazo_${tipoPrazo}`] as Date;\n\n    if (!dataPrazo) {\n      return;\n    }\n\n    this.emitirEvento({\n      type: SolicitacaoEventType.DEADLINE_EXPIRED,\n      solicitacaoId: solicitacao.id,\n      timestamp: new Date(),\n      data: {\n        tipoPrazo,\n        dataPrazo,\n        diasAtraso,\n        determinacaoJudicial: solicitacao.determinacao_judicial_flag || false,\n      },\n    });\n  }\n\n  /**\n   * Emite evento de anexação de determinação judicial\n   * @param solicitacao Solicitação à qual a determinação foi anexada\n   * @param determinacaoJudicialId ID da determinação judicial\n   * @param usuarioId ID do usuário que realizou a anexação\n   * @param observacao Observação sobre a anexação\n   */\n  emitirEventoDeterminacaoJudicialAnexada(\n    solicitacao: Solicitacao,\n    determinacaoJudicialId: string,\n    usuarioId: string,\n    observacao?: string,\n  ): void {\n    this.emitirEvento({\n      type: SolicitacaoEventType.JUDICIAL_DETERMINATION_ATTACHED,\n      solicitacaoId: solicitacao.id,\n      timestamp: new Date(),\n      data: {\n        determinacaoJudicialId,\n        usuarioId,\n        observacao,\n      },\n    });\n  }\n\n  /**\n   * Emite evento de criação de pendência\n   * @param solicitacaoId ID da solicitação\n   * @param pendenciaId ID da pendência criada\n   * @param descricao Descrição da pendência\n   * @param usuarioId ID do usuário que criou a pendência\n   * @param prazo Data limite para resolução da pendência\n   */\n  emitirEventoPendenciaCriada(\n    solicitacaoId: string,\n    pendenciaId: string,\n    descricao: string,\n    usuarioId: string,\n    prazo?: Date,\n  ): void {\n    this.emitirEvento({\n      type: SolicitacaoEventType.PENDENCY_CREATED,\n      solicitacaoId,\n      timestamp: new Date(),\n      data: {\n        pendenciaId,\n        descricao,\n        prazo,\n        usuarioId,\n      },\n    });\n  }\n\n  /**\n   * Emite evento de resolução de pendência\n   * @param solicitacaoId ID da solicitação\n   * @param pendenciaId ID da pendência resolvida\n   * @param resolucao Descrição da resolução\n   * @param usuarioId ID do usuário que resolveu a pendência\n   */\n  emitirEventoPendenciaResolvida(\n    solicitacaoId: string,\n    pendenciaId: string,\n    resolucao: string,\n    usuarioId: string,\n  ): void {\n    this.emitirEvento({\n      type: SolicitacaoEventType.PENDENCY_RESOLVED,\n      solicitacaoId,\n      timestamp: new Date(),\n      data: {\n        pendenciaId,\n        resolucao,\n        usuarioId,\n        dataResolucao: new Date(),\n      },\n    });\n  }\n\n  /**\n   * Emite evento de atribuição de solicitação a um técnico\n   * @param solicitacao Solicitação atribuída\n   * @param tecnicoAnteriorId ID do técnico anterior (opcional)\n   * @param tecnicoAtualId ID do novo técnico\n   * @param usuarioAtribuicaoId ID do usuário que realizou a atribuição\n   * @param motivoAtribuicao Motivo da atribuição\n   */\n  emitirEventoAtribuicao(\n    solicitacao: Solicitacao,\n    tecnicoAtualId: string,\n    usuarioAtribuicaoId: string,\n    tecnicoAnteriorId?: string,\n    motivoAtribuicao?: string,\n  ): void {\n    this.emitirEvento({\n      type: SolicitacaoEventType.ASSIGNED,\n      solicitacaoId: solicitacao.id,\n      timestamp: new Date(),\n      data: {\n        tecnicoAnteriorId,\n        tecnicoAtualId,\n        usuarioAtribuicaoId,\n        motivoAtribuicao,\n      },\n    });\n  }\n}\n"],"version":3}