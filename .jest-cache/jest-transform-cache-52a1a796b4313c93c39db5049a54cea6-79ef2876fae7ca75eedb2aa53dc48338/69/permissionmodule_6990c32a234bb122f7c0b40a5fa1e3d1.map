{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\permission.module.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\auth\\permission.module.ts"],"sourcesContent":["import { Module, Logger, OnModuleInit } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n// Entities\nimport { Permission } from '../entities/permission.entity';\nimport { PermissionGroup } from '../entities/permission-group.entity';\nimport { PermissionGroupMapping } from '../entities/permission-group-mapping.entity';\nimport { RolePermission } from '../entities/role-permission.entity';\nimport { UserPermission } from '../entities/user-permission.entity';\nimport { PermissionScope } from '../entities/permission-scope.entity';\n\n// Repositories\nimport { PermissionRepository } from './repositories/permission.repository';\nimport { PermissionGroupRepository } from './repositories/permission-group.repository';\nimport { PermissionGroupMappingRepository } from './repositories/permission-group-mapping.repository';\nimport { RolePermissionRepository } from './repositories/role-permission.repository';\nimport { UserPermissionRepository } from './repositories/user-permission.repository';\nimport { PermissionScopeRepository } from './repositories/permission-scope.repository';\n\n// Services\nimport { PermissionService } from './services/permission.service';\n\n// Guards\nimport { PermissionGuard } from './guards/permission.guard';\n\n// Constants\nconst PERMISSION_CACHE_CONFIG = {\n  TTL_SECONDS: 300, // 5 minutos\n  MAX_ITEMS: 1000,\n  STORE: 'memory' as const,\n};\n\n/**\n * M√≥dulo de Permiss√µes Granulares\n *\n * Respons√°vel por:\n * - Gerenciamento de permiss√µes granulares por usu√°rio e role\n * - Sistema de cache para otimiza√ß√£o de performance\n * - Guards para controle de acesso baseado em permiss√µes\n * - Reposit√≥rios especializados para queries de permiss√µes\n * - Integra√ß√£o com sistema de escopos (unidade, regional, etc.)\n *\n * @example\n * ```typescript\n * // Uso do guard em controllers\n * @UseGuards(PermissionGuard)\n * @RequiresPermission({\n *   permissionName: 'user.create',\n *   scopeType: TipoEscopo.UNIDADE,\n *   scopeIdExpression: 'params.unidadeId'\n * })\n * async createUser() { ... }\n * ```\n */\n@Module({\n  imports: [\n    // Configura√ß√£o das entidades\n    TypeOrmModule.forFeature([\n      Permission,\n      PermissionGroup,\n      PermissionGroupMapping,\n      RolePermission,\n      UserPermission,\n      PermissionScope,\n    ]),\n\n    // Cache configur√°vel para permiss√µes\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        ttl: configService.get<number>(\n          'PERMISSION_CACHE_TTL',\n          PERMISSION_CACHE_CONFIG.TTL_SECONDS * 1000,\n        ),\n        max: configService.get<number>(\n          'PERMISSION_CACHE_MAX_ITEMS',\n          PERMISSION_CACHE_CONFIG.MAX_ITEMS,\n        ),\n        store: PERMISSION_CACHE_CONFIG.STORE,\n        isGlobal: false, // Scoped para evitar conflitos\n      }),\n    }),\n\n    ConfigModule,\n  ],\n\n  providers: [\n    // Reposit√≥rios customizados\n    PermissionRepository,\n    PermissionGroupRepository,\n    PermissionGroupMappingRepository,\n    RolePermissionRepository,\n    UserPermissionRepository,\n    PermissionScopeRepository,\n\n    // Servi√ßo principal\n    PermissionService,\n\n    // Guards\n    PermissionGuard,\n  ],\n\n  exports: [\n    // Servi√ßo para uso em outros m√≥dulos\n    PermissionService,\n\n    // Guard para controle de acesso\n    PermissionGuard,\n\n    // Reposit√≥rios para uso avan√ßado\n    PermissionRepository,\n    RolePermissionRepository,\n    UserPermissionRepository,\n    PermissionScopeRepository,\n  ],\n})\nexport class PermissionModule implements OnModuleInit {\n  private readonly logger = new Logger(PermissionModule.name);\n\n  constructor(private readonly permissionService: PermissionService) {}\n\n  /**\n   * Inicializa√ß√£o do m√≥dulo com valida√ß√µes de integridade\n   */\n  async onModuleInit(): Promise<void> {\n    this.logger.log('üîê Inicializando PermissionModule...');\n\n    try {\n      await this.validateModuleIntegrity();\n      await this.performStartupTasks();\n\n      this.logger.log('‚úÖ PermissionModule inicializado com sucesso');\n    } catch (error) {\n      this.logger.error(\n        `‚ùå Erro cr√≠tico durante inicializa√ß√£o do PermissionModule: ${error.message}`,\n        error.stack,\n      );\n\n      // Em caso de erro cr√≠tico, n√£o permitir que a aplica√ß√£o continue\n      // pois permiss√µes s√£o fundamentais para seguran√ßa\n      throw new Error(\n        `PermissionModule falhou na inicializa√ß√£o: ${error.message}`,\n      );\n    }\n  }\n\n  /**\n   * Valida a integridade do m√≥dulo e suas depend√™ncias\n   * @private\n   */\n  private async validateModuleIntegrity(): Promise<void> {\n    this.logger.debug('Validando integridade do m√≥dulo...');\n\n    // Verifica se o PermissionService foi injetado corretamente\n    if (!this.permissionService) {\n      throw new Error(\n        'PermissionService n√£o foi injetado corretamente. Verifique as depend√™ncias.',\n      );\n    }\n\n    // Testa conectividade b√°sica com o banco de dados\n    try {\n      // Chama getAllPermissions sem argumentos (conforme assinatura correta)\n      await this.permissionService.getAllPermissions();\n      this.logger.debug('‚úì Conectividade com PermissionService validada');\n    } catch (error) {\n      this.logger.warn(\n        `Aviso na valida√ß√£o de conectividade: ${error.message}. Continuando inicializa√ß√£o...`,\n      );\n      // N√£o falha a inicializa√ß√£o por problemas de valida√ß√£o b√°sica\n      // A valida√ß√£o mais rigorosa ser√° feita quando o servi√ßo for efetivamente usado\n    }\n  }\n\n  /**\n   * Executa tarefas de inicializa√ß√£o necess√°rias\n   * @private\n   */\n  private async performStartupTasks(): Promise<void> {\n    this.logger.debug('Executando tarefas de inicializa√ß√£o...');\n\n    try {\n      // Como clearPermissionCache requer um permissionName espec√≠fico,\n      // n√£o executamos limpeza geral de cache na inicializa√ß√£o para evitar\n      // problemas. O cache ser√° gerenciado naturalmente pelo TTL configurado.\n      this.logger.debug('‚úì Cache ser√° gerenciado pelo TTL configurado');\n\n      // Pode incluir outras tarefas como:\n      // - Sincroniza√ß√£o de permiss√µes padr√£o\n      // - Verifica√ß√£o de integridade de dados\n      // - Valida√ß√£o de permiss√µes cr√≠ticas do sistema\n    } catch (error) {\n      this.logger.warn(\n        `Aviso durante tarefas de inicializa√ß√£o: ${error.message}`,\n      );\n      // Tarefas de inicializa√ß√£o podem falhar sem comprometer o m√≥dulo\n    }\n  }\n}\n"],"version":3}