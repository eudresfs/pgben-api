{"file":"C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\papel-cidadao.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\eudre\\OneDrive\\Desktop\\Projetos\\pgben\\pgben-server\\src\\entities\\papel-cidadao.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  JoinColumn,\n  Index,\n} from 'typeorm';\nimport { Cidadao } from './cidadao.entity';\nimport { ComposicaoFamiliar } from './composicao-familiar.entity';\nimport { TipoPapel, PaperType } from '../enums/tipo-papel.enum';\n\n/**\n * Entidade de Papel do Cidadão\n *\n * Estabelece uma relação N:M entre cidadãos e os papéis que podem assumir no sistema.\n * Um mesmo cidadão pode ter múltiplos papéis em diferentes contextos.\n */\n@Entity('papel_cidadao')\n@Index(['cidadao_id', 'tipo_papel'], { unique: true })\nexport class PapelCidadao {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'cidadao_id', type: 'uuid' })\n  cidadao_id: string;\n\n  @ManyToOne(() => Cidadao, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'cidadao_id' })\n  cidadao: Cidadao;\n\n  @Column({ name: 'composicao_familiar_id', type: 'uuid', nullable: true })\n  composicao_familiar_id: string;\n\n  @ManyToOne(() => ComposicaoFamiliar, { onDelete: 'SET NULL' })\n  @JoinColumn({ name: 'composicao_familiar_id' })\n  composicao_familiar: ComposicaoFamiliar;\n\n  @Column({\n    name: 'tipo_papel',\n    type: 'enum',\n    enum: TipoPapel,\n    enumName: 'tipo_papel',\n  })\n  tipo_papel: PaperType;\n\n  @Column({ type: 'jsonb', nullable: true })\n  metadados: {\n    grau_parentesco?: string;\n    documento_representacao?: string;\n    data_validade_representacao?: Date;\n    [key: string]: any;\n  };\n\n  @Column({ type: 'boolean', default: true })\n  ativo: boolean;\n\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n\n  @DeleteDateColumn({ name: 'removed_at' })\n  removed_at: Date;\n\n  // Getters e Setters\n  get cidadaoId(): string {\n    return this.cidadao_id;\n  }\n\n  set cidadaoId(value: string) {\n    this.cidadao_id = value;\n  }\n\n  get composicaoFamiliarId(): string {\n    return this.composicao_familiar_id;\n  }\n\n  set composicaoFamiliarId(value: string) {\n    this.composicao_familiar_id = value;\n  }\n\n  get tipoPapel(): PaperType {\n    return this.tipo_papel;\n  }\n\n  set tipoPapel(value: PaperType) {\n    this.tipo_papel = value;\n  }\n\n  get createdAt(): Date {\n    return this.created_at;\n  }\n\n  get updatedAt(): Date {\n    return this.updated_at;\n  }\n\n  get removedAt(): Date {\n    return this.removed_at;\n  }\n\n  // Métodos Utilitários\n\n  /**\n   * Verifica se o papel foi criado recentemente (últimas 24 horas)\n   */\n  isCriadoRecentemente(): boolean {\n    const agora = new Date();\n    const umDiaAtras = new Date(agora.getTime() - 24 * 60 * 60 * 1000);\n    return this.created_at > umDiaAtras;\n  }\n\n  /**\n   * Calcula a idade do papel em dias\n   */\n  getIdadeEmDias(): number {\n    const agora = new Date();\n    const diffTime = Math.abs(agora.getTime() - this.created_at.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Verifica se o papel está ativo\n   */\n  isAtivo(): boolean {\n    return this.ativo && !this.removed_at;\n  }\n\n  /**\n   * Verifica se o papel foi removido\n   */\n  foiRemovido(): boolean {\n    return !!this.removed_at;\n  }\n\n  /**\n   * Verifica se é um papel de beneficiário\n   */\n  isBeneficiario(): boolean {\n    return this.tipo_papel === TipoPapel.BENEFICIARIO;\n  }\n\n  /**\n   * Verifica se é um papel de representante legal\n   */\n  isRepresentanteLegal(): boolean {\n    return this.tipo_papel === TipoPapel.REPRESENTANTE_LEGAL;\n  }\n\n  /**\n   * Verifica se é um papel de dependente\n   */\n  isDependente(): boolean {\n    return this.tipo_papel === TipoPapel.DEPENDENTE;\n  }\n\n  /**\n   * Verifica se tem grau de parentesco definido\n   */\n  temGrauParentesco(): boolean {\n    return !!this.metadados?.grau_parentesco;\n  }\n\n  /**\n   * Obtém o grau de parentesco\n   */\n  getGrauParentesco(): string | null {\n    return this.metadados?.grau_parentesco || null;\n  }\n\n  /**\n   * Verifica se tem documento de representação\n   */\n  temDocumentoRepresentacao(): boolean {\n    return !!this.metadados?.documento_representacao;\n  }\n\n  /**\n   * Verifica se a representação está válida (não expirou)\n   */\n  isRepresentacaoValida(): boolean {\n    if (!this.metadados?.data_validade_representacao) {\n      return true; // Se não tem data de validade, considera válida\n    }\n    return new Date(this.metadados.data_validade_representacao) > new Date();\n  }\n\n  /**\n   * Verifica se pertence a uma composição familiar específica\n   */\n  pertenceAComposicaoFamiliar(composicaoId: string): boolean {\n    return this.composicao_familiar_id === composicaoId;\n  }\n\n  /**\n   * Verifica se pertence a um cidadão específico\n   */\n  pertenceAoCidadao(cidadaoId: string): boolean {\n    return this.cidadao_id === cidadaoId;\n  }\n\n  /**\n   * Obtém um resumo do papel\n   */\n  getSummary(): string {\n    const status = this.isAtivo() ? 'Ativo' : 'Inativo';\n    const grau = this.temGrauParentesco()\n      ? ` (${this.getGrauParentesco()})`\n      : '';\n    return `${this.tipo_papel}${grau} - ${status}`;\n  }\n\n  /**\n   * Gera uma chave única para o papel\n   */\n  getUniqueKey(): string {\n    return `${this.cidadao_id}_${this.tipo_papel}_${this.composicao_familiar_id || 'null'}`;\n  }\n\n  /**\n   * Verifica se o papel é consistente\n   */\n  isConsistente(): boolean {\n    // Verifica se tem cidadão\n    if (!this.cidadao_id) return false;\n\n    // Verifica se tem tipo de papel\n    if (!this.tipo_papel) return false;\n\n    // Se é representante legal, deve ter documento\n    if (this.isRepresentanteLegal() && !this.temDocumentoRepresentacao()) {\n      return false;\n    }\n\n    // Se tem data de validade, deve estar válida\n    if (\n      this.metadados?.data_validade_representacao &&\n      !this.isRepresentacaoValida()\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Verifica se pode ser removido\n   */\n  podeSerRemovido(): boolean {\n    // Não pode remover se já foi removido\n    if (this.foiRemovido()) return false;\n\n    // Responsável familiar só pode ser removido se houver outro responsável\n    // Esta verificação seria feita no serviço\n    return true;\n  }\n\n  /**\n   * Clona o papel (sem ID)\n   */\n  clone(): Partial<PapelCidadao> {\n    return {\n      cidadao_id: this.cidadao_id,\n      composicao_familiar_id: this.composicao_familiar_id,\n      tipo_papel: this.tipo_papel,\n      metadados: this.metadados ? { ...this.metadados } : undefined,\n      ativo: this.ativo,\n    };\n  }\n\n  /**\n   * Verifica se requer documentação especial\n   */\n  requerDocumentacaoEspecial(): boolean {\n    return this.isRepresentanteLegal();\n  }\n\n  /**\n   * Obtém a descrição do tipo de papel\n   */\n  getDescricaoTipoPapel(): string {\n    const descricoes = {\n      [TipoPapel.REQUERENTE]: 'Solicitante',\n      [TipoPapel.BENEFICIARIO]: 'Beneficiário',\n      [TipoPapel.REPRESENTANTE_LEGAL]: 'Representante Legal',\n      [TipoPapel.DEPENDENTE]: 'Dependente',\n    };\n    return descricoes[this.tipo_papel] || this.tipo_papel;\n  }\n\n  /**\n   * Formata a data de criação\n   */\n  getCriacaoFormatada(): string {\n    return this.created_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Formata a data de atualização\n   */\n  getAtualizacaoFormatada(): string {\n    return this.updated_at.toLocaleDateString('pt-BR');\n  }\n\n  /**\n   * Remove informações sensíveis para logs\n   */\n  toSafeLog(): Partial<PapelCidadao> {\n    return {\n      id: this.id,\n      tipo_papel: this.tipo_papel,\n      ativo: this.ativo,\n      created_at: this.created_at,\n      updated_at: this.updated_at,\n    };\n  }\n\n  /**\n   * Verifica se o papel expira em breve (próximos 30 dias)\n   */\n  expiraEmBreve(): boolean {\n    if (!this.metadados?.data_validade_representacao) {\n      return false;\n    }\n\n    const dataValidade = new Date(this.metadados.data_validade_representacao);\n    const trintaDiasFrente = new Date();\n    trintaDiasFrente.setDate(trintaDiasFrente.getDate() + 30);\n\n    return dataValidade <= trintaDiasFrente;\n  }\n\n  /**\n   * Obtém sugestões de verificação para o papel\n   */\n  getSugestoesVerificacao(): string[] {\n    const sugestoes: string[] = [];\n\n    if (this.isRepresentanteLegal() && !this.temDocumentoRepresentacao()) {\n      sugestoes.push('Adicionar documento de representação legal');\n    }\n\n    if (this.expiraEmBreve()) {\n      sugestoes.push('Renovar documento de representação (expira em breve)');\n    }\n\n    if (!this.temGrauParentesco() && this.isDependente()) {\n      sugestoes.push('Definir grau de parentesco para dependente');\n    }\n\n    if (!this.isConsistente()) {\n      sugestoes.push('Verificar consistência dos dados do papel');\n    }\n\n    return sugestoes;\n  }\n}\n"],"version":3}