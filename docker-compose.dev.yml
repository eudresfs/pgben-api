version: '3.8'

services:
  # Banco de dados PostgreSQL otimizado para desenvolvimento
  postgres:
    image: postgres:14-alpine
    container_name: pgben_postgres_dev
    ports:
      - "127.0.0.1:5432:5432"  # Exposição apenas para localhost
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}
      POSTGRES_DB: ${DB_NAME:-pgben}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/database/init:/docker-entrypoint-initdb.d
    command: >
      postgres 
        -c 'max_connections=100'
        -c 'shared_buffers=128MB'
        -c 'work_mem=4MB'
        -c 'maintenance_work_mem=64MB'
        -c 'effective_cache_size=512MB'
        -c 'random_page_cost=1.1'
        -c 'checkpoint_completion_target=0.9'
        -c 'autovacuum=on'
        -c 'log_statement=ddl'
        -c 'log_min_duration_statement=200'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-pgben}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pgben_network_dev

  # PGAdmin para gerenciamento do banco de dados
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgben_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "127.0.0.1:8080:80"  # Exposição apenas para localhost
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pgben_network_dev
    restart: unless-stopped

  # Redis para cache e filas (otimizado para desenvolvimento)
  redis:
    image: redis:alpine
    container_name: pgben_redis_dev
    ports:
      - "127.0.0.1:6379:6379"  # Exposição apenas para localhost
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pgben_network_dev

volumes:
  postgres_data:
    name: pgben_postgres_dev_data
  pgadmin_data:
    name: pgben_pgadmin_dev_data
  redis_data:
    name: pgben_redis_dev_data

networks:
  pgben_network_dev:
    driver: bridge
    name: pgben_network_dev
